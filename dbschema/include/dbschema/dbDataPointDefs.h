/**
 * @file include/dbschema/dbDataPointDefs.h
 * @brief This generated file contains the macro definition providing details of
 *        all datapoints.
 * 
 * This file is automatically generated and should not be edited manually.

 * Generated using the following input files:
 *   xslt/dbDataPointDefs_h.xsl : 2399 bytes, CRC32 = 1739990854 
 *   relay-datapoints-validated.xml : 18810769 bytes, CRC32 = 4257544476
 * 
 * Generated from the following database extract:
 *   Db Version : 28.0
 *   Db Tags    : NEW_ARCH,RC20-Security,RC20_USBOC,GooseSqNum,SdCard,VerizonAPN,Large_DbClientId,DB28_OSM_PART_CODES,DIR_POWER,MultiMaster60870,PIN_PUK,CBF_NOTICE,PMU_Retransmission,WEBSERVER
 *   Db Model   : RC20
 * 
 * @cond DO_NOT_DOCUMENT   Doxygen documentation is not required.
 */
#ifndef _DBSCHEMA_INCLUDE_DBSCHEMA_DBDATAPOINTDEFS_H_
#define _DBSCHEMA_INCLUDE_DBSCHEMA_DBDATAPOINTDEFS_H_

/**The DataPoint definitions
 * Arguments: name, type, desc, text
 * name        Datapoint name
 * type        Datapoint value data type
 * desc        English description text for the datapoint
 * text        English display string for the enumeration value
 */
#define DATAPOINT_DEFNS \
\
DPOINT_DEFN( TimeFmt, TimeFormat, "Time format", "" ) \
DPOINT_DEFN( DateFmt, DateFormat, "Date format", "" ) \
DPOINT_DEFN( DEPRECATED_BattTest, BattTestState, "Battery test indication", "" ) \
DPOINT_DEFN( SiteDesc, Str, "Site description", "" ) \
DPOINT_DEFN( IsDirty, UI16, "This 'IsDirty' flag is set whenever a non-volatile datapoint is changed by the dbSet() family of routines.  When set it is to the dpId of the changed datapoint.  It is cleared by the dbServer when _starting_ a save to file. ", "" ) \
DPOINT_DEFN( AuxSupply, OkFail, "State of Aux. supply", "" ) \
DPOINT_DEFN( BattState, OkFail, "State of Battery", "" ) \
DPOINT_DEFN( OCCoilState, EnDis, "State of Open/Close coil", "" ) \
DPOINT_DEFN( RelayState, RelayState, "State of Relay", "" ) \
DPOINT_DEFN( ActCLM, UI8, "Active Cold Load Multipl.", "" ) \
DPOINT_DEFN( OsmOpCoilState, OkSCct, "State of OSM operating coil", "" ) \
DPOINT_DEFN( DriverState, RdyNr, "State of Driver", "" ) \
DPOINT_DEFN( NumProtGroups, UI8, "Number of protection groups", "" ) \
DPOINT_DEFN( ActProtGroup, UI8, "Active protection group.\r\n\r\nNOTE: Not avail to DNP as set points are not supported.", "" ) \
DPOINT_DEFN( BattTestAuto, EnDis, "Automatic battery test", "" ) \
DPOINT_DEFN( AvgPeriod, AvgPeriod, "Averaging period", "" ) \
DPOINT_DEFN( ProtStepState, ProtectionState, "This represents the current state of the step engine.  This value is considered to be internal to the protection process; it's primary purpose is to allow the protection process determine it's previous state on power up.  In single-triple configurations, this datapoint refers to phase A only.", "" ) \
DPOINT_DEFN( USensing, RdyNr, "Voltage sensing", "" ) \
DPOINT_DEFN( DoorState, OpenClose, "Auxiliary configuration", "" ) \
DPOINT_DEFN( BtnOpen, AuxConfig, "Open button mode", "" ) \
DPOINT_DEFN( BtnRecl, TimeFormat, "Auto reclose button mode", "" ) \
DPOINT_DEFN( BtnEf, TimeFormat, "Earth fault button mode", "" ) \
DPOINT_DEFN( BtnSef, TimeFormat, "Sensitive earth fault button mode", "" ) \
DPOINT_DEFN( SigCtrlRqstTripClose, Signal, "Request a trip / close. To request a close set value to 1, to request an open set value to 0.", "" ) \
DPOINT_DEFN( CntOps, UI16, "Count of OSM operations", "" ) \
DPOINT_DEFN( CntWearOsm, UI16, "OSM wear", "" ) \
DPOINT_DEFN( CntOpsOc, UI16, "Count of over current operations", "" ) \
DPOINT_DEFN( CntOpsEf, UI16, "Count of earth fault operations", "" ) \
DPOINT_DEFN( CntOpsSef, UI16, "Count of SEF operations", "" ) \
DPOINT_DEFN( BattI, UI16, "Battery current", "" ) \
DPOINT_DEFN( BattU, UI16, "Battery voltage", "" ) \
DPOINT_DEFN( BattCap, UI16, "Battery capacity", "" ) \
DPOINT_DEFN( LcdCont, UI16, "LCD Contrast", "" ) \
DPOINT_DEFN( SwitchFailureStatusFlag, UI8, "An internal flag used by the simSwRqst library to flag if the 'failure' mode is set.  Applies only to phase A for single-triple configurations.", "" ) \
DPOINT_DEFN( DbSourceFiles, UI8, "The bit field of source files used when populating the database.  The bits are defined by the DbPopulate enum.", "" ) \
DPOINT_DEFN( SigMalfRelayLog, Signal, "The logger process (logprocess) detected an error.", "" ) \
DPOINT_DEFN( HmiMode, HmiMode, "Sets the current mode of operation the HMI (i.e. panel). An HMI mode changes the initial form displayed on the panel screen, can force the panel to remain on, and can modify other HMI behaviour. This 'HmiMode' is *not* related to local/remote. This datapoint should be set by the SMP process only.", "" ) \
DPOINT_DEFN( ClearFaultCntr, ClearCommand, "Requests to clear the fault counter.", "" ) \
DPOINT_DEFN( ClearScadaCntr, ClearCommand, "Request to clear the SCADA counters", "" ) \
DPOINT_DEFN( ClearEnergyMeters, ClearCommand, "Request to clear the energy meters", "" ) \
DPOINT_DEFN( UpdateRelayNew, Str, "Relay firmware version string which is about to be installed. Used at startup to verify whether a firmware update was successful: if IdRelaySoftwareVer matches this datapoint then software update was successful.", "" ) \
DPOINT_DEFN( UpdateSimNew, Str, "SIM firmware version string which is about to be installed. Used at startup to verify whether a firmware update was successful: if IdSIMSoftwareVer matches this datapoint then software update was successful.", "" ) \
DPOINT_DEFN( SigExtSupplyStatusShutDown, Signal, "External Load Shutdown", "" ) \
DPOINT_DEFN( IdUbootSoftwareVer, Str, "U-Boot version string. Populated at startup by SMP.", "" ) \
DPOINT_DEFN( CntOpsOsm, UI32, "Count OSM operations", "" ) \
DPOINT_DEFN( SigCtrlHltOn, Signal, "Hot Line Tag is turned on", "" ) \
DPOINT_DEFN( AuxVoltage, UI32, "Auxiliary voltage", "" ) \
DPOINT_DEFN( PwdSettings, Str, "Settings password", "" ) \
DPOINT_DEFN( PwdConnect, Str, "CS Connect password", "" ) \
DPOINT_DEFN( SigCtrlHltRqstReset, Signal, "This signal is used to request resetting of the HLT tag.  The intent is for this signal to be set only by the panel _after_ the user enters a password. \r\n\r\nNOTE: That this value must NOT be flagged as IsProtSetting.", "" ) \
DPOINT_DEFN( IdMicrokernelSoftwareVer, Str, "Microkernel version string. Populated at startup by SMP.", "" ) \
DPOINT_DEFN( CmsConnectStatus, CmsConnectStatus, "CMS link connection status between PC and relay. set by relay CMS process. Default value is disconnected.", "" ) \
DPOINT_DEFN( SigPickupLsdUa, Signal, "Voltage on A bushing is above LSD level", "" ) \
DPOINT_DEFN( SigPickupLsdUb, Signal, "Voltage on B bushing is above LSD level", "" ) \
DPOINT_DEFN( SigPickupLsdUc, Signal, "Voltage on C bushing is above LSD level", "" ) \
DPOINT_DEFN( SigPickupLsdUr, Signal, "Voltage on R bushing is above LSD level", "" ) \
DPOINT_DEFN( SigPickupLsdUs, Signal, "Voltage on S bushing is above LSD level", "" ) \
DPOINT_DEFN( SigPickupLsdUt, Signal, "Voltage on T bushing is above LSD level", "" ) \
DPOINT_DEFN( OsmModelStr, Str, "The OSM model description.\r\n\r\nNOTE: This is set by the SCADA process, the value is derived from the part code field of the OSM's serial number.", "" ) \
DPOINT_DEFN( LoadProfDefAddr, UI32, "load profile defination address allocated by metering", "" ) \
DPOINT_DEFN( LoadProfNotice, LoadProfileNoticeType, "load Profile notice", "" ) \
DPOINT_DEFN( LoadProfValAddr, UI32, "Load Profile values address allocated by metering process", "" ) \
DPOINT_DEFN( SigStatusCloseBlocking, Signal, "Close operations from any source are blocked (set whenever any of HLT or Logical Block Close is set). (Not set when HLT is On by LL).", "" ) \
DPOINT_DEFN( SigCtrlBlockCloseOn, Signal, "Control to block close from all sources.  Can be driven from IO, Logic or SCADA", "" ) \
DPOINT_DEFN( CmsHasCrc, UI8, "Flag: If non-0 CMS packets have CRC appended. ", "" ) \
DPOINT_DEFN( CmsCntErr, UI32, "Counter: Number of corrupted packets rxd+number of NAK_CRC packets rxd.", "" ) \
DPOINT_DEFN( CmsCntTxd, UI32, "Counter: Number of packets txd. ", "" ) \
DPOINT_DEFN( CmsCntRxd, UI32, "Counter: Number of packets rxd.", "" ) \
DPOINT_DEFN( CmsAuxPort, UI16, "The additional port ID that the DMS module will accept commands from.", "" ) \
DPOINT_DEFN( SigOpenGrp1, Signal, "Open due to Group 1 tripping", "" ) \
DPOINT_DEFN( CmsAuxHasCrc, UI8, "Flag: If non-0 CMS packets have CRC appended. ", "" ) \
DPOINT_DEFN( CmsAuxCntErr, UI32, "Counter: Number of corrupted packets rxd+number of NAK_CRC packets rxd.", "" ) \
DPOINT_DEFN( CmsAuxCntTxd, UI32, "Counter: Number of packets txd. ", "" ) \
DPOINT_DEFN( CmsAuxCntRxd, UI32, "Counter: Number of packets rxd.", "" ) \
DPOINT_DEFN( CmsVer, Str, "CMS process version", "" ) \
DPOINT_DEFN( ProtGlbFreqRated, RatedFreq, "Rated frequency for the protection ", "" ) \
DPOINT_DEFN( ProtGlbUsys, UI32, "Rated system voltage", "" ) \
DPOINT_DEFN( ProtGlbLsdLevel, UI32, "Loss of Supply Detector Level", "" ) \
DPOINT_DEFN( SigOpenGrp2, Signal, "Open due to Group 2 tripping", "" ) \
DPOINT_DEFN( SigOpenGrp3, Signal, "Open due to Group 3 tripping", "" ) \
DPOINT_DEFN( SigOpenGrp4, Signal, "Open due to Group 4 tripping", "" ) \
DPOINT_DEFN( PanelButtEF, EnDis, "HMI Earth Fault fast key control", "" ) \
DPOINT_DEFN( PanelButtSEF, EnDis, "HMI Sensitive Earth Fault fast key control", "" ) \
DPOINT_DEFN( PanelButtAR, EnDis, "HMI Automatic Reclosing fast key control", "" ) \
DPOINT_DEFN( PanelButtCL, EnDis, "HMI Cold Load fast key control", "" ) \
DPOINT_DEFN( PanelButtLL, EnDis, "HMI Live Line fast key control", "" ) \
DPOINT_DEFN( PanelButtActiveGroup, EnDis, "HMI ActiveGroup fast key control", "" ) \
DPOINT_DEFN( PanelButtProtection, EnDis, "HMI Protection fast key control", "" ) \
DPOINT_DEFN( PanelDelayedClose, EnDis, "HMI delayed close", "" ) \
DPOINT_DEFN( PanelDelayedCloseTime, UI16, "HMI delayed close time", "" ) \
DPOINT_DEFN( MicrokernelFsType, FileSystemType, "The file system type used by the microkernel (as identified by the microkernel's bax meta data).", "" ) \
DPOINT_DEFN( HmiErrMsg, ERR, "If any process writes an error code to this database HMI will display an error message dialog.", "" ) \
DPOINT_DEFN( HmiErrMsgFull, HmiErrMsg, "If any process writes an error structure to this datapoint HMI will display an error message dialog. See also HmiErrMsg for a simpler mechanism of display error messages.", "" ) \
DPOINT_DEFN( ScadaCounterCallDropouts, UI32, "The number of modem calls where RC10 did not initiate hanging up", "" ) \
DPOINT_DEFN( ScadaCounterCallFails, UI32, "Increments when Slave does not connect to the base station modem.", "" ) \
DPOINT_DEFN( CanSimSetResetTimeUI16, UI16, "UPS External Load Reset Time.\r\n\r\nNOTE: This deprecates dpId:85", "" ) \
DPOINT_DEFN( HmiPasswordUser, HmiPwdGroup, "The 'user' password as 4 ASCII characters.", "" ) \
DPOINT_DEFN( UpdateFailed, Signal, "Update failed for relay firmware component, and could not be reverted.", "" ) \
DPOINT_DEFN( UpdateReverted, Signal, "An update failed and was successfully reverted to the previous version.", "" ) \
DPOINT_DEFN( SwitchCoefCUa, UI32, "Switchgear CUa Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCUb, UI32, "Switchgear CUb Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCUc, UI32, "Switchgear CUc Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCUr, UI32, "Switchgear CUr Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCUs, UI32, "Switchgear CUs Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCUt, UI32, "Switchgear CUt Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCIa, UI32, "Switchgear CIa Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCIb, UI32, "Switchgear CIb Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCIc, UI32, "Switchgear CIc Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchCoefCIn, UI32, "Switchgear CIn Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( LogEventDir, Str, "Event log file directory", "" ) \
DPOINT_DEFN( LogCloseOpenDir, Str, "Close Open log file directory", "" ) \
DPOINT_DEFN( LogLoadProfDir, Str, "Load Profile log file directory", "" ) \
DPOINT_DEFN( LogFaultProfDir, Str, "Fault profile log file directory", "" ) \
DPOINT_DEFN( LogChangeDir, Str, "Change log file directory", "" ) \
DPOINT_DEFN( SysSettingDir, Str, "System setting file directory", "" ) \
DPOINT_DEFN( ScadaTimeLocal, ScadaTimeIsLocal, "Flag to indicate if time sent over SCADA should be interpreted as local time or UTC time. \r\n\r\nNOTE: The interpretation of this value is reversed. 0 == Local, 1 == GMT/UTC.", "" ) \
DPOINT_DEFN( TimeZone, I32, "System timezone, stored as number of seconds offset from UTC. NB: The weird negative value is for time zones -13h and -14h which aren't legally adopted but are theoretically possible.", "" ) \
DPOINT_DEFN( UpdateSettingsLogFailed, Signal, "Failed to backup or restore relay settings and/or logs", "" ) \
DPOINT_DEFN( DbugCmsSerial, UI32, "This value sets the trace level for debugging the CMS serial transport protocol.  Note that debug tracing is only available if CMS is built with DEBUG options.", "" ) \
DPOINT_DEFN( USBDConfigType, UsbPortConfigType, "USB D Device config type for COMMS library", "" ) \
DPOINT_DEFN( USBEConfigType, UsbPortConfigType, "USB E Device config type for COMMS library", "" ) \
DPOINT_DEFN( USBFConfigType, SerialPortConfigType, "USB C2 Device config type for COMMS library", "" ) \
DPOINT_DEFN( Rs232Dte2ConfigType, SerialPortConfigType, "RS-232P Port configuration type", "" ) \
DPOINT_DEFN( CommsChEvGrp5, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 5 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp6, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 6 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp7, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 7 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp8, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 8 settings.", "" ) \
DPOINT_DEFN( SigUSBUnsupported, Signal, "USB Unsupported Device Connected", "" ) \
DPOINT_DEFN( SigUSBMismatched, Signal, "USB Mismatched Device Connected", "" ) \
DPOINT_DEFN( DNP3_ModemDialOut, Bool, "DNP3 ModemDialOut", "" ) \
DPOINT_DEFN( CMS_ModemDialOut, Bool, "CMS ModemDialOut", "" ) \
DPOINT_DEFN( DNP3_ModemPreDialString, Str, "DNP3 ModemPreDialString", "" ) \
DPOINT_DEFN( CMS_ModemPreDialString, Str, "CMS ModemPreDialString", "" ) \
DPOINT_DEFN( DNP3_ModemDialNumber1, Str, "DNP3 ModemDialNumber1", "" ) \
DPOINT_DEFN( DNP3_ModemDialNumber2, Str, "DNP3 ModemDialNumber2", "" ) \
DPOINT_DEFN( DNP3_ModemDialNumber3, Str, "DNP3 ModemDialNumber3", "" ) \
DPOINT_DEFN( DNP3_ModemDialNumber4, Str, "DNP3 ModemDialNumber4", "" ) \
DPOINT_DEFN( DNP3_ModemDialNumber5, Str, "DNP3 ModemDialNumber5", "" ) \
DPOINT_DEFN( ProtTstSeq, UI32, "Base address of test sequence", "" ) \
DPOINT_DEFN( ProtTstLogStep, UI32, "Test prot has loaded a new step", "" ) \
DPOINT_DEFN( ProtTstDbug, Str, "Debug string", "" ) \
DPOINT_DEFN( ProtCfgBase, UI32, "Base address of protection config", "" ) \
DPOINT_DEFN( G1_OcAt, UI32, "Grp1 OC Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G1_OcDnd, DndMode, "Grp1 _OC DND", "" ) \
DPOINT_DEFN( G1_EfAt, UI32, "Grp1 _EF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G1_EfDnd, DndMode, "Grp1 _EF DND", "" ) \
DPOINT_DEFN( G1_SefAt, UI32, "Grp1 _SEF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G1_SefDnd, DndMode, "Grp1 _SEF DND", "" ) \
DPOINT_DEFN( G1_ArOCEF_ZSCmode, EnDis, "Grp1 1AutoReclose ZSC mod", "" ) \
DPOINT_DEFN( G1_VrcEnable, EnDis, "Grp1 AutoReclose VRC mode", "" ) \
DPOINT_DEFN( CMS_ModemDialNumber1, Str, "CMS ModemDialNumber1", "" ) \
DPOINT_DEFN( G1_ArOCEF_Trec1, UI32, "Grp1 AutoReclose Reclose Trip 1", "" ) \
DPOINT_DEFN( G1_ArOCEF_Trec2, UI32, "Grp1 AutoReclose Reclose Trip 2", "" ) \
DPOINT_DEFN( G1_ArOCEF_Trec3, UI32, "Grp1 AutoReclose Reclose Trip 3", "" ) \
DPOINT_DEFN( G1_ResetTime, UI32, "Grp1 Reset time", "" ) \
DPOINT_DEFN( G1_TtaMode, TtaMode, "Grp1  Transient additional time mode", "" ) \
DPOINT_DEFN( G1_TtaTime, UI32, "Grp1 Transient additional time", "" ) \
DPOINT_DEFN( G1_SstOcForward, UI8, "Grp1  OC Single shot to trip.", "" ) \
DPOINT_DEFN( G1_EftEnable, EnDis, "Grp1 En/Disables the excess fast trip engine.", "" ) \
DPOINT_DEFN( G1_ClpClm, UI32, "Grp1 CLP multiplier", "" ) \
DPOINT_DEFN( G1_ClpTcl, UI32, "Grp1  CLP load time", "" ) \
DPOINT_DEFN( G1_ClpTrec, UI32, "Grp1  CLP recognition time", "" ) \
DPOINT_DEFN( G1_IrrIrm, UI32, "Grp1  IRR multiplier", "" ) \
DPOINT_DEFN( G1_IrrTir, UI32, "Grp1  IRR restraint time", "" ) \
DPOINT_DEFN( G1_VrcMode, VrcMode, "Grp1  VRC mode", "" ) \
DPOINT_DEFN( G1_VrcUMmin, UI32, "Grp1  VRC voltage multiplier", "" ) \
DPOINT_DEFN( G1_AbrMode, EnDis, "Grp1  ABR mode", "" ) \
DPOINT_DEFN( G1_OC1F_Ip, UI32, "Grp1 OC1+ Pickup current", "" ) \
DPOINT_DEFN( G1_OC1F_Tcc, UI16, "Grp1 OC1+ TCC Type", "" ) \
DPOINT_DEFN( G1_OC1F_TDtMin, UI32, "Grp1 OC1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_OC1F_TDtRes, UI32, "Grp1 OC1+ DT reset time", "" ) \
DPOINT_DEFN( G1_OC1F_Tm, UI32, "Grp1 OC1+ Time multiplier", "" ) \
DPOINT_DEFN( G1_OC1F_Imin, UI32, "Grp1 OC1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OC1F_Tmin, UI32, "Grp1 OC1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OC1F_Tmax, UI32, "Grp1 OC1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OC1F_Ta, UI32, "Grp1 OC1+ Additional time", "" ) \
DPOINT_DEFN( CMS_ModemDialNumber2, Str, "CMS ModemDialNumber2", "" ) \
DPOINT_DEFN( G1_OC1F_ImaxEn, EnDis, "Grp1 OC1+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_OC1F_Imax, UI32, "Grp1 OC1+ Max current multiplier", "" ) \
DPOINT_DEFN( G1_OC1F_DirEn, EnDis, "Grp1 OC1+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC1F_Tr1, TripMode, "Grp1 OC1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC1F_Tr2, TripMode, "Grp1 OC1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC1F_Tr3, TripMode, "Grp1 OC1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC1F_Tr4, TripMode, "Grp1 OC1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OC1F_TccUD, TccCurve, "Grp1 OC1+ User defined curve", "" ) \
DPOINT_DEFN( G1_OC2F_Ip, UI32, "Grp1 OC2+ Pickup current", "" ) \
DPOINT_DEFN( G1_OC2F_Tcc, UI16, "Grp1 OC2+ TCC Type", "" ) \
DPOINT_DEFN( G1_OC2F_TDtMin, UI32, "Grp1 OC2+ DT min tripping time", "" ) \
DPOINT_DEFN( G1_OC2F_TDtRes, UI32, "Grp1 OC2+ DT reset time", "" ) \
DPOINT_DEFN( G1_OC2F_Tm, UI32, "Grp1 OC2+ Time multiplier", "" ) \
DPOINT_DEFN( G1_OC2F_Imin, UI32, "Grp1 OC2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OC2F_Tmin, UI32, "Grp1 OC2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OC2F_Tmax, UI32, "Grp1 OC2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OC2F_Ta, UI32, "Grp1 OC2+ Additional time", "" ) \
DPOINT_DEFN( G1_EftTripCount, UI8, "Grp1 Applicable to EFT mode: The threshould count of the number of protection trips before disabling fast trips.", "" ) \
DPOINT_DEFN( G1_OC2F_ImaxEn, EnDis, "Grp1 OC2+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_OC2F_Imax, UI32, "Grp1 OC2+ Max current multiplier", "" ) \
DPOINT_DEFN( G1_OC2F_DirEn, EnDis, "Grp1 OC2+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC2F_Tr1, TripMode, "Grp1 OC2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC2F_Tr2, TripMode, "Grp1 OC2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC2F_Tr3, TripMode, "Grp1 OC2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC2F_Tr4, TripMode, "Grp1 OC2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OC2F_TccUD, TccCurve, "Grp1 OC2+ User defined curve", "" ) \
DPOINT_DEFN( G1_OC3F_Ip, UI32, "Grp1 OC3+ Pickup current", "" ) \
DPOINT_DEFN( G1_OC3F_TDtMin, UI32, "Grp1 OC3+ DT tripping time", "" ) \
DPOINT_DEFN( G1_OC3F_TDtRes, UI32, "Grp1 OC3+ DT reset time", "" ) \
DPOINT_DEFN( G1_OC3F_DirEn, EnDis, "Grp1 OC3+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC3F_Tr1, TripMode, "Grp1 OC3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC3F_Tr2, TripMode, "Grp1 OC3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC3F_Tr3, TripMode, "Grp1 OC3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC3F_Tr4, TripMode, "Grp1 OC3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OC1R_Ip, UI32, "Grp1 OC1- Pickup current", "" ) \
DPOINT_DEFN( G1_OC1R_Tcc, UI16, "Grp1 OC1- TCC Type", "" ) \
DPOINT_DEFN( G1_OC1R_TDtMin, UI32, "Grp1 OC1- DT min tripping time", "" ) \
DPOINT_DEFN( G1_OC1R_TDtRes, UI32, "Grp1 OC1- DT reset time", "" ) \
DPOINT_DEFN( G1_OC1R_Tm, UI32, "Grp1 OC1- Time multiplier", "" ) \
DPOINT_DEFN( G1_OC1R_Imin, UI32, "Grp1 OC1- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OC1R_Tmin, UI32, "Grp1 OC1- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OC1R_Tmax, UI32, "Grp1 OC1- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OC1R_Ta, UI32, "Grp1 OC1- Additional time", "" ) \
DPOINT_DEFN( G1_EftTripWindow, UI8, "Grp1 Applicable to EFT mode: The period window used when monitoring the number of protection trips.", "" ) \
DPOINT_DEFN( G1_OC1R_ImaxEn, EnDis, "Grp1 OC1- Enable Max mode", "" ) \
DPOINT_DEFN( G1_OC1R_Imax, UI32, "Grp1 OC1- Max current multiplier", "" ) \
DPOINT_DEFN( G1_OC1R_DirEn, EnDis, "Grp1 OC1- Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC1R_Tr1, TripMode, "Grp1 OC1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC1R_Tr2, TripMode, "Grp1 OC1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC1R_Tr3, TripMode, "Grp1 OC1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC1R_Tr4, TripMode, "Grp1 OC1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OC1R_TccUD, TccCurve, "Grp1 OC1- User defined curve", "" ) \
DPOINT_DEFN( G1_OC2R_Ip, UI32, "Grp1 OC2- Pickup current", "" ) \
DPOINT_DEFN( G1_OC2R_Tcc, UI16, "Grp1 OC2- TCC Type", "" ) \
DPOINT_DEFN( G1_OC2R_TDtMin, UI32, "Grp1 OC2- DT min tripping time", "" ) \
DPOINT_DEFN( G1_OC2R_TDtRes, UI32, "Grp1 OC2- DT reset time", "" ) \
DPOINT_DEFN( G1_OC2R_Tm, UI32, "Grp1 OC2- Time multiplier", "" ) \
DPOINT_DEFN( G1_OC2R_Imin, UI32, "Grp1 OC2- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OC2R_Tmin, UI32, "Grp1 OC2- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OC2R_Tmax, UI32, "Grp1 OC2- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OC2R_Ta, UI32, "Grp1 OC2- Additional time", "" ) \
DPOINT_DEFN( G1_OC2R_ImaxEn, EnDis, "Grp1 OC2- Enable Max mode", "" ) \
DPOINT_DEFN( G1_OC2R_Imax, UI32, "Grp1 OC2- Max current multiplier", "" ) \
DPOINT_DEFN( G1_OC2R_DirEn, EnDis, "Grp1 OC2- Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC2R_Tr1, TripMode, "Grp1 OC2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC2R_Tr2, TripMode, "Grp1 OC2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC2R_Tr3, TripMode, "Grp1 OC2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC2R_Tr4, TripMode, "Grp1 OC2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OC2R_TccUD, TccCurve, "Grp1 OC2- User defined curve", "" ) \
DPOINT_DEFN( G1_OC3R_Ip, UI32, "Grp1 OC3- Pickup current", "" ) \
DPOINT_DEFN( G1_OC3R_TDtMin, UI32, "Grp1 OC3- DT tripping time", "" ) \
DPOINT_DEFN( G1_OC3R_TDtRes, UI32, "Grp1 OC3- DT reset time", "" ) \
DPOINT_DEFN( G1_OC3R_DirEn, EnDis, "Grp1 OC3- Enable directional protection", "" ) \
DPOINT_DEFN( G1_OC3R_Tr1, TripMode, "Grp1 OC3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_OC3R_Tr2, TripMode, "Grp1 OC3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_OC3R_Tr3, TripMode, "Grp1 OC3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_OC3R_Tr4, TripMode, "Grp1 OC3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF1F_Ip, UI32, "Grp1 EF1+ Pickup current", "" ) \
DPOINT_DEFN( G1_EF1F_Tcc, UI16, "Grp1 EF1+ TCC Type", "" ) \
DPOINT_DEFN( G1_EF1F_TDtMin, UI32, "Grp1 EF1+ DT min tripping time", "" ) \
DPOINT_DEFN( G1_EF1F_TDtRes, UI32, "Grp1 EF1+ DT reset time", "" ) \
DPOINT_DEFN( G1_EF1F_Tm, UI32, "Grp1 EF1+ Time multiplier", "" ) \
DPOINT_DEFN( G1_EF1F_Imin, UI32, "Grp1 EF1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EF1F_Tmin, UI32, "Grp1 EF1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EF1F_Tmax, UI32, "Grp1 EF1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EF1F_Ta, UI32, "Grp1 EF1+ Additional time", "" ) \
DPOINT_DEFN( G1_DEPRECATED_G1EF1F_Tres, UI32, "Grp1 EF1+ Reset time", "" ) \
DPOINT_DEFN( G1_EF1F_ImaxEn, EnDis, "Grp1 EF1+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_EF1F_Imax, UI32, "Grp1 EF1+ Max current multiplier", "" ) \
DPOINT_DEFN( G1_EF1F_DirEn, EnDis, "Grp1 EF1+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF1F_Tr1, TripMode, "Grp1 EF1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF1F_Tr2, TripMode, "Grp1 EF1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF1F_Tr3, TripMode, "Grp1 EF1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF1F_Tr4, TripMode, "Grp1 EF1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF1F_TccUD, TccCurve, "Grp1 EF1+ User defined curve", "" ) \
DPOINT_DEFN( G1_EF2F_Ip, UI32, "Grp1 EF2+ Pickup current", "" ) \
DPOINT_DEFN( G1_EF2F_Tcc, UI16, "Grp1 EF2+ TCC Type", "" ) \
DPOINT_DEFN( G1_EF2F_TDtMin, UI32, "Grp1 EF2+ DT min tripping time", "" ) \
DPOINT_DEFN( G1_EF2F_TDtRes, UI32, "Grp1 EF2+ DT reset time", "" ) \
DPOINT_DEFN( G1_EF2F_Tm, UI32, "Grp1 EF2+ Time multiplier", "" ) \
DPOINT_DEFN( G1_EF2F_Imin, UI32, "Grp1 EF2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EF2F_Tmin, UI32, "Grp1 EF2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EF2F_Tmax, UI32, "Grp1 EF2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EF2F_Ta, UI32, "Grp1 EF2+ Additional time", "" ) \
DPOINT_DEFN( G1_DEPRECATED_G1EF2F_Tres, UI32, "Grp1 EF2+ Reset time", "" ) \
DPOINT_DEFN( G1_EF2F_ImaxEn, EnDis, "Grp1 EF2+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_EF2F_Imax, UI32, "Grp1 EF2+ Max mode", "" ) \
DPOINT_DEFN( G1_EF2F_DirEn, EnDis, "Grp1 EF2+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF2F_Tr1, TripMode, "Grp1 EF2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF2F_Tr2, TripMode, "Grp1 EF2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF2F_Tr3, TripMode, "Grp1 EF2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF2F_Tr4, TripMode, "Grp1 EF2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF2F_TccUD, TccCurve, "Grp1 EF2+ User defined curve", "" ) \
DPOINT_DEFN( G1_EF3F_Ip, UI32, "Grp1 EF3+ Pickup current", "" ) \
DPOINT_DEFN( G1_EF3F_TDtMin, UI32, "Grp1 EF3+ DT tripping time", "" ) \
DPOINT_DEFN( G1_EF3F_TDtRes, UI32, "Grp1 EF3+ DT reset time", "" ) \
DPOINT_DEFN( G1_EF3F_DirEn, EnDis, "Grp1 EF3+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF3F_Tr1, TripMode, "Grp1 EF3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF3F_Tr2, TripMode, "Grp1 EF3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF3F_Tr3, TripMode, "Grp1 EF3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF3F_Tr4, TripMode, "Grp1 EF3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF1R_Ip, UI32, "Grp1 EF1- Pickup current", "" ) \
DPOINT_DEFN( G1_EF1R_Tcc, UI16, "Grp1 EF1- TCC Type", "" ) \
DPOINT_DEFN( G1_EF1R_TDtMin, UI32, "Grp1 EF1- DT min tripping time", "" ) \
DPOINT_DEFN( G1_EF1R_TDtRes, UI32, "Grp1 EF1- DT reset time", "" ) \
DPOINT_DEFN( G1_EF1R_Tm, UI32, "Grp1 EF1- Time multiplier", "" ) \
DPOINT_DEFN( G1_EF1R_Imin, UI32, "Grp1 EF1- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EF1R_Tmin, UI32, "Grp1 EF1- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EF1R_Tmax, UI32, "Grp1 EF1- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EF1R_Ta, UI32, "Grp1 EF1- Additional time", "" ) \
DPOINT_DEFN( G1_DEPRECATED_G1EF1R_Tres, UI32, "Grp1 EF1- Reset time", "" ) \
DPOINT_DEFN( G1_EF1R_ImaxEn, EnDis, "Grp1 EF1- Enable Max mode", "" ) \
DPOINT_DEFN( G1_EF1R_Imax, UI32, "Grp1 EF1- Max current multiplier", "" ) \
DPOINT_DEFN( G1_EF1R_DirEn, EnDis, "Grp1 EF1- Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF1R_Tr1, TripMode, "Grp1 EF1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF1R_Tr2, TripMode, "Grp1 EF1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF1R_Tr3, TripMode, "Grp1 EF1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF1R_Tr4, TripMode, "Grp1 EF1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF1R_TccUD, TccCurve, "Grp1 EF1- User defined curve", "" ) \
DPOINT_DEFN( G1_EF2R_Ip, UI32, "Grp1 EF2- Pickup current", "" ) \
DPOINT_DEFN( G1_EF2R_Tcc, UI16, "Grp1 EF2- TCC Type", "" ) \
DPOINT_DEFN( G1_EF2R_TDtMin, UI32, "Grp1 EF2- DT min tripping time", "" ) \
DPOINT_DEFN( G1_EF2R_TDtRes, UI32, "Grp1 EF2- DT reset time", "" ) \
DPOINT_DEFN( G1_EF2R_Tm, UI32, "Grp1 EF2- Time multiplier", "" ) \
DPOINT_DEFN( G1_EF2R_Imin, UI32, "Grp1 EF2- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EF2R_Tmin, UI32, "Grp1 EF2- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EF2R_Tmax, UI32, "Grp1 EF2- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EF2R_Ta, UI32, "Grp1 EF2- Additional time", "" ) \
DPOINT_DEFN( G1_EF2R_ImaxEn, EnDis, "Grp1 EF2- Enable Max mode", "" ) \
DPOINT_DEFN( G1_EF2R_Imax, UI32, "Grp1 EF2- Max current multiplier", "" ) \
DPOINT_DEFN( G1_EF2R_DirEn, EnDis, "Grp1 EF2- Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF2R_Tr1, TripMode, "Grp1 EF2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF2R_Tr2, TripMode, "Grp1 EF2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF2R_Tr3, TripMode, "Grp1 EF2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF2R_Tr4, TripMode, "Grp1 EF2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_EF2R_TccUD, TccCurve, "Grp1 EF2- User defined curve", "" ) \
DPOINT_DEFN( G1_EF3R_Ip, UI32, "Grp1 EF3- Pickup current", "" ) \
DPOINT_DEFN( G1_EF3R_TDtMin, UI32, "Grp1 EF3- DT tripping time", "" ) \
DPOINT_DEFN( G1_EF3R_TDtRes, UI32, "Grp1 EF3- DT reset time", "" ) \
DPOINT_DEFN( G1_EF3R_DirEn, EnDis, "Grp1 EF3- Enable directional protection", "" ) \
DPOINT_DEFN( G1_EF3R_Tr1, TripMode, "Grp1 EF3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_EF3R_Tr2, TripMode, "Grp1 EF3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_EF3R_Tr3, TripMode, "Grp1 EF3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_EF3R_Tr4, TripMode, "Grp1 EF3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_SEFF_Ip, UI32, "Grp1 SEF+ Pickup current", "" ) \
DPOINT_DEFN( G1_SEFF_TDtMin, UI32, "Grp1 SEF+ DT tripping time", "" ) \
DPOINT_DEFN( G1_SEFF_TDtRes, UI32, "Grp1 SEF+ DT reset time", "" ) \
DPOINT_DEFN( G1_SEFF_DirEn, EnDis, "Grp1 SEF+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_SEFF_Tr1, TripMode, "Grp1 SEF+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_SEFF_Tr2, TripMode, "Grp1 SEF+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_SEFF_Tr3, TripMode, "Grp1 SEF+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_SEFF_Tr4, TripMode, "Grp1 SEF+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_SEFR_Ip, UI32, "Grp1 SEF- Pickup current", "" ) \
DPOINT_DEFN( G1_SEFR_TDtMin, UI32, "Grp1 SEF- DT tripping time", "" ) \
DPOINT_DEFN( G1_SEFR_TDtRes, UI32, "Grp1 SEF- DT reset time", "" ) \
DPOINT_DEFN( G1_SEFR_DirEn, EnDis, "Grp1 SEF- Enable directional protection", "" ) \
DPOINT_DEFN( G1_SEFR_Tr1, TripMode, "Grp1 SEF- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_SEFR_Tr2, TripMode, "Grp1 SEF- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_SEFR_Tr3, TripMode, "Grp1 SEF- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_SEFR_Tr4, TripMode, "Grp1 SEF- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_OcLl_Ip, UI32, "Grp1 OC3 LL Pickup current", "" ) \
DPOINT_DEFN( G1_OcLl_TDtMin, UI32, "Grp1 OC LL3 DT tripping time", "" ) \
DPOINT_DEFN( G1_OcLl_TDtRes, UI32, "Grp1 OC LL3 DT reset time", "" ) \
DPOINT_DEFN( G1_EfLl_Ip, UI32, "Grp1 EF LL3 Pickup current", "" ) \
DPOINT_DEFN( G1_EfLl_TDtMin, UI32, "Grp1 EF LL3 DT tripping time", "" ) \
DPOINT_DEFN( G1_EfLl_TDtRes, UI32, "Grp1 EF LL3 DT reset time", "" ) \
DPOINT_DEFN( G1_Uv1_Um, UI32, "Grp1  UV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Uv1_TDtMin, UI32, "Grp1  UV1 DT tripping time", "" ) \
DPOINT_DEFN( G1_Uv1_TDtRes, UI32, "Grp1  UV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Uv1_Trm, TripMode, "Grp1 1 UV1 Trip mod", "" ) \
DPOINT_DEFN( G1_Uv2_Um, UI32, "Grp1  UV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Uv2_TDtMin, UI32, "Grp1  UV2 DT tripping time", "" ) \
DPOINT_DEFN( G1_Uv2_TDtRes, UI32, "Grp1  UV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Uv2_Trm, TripMode, "Grp1 1 UV2 Trip mod", "" ) \
DPOINT_DEFN( G1_Uv3_TDtMin, UI32, "Grp1 UV3 DT tripping time", "" ) \
DPOINT_DEFN( G1_Uv3_TDtRes, UI32, "Grp1  UV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Uv3_Trm, TripMode, "Grp1 1 UV3 Trip mod", "" ) \
DPOINT_DEFN( G1_Ov1_Um, UI32, "Grp1  OV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Ov1_TDtMin, UI32, "Grp1  OV1 DT tripping time", "" ) \
DPOINT_DEFN( G1_Ov1_TDtRes, UI32, "Grp1  OV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Ov1_Trm, TripMode, "Grp1 1 OV1 Trip mod", "" ) \
DPOINT_DEFN( G1_Ov2_Um, UI32, "Grp1  OV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Ov2_TDtMin, UI32, "Grp1  OV2 DT tripping time", "" ) \
DPOINT_DEFN( G1_Ov2_TDtRes, UI32, "Grp1  OV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Ov2_Trm, TripMode, "Grp1 1 OV2 Trip mod", "" ) \
DPOINT_DEFN( G1_Uf_Fp, UI32, "Grp1  UF Pickup frequency", "" ) \
DPOINT_DEFN( G1_Uf_TDtMin, UI32, "Grp1  UF DT tripping time", "" ) \
DPOINT_DEFN( G1_Uf_TDtRes, UI32, "Grp1  UF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Uf_Trm, TripModeDLA, "Grp1  UF Trip mode", "" ) \
DPOINT_DEFN( G1_Of_Fp, UI32, "Grp1 OF Pickup frequency", "" ) \
DPOINT_DEFN( G1_Of_TDtMin, UI32, "Grp1  OF DT tripping time", "" ) \
DPOINT_DEFN( G1_Of_TDtRes, UI32, "Grp1  OF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Of_Trm, TripModeDLA, "Grp1  OF Trip mode", "" ) \
DPOINT_DEFN( G1_DEPRECATED_OC1F_ImaxAbs, UI32, "Grp1 OC1+ Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_OC2F_ImaxAbs, UI32, "Grp1 OC2+ Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_OC1R_ImaxAbs, UI32, "Grp1 OC1- Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_OC2R_ImaxAbs, UI32, "Grp1 OC2- Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_EF1F_ImaxAbs, UI32, "Grp1 EF1+ Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_EF2F_ImaxAbs, UI32, "Grp1 EF2+ Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_EF1R_ImaxAbs, UI32, "Grp1 EF1- Max abs current", "" ) \
DPOINT_DEFN( G1_DEPRECATED_EF2R_ImaxAbs, UI32, "Grp1 EF2- Max abs current", "" ) \
DPOINT_DEFN( G1_SstEfForward, UI8, "Grp1 EF Single shot to trip", "" ) \
DPOINT_DEFN( G1_SstSefForward, UI8, "Grp1 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G1_AbrTrest, UI32, "Grp1 The ABR restoration time in s.", "" ) \
DPOINT_DEFN( G1_AutoOpenMode, AutoOpenMode, "Grp1 AutoOpen method: Disabled/Timer/Power Flow", "" ) \
DPOINT_DEFN( G1_AutoOpenTime, UI16, "Grp1 The time in minutes to wait before auto open after a close by ABR", "" ) \
DPOINT_DEFN( G1_AutoOpenOpns, UI8, "Grp1 The number of times this element will allow ABR closes before locking out.", "" ) \
DPOINT_DEFN( G1_SstOcReverse, UI8, "Grp1 ", "" ) \
DPOINT_DEFN( G1_SstEfReverse, UI8, "Grp1 Grp 1 EF Single shot to trip", "" ) \
DPOINT_DEFN( G1_SstSefReverse, UI8, "Grp1 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G1_ArUVOV_Trec, UI32, "Grp1 Under / Over voltage auto reclose time in seconds", "" ) \
DPOINT_DEFN( G1_GrpName, Str, "Grp1 _Group Name", "" ) \
DPOINT_DEFN( G1_GrpDes, Str, "Grp1 G1_Grp Description Group description", "" ) \
DPOINT_DEFN( CMS_ModemDialNumber3, Str, "CMS ModemDialNumber3", "" ) \
DPOINT_DEFN( CMS_ModemDialNumber4, Str, "CMS ModemDialNumber4", "" ) \
DPOINT_DEFN( CMS_ModemDialNumber5, Str, "CMS ModemDialNumber5", "" ) \
DPOINT_DEFN( DNP3_ModemAutoDialInterval, UI32, "Modem Auto Dial Interval time between failure to connect to one number in seconds.", "" ) \
DPOINT_DEFN( CMS_ModemAutoDialInterval, UI32, "Modem Auto Dial Interval time between failure to connect to one number in seconds.", "" ) \
DPOINT_DEFN( DNP3_ModemConnectionTimeout, UI32, "Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( CMS_ModemConnectionTimeout, UI32, "Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( ScadaDnp3IpTcpSlavePort, UI16, "The TCP port used by the controller to listen to DNP3 requests. ", "" ) \
DPOINT_DEFN( CMS_PortNumber, UI16, "CMS tcp/ip port number", "" ) \
DPOINT_DEFN( UpdateFileCopyFail, UI8, "Notifies the update process that an update file failed to be copied to the staging area.", "" ) \
DPOINT_DEFN( ScadaHMIEnableProtocol, EnDis, "HMI Protocol Enabled in SCADA", "" ) \
DPOINT_DEFN( ScadaHMIChannelPort, CommsPort, "HMI Communication Channel Port in SCADA", "" ) \
DPOINT_DEFN( ScadaHMIRemotePort, CommsPort, "scada HMI remote port", "" ) \
DPOINT_DEFN( ScadaCMSLocalPort, CommsPort, "SCADA CMS Port #1", "" ) \
DPOINT_DEFN( UsbGadgetConnectionStatus, CommsConnectionStatus, "Usb gadget connection status : disconnected, connected.", "" ) \
DPOINT_DEFN( ShutdownExpected, ShutdownReason, "Indicates that a shutdown is imminent in certain situations. (Not used for all shutdown types.)", "" ) \
DPOINT_DEFN( SigSimNotCalibrated, Signal, "The SIM is not calibrated", "" ) \
DPOINT_DEFN( Io1OpMode, LocalRemote, "The operating mode that the digital inputs of IO module 1 are to operate under.", "" ) \
DPOINT_DEFN( Io2OpMode, LocalRemote, "The operating mode that the digital inputs of IO module 2 are to operate under.", "" ) \
DPOINT_DEFN( RestoreEnabled, YesNo, "Indicates whether the restore operations are enabled in recovery mode. Operations include restore settings and logs.", "" ) \
DPOINT_DEFN( ReportTimeSetting, UI32, "Standard Unix Time. For reporting a time setting.", "" ) \
DPOINT_DEFN( ScadaOpMode, LocalRemote, "The local/remote mode that the SCADA process is operating under.  This is to be set by the SCADA process ONLY - if other processes write to this point then strange (& bad) things WILL happen.", "" ) \
DPOINT_DEFN( CmsSerialFrameRxTimeout, UI32, "Applicable only for the CMS serial protocol. The timeout used when receiving a frame. This value can be modified by CMS (for e.g. based on the baud rate). ", "" ) \
DPOINT_DEFN( CopyComplete, UI8, "Indicates whether a copy operation is complete. Should be set 0 prior to beginning the copy.", "" ) \
DPOINT_DEFN( ReqSetExtLoad, OnOff, "Request to set the external load on or off", "" ) \
DPOINT_DEFN( ControlExtLoad, OnOff, "Selector for setting the external load request (on write). Indicates the current on/off state of the external load otherwise.", "" ) \
DPOINT_DEFN( SigLineSupplyStatusAbnormal, Signal, "Indicated when line supply (AC) status is low or high", "" ) \
DPOINT_DEFN( ChEvEventLog, ChangeEvent, "Event log changes", "" ) \
DPOINT_DEFN( ChEvCloseOpenLog, ChangeEvent, "Close/open log changes", "" ) \
DPOINT_DEFN( ChEvFaultProfileLog, ChangeEvent, "Fault profile log changes", "" ) \
DPOINT_DEFN( ChEvLoadProfileLog, ChangeEvent, "Load profile log changes", "" ) \
DPOINT_DEFN( ChEvChangeLog, ChangeEvent, "Change log changes", "" ) \
DPOINT_DEFN( SimBatteryVoltageScaled, UI16, "Battery voltage scaled to report in mV. The value is Ubt multiplied by 10. \r\n\r\nNote that this value is not for IEC protocols as they have per point scaling.", "" ) \
DPOINT_DEFN( LocalInputDebouncePeriod, UI16, "Local input debounce period in milliseconds", "" ) \
DPOINT_DEFN( ScadaT101ChannelMode, T101ChannelMode, "Operating mode for IEC 60870-5-101 serial channel: Balanced or Unbalanced", "" ) \
DPOINT_DEFN( ScadaT101DataLinkAddSize, UI8, "Number of bytes in IEC 60870-5-101 Data Link Address: 0, 1 or 2 for Balanced links, 1 or 2 for Unbalanced links.", "" ) \
DPOINT_DEFN( ScadaT104TCPPortNr, UI16, "IEC 60870-5-104 TCP port. Only change from default 2404 assigned by IANA if the master requires this.", "" ) \
DPOINT_DEFN( ScadaT101CAASize, UI8, "Number of bytes in the Common Address of ASDU: 1 or 2. For IEC 60870-5-104 this parameter is ignored and the value 2 is always used.", "" ) \
DPOINT_DEFN( ScadaT10BCAA, UI16, "Common Address of ASDU for both IEC 60870-5-101 and -104. This value must be unique for each controlled station in the system. Value 0 is reserved. Values 255 and 65535 are used as broadcast addresses for 1- and 2-byte address sizes.", "" ) \
DPOINT_DEFN( ScadaT101DataLinkAdd, UI16, "IEC 60870-5-101 Data Link Address. This is unique for each controlled station that shares the same communication channel. Value 0 is reserved. Values 255 and 65535 are reserved as broadcast addresses for 1- and 2-byte address sizes.", "" ) \
DPOINT_DEFN( ScadaT101COTSize, UI8, "IEC 60870-5-101 size of Cause of Transmission: 1 or 2 bytes. In IEC 60870-5-104, this field is ignored and the COT always occupies 2 bytes.", "" ) \
DPOINT_DEFN( ScadaT101IOASize, UI8, "IEC 60870-5-101 size of Information Object Address: 1, 2 or 3 bytes.", "" ) \
DPOINT_DEFN( ScadaT101SingleCharEnable, EnDis, "IEC 60870-5-101 Enable Single Character Messages. When enabled, the outstation sends the single character message instead of a full data link message to indicate a null or ACK response. When disabled, the full data link format is always used.", "" ) \
DPOINT_DEFN( ScadaT101MaxDLFrameSize, UI16, "Maximum Data Link Frame Length for IEC 60870-5-101 (in bytes)", "" ) \
DPOINT_DEFN( ScadaT101FrameTimeout, UI16, "Frame timeout (first byte to last byte) for IEC 60870-5-101 data link frames.", "" ) \
DPOINT_DEFN( ScadaT101LinkConfirmTimeout, UI16, "IEC 60870-5-101 Data Link Confirm Timeout (ms)", "" ) \
DPOINT_DEFN( ScadaT10BSelectExecuteTimeout, UI16, "IEC 60870-5-101 / -104 Select / Execute Timeout (seconds)", "" ) \
DPOINT_DEFN( ScadaT104ControlTSTimeout, UI16, "IEC 60870-5-104 maximum acceptable difference between timestamp in a timestamped control and the receiver clock (seconds)", "" ) \
DPOINT_DEFN( ScadaT101TimeStampSize, T101TimeStampSize, "IEC 60870-5-101 Size of time stamps (3 bytes or 7 bytes)", "" ) \
DPOINT_DEFN( ScadaT10BClockValidPeriod, UI32, "IEC 60870-5-101 / -104 Period after a clock synchronization for which the clock is considered valid (seconds)", "" ) \
DPOINT_DEFN( ScadaT10BCyclicPeriod, UI16, "IEC 60870-5-101 / -104 Period of measuring & reporting data configured for Cyclic Reporting (seconds). Set to zero to disable cyclic reporting.", "" ) \
DPOINT_DEFN( ScadaT10BBackgroundPeriod, UI16, "IEC 60870-5-101 / -104 Period for providing background updates for data (seconds). Set to 0 to disable all background reporting.", "" ) \
DPOINT_DEFN( ScadaT10BSinglePointRepMode, T10BReportMode, "IEC 60870-5-101 / -104 Single Point Status Reporting Mode: Disabled, Event without time stamp, Event with time stamp, Cyclic, Background, Interrogation", "" ) \
DPOINT_DEFN( ScadaT10BDoublePointRepMode, T10BReportMode, "IEC 60870-5-101 / -104 Double Point Status Reporting Mode: Disabled, Event without time stamp, Event with time stamp, Cyclic, Background, Interrogation", "" ) \
DPOINT_DEFN( ScadaT10BSingleCmdRepMode, T10BControlMode, "IEC 60870-5-101 / -104 Single Command Mode: Disabled, Select before Execute, Direct Execute", "" ) \
DPOINT_DEFN( ScadaT10BDoubleCmdRepMode, T10BControlMode, "IEC 60870-5-101 / -104 Double Command Mode: Disabled, Select before Execute, Direct Execute", "" ) \
DPOINT_DEFN( ScadaT10BMeasurandRepMode, T10BReportMode, "IEC 60870-5-101 / -104 Measurand Report Mode: Disabled, Event without time stamp, Event with time stamp, Cyclic, Background, Interrogation", "" ) \
DPOINT_DEFN( ScadaT10BSetpointRepMode, T10BControlMode, "IEC 60870-5-101 / -104 Set Point Command Mode: Disabled, Select before Execute, Direct Execute", "" ) \
DPOINT_DEFN( ScadaT10BParamCmdRepMode, T10BParamRepMode, "IEC 60870-5-101 / -104 Parameter Command Reporting Mode: Disabled, Interrogation, Enabled but not reported", "" ) \
DPOINT_DEFN( ScadaT10BIntTotRepMode, T10BCounterRepMode, "IEC 60870-5-101 / -104 Integrated Total Reporting Mode: Disabled, Event without time stamp, Event with time stamp, Interrogation without time stamp, Interrogation with time stamp", "" ) \
DPOINT_DEFN( ScadaT10BSinglePointBaseIOA, UI32, "IEC 60870-5-101 / -104 Single Point Information Base Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BDoublePointBaseIOA, UI32, "IEC 60870-5-101 / -104 Double Point Information Base Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BSingleCmdBaseIOA, UI32, "IEC 60870-5-101 / -104 Single Command Base Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BDoubleCmdBaseIOA, UI32, "IEC 60870-5-101 / -104 Double Command Base Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BMeasurandBaseIOA, UI32, "IEC 60870-5-101 / -104 Measurand Base Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BSetpointBaseIOA, UI32, "IEC 60870-5-101 / -104 Set Point Command Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BParamCmdBaseIOA, UI32, "IEC 60870-5-101 / -104 Parameter Command Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BIntTotBaseIOA, UI32, "IEC 60870-5-101 / -104 Integrated Total Information Object Address", "" ) \
DPOINT_DEFN( ScadaT10BFormatMeasurand, T10BFormatMeasurand, "IEC 60870-5-101 / -104 Measurand Format: Normalized, Scaled or Float", "" ) \
DPOINT_DEFN( ScadaT10BCounterGeneralLocalFrzPeriod, UI16, "IEC 60870-5-101 / -104 Integrated Total General Local Freeze Period (minutes). Recommended values: 1, 5, 10, 15, 30, 60 (1 hr), 180 (3 hr), 360 (6 hr), 720 (12 hr), 1440 (daily), 10080 (weekly)", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp1LocalFrzPeriod, UI16, "IEC 60870-5-101 / -104 Integrated Total Group 1 Local Freeze Period (minutes). Recommended values: 1, 5, 10, 15, 30, 60 (1 hr), 180 (3 hr), 360 (6 hr), 720 (12 hr), 1440 (daily), 10080 (weekly)", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp2LocalFrzPeriod, UI16, "IEC 60870-5-101 / -104 Integrated Total Group 2 Local Freeze Period (minutes). Recommended values: 1, 5, 10, 15, 30, 60 (1 hr), 180 (3 hr), 360 (6 hr), 720 (12 hr), 1440 (daily), 10080 (weekly)", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp3LocalFrzPeriod, UI16, "IEC 60870-5-101 / -104 Integrated Total Group 3 Local Freeze Period (minutes). Recommended values: 1, 5, 10, 15, 30, 60 (1 hr), 180 (3 hr), 360 (6 hr), 720 (12 hr), 1440 (daily), 10080 (weekly)", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp4LocalFrzPeriod, UI16, "IEC 60870-5-101 / -104 Integrated Total Group 4 Local Freeze Period (minutes). Recommended values: 1, 5, 10, 15, 30, 60 (1 hr), 180 (3 hr), 360 (6 hr), 720 (12 hr), 1440 (daily), 10080 (weekly)", "" ) \
DPOINT_DEFN( ScadaT10BCounterGeneralLocalFrzFunction, PeriodicCounterOperation, "IEC 60870-5-101 / -104 Integrated Total General Local Freeze Function", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp1LocalFrzFunction, PeriodicCounterOperation, "IEC 60870-5-101 / -104 Integrated Total Group 1 Local Freeze Function", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp2LocalFrzFunction, PeriodicCounterOperation, "IEC 60870-5-101 / -104 Integrated Total Group 2 Local Freeze Function", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp3LocalFrzFunction, PeriodicCounterOperation, "IEC 60870-5-101 / -104 Integrated Total Group 3 Local Freeze Function", "" ) \
DPOINT_DEFN( ScadaT10BCounterGrp4LocalFrzFunction, PeriodicCounterOperation, "IEC 60870-5-101 / -104 Integrated Total Group 4 Local Freeze Function", "" ) \
DPOINT_DEFN( ScadaT10BSingleInfoInputs, ScadaT10BMSP, "IEC 60870-5-101 / -104 Single Point Information Points", "" ) \
DPOINT_DEFN( ScadaT10BDoubleInfoInputs, ScadaT10BMDP, "IEC 60870-5-101 / -104 Double Point Information Points", "" ) \
DPOINT_DEFN( ScadaT10BSingleCmndOutputs, ScadaT10BCSC, "IEC 60870-5-101 / -104 Single Command Points", "" ) \
DPOINT_DEFN( ScadaT10BDoubleCmndOutputs, ScadaT10BCDC, "IEC 60870-5-101 / -104 Double Command Points", "" ) \
DPOINT_DEFN( ScadaT10BMeasuredValues, ScadaT10BMME, "IEC 60870-5-101 / -104 Measurand Points", "" ) \
DPOINT_DEFN( ScadaT10BSetpointCommand, ScadaT10BCSE, "IEC 60870-5-101 / -104 Set Point Command Points", "" ) \
DPOINT_DEFN( ScadaT10BParameterCommand, ScadaT10BPME, "IEC 60870-5-101 / -104 Parameter Command Points", "" ) \
DPOINT_DEFN( ScadaT10BIntegratedTotal, ScadaT10BMIT, "IEC 60870-5-101 / -104 Integrated Total Points", "" ) \
DPOINT_DEFN( CmsMainConnectionTimeout, UI32, "Timeout waiting for data from CMS main channel to determine disconnection.", "" ) \
DPOINT_DEFN( CmsAuxConnectionTimeout, UI32, "Timeout waiting for data from CMS aux channel to determine disconnection.", "" ) \
DPOINT_DEFN( CmsMainConnected, Bool, "Indicates whether or not the CMS is connected via the main channel.", "" ) \
DPOINT_DEFN( CmsAuxConnected, Bool, "Indicates whether or not CMS is connected via the aux channel.", "" ) \
DPOINT_DEFN( ScadaDnp3IpProtocolMode, CommsIpProtocolMode, "DNP3: IP Protocol mode", "" ) \
DPOINT_DEFN( ScadaDnp3IpValidMasterAddr, YesNo, "Whether to accept DNP3 messages from the configured Master's IP address.", "" ) \
DPOINT_DEFN( ScadaDnp3IpMasterAddr, IpAddr, "The Master's IP address. This is used for authorizing, if “Check Master IP Address” is ON, and for sending unsolicited messages.", "" ) \
DPOINT_DEFN( T10BPhaseCurrentDeadband, I16, "IEC 60870-5-101 / -104 Phase Current Deadband, sets deadband for Ia, Ib and Ic", "" ) \
DPOINT_DEFN( ScadaDnp3IpTcpMasterPort, UI16, "This is the TCP port where the controller will send all the responses.\r\nThis port shall be used by the master to listen and receive the incoming\r\nrequests from the controller.\r\n", "" ) \
DPOINT_DEFN( ScadaDnp3IpUdpSlavePort, UI16, "Local UDP port for sending and/or receiving UDP datagrams. If the mode is TCP this port is used to receive broadcast UDP messages.", "" ) \
DPOINT_DEFN( ScadaDnp3IpTimeout, UI32, "Timer to break the TCPIP connect and go back to listening if the DNP3 protocol has no traffic for the set period of time. This timer relates only to DNP3 traffic. When set to 0 it will never time out.", "" ) \
DPOINT_DEFN( ScadaDnp3IpTcpKeepAlive, UI32, "The time period for the keep-alive timer on active TCP connections.", "" ) \
DPOINT_DEFN( ScadaDnp3IpUdpMasterPortInit, UI16, "Destination UDP port for initial unsolicited null responses.", "" ) \
DPOINT_DEFN( ScadaDnp3IpUdpMasterPortInRqst, YesNo, "The port number of the incoming message will be used as the destination port number instead of the ‘UDP Master Port’ setting value.", "" ) \
DPOINT_DEFN( ScadaDnp3IpUdpMasterPort, UI16, "Destination UDP port for sending all responses other than initial unsolicited Null response if ‘UDP Master Port In Request’ is OFF.", "" ) \
DPOINT_DEFN( T101_ModemDialOut, Bool, "IEC 60870-5-101 Modem Dial Out", "" ) \
DPOINT_DEFN( T101_ModemPreDialString, Str, "IEC 60870-5-101 Modem Pre Dial String", "" ) \
DPOINT_DEFN( T101_ModemDialNumber1, Str, "IEC 60870-5-101 Modem Dial Number 1", "" ) \
DPOINT_DEFN( T101_ModemDialNumber2, Str, "IEC 60870-5-101 Modem Dial Number 2", "" ) \
DPOINT_DEFN( T101_ModemDialNumber3, Str, "IEC 60870-5-101 Modem Dial Number 3", "" ) \
DPOINT_DEFN( T101_ModemDialNumber4, Str, "IEC 60870-5-101 Modem Dial Number 4", "" ) \
DPOINT_DEFN( T101_ModemDialNumber5, Str, "IEC 60870-5-101 Modem Dial Number 5", "" ) \
DPOINT_DEFN( ScadaT10BEnableProtocol, EnDis, "IEC 60870-5-101 / -104 protocol enabled for SCADA", "" ) \
DPOINT_DEFN( ScadaT104PendingFrames, UI16, "Maximum number of unconfirmed frames that may be sent by the IEC 60870-5-104 interface before receiving an acknowledgement response. This is parameter \"k\" defined in IEC 60870-5-104.", "" ) \
DPOINT_DEFN( ScadaT10BChannelPort, CommsPort, "IEC 60870-5-101 / -104 Channel Port", "" ) \
DPOINT_DEFN( ScadaT104ConfirmAfter, UI16, "Send an acknowledgement after receiving this number of IEC 60870-5-104 frames. This is parameter \"w\" defined in IEC 60870-5-104. Recommendation: \"w\" should not exceed 2/3 of \"k\".", "" ) \
DPOINT_DEFN( T101_ModemAutoDialInterval, UI32, "Modem Auto Dial Interval time between failure to connect to one number in seconds.", "" ) \
DPOINT_DEFN( T101_ModemConnectionTimeout, UI32, "Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( T101RxCnt, UI32, "IEC 60870-5-101 RX diagnostic count. This is the count of the bytes received on the physical port used by IEC 60870-5-101. ", "" ) \
DPOINT_DEFN( T101TxCnt, UI32, "IEC 60870-5-101 count of bytes transmitted by the physical port that is used by the protocol.", "" ) \
DPOINT_DEFN( T104RxCnt, UI32, "IEC 60870-5-104 count of TCP/IP packets recieved by the IEC 60870-5-104 interface", "" ) \
DPOINT_DEFN( T104TxCnt, UI32, "IEC 60870-5-104 count of TCP/IP packets transmited by the IEC 60870-5-104 interface", "" ) \
DPOINT_DEFN( T10BPhaseVoltageDeadband, I16, "IEC 60870-5-101 / -104 Phase Voltage Deadband, sets deadband for Ua, Ub & Uc", "" ) \
DPOINT_DEFN( T10BResidualCurrentDeadband, I16, "IEC 60870-5-101 / -104 Residual Current Deadband, sets deadband for In", "" ) \
DPOINT_DEFN( T10B3PhasePowerDeadband, I16, "IEC 60870-5-101 / -104 Three Phase Power Deadband, sets deadband for: KVA, KW & KVAr", "" ) \
DPOINT_DEFN( T10BPhaseCurrentHiLimit, I16, "IEC 60870-5-101 / -104 Phase current high limit parameter. Sets high limit for Ia, Ib & Ic. An event is generated if this limit is exceeded and the points are configured to report events.", "" ) \
DPOINT_DEFN( T10BResidualCurrentHiLimit, I16, "IEC 60870-5-101 / -104 Residual current high limit parameter. Sets high limit for In. An event is generated if this limit is exceeded and the points are configured to report events.", "" ) \
DPOINT_DEFN( IdIo1SerialNumber, SerialNumber, "Identification: IO1 Number", "" ) \
DPOINT_DEFN( Curv1, TccCurve, "TccCurve1", "" ) \
DPOINT_DEFN( Curv2, TccCurve, "TccCurve2", "" ) \
DPOINT_DEFN( Curv3, TccCurve, "TccCurve3", "" ) \
DPOINT_DEFN( Curv4, TccCurve, "TccCurve4", "" ) \
DPOINT_DEFN( Curv5, TccCurve, "TccCurve5", "" ) \
DPOINT_DEFN( Curv6, TccCurve, "TccCurve6", "" ) \
DPOINT_DEFN( Curv7, TccCurve, "TccCurve7", "" ) \
DPOINT_DEFN( Curv8, TccCurve, "TccCurve8", "" ) \
DPOINT_DEFN( Curv9, TccCurve, "TccCurve9", "" ) \
DPOINT_DEFN( Curv10, TccCurve, "TccCurve10", "" ) \
DPOINT_DEFN( Curv11, TccCurve, "TccCurve11", "" ) \
DPOINT_DEFN( Curv12, TccCurve, "TccCurve12", "" ) \
DPOINT_DEFN( Curv13, TccCurve, "TccCurve13", "" ) \
DPOINT_DEFN( Curv14, TccCurve, "TccCurve14", "" ) \
DPOINT_DEFN( Curv15, TccCurve, "TccCurve15", "" ) \
DPOINT_DEFN( Curv16, TccCurve, "TccCurve16", "" ) \
DPOINT_DEFN( Curv17, TccCurve, "TccCurve17", "" ) \
DPOINT_DEFN( Curv18, TccCurve, "TccCurve18", "" ) \
DPOINT_DEFN( Curv19, TccCurve, "TccCurve19", "" ) \
DPOINT_DEFN( Curv20, TccCurve, "TccCurve20", "" ) \
DPOINT_DEFN( Curv21, TccCurve, "TccCurve21", "" ) \
DPOINT_DEFN( Curv22, TccCurve, "TccCurve22", "" ) \
DPOINT_DEFN( Curv23, TccCurve, "TccCurve23", "" ) \
DPOINT_DEFN( Curv24, TccCurve, "TccCurve24", "" ) \
DPOINT_DEFN( Curv25, TccCurve, "TccCurve25", "" ) \
DPOINT_DEFN( Curv26, TccCurve, "TccCurve26", "" ) \
DPOINT_DEFN( Curv27, TccCurve, "TccCurve27", "" ) \
DPOINT_DEFN( Curv28, TccCurve, "TccCurve28", "" ) \
DPOINT_DEFN( Curv29, TccCurve, "TccCurve29", "" ) \
DPOINT_DEFN( Curv30, TccCurve, "TccCurve30", "" ) \
DPOINT_DEFN( Curv31, TccCurve, "TccCurve31", "" ) \
DPOINT_DEFN( Curv32, TccCurve, "TccCurve32", "" ) \
DPOINT_DEFN( Curv33, TccCurve, "TccCurve33", "" ) \
DPOINT_DEFN( Curv34, TccCurve, "TccCurve34", "" ) \
DPOINT_DEFN( Curv35, TccCurve, "TccCurve35", "" ) \
DPOINT_DEFN( Curv36, TccCurve, "TccCurve36", "" ) \
DPOINT_DEFN( Curv37, TccCurve, "TccCurve37", "" ) \
DPOINT_DEFN( Curv38, TccCurve, "TccCurve38", "" ) \
DPOINT_DEFN( Curv39, TccCurve, "TccCurve39", "" ) \
DPOINT_DEFN( Curv40, TccCurve, "TccCurve40", "" ) \
DPOINT_DEFN( Curv41, TccCurve, "TccCurve41", "" ) \
DPOINT_DEFN( Curv42, TccCurve, "TccCurve42", "" ) \
DPOINT_DEFN( Curv43, TccCurve, "TccCurve43", "" ) \
DPOINT_DEFN( Curv44, TccCurve, "TccCurve44", "" ) \
DPOINT_DEFN( Curv45, TccCurve, "TccCurve45", "" ) \
DPOINT_DEFN( Curv46, TccCurve, "TccCurve46", "" ) \
DPOINT_DEFN( Curv47, TccCurve, "TccCurve47", "" ) \
DPOINT_DEFN( Curv48, TccCurve, "TccCurve48", "" ) \
DPOINT_DEFN( Curv49, TccCurve, "TccCurve49", "" ) \
DPOINT_DEFN( Curv50, TccCurve, "TccCurve50", "" ) \
DPOINT_DEFN( SimRqOpen, EnDis, "SIM Request Open.  Applies to phase A only in single-triple configurations.", "" ) \
DPOINT_DEFN( SimRqClose, EnDis, "SIM Request Close.  Applies to phase A only in single-triple configurations.", "" ) \
DPOINT_DEFN( SimLockout, EnDis, "SIM Lockout", "" ) \
DPOINT_DEFN( DEPRCATED_EvArUInit, Bool, "Event AR voltage initiation", "" ) \
DPOINT_DEFN( DERECATED_EvArUClose, Bool, "Event AR voltage close", "" ) \
DPOINT_DEFN( DEPRECATED_EvArURes, Bool, "Event AR voltage reset", "" ) \
DPOINT_DEFN( CoOpen, LogOpen, "CO Log Open", "" ) \
DPOINT_DEFN( CoClose, LogOpen, "CO Log Close", "" ) \
DPOINT_DEFN( CoOpenReq, LogOpen, "CO Log Open Req.  Applies only to phase A in single-triple configurations.", "" ) \
DPOINT_DEFN( CoCloseReq, LogOpen, "CO Log Close Req.  Applies only to phase A in single-triple configurations.", "" ) \
DPOINT_DEFN( LogFaultBufAddr1, UI32, "The fault profile buffer No1 address, See #log4", "" ) \
DPOINT_DEFN( LogFaultBufAddr2, UI32, "The fault profile buffer No2 address, See #log4", "" ) \
DPOINT_DEFN( LogFaultBufAddr3, UI32, "The fault proifle buffer No3 address, See #log4", "" ) \
DPOINT_DEFN( LogFaultBufAddr4, UI32, "The fault profile buffer No4 address, See #log4", "" ) \
DPOINT_DEFN( CanSdoReadReq, CanSdoReadReqType, "SDO request from any process other than CAN", "" ) \
DPOINT_DEFN( CanSdoReadSucc, UI8, "CAN process respond the read request with success", "" ) \
DPOINT_DEFN( CanSimTripCloseRequestStatus, UI8, "No Trip or close request active:  0\r\n                    Trip active:  3\r\n                      Trip Fail:  5\r\n                   Close active:  9\r\n                     Close Fail: 17\r\n\r\n", "" ) \
DPOINT_DEFN( CanSimSwitchPositionStatus, UI8, "open:0, closed:1, unavailable: 2.\r\nNOTE: DO NOT DEPRECATE THIS POINT. Even though CAN may no longer be using this point it is needed for backwards compatibility with CMS to allow configuration of the IEC SCADA point map.\r\nNOTE: Not avail to DNP as double points are not supported.", "" ) \
DPOINT_DEFN( CanSimSwitchManualTrip, UI8, "Normal state: 0, manual trip: 1", "" ) \
DPOINT_DEFN( CanSimSwitchConnectionStatus, UI8, "Disconnected: 1, connected:0", "" ) \
DPOINT_DEFN( CanSimSwitchLockoutStatus, UI8, "Undetermined: 0,Mechanically Unlocked: 1, Mechanically locked:  2", "" ) \
DPOINT_DEFN( CanSimOSMActuatorFaultStatus, UI8, "No fault: 0, coil open cirucit: 1, coil short circuit: 2", "" ) \
DPOINT_DEFN( CanSimOSMlimitSwitchFaultStatus, UI8, "Description:   No Fault: 0\r\n                        Open limit switch failed closed: 3\r\n                        Open limit switch failed open: 5\r\n                        Close limit switch failed closed: 9\r\n                        Close limit switch failed open: 17\r\n                        Close and Open switches both failed closed: 33\r\n                        Close and Mechanical Interlock Switch Closed:65\r\n                        \r\n", "" ) \
DPOINT_DEFN( CanSimDriverStatus, UI8, "Description:   DriverNotReady: 1\r\n                        DriverReady: 0\r\n                        CapNotConnected: 3\r\n                        Resting:  5\r\n                        Failed: 7\r\n                        CapOverVolt: 9\r\n", "" ) \
DPOINT_DEFN( CanSimTripCAPVoltage, UI16, "0 to 350 volts", "" ) \
DPOINT_DEFN( CanSimCloseCAPVoltage, UI16, "0 to 350 volts", "" ) \
DPOINT_DEFN( CanSimSIMCalibrationStatus, UI8, "SIM calibrated, not calibrated or Calibration currupted", "" ) \
DPOINT_DEFN( CanSimSwitchgearType, UI8, "Including OSM 300, OSM 200, OSM 300M", "" ) \
DPOINT_DEFN( CanSimSwitchgearCTRatio, UI16, "CT ratio from 0 to 5000", "" ) \
DPOINT_DEFN( CanSimSIMCTaCalCoef, UI16, "CTA calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTbCalCoef, UI16, "CTB calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTcCalCoef, UI16, "CTC calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTnCalCoef, UI16, "CTN calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTTempCompCoef, UI16, "CT calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTaCalCoef, UI16, "CVTa Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTbCalCoef, UI16, "CVTb Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTcCalCoef, UI16, "CVTc Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTrCalCoef, UI16, "CVTr Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTsCalCoef, UI16, "CVTs Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTtCalCoef, UI16, "CVTt Calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCVTTempCompCoef, UI16, "CVT calibration temperature compensation. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimCalibrationWriteData, UI8, "write data from memory to flash", "" ) \
DPOINT_DEFN( CanSimBatteryStatus, UI8, "Battery normal, high, low or disconnected\r\nNormal: 0 \r\n                        High: 4\r\n                        Low:  2\r\n                        Disconnected: 1\r\n", "" ) \
DPOINT_DEFN( CanSimBatteryChargerStatus, UI8, "Battery charger Status\r\nBattery Charger Off:1  (No battery connected)\r\n                       Battery Charger FLAT:2\r\n                       Battery Charger Normal:4 \r\n                       Battery Charger LowPower: 8\r\n                       Battery Charger Trickle: 16\r\n                       Battery Charger Fail:32\r\n", "" ) \
DPOINT_DEFN( CanSimLowPowerBatteryCharge, UI8, "Battery charge mode: low=1 or normal=0", "" ) \
DPOINT_DEFN( CanSimBatteryVoltage, UI16, "Battery voltage from 0.00 to 40.00", "" ) \
DPOINT_DEFN( CanSimBatteryCurrent, I16, "Battery current from -20.00 to 20.00 amps", "" ) \
DPOINT_DEFN( CanSimBatteryChargerCurrent, I16, "Battery charger current from -20.00 to 20.00 amps ", "" ) \
DPOINT_DEFN( CanSimBatteryCapacityRemaining, UI8, "0-100 represent percentage in battery capacity remaining ", "" ) \
DPOINT_DEFN( CanSimSetTotalBatteryCapacity, UI8, "set battery capacity from 10 to 50Ah", "" ) \
DPOINT_DEFN( CanSimSetBatteryType, UI8, "VRLA=0, GEL=1  Obsolete - This datapoint has been replaced by BatteryType (#8657).", "" ) \
DPOINT_DEFN( CanSimInitiateBatteryTest, UI8, "Write 1 to initiate the test. Indicates 0 when complete", "" ) \
DPOINT_DEFN( CanSimBatteryTestResult, UI8, "0: battery health, 1: battery suspect, 2: battery faulty, 3: battery test failed", "" ) \
DPOINT_DEFN( CanSimExtSupplyStatus, UI8, "0: on, 1: off, 3:overload, 5:shutdown. 9: limited", "" ) \
DPOINT_DEFN( CanSimExtSupplyCurrent, I16, "0 to 10.00 amps, ", "" ) \
DPOINT_DEFN( CanSimSetExtLoad, UI8, "On: 1, Off:0", "" ) \
DPOINT_DEFN( CanSimSetShutdownLevel, UI8, "10-50% in 1% increments", "" ) \
DPOINT_DEFN( CanSimSetShutdownTime, UI16, "0 mins to 1440 mins shutdown time. Note that 0 disables external load shutdown.", "" ) \
DPOINT_DEFN( CanSimUPSStatus, UI8, "AC & Battery OK: 0\r\nAC Off: 1\r\nBattery Off:  2\r\nPowering Down: 4\r\nEntering Standby: 8\r\nStandby: 16\r\nEntering Standby due to Battery Low Capacity: 32\r\n", "" ) \
DPOINT_DEFN( CanSimLineSupplyStatus, LineSupplyStatus, "Normal (On): 0, Disconnected (Off): 1, High: 2, Low: 3, Surge: 6", "" ) \
DPOINT_DEFN( CanSimLineSupplyRange, UI8, "Disconneted: 0, 110v: 1, 240V: 2\r\nNot used here", "" ) \
DPOINT_DEFN( CanSimUPSPowerUp, UI8, "Normal: 0, Watchdog: 1", "" ) \
DPOINT_DEFN( CanSimReadTime, UI32, "Standard Unix Time", "" ) \
DPOINT_DEFN( CanSimSetTimeDate, UI32, "Standard Unix Time.  Assigning a new unix time value will update both the controller's clock and the battery backed clock on the SIM.", "" ) \
DPOINT_DEFN( CanSimSIMTemp, I16, "Cubicle temperature in degrees Celsius from -127.00 to 128.00", "" ) \
DPOINT_DEFN( CanSimRequestWatchdogUpdate, UI8, "RequestWatchdog: 1", "" ) \
DPOINT_DEFN( CanSimRespondWatchdogRequest, UI8, "Respondwatchdog: 1", "" ) \
DPOINT_DEFN( CanSimDisableWatchdog, UI32, "Disable watchdog", "" ) \
DPOINT_DEFN( CanSimModuleResetStatus, UI8, "Module reset: 1", "" ) \
DPOINT_DEFN( CanSimResetModule, UI8, "Request for the module to be reset: 1", "" ) \
DPOINT_DEFN( CanSimShutdownRequest, UI8, "Module is request to shutdown", "" ) \
DPOINT_DEFN( CanSimModuleHealth, UI8, "Healthy: 0, fault: 1", "" ) \
DPOINT_DEFN( CanSimModuleFault, UI16, "Healthy: 00000000\r\n                        Flash:00000001\r\n                        Ram:00000010\r\n                        Temperature sensor: 00000100\r\n                         PowerSupply: 00001000\r\n                         Firmware CRC error: 00010000\r\n       ", "" ) \
DPOINT_DEFN( CanSimModuleTemp, I16, " -127 to 128 degrees", "" ) \
DPOINT_DEFN( CanSimModuleVoltage, UI16, "Provide the actual voltage supply to the module", "" ) \
DPOINT_DEFN( CanSimModuleType, UI8, "SIM: 0, Relay:1, IO1:2, IO2:3,PC:4,Other:5. The default value is 1 for the relay", "" ) \
DPOINT_DEFN( CanSimReadSerialNumber, Str, "Serial Number in YYMMNNNN\r\nYY is year\r\nMM is month\r\nNNNN is device number", "" ) \
DPOINT_DEFN( CanSimBootLoaderVers, SwVersion, "Bootloader verion number xxxx\r\nBytes[0..1]  - Major\r\nBytes[2..3]  - Minor\r\nBytes[4..5]  - Build\r\n", "" ) \
DPOINT_DEFN( IdIo2SerialNumber, SerialNumber, "Identification: IO2 Number", "" ) \
DPOINT_DEFN( CanSimReadHWVers, UI32, "Firmware version major number\r\nbytes[0..1]       Major\r\nbytes[2..3]       Minor \r\n", "" ) \
DPOINT_DEFN( CanSimReadSWVers, SwVersion, "Software version major number\r\nbytes[0..1]   Major\r\nbytes[2..3]   Minor\r\nbytes[4..5]   Build\r\nbytes[6..7]   Mode  0=Debug,    1=Release\r\n", "" ) \
DPOINT_DEFN( CanIo1InputStatus, UI8, "IO1 Inputs status (1 bit per input)", "" ) \
DPOINT_DEFN( CanIo2InputStatus, UI8, "IO2 Inputs status (1 bit per input)", "" ) \
DPOINT_DEFN( CanSimCANControllerOverrun, UI8, "Health:0, overrun:1", "" ) \
DPOINT_DEFN( CanSimCANControllerError, UI8, "Health: 0, error:1", "" ) \
DPOINT_DEFN( CanSimCANMessagebufferoverflow, UI8, "Health: 0, overflow:1", "" ) \
DPOINT_DEFN( CanIo1InputEnable, UI8, "IO 1 Inputs enable (1 bit per input)", "" ) \
DPOINT_DEFN( CanIo2InputEnable, UI8, "IO 2 Inputs enable (1 bit per input)", "" ) \
DPOINT_DEFN( CanIo1InputTrigger, UI8, "IO 1 Inputs edge or level trigger (1 bit per input)", "" ) \
DPOINT_DEFN( CanIo2InputTrigger, UI8, "IO 2 Inputs edge or level trigger (1 bit per input)", "" ) \
DPOINT_DEFN( CanSimEmergShutdownRequest, UI8, "Relay is requested to emergence shutdown", "" ) \
DPOINT_DEFN( SigPickup, Signal, "Pickup output of any of OC1+, OC2+, OC3+, OC1-, OC2-, OC3-, EF1+, EF2+, EF3+, EF1-, EF2-, EF3-, SEF+, SEF-, EFLL, OCLL, UF, UV1, UV2, UV3, PhA, PhB, PhC, PhN elements activated", "" ) \
DPOINT_DEFN( SigPickupOc1F, Signal, "Pickup output of OC1+ activated", "" ) \
DPOINT_DEFN( SigPickupOc2F, Signal, "Pickup output of OC2+ activated", "" ) \
DPOINT_DEFN( SigPickupOc3F, Signal, "Pickup output of OC3+ activated", "" ) \
DPOINT_DEFN( SigPickupOc1R, Signal, "Pickup output of OC1- activated", "" ) \
DPOINT_DEFN( SigPickupOc2R, Signal, "Pickup output of OC2- activated", "" ) \
DPOINT_DEFN( SigPickupOc3R, Signal, "Pickup output of OC3- activated", "" ) \
DPOINT_DEFN( SigPickupEf1F, Signal, "Pickup output of EF1+ activated", "" ) \
DPOINT_DEFN( SigPickupEf2F, Signal, "Pickup output of EF2+ activated", "" ) \
DPOINT_DEFN( SigPickupEf3F, Signal, "Pickup output of EF3+ activated", "" ) \
DPOINT_DEFN( SigPickupEf1R, Signal, "Pickup output of EF1- activated", "" ) \
DPOINT_DEFN( SigPickupEf2R, Signal, "Pickup output of EF2- activated", "" ) \
DPOINT_DEFN( SigPickupEf3R, Signal, "Pickup output of EF3- activated", "" ) \
DPOINT_DEFN( SigPickupSefF, Signal, "Pickup output of SEF+ activated", "" ) \
DPOINT_DEFN( SigPickupSefR, Signal, "Pickup output of SEF- activated", "" ) \
DPOINT_DEFN( SigPickupOcll, Signal, "Pickup output of OCLL3 activated (formerly OCLL)", "" ) \
DPOINT_DEFN( SigPickupEfll, Signal, "Pickup output of EFLL3 activated (formerly EFLL)", "" ) \
DPOINT_DEFN( SigPickupUv1, Signal, "Pickup output of UV1 activated", "" ) \
DPOINT_DEFN( SigPickupUv2, Signal, "Pickup output of UV2 activated", "" ) \
DPOINT_DEFN( SigPickupUv3, Signal, "Pickup output of UV3 activated", "" ) \
DPOINT_DEFN( SigPickupOv1, Signal, "Pickup output of OV1 activated", "" ) \
DPOINT_DEFN( SigPickupOv2, Signal, "Pickup output of OV2 activated", "" ) \
DPOINT_DEFN( SigPickupOf, Signal, "Pickup output of OF activated", "" ) \
DPOINT_DEFN( SigPickupUf, Signal, "Pickup output of UF activated", "" ) \
DPOINT_DEFN( SigPickupUabcGT, Signal, "Pickup output of Uabc> activated", "" ) \
DPOINT_DEFN( SigPickupUabcLT, Signal, "Pickup output of Uabc< activated", "" ) \
DPOINT_DEFN( SigPickupUrstGT, Signal, "Pickup output of Urst> activated", "" ) \
DPOINT_DEFN( SigPickupUrstLT, Signal, "Pickup output of Urst< activated", "" ) \
DPOINT_DEFN( G2_OcAt, UI32, "Grp2 OC Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G2_OcDnd, DndMode, "Grp2 _OC DND", "" ) \
DPOINT_DEFN( G2_EfAt, UI32, "Grp2 _EF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G2_EfDnd, DndMode, "Grp2 _EF DND", "" ) \
DPOINT_DEFN( G2_SefAt, UI32, "Grp2 _SEF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G2_SefDnd, DndMode, "Grp2 _SEF DND", "" ) \
DPOINT_DEFN( G2_ArOCEF_ZSCmode, EnDis, "Grp2 1AutoReclose ZSC mod", "" ) \
DPOINT_DEFN( G2_VrcEnable, EnDis, "Grp2 AutoReclose VRC mode", "" ) \
DPOINT_DEFN( CanDataRequestIo1, CanObjType, "request data from IO 1 device on the CAN bus", "" ) \
DPOINT_DEFN( G2_ArOCEF_Trec1, UI32, "Grp2 AutoReclose Reclose Trip 1", "" ) \
DPOINT_DEFN( G2_ArOCEF_Trec2, UI32, "Grp2 AutoReclose Reclose Trip 2", "" ) \
DPOINT_DEFN( G2_ArOCEF_Trec3, UI32, "Grp2 AutoReclose Reclose Trip 3", "" ) \
DPOINT_DEFN( G2_ResetTime, UI32, "Grp2 Reset time", "" ) \
DPOINT_DEFN( G2_TtaMode, TtaMode, "Grp2  Transient additional time mode", "" ) \
DPOINT_DEFN( G2_TtaTime, UI32, "Grp2 Transient additional time", "" ) \
DPOINT_DEFN( G2_SstOcForward, UI8, "Grp2  OC Single shot to trip.", "" ) \
DPOINT_DEFN( G2_EftEnable, EnDis, "Grp2 En/Disables the excess fast trip engine.", "" ) \
DPOINT_DEFN( G2_ClpClm, UI32, "Grp2 CLP multiplier", "" ) \
DPOINT_DEFN( G2_ClpTcl, UI32, "Grp2  CLP load time", "" ) \
DPOINT_DEFN( G2_ClpTrec, UI32, "Grp2  CLP recognition time", "" ) \
DPOINT_DEFN( G2_IrrIrm, UI32, "Grp2  IRR multiplier", "" ) \
DPOINT_DEFN( G2_IrrTir, UI32, "Grp2  IRR restraint time", "" ) \
DPOINT_DEFN( G2_VrcMode, VrcMode, "Grp2  VRC mode", "" ) \
DPOINT_DEFN( G2_VrcUMmin, UI32, "Grp2  VRC voltage multiplier", "" ) \
DPOINT_DEFN( G2_AbrMode, EnDis, "Grp2  ABR mode", "" ) \
DPOINT_DEFN( G2_OC1F_Ip, UI32, "Grp2 OC1+ Pickup current", "" ) \
DPOINT_DEFN( G2_OC1F_Tcc, UI16, "Grp2 OC1+ TCC Type", "" ) \
DPOINT_DEFN( G2_OC1F_TDtMin, UI32, "Grp2 OC1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_OC1F_TDtRes, UI32, "Grp2 OC1+ DT reset time", "" ) \
DPOINT_DEFN( G2_OC1F_Tm, UI32, "Grp2 OC1+ Time multiplier", "" ) \
DPOINT_DEFN( G2_OC1F_Imin, UI32, "Grp2 OC1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OC1F_Tmin, UI32, "Grp2 OC1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OC1F_Tmax, UI32, "Grp2 OC1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OC1F_Ta, UI32, "Grp2 OC1+ Additional time", "" ) \
DPOINT_DEFN( CanDataRequestIo2, CanObjType, "request data from IO 2 device on the CAN bus", "" ) \
DPOINT_DEFN( G2_OC1F_ImaxEn, EnDis, "Grp2 OC1+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_OC1F_Imax, UI32, "Grp2 OC1+ Max current multiplier", "" ) \
DPOINT_DEFN( G2_OC1F_DirEn, EnDis, "Grp2 OC1+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC1F_Tr1, TripMode, "Grp2 OC1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC1F_Tr2, TripMode, "Grp2 OC1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC1F_Tr3, TripMode, "Grp2 OC1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC1F_Tr4, TripMode, "Grp2 OC1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OC1F_TccUD, TccCurve, "Grp2 OC1+ User defined curve", "" ) \
DPOINT_DEFN( G2_OC2F_Ip, UI32, "Grp2 OC2+ Pickup current", "" ) \
DPOINT_DEFN( G2_OC2F_Tcc, UI16, "Grp2 OC2+ TCC Type", "" ) \
DPOINT_DEFN( G2_OC2F_TDtMin, UI32, "Grp2 OC2+ DT min tripping time", "" ) \
DPOINT_DEFN( G2_OC2F_TDtRes, UI32, "Grp2 OC2+ DT reset time", "" ) \
DPOINT_DEFN( G2_OC2F_Tm, UI32, "Grp2 OC2+ Time multiplier", "" ) \
DPOINT_DEFN( G2_OC2F_Imin, UI32, "Grp2 OC2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OC2F_Tmin, UI32, "Grp2 OC2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OC2F_Tmax, UI32, "Grp2 OC2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OC2F_Ta, UI32, "Grp2 OC2+ Additional time", "" ) \
DPOINT_DEFN( G2_EftTripCount, UI8, "Grp2 Applicable to EFT mode: The threshould count of the number of protection trips before disabling fast trips.", "" ) \
DPOINT_DEFN( G2_OC2F_ImaxEn, EnDis, "Grp2 OC2+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_OC2F_Imax, UI32, "Grp2 OC2+ Max current multiplier", "" ) \
DPOINT_DEFN( G2_OC2F_DirEn, EnDis, "Grp2 OC2+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC2F_Tr1, TripMode, "Grp2 OC2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC2F_Tr2, TripMode, "Grp2 OC2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC2F_Tr3, TripMode, "Grp2 OC2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC2F_Tr4, TripMode, "Grp2 OC2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OC2F_TccUD, TccCurve, "Grp2 OC2+ User defined curve", "" ) \
DPOINT_DEFN( G2_OC3F_Ip, UI32, "Grp2 OC3+ Pickup current", "" ) \
DPOINT_DEFN( G2_OC3F_TDtMin, UI32, "Grp2 OC3+ DT tripping time", "" ) \
DPOINT_DEFN( G2_OC3F_TDtRes, UI32, "Grp2 OC3+ DT reset time", "" ) \
DPOINT_DEFN( G2_OC3F_DirEn, EnDis, "Grp2 OC3+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC3F_Tr1, TripMode, "Grp2 OC3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC3F_Tr2, TripMode, "Grp2 OC3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC3F_Tr3, TripMode, "Grp2 OC3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC3F_Tr4, TripMode, "Grp2 OC3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OC1R_Ip, UI32, "Grp2 OC1- Pickup current", "" ) \
DPOINT_DEFN( G2_OC1R_Tcc, UI16, "Grp2 OC1- TCC Type", "" ) \
DPOINT_DEFN( G2_OC1R_TDtMin, UI32, "Grp2 OC1- DT min tripping time", "" ) \
DPOINT_DEFN( G2_OC1R_TDtRes, UI32, "Grp2 OC1- DT reset time", "" ) \
DPOINT_DEFN( G2_OC1R_Tm, UI32, "Grp2 OC1- Time multiplier", "" ) \
DPOINT_DEFN( G2_OC1R_Imin, UI32, "Grp2 OC1- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OC1R_Tmin, UI32, "Grp2 OC1- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OC1R_Tmax, UI32, "Grp2 OC1- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OC1R_Ta, UI32, "Grp2 OC1- Additional time", "" ) \
DPOINT_DEFN( G2_EftTripWindow, UI8, "Grp2 Applicable to EFT mode: The period window used when monitoring the number of protection trips.", "" ) \
DPOINT_DEFN( G2_OC1R_ImaxEn, EnDis, "Grp2 OC1- Enable Max mode", "" ) \
DPOINT_DEFN( G2_OC1R_Imax, UI32, "Grp2 OC1- Max current multiplier", "" ) \
DPOINT_DEFN( G2_OC1R_DirEn, EnDis, "Grp2 OC1- Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC1R_Tr1, TripMode, "Grp2 OC1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC1R_Tr2, TripMode, "Grp2 OC1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC1R_Tr3, TripMode, "Grp2 OC1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC1R_Tr4, TripMode, "Grp2 OC1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OC1R_TccUD, TccCurve, "Grp2 OC1- User defined curve", "" ) \
DPOINT_DEFN( G2_OC2R_Ip, UI32, "Grp2 OC2- Pickup current", "" ) \
DPOINT_DEFN( G2_OC2R_Tcc, UI16, "Grp2 OC2- TCC Type", "" ) \
DPOINT_DEFN( G2_OC2R_TDtMin, UI32, "Grp2 OC2- DT min tripping time", "" ) \
DPOINT_DEFN( G2_OC2R_TDtRes, UI32, "Grp2 OC2- DT reset time", "" ) \
DPOINT_DEFN( G2_OC2R_Tm, UI32, "Grp2 OC2- Time multiplier", "" ) \
DPOINT_DEFN( G2_OC2R_Imin, UI32, "Grp2 OC2- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OC2R_Tmin, UI32, "Grp2 OC2- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OC2R_Tmax, UI32, "Grp2 OC2- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OC2R_Ta, UI32, "Grp2 OC2- Additional time", "" ) \
DPOINT_DEFN( G2_OC2R_ImaxEn, EnDis, "Grp2 OC2- Enable Max mode", "" ) \
DPOINT_DEFN( G2_OC2R_Imax, UI32, "Grp2 OC2- Max current multiplier", "" ) \
DPOINT_DEFN( G2_OC2R_DirEn, EnDis, "Grp2 OC2- Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC2R_Tr1, TripMode, "Grp2 OC2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC2R_Tr2, TripMode, "Grp2 OC2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC2R_Tr3, TripMode, "Grp2 OC2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC2R_Tr4, TripMode, "Grp2 OC2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OC2R_TccUD, TccCurve, "Grp2 OC2- User defined curve", "" ) \
DPOINT_DEFN( G2_OC3R_Ip, UI32, "Grp2 OC3- Pickup current", "" ) \
DPOINT_DEFN( G2_OC3R_TDtMin, UI32, "Grp2 OC3- DT tripping time", "" ) \
DPOINT_DEFN( G2_OC3R_TDtRes, UI32, "Grp2 OC3- DT reset time", "" ) \
DPOINT_DEFN( G2_OC3R_DirEn, EnDis, "Grp2 OC3- Enable directional protection", "" ) \
DPOINT_DEFN( G2_OC3R_Tr1, TripMode, "Grp2 OC3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_OC3R_Tr2, TripMode, "Grp2 OC3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_OC3R_Tr3, TripMode, "Grp2 OC3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_OC3R_Tr4, TripMode, "Grp2 OC3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF1F_Ip, UI32, "Grp2 EF1+ Pickup current", "" ) \
DPOINT_DEFN( G2_EF1F_Tcc, UI16, "Grp2 EF1+ TCC Type", "" ) \
DPOINT_DEFN( G2_EF1F_TDtMin, UI32, "Grp2 EF1+ DT min tripping time", "" ) \
DPOINT_DEFN( G2_EF1F_TDtRes, UI32, "Grp2 EF1+ DT reset time", "" ) \
DPOINT_DEFN( G2_EF1F_Tm, UI32, "Grp2 EF1+ Time multiplier", "" ) \
DPOINT_DEFN( G2_EF1F_Imin, UI32, "Grp2 EF1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EF1F_Tmin, UI32, "Grp2 EF1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EF1F_Tmax, UI32, "Grp2 EF1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EF1F_Ta, UI32, "Grp2 EF1+ Additional time", "" ) \
DPOINT_DEFN( G2_DEPRECATED_G1EF1F_Tres, UI32, "Grp2 EF1+ Reset time", "" ) \
DPOINT_DEFN( G2_EF1F_ImaxEn, EnDis, "Grp2 EF1+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_EF1F_Imax, UI32, "Grp2 EF1+ Max current multiplier", "" ) \
DPOINT_DEFN( G2_EF1F_DirEn, EnDis, "Grp2 EF1+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF1F_Tr1, TripMode, "Grp2 EF1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF1F_Tr2, TripMode, "Grp2 EF1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF1F_Tr3, TripMode, "Grp2 EF1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF1F_Tr4, TripMode, "Grp2 EF1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF1F_TccUD, TccCurve, "Grp2 EF1+ User defined curve", "" ) \
DPOINT_DEFN( G2_EF2F_Ip, UI32, "Grp2 EF2+ Pickup current", "" ) \
DPOINT_DEFN( G2_EF2F_Tcc, UI16, "Grp2 EF2+ TCC Type", "" ) \
DPOINT_DEFN( G2_EF2F_TDtMin, UI32, "Grp2 EF2+ DT min tripping time", "" ) \
DPOINT_DEFN( G2_EF2F_TDtRes, UI32, "Grp2 EF2+ DT reset time", "" ) \
DPOINT_DEFN( G2_EF2F_Tm, UI32, "Grp2 EF2+ Time multiplier", "" ) \
DPOINT_DEFN( G2_EF2F_Imin, UI32, "Grp2 EF2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EF2F_Tmin, UI32, "Grp2 EF2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EF2F_Tmax, UI32, "Grp2 EF2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EF2F_Ta, UI32, "Grp2 EF2+ Additional time", "" ) \
DPOINT_DEFN( G2_DEPRECATED_G1EF2F_Tres, UI32, "Grp2 EF2+ Reset time", "" ) \
DPOINT_DEFN( G2_EF2F_ImaxEn, EnDis, "Grp2 EF2+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_EF2F_Imax, UI32, "Grp2 EF2+ Max mode", "" ) \
DPOINT_DEFN( G2_EF2F_DirEn, EnDis, "Grp2 EF2+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF2F_Tr1, TripMode, "Grp2 EF2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF2F_Tr2, TripMode, "Grp2 EF2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF2F_Tr3, TripMode, "Grp2 EF2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF2F_Tr4, TripMode, "Grp2 EF2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF2F_TccUD, TccCurve, "Grp2 EF2+ User defined curve", "" ) \
DPOINT_DEFN( G2_EF3F_Ip, UI32, "Grp2 EF3+ Pickup current", "" ) \
DPOINT_DEFN( G2_EF3F_TDtMin, UI32, "Grp2 EF3+ DT tripping time", "" ) \
DPOINT_DEFN( G2_EF3F_TDtRes, UI32, "Grp2 EF3+ DT reset time", "" ) \
DPOINT_DEFN( G2_EF3F_DirEn, EnDis, "Grp2 EF3+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF3F_Tr1, TripMode, "Grp2 EF3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF3F_Tr2, TripMode, "Grp2 EF3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF3F_Tr3, TripMode, "Grp2 EF3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF3F_Tr4, TripMode, "Grp2 EF3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF1R_Ip, UI32, "Grp2 EF1- Pickup current", "" ) \
DPOINT_DEFN( G2_EF1R_Tcc, UI16, "Grp2 EF1- TCC Type", "" ) \
DPOINT_DEFN( G2_EF1R_TDtMin, UI32, "Grp2 EF1- DT min tripping time", "" ) \
DPOINT_DEFN( G2_EF1R_TDtRes, UI32, "Grp2 EF1- DT reset time", "" ) \
DPOINT_DEFN( G2_EF1R_Tm, UI32, "Grp2 EF1- Time multiplier", "" ) \
DPOINT_DEFN( G2_EF1R_Imin, UI32, "Grp2 EF1- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EF1R_Tmin, UI32, "Grp2 EF1- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EF1R_Tmax, UI32, "Grp2 EF1- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EF1R_Ta, UI32, "Grp2 EF1- Additional time", "" ) \
DPOINT_DEFN( G2_DEPRECATED_G1EF1R_Tres, UI32, "Grp2 EF1- Reset time", "" ) \
DPOINT_DEFN( G2_EF1R_ImaxEn, EnDis, "Grp2 EF1- Enable Max mode", "" ) \
DPOINT_DEFN( G2_EF1R_Imax, UI32, "Grp2 EF1- Max current multiplier", "" ) \
DPOINT_DEFN( G2_EF1R_DirEn, EnDis, "Grp2 EF1- Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF1R_Tr1, TripMode, "Grp2 EF1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF1R_Tr2, TripMode, "Grp2 EF1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF1R_Tr3, TripMode, "Grp2 EF1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF1R_Tr4, TripMode, "Grp2 EF1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF1R_TccUD, TccCurve, "Grp2 EF1- User defined curve", "" ) \
DPOINT_DEFN( G2_EF2R_Ip, UI32, "Grp2 EF2- Pickup current", "" ) \
DPOINT_DEFN( G2_EF2R_Tcc, UI16, "Grp2 EF2- TCC Type", "" ) \
DPOINT_DEFN( G2_EF2R_TDtMin, UI32, "Grp2 EF2- DT min tripping time", "" ) \
DPOINT_DEFN( G2_EF2R_TDtRes, UI32, "Grp2 EF2- DT reset time", "" ) \
DPOINT_DEFN( G2_EF2R_Tm, UI32, "Grp2 EF2- Time multiplier", "" ) \
DPOINT_DEFN( G2_EF2R_Imin, UI32, "Grp2 EF2- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EF2R_Tmin, UI32, "Grp2 EF2- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EF2R_Tmax, UI32, "Grp2 EF2- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EF2R_Ta, UI32, "Grp2 EF2- Additional time", "" ) \
DPOINT_DEFN( G2_EF2R_ImaxEn, EnDis, "Grp2 EF2- Enable Max mode", "" ) \
DPOINT_DEFN( G2_EF2R_Imax, UI32, "Grp2 EF2- Max current multiplier", "" ) \
DPOINT_DEFN( G2_EF2R_DirEn, EnDis, "Grp2 EF2- Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF2R_Tr1, TripMode, "Grp2 EF2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF2R_Tr2, TripMode, "Grp2 EF2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF2R_Tr3, TripMode, "Grp2 EF2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF2R_Tr4, TripMode, "Grp2 EF2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_EF2R_TccUD, TccCurve, "Grp2 EF2- User defined curve", "" ) \
DPOINT_DEFN( G2_EF3R_Ip, UI32, "Grp2 EF3- Pickup current", "" ) \
DPOINT_DEFN( G2_EF3R_TDtMin, UI32, "Grp2 EF3- DT tripping time", "" ) \
DPOINT_DEFN( G2_EF3R_TDtRes, UI32, "Grp2 EF3- DT reset time", "" ) \
DPOINT_DEFN( G2_EF3R_DirEn, EnDis, "Grp2 EF3- Enable directional protection", "" ) \
DPOINT_DEFN( G2_EF3R_Tr1, TripMode, "Grp2 EF3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_EF3R_Tr2, TripMode, "Grp2 EF3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_EF3R_Tr3, TripMode, "Grp2 EF3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_EF3R_Tr4, TripMode, "Grp2 EF3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_SEFF_Ip, UI32, "Grp2 SEF+ Pickup current", "" ) \
DPOINT_DEFN( G2_SEFF_TDtMin, UI32, "Grp2 SEF+ DT tripping time", "" ) \
DPOINT_DEFN( G2_SEFF_TDtRes, UI32, "Grp2 SEF+ DT reset time", "" ) \
DPOINT_DEFN( G2_SEFF_DirEn, EnDis, "Grp2 SEF+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_SEFF_Tr1, TripMode, "Grp2 SEF+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_SEFF_Tr2, TripMode, "Grp2 SEF+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_SEFF_Tr3, TripMode, "Grp2 SEF+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_SEFF_Tr4, TripMode, "Grp2 SEF+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_SEFR_Ip, UI32, "Grp2 SEF- Pickup current", "" ) \
DPOINT_DEFN( G2_SEFR_TDtMin, UI32, "Grp2 SEF- DT tripping time", "" ) \
DPOINT_DEFN( G2_SEFR_TDtRes, UI32, "Grp2 SEF- DT reset time", "" ) \
DPOINT_DEFN( G2_SEFR_DirEn, EnDis, "Grp2 SEF- Enable directional protection", "" ) \
DPOINT_DEFN( G2_SEFR_Tr1, TripMode, "Grp2 SEF- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_SEFR_Tr2, TripMode, "Grp2 SEF- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_SEFR_Tr3, TripMode, "Grp2 SEF- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_SEFR_Tr4, TripMode, "Grp2 SEF- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_OcLl_Ip, UI32, "Grp2 OC3 LL Pickup current", "" ) \
DPOINT_DEFN( G2_OcLl_TDtMin, UI32, "Grp2 OC LL3 DT tripping time", "" ) \
DPOINT_DEFN( G2_OcLl_TDtRes, UI32, "Grp2 OC LL3 DT reset time", "" ) \
DPOINT_DEFN( G2_EfLl_Ip, UI32, "Grp2 EF LL3 Pickup current", "" ) \
DPOINT_DEFN( G2_EfLl_TDtMin, UI32, "Grp2 EF LL3 DT tripping time", "" ) \
DPOINT_DEFN( G2_EfLl_TDtRes, UI32, "Grp2 EF LL3 DT reset time", "" ) \
DPOINT_DEFN( G2_Uv1_Um, UI32, "Grp2  UV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Uv1_TDtMin, UI32, "Grp2  UV1 DT tripping time", "" ) \
DPOINT_DEFN( G2_Uv1_TDtRes, UI32, "Grp2  UV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Uv1_Trm, TripMode, "Grp2 1 UV1 Trip mod", "" ) \
DPOINT_DEFN( G2_Uv2_Um, UI32, "Grp2  UV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Uv2_TDtMin, UI32, "Grp2  UV2 DT tripping time", "" ) \
DPOINT_DEFN( G2_Uv2_TDtRes, UI32, "Grp2  UV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Uv2_Trm, TripMode, "Grp2 1 UV2 Trip mod", "" ) \
DPOINT_DEFN( G2_Uv3_TDtMin, UI32, "Grp2 UV3 DT tripping time", "" ) \
DPOINT_DEFN( G2_Uv3_TDtRes, UI32, "Grp2  UV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Uv3_Trm, TripMode, "Grp2 1 UV3 Trip mod", "" ) \
DPOINT_DEFN( G2_Ov1_Um, UI32, "Grp2  OV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Ov1_TDtMin, UI32, "Grp2  OV1 DT tripping time", "" ) \
DPOINT_DEFN( G2_Ov1_TDtRes, UI32, "Grp2  OV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Ov1_Trm, TripMode, "Grp2 1 OV1 Trip mod", "" ) \
DPOINT_DEFN( G2_Ov2_Um, UI32, "Grp2  OV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Ov2_TDtMin, UI32, "Grp2  OV2 DT tripping time", "" ) \
DPOINT_DEFN( G2_Ov2_TDtRes, UI32, "Grp2  OV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Ov2_Trm, TripMode, "Grp2 1 OV2 Trip mod", "" ) \
DPOINT_DEFN( G2_Uf_Fp, UI32, "Grp2  UF Pickup frequency", "" ) \
DPOINT_DEFN( G2_Uf_TDtMin, UI32, "Grp2  UF DT tripping time", "" ) \
DPOINT_DEFN( G2_Uf_TDtRes, UI32, "Grp2  UF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Uf_Trm, TripModeDLA, "Grp2  UF Trip mode", "" ) \
DPOINT_DEFN( G2_Of_Fp, UI32, "Grp2 OF Pickup frequency", "" ) \
DPOINT_DEFN( G2_Of_TDtMin, UI32, "Grp2  OF DT tripping time", "" ) \
DPOINT_DEFN( G2_Of_TDtRes, UI32, "Grp2  OF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Of_Trm, TripModeDLA, "Grp2  OF Trip mode", "" ) \
DPOINT_DEFN( G2_DEPRECATED_OC1F_ImaxAbs, UI32, "Grp2 OC1+ Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_OC2F_ImaxAbs, UI32, "Grp2 OC2+ Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_OC1R_ImaxAbs, UI32, "Grp2 OC1- Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_OC2R_ImaxAbs, UI32, "Grp2 OC2- Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_EF1F_ImaxAbs, UI32, "Grp2 EF1+ Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_EF2F_ImaxAbs, UI32, "Grp2 EF2+ Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_EF1R_ImaxAbs, UI32, "Grp2 EF1- Max abs current", "" ) \
DPOINT_DEFN( G2_DEPRECATED_EF2R_ImaxAbs, UI32, "Grp2 EF2- Max abs current", "" ) \
DPOINT_DEFN( G2_SstEfForward, UI8, "Grp2 EF Single shot to trip", "" ) \
DPOINT_DEFN( G2_SstSefForward, UI8, "Grp2 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G2_AbrTrest, UI32, "Grp2 The ABR restoration time in s.", "" ) \
DPOINT_DEFN( G2_AutoOpenMode, AutoOpenMode, "Grp2 AutoOpen method: Disabled/Timer/Power Flow", "" ) \
DPOINT_DEFN( G2_AutoOpenTime, UI16, "Grp2 The time in minutes to wait before auto open after a close by ABR", "" ) \
DPOINT_DEFN( G2_AutoOpenOpns, UI8, "Grp2 The number of times this element will allow ABR closes before locking out.", "" ) \
DPOINT_DEFN( G2_SstOcReverse, UI8, "Grp2 ", "" ) \
DPOINT_DEFN( G2_SstEfReverse, UI8, "Grp2 Grp 1 EF Single shot to trip", "" ) \
DPOINT_DEFN( G2_SstSefReverse, UI8, "Grp2 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G2_ArUVOV_Trec, UI32, "Grp2 Under / Over voltage auto reclose time in seconds", "" ) \
DPOINT_DEFN( G2_GrpName, Str, "Grp2 _Group Name", "" ) \
DPOINT_DEFN( G2_GrpDes, Str, "Grp2 G1_Grp Description Group description", "" ) \
DPOINT_DEFN( CanIo1InputRecognitionTime, CanIoInputRecTimes, "IO1 Input recognition times: 1 byte per input. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2InputRecognitionTime, CanIoInputRecTimes, "IO2 Input recognition times: 1 byte per input. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputEnable, UI8, "IO1 Output enable/disable (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo2OutputEnable, UI8, "IO2 Output enable/disable (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo1OutputSet, UI8, "IO1 Output setting (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo2OutputSet, UI8, "IO2 Output setting (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo1OutputPulseEnable, UI8, "IO1 Output pulse enable/disable (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo2OutputPulseEnable, UI8, "IO2 Output pulse enable/disable (1 bit per output)", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime1, UI16, "IO1 Output 1 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime2, UI16, "IO1 Output 2 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime3, UI16, "IO1 Output 3 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime4, UI16, "IO1 Output 4 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime5, UI16, "IO1 Output 5 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime6, UI16, "IO1 Output 6 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime7, UI16, "IO1 Output 7 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo1OutputPulseTime8, UI16, "IO1 Output 8 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime1, UI16, "IO2 Output 1 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime2, UI16, "IO2 Output 2 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime3, UI16, "IO2 Output 3 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime4, UI16, "IO2 Output 4 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime5, UI16, "IO2 Output 5 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime6, UI16, "IO2 Output 6 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime7, UI16, "IO2 Output 7 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( CanIo2OutputPulseTime8, UI16, "IO2 Output 8 pulse time. Units of 10ms.", "" ) \
DPOINT_DEFN( UsbABCShutdownEnable, EnDis, "Usb ABC ports shutdown enable", "" ) \
DPOINT_DEFN( ScadaDnp3RqstCnt, UI32, "A simple counter of the number of requests received from the SCADA master.  ", "" ) \
DPOINT_DEFN( ScadaDnp3IpUnathIpAddr, IpAddr, "The IP address of the most recent unauthorised attempt to establish a TCP / UDP connection.", "" ) \
DPOINT_DEFN( SigUSBHostOff, Signal, "USB host power off", "" ) \
DPOINT_DEFN( CanIo1ModuleType, UI8, "Module type", "" ) \
DPOINT_DEFN( CanIo2ModuleType, UI8, "Module type", "" ) \
DPOINT_DEFN( CanIo1ModuleHealth, UI8, "Healthy: 0, fault: 1", "" ) \
DPOINT_DEFN( CanIo2ModuleHealth, UI8, "Healthy: 0, fault: 1", "" ) \
DPOINT_DEFN( CanIo1ModuleFault, UI16, "Healthy: 00000000\r\nFlash:00000001\r\nRam:00000010\r\nTemperature sensor: 00000100\r\nPowerSupply: 00001000\r\nFirmware CRC error: 00010000\r\n", "" ) \
DPOINT_DEFN( CanIo2ModuleFault, UI16, "Healthy: 00000000\r\nFlash:00000001\r\nRam:00000010\r\nTemperature sensor: 00000100\r\nPowerSupply: 00001000\r\nFirmware CRC error: 00010000\r\n", "" ) \
DPOINT_DEFN( CanIo1SerialNumber, Arr8, "Serial Number in YYMMNNNN\r\nYY is year\r\nMM is month\r\nNNNN is device number\r\n", "" ) \
DPOINT_DEFN( CanIo2SerialNumber, Arr8, "Serial Number in YYMMNNNN\r\nYY is year\r\nMM is month\r\nNNNN is device number\r\n", "" ) \
DPOINT_DEFN( CanIo1PartAndSupplierCode, Str, "IO1 Part and Supplier Code", "" ) \
DPOINT_DEFN( CanIo2PartAndSupplierCode, Str, "IO2 Part and Supplier Code", "" ) \
DPOINT_DEFN( CanIo1Test, UI8, "IO1 Test off:0, Test1:1, Test2:2, Test3:3", "" ) \
DPOINT_DEFN( CanIo2Test, UI8, "IO2 Test off:0, Test1:1, Test2:2, Test3:3", "" ) \
DPOINT_DEFN( IO1Number, ConfigIOCardNum, "IO1 assigned number: indicates the IO number assigned to IO card with the serial number stored in the IdIo1SerialNumber datapoint.", "" ) \
DPOINT_DEFN( IO2Number, ConfigIOCardNum, "IO2 assigned number: indicates the IO number assigned to IO card with the serial number stored in the IdIo2SerialNumber datapoint.", "" ) \
DPOINT_DEFN( IoStatusILocCh1, IoStatus, "Input status (used instead of IoSettingILocCh since DB 7)", "" ) \
DPOINT_DEFN( IoStatusILocCh2, IoStatus, "Input status (used instead of IoSettingILocCh since DB 7)", "" ) \
DPOINT_DEFN( IoStatusILocCh3, IoStatus, "Input status (used instead of IoSettingILocCh since DB 7)", "" ) \
DPOINT_DEFN( CanIo1ReadHwVers, UI32, "Version number\r\nbytes[0..1]       Major\r\nbytes[2..3]       Minor ", "" ) \
DPOINT_DEFN( CanIo2ReadHwVers, UI32, "Version number\r\nbytes[0..1]       Major\r\nbytes[2..3]       Minor ", "" ) \
DPOINT_DEFN( CanIo1ReadSwVers, SwVersion, "Software version major number\r\nbytes[0..1]   Major\r\nbytes[2..3]   Minor\r\nbytes[4..5]   Build\r\nbytes[6..7]   Mode  0=Debug,    1=Release", "" ) \
DPOINT_DEFN( CanIo2ReadSwVers, SwVersion, "Software version major number\r\nbytes[0..1]   Major\r\nbytes[2..3]   Minor\r\nbytes[4..5]   Build\r\nbytes[6..7]   Mode  0=Debug,    1=Release", "" ) \
DPOINT_DEFN( IdIO1SoftwareVer, Str, "IO1 software version", "" ) \
DPOINT_DEFN( IdIO2SoftwareVer, Str, "IO2 software version", "" ) \
DPOINT_DEFN( IdIO1HardwareVer, Str, "IO1 hardware version", "" ) \
DPOINT_DEFN( IdIO2HardwareVer, Str, "IO2 hardware version", "" ) \
DPOINT_DEFN( CanIoAddrReq, Arr8, "Address request with serial code YYMMNNNN", "" ) \
DPOINT_DEFN( CanIo1ResetModule, UI8, "Request for the module to be reset: 1", "" ) \
DPOINT_DEFN( CanIo2ResetModule, UI8, "Request for the module to be reset: 1", "" ) \
DPOINT_DEFN( SwitchgearType, SwitchgearTypes, "The current switchgear type.", "" ) \
DPOINT_DEFN( IoSettingIo1InputEnable, UI8, "Bitwise input enable", "" ) \
DPOINT_DEFN( IoSettingIo1OutputEnable, UI8, "Bitwise output enable", "" ) \
DPOINT_DEFN( IoSettingIo2InputEnable, UI8, "Bitwise input enable", "" ) \
DPOINT_DEFN( IoSettingIo2OutputEnable, UI8, "Bitwise output enable", "" ) \
DPOINT_DEFN( IoSettingILocEnable, UI8, "Bitwise input enable", "" ) \
DPOINT_DEFN( SigLockoutProt, Signal, "This signal will be set when the switch has been opened to Lockout by any protection source.", "" ) \
DPOINT_DEFN( IoSettingILocTrec1, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingILocTrec2, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingILocTrec3, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh1, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh2, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh3, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh4, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh5, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh6, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh7, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo1InTrecCh8, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh1, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh2, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh3, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh4, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh5, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh6, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh7, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( IoSettingIo2InTrecCh8, UI8, "Input recognition time. Units of 10ms", "" ) \
DPOINT_DEFN( LogicVAR1, Signal, "Logic VAR1", "" ) \
DPOINT_DEFN( LogicVAR2, Signal, "Logic VAR2", "" ) \
DPOINT_DEFN( LogicVAR3, Signal, "Logic VAR3", "" ) \
DPOINT_DEFN( LogicVAR4, Signal, "Logic VAR4", "" ) \
DPOINT_DEFN( LogicVAR5, Signal, "Logic VAR5", "" ) \
DPOINT_DEFN( LogicVAR6, Signal, "Logic VAR6", "" ) \
DPOINT_DEFN( LogicVAR7, Signal, "Logic VAR7", "" ) \
DPOINT_DEFN( LogicVAR8, Signal, "Logic VAR8", "" ) \
DPOINT_DEFN( LogicVAR9, Signal, "Logic VAR9", "" ) \
DPOINT_DEFN( LogicVAR10, Signal, "Logic VAR10", "" ) \
DPOINT_DEFN( LogicVAR11, Signal, "Logic VAR11", "" ) \
DPOINT_DEFN( LogicVAR12, Signal, "Logic VAR12", "" ) \
DPOINT_DEFN( LogicVAR13, Signal, "Logic VAR13", "" ) \
DPOINT_DEFN( LogicVAR14, Signal, "Logic VAR14", "" ) \
DPOINT_DEFN( LogicVAR15, Signal, "Logic VAR15", "" ) \
DPOINT_DEFN( LogicVAR16, Signal, "Logic VAR16", "" ) \
DPOINT_DEFN( SigCtrlLoSeq2On, Signal, "If set forces the 2nd trip in a fault sequence to go to lockout.", "" ) \
DPOINT_DEFN( SigCtrlLoSeq3On, Signal, "If set forces the 3rd trip in a fault sequence to go to lockout.", "" ) \
DPOINT_DEFN( ActLoSeqMode, LoSeqMode, "The maximum number of trips before lockout.  This is driven by the SigCtrlLoSeqXOn signals.", "" ) \
DPOINT_DEFN( IoProcessOpMode, LocalRemote, "The operating mode that the io process operates under. This is dynamic, switched according to local input and GPIO activity.", "" ) \
DPOINT_DEFN( SigCtrlSSMOn, Signal, "Short Sequence Mode. When TRUE only the first and last trips in the sequence are active.", "" ) \
DPOINT_DEFN( SigCtrlFTDisOn, Signal, "When TRUE the 2nd OC/EF trip engine is disabled.", "" ) \
DPOINT_DEFN( p2pRemoteLanAddr, IpAddr, "p2p comm remote LAN IPv4 address", "" ) \
DPOINT_DEFN( p2pCommUpdateRates, UI32, "p2p comm update rates", "" ) \
DPOINT_DEFN( p2pCommEnable, EnDis, "p2p comm enable/disable", "" ) \
DPOINT_DEFN( SigCtrlLogTest, Signal, "A 'dummy' test bit whose sole purpose is to generate log events when changed.", "" ) \
DPOINT_DEFN( ChEventIo1, ChangeEvent, "IO1 settings batch change", "" ) \
DPOINT_DEFN( ChEventIo2, ChangeEvent, "IO2 settings batch change", "" ) \
DPOINT_DEFN( LogicCh1NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh2NameOffline, Str, "Logic channel name Offline setting", "" ) \
DPOINT_DEFN( LogicCh3NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh4NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh5NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh6NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh7NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh8NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh1InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh2InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh3InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh4InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh5InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh6InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh7InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh8InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicChEnable, UI8, "Logic channel enable", "" ) \
DPOINT_DEFN( G3_OcAt, UI32, "Grp3 OC Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G3_OcDnd, DndMode, "Grp3 _OC DND", "" ) \
DPOINT_DEFN( G3_EfAt, UI32, "Grp3 _EF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G3_EfDnd, DndMode, "Grp3 _EF DND", "" ) \
DPOINT_DEFN( G3_SefAt, UI32, "Grp3 _SEF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G3_SefDnd, DndMode, "Grp3 _SEF DND", "" ) \
DPOINT_DEFN( G3_ArOCEF_ZSCmode, EnDis, "Grp3 1AutoReclose ZSC mod", "" ) \
DPOINT_DEFN( G3_VrcEnable, EnDis, "Grp3 AutoReclose VRC mode", "" ) \
DPOINT_DEFN( LogicChMode, LogicChannelMode, "Logic channel mode", "" ) \
DPOINT_DEFN( G3_ArOCEF_Trec1, UI32, "Grp3 AutoReclose Reclose Trip 1", "" ) \
DPOINT_DEFN( G3_ArOCEF_Trec2, UI32, "Grp3 AutoReclose Reclose Trip 2", "" ) \
DPOINT_DEFN( G3_ArOCEF_Trec3, UI32, "Grp3 AutoReclose Reclose Trip 3", "" ) \
DPOINT_DEFN( G3_ResetTime, UI32, "Grp3 Reset time", "" ) \
DPOINT_DEFN( G3_TtaMode, TtaMode, "Grp3  Transient additional time mode", "" ) \
DPOINT_DEFN( G3_TtaTime, UI32, "Grp3 Transient additional time", "" ) \
DPOINT_DEFN( G3_SstOcForward, UI8, "Grp3  OC Single shot to trip.", "" ) \
DPOINT_DEFN( G3_EftEnable, EnDis, "Grp3 En/Disables the excess fast trip engine.", "" ) \
DPOINT_DEFN( G3_ClpClm, UI32, "Grp3 CLP multiplier", "" ) \
DPOINT_DEFN( G3_ClpTcl, UI32, "Grp3  CLP load time", "" ) \
DPOINT_DEFN( G3_ClpTrec, UI32, "Grp3  CLP recognition time", "" ) \
DPOINT_DEFN( G3_IrrIrm, UI32, "Grp3  IRR multiplier", "" ) \
DPOINT_DEFN( G3_IrrTir, UI32, "Grp3  IRR restraint time", "" ) \
DPOINT_DEFN( G3_VrcMode, VrcMode, "Grp3  VRC mode", "" ) \
DPOINT_DEFN( G3_VrcUMmin, UI32, "Grp3  VRC voltage multiplier", "" ) \
DPOINT_DEFN( G3_AbrMode, EnDis, "Grp3  ABR mode", "" ) \
DPOINT_DEFN( G3_OC1F_Ip, UI32, "Grp3 OC1+ Pickup current", "" ) \
DPOINT_DEFN( G3_OC1F_Tcc, UI16, "Grp3 OC1+ TCC Type", "" ) \
DPOINT_DEFN( G3_OC1F_TDtMin, UI32, "Grp3 OC1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_OC1F_TDtRes, UI32, "Grp3 OC1+ DT reset time", "" ) \
DPOINT_DEFN( G3_OC1F_Tm, UI32, "Grp3 OC1+ Time multiplier", "" ) \
DPOINT_DEFN( G3_OC1F_Imin, UI32, "Grp3 OC1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OC1F_Tmin, UI32, "Grp3 OC1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OC1F_Tmax, UI32, "Grp3 OC1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OC1F_Ta, UI32, "Grp3 OC1+ Additional time", "" ) \
DPOINT_DEFN( LogicChLogChange, UI8, "Log logic channel changes", "" ) \
DPOINT_DEFN( G3_OC1F_ImaxEn, EnDis, "Grp3 OC1+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_OC1F_Imax, UI32, "Grp3 OC1+ Max current multiplier", "" ) \
DPOINT_DEFN( G3_OC1F_DirEn, EnDis, "Grp3 OC1+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC1F_Tr1, TripMode, "Grp3 OC1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC1F_Tr2, TripMode, "Grp3 OC1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC1F_Tr3, TripMode, "Grp3 OC1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC1F_Tr4, TripMode, "Grp3 OC1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OC1F_TccUD, TccCurve, "Grp3 OC1+ User defined curve", "" ) \
DPOINT_DEFN( G3_OC2F_Ip, UI32, "Grp3 OC2+ Pickup current", "" ) \
DPOINT_DEFN( G3_OC2F_Tcc, UI16, "Grp3 OC2+ TCC Type", "" ) \
DPOINT_DEFN( G3_OC2F_TDtMin, UI32, "Grp3 OC2+ DT min tripping time", "" ) \
DPOINT_DEFN( G3_OC2F_TDtRes, UI32, "Grp3 OC2+ DT reset time", "" ) \
DPOINT_DEFN( G3_OC2F_Tm, UI32, "Grp3 OC2+ Time multiplier", "" ) \
DPOINT_DEFN( G3_OC2F_Imin, UI32, "Grp3 OC2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OC2F_Tmin, UI32, "Grp3 OC2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OC2F_Tmax, UI32, "Grp3 OC2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OC2F_Ta, UI32, "Grp3 OC2+ Additional time", "" ) \
DPOINT_DEFN( G3_EftTripCount, UI8, "Grp3 Applicable to EFT mode: The threshould count of the number of protection trips before disabling fast trips.", "" ) \
DPOINT_DEFN( G3_OC2F_ImaxEn, EnDis, "Grp3 OC2+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_OC2F_Imax, UI32, "Grp3 OC2+ Max current multiplier", "" ) \
DPOINT_DEFN( G3_OC2F_DirEn, EnDis, "Grp3 OC2+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC2F_Tr1, TripMode, "Grp3 OC2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC2F_Tr2, TripMode, "Grp3 OC2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC2F_Tr3, TripMode, "Grp3 OC2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC2F_Tr4, TripMode, "Grp3 OC2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OC2F_TccUD, TccCurve, "Grp3 OC2+ User defined curve", "" ) \
DPOINT_DEFN( G3_OC3F_Ip, UI32, "Grp3 OC3+ Pickup current", "" ) \
DPOINT_DEFN( G3_OC3F_TDtMin, UI32, "Grp3 OC3+ DT tripping time", "" ) \
DPOINT_DEFN( G3_OC3F_TDtRes, UI32, "Grp3 OC3+ DT reset time", "" ) \
DPOINT_DEFN( G3_OC3F_DirEn, EnDis, "Grp3 OC3+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC3F_Tr1, TripMode, "Grp3 OC3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC3F_Tr2, TripMode, "Grp3 OC3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC3F_Tr3, TripMode, "Grp3 OC3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC3F_Tr4, TripMode, "Grp3 OC3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OC1R_Ip, UI32, "Grp3 OC1- Pickup current", "" ) \
DPOINT_DEFN( G3_OC1R_Tcc, UI16, "Grp3 OC1- TCC Type", "" ) \
DPOINT_DEFN( G3_OC1R_TDtMin, UI32, "Grp3 OC1- DT min tripping time", "" ) \
DPOINT_DEFN( G3_OC1R_TDtRes, UI32, "Grp3 OC1- DT reset time", "" ) \
DPOINT_DEFN( G3_OC1R_Tm, UI32, "Grp3 OC1- Time multiplier", "" ) \
DPOINT_DEFN( G3_OC1R_Imin, UI32, "Grp3 OC1- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OC1R_Tmin, UI32, "Grp3 OC1- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OC1R_Tmax, UI32, "Grp3 OC1- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OC1R_Ta, UI32, "Grp3 OC1- Additional time", "" ) \
DPOINT_DEFN( G3_EftTripWindow, UI8, "Grp3 Applicable to EFT mode: The period window used when monitoring the number of protection trips.", "" ) \
DPOINT_DEFN( G3_OC1R_ImaxEn, EnDis, "Grp3 OC1- Enable Max mode", "" ) \
DPOINT_DEFN( G3_OC1R_Imax, UI32, "Grp3 OC1- Max current multiplier", "" ) \
DPOINT_DEFN( G3_OC1R_DirEn, EnDis, "Grp3 OC1- Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC1R_Tr1, TripMode, "Grp3 OC1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC1R_Tr2, TripMode, "Grp3 OC1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC1R_Tr3, TripMode, "Grp3 OC1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC1R_Tr4, TripMode, "Grp3 OC1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OC1R_TccUD, TccCurve, "Grp3 OC1- User defined curve", "" ) \
DPOINT_DEFN( G3_OC2R_Ip, UI32, "Grp3 OC2- Pickup current", "" ) \
DPOINT_DEFN( G3_OC2R_Tcc, UI16, "Grp3 OC2- TCC Type", "" ) \
DPOINT_DEFN( G3_OC2R_TDtMin, UI32, "Grp3 OC2- DT min tripping time", "" ) \
DPOINT_DEFN( G3_OC2R_TDtRes, UI32, "Grp3 OC2- DT reset time", "" ) \
DPOINT_DEFN( G3_OC2R_Tm, UI32, "Grp3 OC2- Time multiplier", "" ) \
DPOINT_DEFN( G3_OC2R_Imin, UI32, "Grp3 OC2- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OC2R_Tmin, UI32, "Grp3 OC2- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OC2R_Tmax, UI32, "Grp3 OC2- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OC2R_Ta, UI32, "Grp3 OC2- Additional time", "" ) \
DPOINT_DEFN( G3_OC2R_ImaxEn, EnDis, "Grp3 OC2- Enable Max mode", "" ) \
DPOINT_DEFN( G3_OC2R_Imax, UI32, "Grp3 OC2- Max current multiplier", "" ) \
DPOINT_DEFN( G3_OC2R_DirEn, EnDis, "Grp3 OC2- Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC2R_Tr1, TripMode, "Grp3 OC2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC2R_Tr2, TripMode, "Grp3 OC2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC2R_Tr3, TripMode, "Grp3 OC2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC2R_Tr4, TripMode, "Grp3 OC2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OC2R_TccUD, TccCurve, "Grp3 OC2- User defined curve", "" ) \
DPOINT_DEFN( G3_OC3R_Ip, UI32, "Grp3 OC3- Pickup current", "" ) \
DPOINT_DEFN( G3_OC3R_TDtMin, UI32, "Grp3 OC3- DT tripping time", "" ) \
DPOINT_DEFN( G3_OC3R_TDtRes, UI32, "Grp3 OC3- DT reset time", "" ) \
DPOINT_DEFN( G3_OC3R_DirEn, EnDis, "Grp3 OC3- Enable directional protection", "" ) \
DPOINT_DEFN( G3_OC3R_Tr1, TripMode, "Grp3 OC3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_OC3R_Tr2, TripMode, "Grp3 OC3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_OC3R_Tr3, TripMode, "Grp3 OC3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_OC3R_Tr4, TripMode, "Grp3 OC3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF1F_Ip, UI32, "Grp3 EF1+ Pickup current", "" ) \
DPOINT_DEFN( G3_EF1F_Tcc, UI16, "Grp3 EF1+ TCC Type", "" ) \
DPOINT_DEFN( G3_EF1F_TDtMin, UI32, "Grp3 EF1+ DT min tripping time", "" ) \
DPOINT_DEFN( G3_EF1F_TDtRes, UI32, "Grp3 EF1+ DT reset time", "" ) \
DPOINT_DEFN( G3_EF1F_Tm, UI32, "Grp3 EF1+ Time multiplier", "" ) \
DPOINT_DEFN( G3_EF1F_Imin, UI32, "Grp3 EF1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EF1F_Tmin, UI32, "Grp3 EF1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EF1F_Tmax, UI32, "Grp3 EF1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EF1F_Ta, UI32, "Grp3 EF1+ Additional time", "" ) \
DPOINT_DEFN( G3_DEPRECATED_G1EF1F_Tres, UI32, "Grp3 EF1+ Reset time", "" ) \
DPOINT_DEFN( G3_EF1F_ImaxEn, EnDis, "Grp3 EF1+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_EF1F_Imax, UI32, "Grp3 EF1+ Max current multiplier", "" ) \
DPOINT_DEFN( G3_EF1F_DirEn, EnDis, "Grp3 EF1+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF1F_Tr1, TripMode, "Grp3 EF1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF1F_Tr2, TripMode, "Grp3 EF1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF1F_Tr3, TripMode, "Grp3 EF1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF1F_Tr4, TripMode, "Grp3 EF1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF1F_TccUD, TccCurve, "Grp3 EF1+ User defined curve", "" ) \
DPOINT_DEFN( G3_EF2F_Ip, UI32, "Grp3 EF2+ Pickup current", "" ) \
DPOINT_DEFN( G3_EF2F_Tcc, UI16, "Grp3 EF2+ TCC Type", "" ) \
DPOINT_DEFN( G3_EF2F_TDtMin, UI32, "Grp3 EF2+ DT min tripping time", "" ) \
DPOINT_DEFN( G3_EF2F_TDtRes, UI32, "Grp3 EF2+ DT reset time", "" ) \
DPOINT_DEFN( G3_EF2F_Tm, UI32, "Grp3 EF2+ Time multiplier", "" ) \
DPOINT_DEFN( G3_EF2F_Imin, UI32, "Grp3 EF2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EF2F_Tmin, UI32, "Grp3 EF2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EF2F_Tmax, UI32, "Grp3 EF2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EF2F_Ta, UI32, "Grp3 EF2+ Additional time", "" ) \
DPOINT_DEFN( G3_DEPRECATED_G1EF2F_Tres, UI32, "Grp3 EF2+ Reset time", "" ) \
DPOINT_DEFN( G3_EF2F_ImaxEn, EnDis, "Grp3 EF2+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_EF2F_Imax, UI32, "Grp3 EF2+ Max mode", "" ) \
DPOINT_DEFN( G3_EF2F_DirEn, EnDis, "Grp3 EF2+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF2F_Tr1, TripMode, "Grp3 EF2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF2F_Tr2, TripMode, "Grp3 EF2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF2F_Tr3, TripMode, "Grp3 EF2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF2F_Tr4, TripMode, "Grp3 EF2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF2F_TccUD, TccCurve, "Grp3 EF2+ User defined curve", "" ) \
DPOINT_DEFN( G3_EF3F_Ip, UI32, "Grp3 EF3+ Pickup current", "" ) \
DPOINT_DEFN( G3_EF3F_TDtMin, UI32, "Grp3 EF3+ DT tripping time", "" ) \
DPOINT_DEFN( G3_EF3F_TDtRes, UI32, "Grp3 EF3+ DT reset time", "" ) \
DPOINT_DEFN( G3_EF3F_DirEn, EnDis, "Grp3 EF3+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF3F_Tr1, TripMode, "Grp3 EF3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF3F_Tr2, TripMode, "Grp3 EF3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF3F_Tr3, TripMode, "Grp3 EF3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF3F_Tr4, TripMode, "Grp3 EF3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF1R_Ip, UI32, "Grp3 EF1- Pickup current", "" ) \
DPOINT_DEFN( G3_EF1R_Tcc, UI16, "Grp3 EF1- TCC Type", "" ) \
DPOINT_DEFN( G3_EF1R_TDtMin, UI32, "Grp3 EF1- DT min tripping time", "" ) \
DPOINT_DEFN( G3_EF1R_TDtRes, UI32, "Grp3 EF1- DT reset time", "" ) \
DPOINT_DEFN( G3_EF1R_Tm, UI32, "Grp3 EF1- Time multiplier", "" ) \
DPOINT_DEFN( G3_EF1R_Imin, UI32, "Grp3 EF1- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EF1R_Tmin, UI32, "Grp3 EF1- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EF1R_Tmax, UI32, "Grp3 EF1- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EF1R_Ta, UI32, "Grp3 EF1- Additional time", "" ) \
DPOINT_DEFN( G3_DEPRECATED_G1EF1R_Tres, UI32, "Grp3 EF1- Reset time", "" ) \
DPOINT_DEFN( G3_EF1R_ImaxEn, EnDis, "Grp3 EF1- Enable Max mode", "" ) \
DPOINT_DEFN( G3_EF1R_Imax, UI32, "Grp3 EF1- Max current multiplier", "" ) \
DPOINT_DEFN( G3_EF1R_DirEn, EnDis, "Grp3 EF1- Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF1R_Tr1, TripMode, "Grp3 EF1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF1R_Tr2, TripMode, "Grp3 EF1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF1R_Tr3, TripMode, "Grp3 EF1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF1R_Tr4, TripMode, "Grp3 EF1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF1R_TccUD, TccCurve, "Grp3 EF1- User defined curve", "" ) \
DPOINT_DEFN( G3_EF2R_Ip, UI32, "Grp3 EF2- Pickup current", "" ) \
DPOINT_DEFN( G3_EF2R_Tcc, UI16, "Grp3 EF2- TCC Type", "" ) \
DPOINT_DEFN( G3_EF2R_TDtMin, UI32, "Grp3 EF2- DT min tripping time", "" ) \
DPOINT_DEFN( G3_EF2R_TDtRes, UI32, "Grp3 EF2- DT reset time", "" ) \
DPOINT_DEFN( G3_EF2R_Tm, UI32, "Grp3 EF2- Time multiplier", "" ) \
DPOINT_DEFN( G3_EF2R_Imin, UI32, "Grp3 EF2- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EF2R_Tmin, UI32, "Grp3 EF2- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EF2R_Tmax, UI32, "Grp3 EF2- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EF2R_Ta, UI32, "Grp3 EF2- Additional time", "" ) \
DPOINT_DEFN( G3_EF2R_ImaxEn, EnDis, "Grp3 EF2- Enable Max mode", "" ) \
DPOINT_DEFN( G3_EF2R_Imax, UI32, "Grp3 EF2- Max current multiplier", "" ) \
DPOINT_DEFN( G3_EF2R_DirEn, EnDis, "Grp3 EF2- Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF2R_Tr1, TripMode, "Grp3 EF2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF2R_Tr2, TripMode, "Grp3 EF2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF2R_Tr3, TripMode, "Grp3 EF2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF2R_Tr4, TripMode, "Grp3 EF2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_EF2R_TccUD, TccCurve, "Grp3 EF2- User defined curve", "" ) \
DPOINT_DEFN( G3_EF3R_Ip, UI32, "Grp3 EF3- Pickup current", "" ) \
DPOINT_DEFN( G3_EF3R_TDtMin, UI32, "Grp3 EF3- DT tripping time", "" ) \
DPOINT_DEFN( G3_EF3R_TDtRes, UI32, "Grp3 EF3- DT reset time", "" ) \
DPOINT_DEFN( G3_EF3R_DirEn, EnDis, "Grp3 EF3- Enable directional protection", "" ) \
DPOINT_DEFN( G3_EF3R_Tr1, TripMode, "Grp3 EF3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_EF3R_Tr2, TripMode, "Grp3 EF3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_EF3R_Tr3, TripMode, "Grp3 EF3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_EF3R_Tr4, TripMode, "Grp3 EF3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_SEFF_Ip, UI32, "Grp3 SEF+ Pickup current", "" ) \
DPOINT_DEFN( G3_SEFF_TDtMin, UI32, "Grp3 SEF+ DT tripping time", "" ) \
DPOINT_DEFN( G3_SEFF_TDtRes, UI32, "Grp3 SEF+ DT reset time", "" ) \
DPOINT_DEFN( G3_SEFF_DirEn, EnDis, "Grp3 SEF+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_SEFF_Tr1, TripMode, "Grp3 SEF+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_SEFF_Tr2, TripMode, "Grp3 SEF+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_SEFF_Tr3, TripMode, "Grp3 SEF+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_SEFF_Tr4, TripMode, "Grp3 SEF+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_SEFR_Ip, UI32, "Grp3 SEF- Pickup current", "" ) \
DPOINT_DEFN( G3_SEFR_TDtMin, UI32, "Grp3 SEF- DT tripping time", "" ) \
DPOINT_DEFN( G3_SEFR_TDtRes, UI32, "Grp3 SEF- DT reset time", "" ) \
DPOINT_DEFN( G3_SEFR_DirEn, EnDis, "Grp3 SEF- Enable directional protection", "" ) \
DPOINT_DEFN( G3_SEFR_Tr1, TripMode, "Grp3 SEF- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_SEFR_Tr2, TripMode, "Grp3 SEF- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_SEFR_Tr3, TripMode, "Grp3 SEF- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_SEFR_Tr4, TripMode, "Grp3 SEF- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_OcLl_Ip, UI32, "Grp3 OC3 LL Pickup current", "" ) \
DPOINT_DEFN( G3_OcLl_TDtMin, UI32, "Grp3 OC LL3 DT tripping time", "" ) \
DPOINT_DEFN( G3_OcLl_TDtRes, UI32, "Grp3 OC LL3 DT reset time", "" ) \
DPOINT_DEFN( G3_EfLl_Ip, UI32, "Grp3 EF LL3 Pickup current", "" ) \
DPOINT_DEFN( G3_EfLl_TDtMin, UI32, "Grp3 EF LL3 DT tripping time", "" ) \
DPOINT_DEFN( G3_EfLl_TDtRes, UI32, "Grp3 EF LL3 DT reset time", "" ) \
DPOINT_DEFN( G3_Uv1_Um, UI32, "Grp3  UV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Uv1_TDtMin, UI32, "Grp3  UV1 DT tripping time", "" ) \
DPOINT_DEFN( G3_Uv1_TDtRes, UI32, "Grp3  UV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Uv1_Trm, TripMode, "Grp3 1 UV1 Trip mod", "" ) \
DPOINT_DEFN( G3_Uv2_Um, UI32, "Grp3  UV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Uv2_TDtMin, UI32, "Grp3  UV2 DT tripping time", "" ) \
DPOINT_DEFN( G3_Uv2_TDtRes, UI32, "Grp3  UV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Uv2_Trm, TripMode, "Grp3 1 UV2 Trip mod", "" ) \
DPOINT_DEFN( G3_Uv3_TDtMin, UI32, "Grp3 UV3 DT tripping time", "" ) \
DPOINT_DEFN( G3_Uv3_TDtRes, UI32, "Grp3  UV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Uv3_Trm, TripMode, "Grp3 1 UV3 Trip mod", "" ) \
DPOINT_DEFN( G3_Ov1_Um, UI32, "Grp3  OV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Ov1_TDtMin, UI32, "Grp3  OV1 DT tripping time", "" ) \
DPOINT_DEFN( G3_Ov1_TDtRes, UI32, "Grp3  OV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Ov1_Trm, TripMode, "Grp3 1 OV1 Trip mod", "" ) \
DPOINT_DEFN( G3_Ov2_Um, UI32, "Grp3  OV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Ov2_TDtMin, UI32, "Grp3  OV2 DT tripping time", "" ) \
DPOINT_DEFN( G3_Ov2_TDtRes, UI32, "Grp3  OV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Ov2_Trm, TripMode, "Grp3 1 OV2 Trip mod", "" ) \
DPOINT_DEFN( G3_Uf_Fp, UI32, "Grp3  UF Pickup frequency", "" ) \
DPOINT_DEFN( G3_Uf_TDtMin, UI32, "Grp3  UF DT tripping time", "" ) \
DPOINT_DEFN( G3_Uf_TDtRes, UI32, "Grp3  UF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Uf_Trm, TripModeDLA, "Grp3  UF Trip mode", "" ) \
DPOINT_DEFN( G3_Of_Fp, UI32, "Grp3 OF Pickup frequency", "" ) \
DPOINT_DEFN( G3_Of_TDtMin, UI32, "Grp3  OF DT tripping time", "" ) \
DPOINT_DEFN( G3_Of_TDtRes, UI32, "Grp3  OF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Of_Trm, TripModeDLA, "Grp3  OF Trip mode", "" ) \
DPOINT_DEFN( G3_DEPRECATED_OC1F_ImaxAbs, UI32, "Grp3 OC1+ Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_OC2F_ImaxAbs, UI32, "Grp3 OC2+ Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_OC1R_ImaxAbs, UI32, "Grp3 OC1- Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_OC2R_ImaxAbs, UI32, "Grp3 OC2- Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_EF1F_ImaxAbs, UI32, "Grp3 EF1+ Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_EF2F_ImaxAbs, UI32, "Grp3 EF2+ Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_EF1R_ImaxAbs, UI32, "Grp3 EF1- Max abs current", "" ) \
DPOINT_DEFN( G3_DEPRECATED_EF2R_ImaxAbs, UI32, "Grp3 EF2- Max abs current", "" ) \
DPOINT_DEFN( G3_SstEfForward, UI8, "Grp3 EF Single shot to trip", "" ) \
DPOINT_DEFN( G3_SstSefForward, UI8, "Grp3 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G3_AbrTrest, UI32, "Grp3 The ABR restoration time in s.", "" ) \
DPOINT_DEFN( G3_AutoOpenMode, AutoOpenMode, "Grp3 AutoOpen method: Disabled/Timer/Power Flow", "" ) \
DPOINT_DEFN( G3_AutoOpenTime, UI16, "Grp3 The time in minutes to wait before auto open after a close by ABR", "" ) \
DPOINT_DEFN( G3_AutoOpenOpns, UI8, "Grp3 The number of times this element will allow ABR closes before locking out.", "" ) \
DPOINT_DEFN( G3_SstOcReverse, UI8, "Grp3 ", "" ) \
DPOINT_DEFN( G3_SstEfReverse, UI8, "Grp3 Grp 1 EF Single shot to trip", "" ) \
DPOINT_DEFN( G3_SstSefReverse, UI8, "Grp3 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G3_ArUVOV_Trec, UI32, "Grp3 Under / Over voltage auto reclose time in seconds", "" ) \
DPOINT_DEFN( G3_GrpName, Str, "Grp3 _Group Name", "" ) \
DPOINT_DEFN( G3_GrpDes, Str, "Grp3 G1_Grp Description Group description", "" ) \
DPOINT_DEFN( LogicCh1OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh2OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh3OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh4OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh5OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh6OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh7OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh8OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh1RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh2RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh3RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh4RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh5RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh6RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh7RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh8RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh1ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh2ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh3ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh4ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh5ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh6ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh7ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh8ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh1PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh2PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh3PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh4PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh5PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh6PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh7PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh8PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicChPulseEnable, UI8, "Logic channel pulse enable", "" ) \
DPOINT_DEFN( LogicCh1Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh2Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh3Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh4Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh5Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh6Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh7Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh8Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh1Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh2Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh3Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh4Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh5Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh6Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh7Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh8Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( SigMntActivated, Signal, "This signal is set when MNT is activated (threshold number of trips within the configured window) and reset when DFT is reset. Only 'set' events need to be logged. NOTE: That the name refers to EFT (Excess Fast Trips) as this was the original name for the dPoint.", "" ) \
DPOINT_DEFN( SigCtrlACOOn, Signal, "ACO is switched on. NOTE: from DB26 this is volatile so that ACO will always be OFF after a startup/reset.", "" ) \
DPOINT_DEFN( CanGpioRdData, SimImageBytes, "GPIO image download read", "" ) \
DPOINT_DEFN( CanGpioFirmwareVerifyStatus, UI8, "0  DOWNLOAD_NEXT   - get next block of data.\r\n1  DOWNLOAD_REPT   - repeat block as data was corrupt.\r\n2  DOWNLOAD_BUSY   - unit still processing the data.\r\n\r\nWhen polled indicates what it is currently happening with the block data.", "" ) \
DPOINT_DEFN( CanGpioFirmwareTypeRunning, UI8, "CanGpioFirmwareTypeRunning\r\n0 main code running\r\n1 mini bootloader running\r\n2 main bootloader running", "" ) \
DPOINT_DEFN( CanDataRequestIo, CanObjType, "Request data from IO device 3 on the CAN network\r\n(where 3 is the default GPIO device number prior to address allocation, as opposed to 4 for IO1 and 5 for IO2)", "" ) \
DPOINT_DEFN( IdGpioSoftwareVer, Str, "Identification: GPIO Software Version\r\nUsed while programming GPIO. Refer to IdIO1SoftwareVer, IdIO2SoftwareVer for IO software versions when running", "" ) \
DPOINT_DEFN( ProgramGpioCmd, UI8, "Issue commands to the GPIO programmer process.", "" ) \
DPOINT_DEFN( ScadaT104TimeoutT0, UI8, "Timeout t0 defined in IEC 60870-5-104: Timeout of connection establishment. This should usually be longer than timeout t1.", "" ) \
DPOINT_DEFN( ScadaT104TimeoutT1, UI8, "Timeout t1 defined in IEC 60870-5-104: Timeout for an expected response. If this expires, the channel will be closed. Timeout t1 is set longer than timeout t2.", "" ) \
DPOINT_DEFN( ScadaT104TimeoutT2, UI8, "Timeout t2 defined in IEC 60870-5-104: Maximum delay before sending an acknowledgement S-frame if no data frame needs to be sent. Timeout t2 should be less than timeout t1.", "" ) \
DPOINT_DEFN( ScadaT104TimeoutT3, UI32, "Timeout t3 defined in IEC 60870-5-104: Maximum channel idle time before sending a keep-alive U-frame. This is the timeout for activity on a connection. Set to zero to disable this check, maximum 48 hours. If used, this timeout should be set longer than t1.", "" ) \
DPOINT_DEFN( LogicCh1Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh2Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh3Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh4Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh5Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh6Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh7Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh8Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( p2pChannelPort, CommsPort, "p2p comm channel port", "" ) \
DPOINT_DEFN( p2pMappedUI8_0, UI8, "p2p comm locally mapped UI8 number 0", "" ) \
DPOINT_DEFN( p2pMappedUI8_1, UI8, "p2p comm locally mapped UI8 number 1", "" ) \
DPOINT_DEFN( p2pMappedSignal_0, Signal, "p2p comm locally mapped signal number 0", "" ) \
DPOINT_DEFN( p2pMappedSignal_1, Signal, "p2p comm locally mapped signal number 1", "" ) \
DPOINT_DEFN( p2pMappedSignal_2, Signal, "p2p comm locally mapped signal number 2", "" ) \
DPOINT_DEFN( p2pMappedSignal_3, Signal, "p2p comm locally mapped signal number 3", "" ) \
DPOINT_DEFN( CanGpioRequestMoreData, UI8, "Number of packets to send         \r\n\r\nSent by the device firmware is being loaded on to.  Therefore it has control of the data flow.", "" ) \
DPOINT_DEFN( SigPickupRangeSupply, Signal, "One of the monitored supply signals is out of the configured range.", "" ) \
DPOINT_DEFN( SigPickupRangeLoad, Signal, "Any load related signal is within the configured range.", "" ) \
DPOINT_DEFN( SigPickupRangeUV1, Signal, "U1 Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVab, Signal, "Uab Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVbc, Signal, "Ubc Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVca, Signal, "Uca Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUFabc, Signal, "Fabc Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVrs, Signal, "Urs Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVst, Signal, "Ust Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUVtr, Signal, "Utr Signal is under the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeUFrst, Signal, "Frst Signal is under the threshold.", "" ) \
DPOINT_DEFN( SupplyHealthState, SupplyState, "The health state of local supply source.", "" ) \
DPOINT_DEFN( LoadHealthState, LoadState, "The health state of the load.", "" ) \
DPOINT_DEFN( SigLoadDead, Signal, "The load dead signal.", "" ) \
DPOINT_DEFN( SigSupplyUnhealthy, Signal, "ACO: Source Not Healthy", "" ) \
DPOINT_DEFN( ACO_Debug, UI32, "ACO Debug", "" ) \
DPOINT_DEFN( ACO_TPup, UI32, "ACO Time", "" ) \
DPOINT_DEFN( EvACOState, LogEvent, "The ACO state has changed.", "" ) \
DPOINT_DEFN( SigOpenPeer, Signal, "the map to remote SigOpen.", "" ) \
DPOINT_DEFN( SigClosedPeer, Signal, "The map to remote SigClosed", "" ) \
DPOINT_DEFN( SigMalfunctionPeer, Signal, "the peer's SigMalfunction", "" ) \
DPOINT_DEFN( SigWarningPeer, Signal, "The peer's SigWarning", "" ) \
DPOINT_DEFN( p2pMappedUI32_0, UI32, "p2p comm locally mapped UI32 number 0", "" ) \
DPOINT_DEFN( ProtStatusStatePeer, UI32, "The Peer's ProtStatusState", "" ) \
DPOINT_DEFN( p2pMappedUI32_1, UI32, "p2p comm locally mapped UI32 number 1", "" ) \
DPOINT_DEFN( SigPickupRangeOFrst, Signal, "Frst Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOFabc, Signal, "Fabc Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVtr, Signal, "Utr Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVst, Signal, "Ust Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVrs, Signal, "Urs Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOV1, Signal, "U1 Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVab, Signal, "Uab Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVbc, Signal, "Ubc Signal is over the threshold.", "" ) \
DPOINT_DEFN( SigPickupRangeOVca, Signal, "Uca Signal is over the threshold.", "" ) \
DPOINT_DEFN( ACOOperationMode, ACOOpMode, "ACO Operation Mode", "" ) \
DPOINT_DEFN( ACOMakeBeforeBreak, EnDis, "ACO Make Before Break", "" ) \
DPOINT_DEFN( SigOpenACO, Signal, "Open due to ACO restore operation", "" ) \
DPOINT_DEFN( SigClosedACO, Signal, "Closed due to ACO restore operation", "" ) \
DPOINT_DEFN( SigSupplyUnhealthyPeer, Signal, "Peer Source Not Healthy", "" ) \
DPOINT_DEFN( ACOOperationModePeer, ACOOpMode, "Peer ACO Operation Mode", "" ) \
DPOINT_DEFN( ACODisplayState, OpenClose, "ACO Current State", "" ) \
DPOINT_DEFN( ACODisplayStatePeer, OpenClose, "Peer ACO Current State", "" ) \
DPOINT_DEFN( ACOHealth, ACOHealthReason, "ACO Health", "" ) \
DPOINT_DEFN( ACOHealthPeer, ACOHealthReason, "Peer ACO Health", "" ) \
DPOINT_DEFN( SigCtrlACOOnPeer, Signal, "Peer ACO is switched on", "" ) \
DPOINT_DEFN( ACOMakeBeforeBreakPeer, EnDis, "Peer ACO Make Before Break", "" ) \
DPOINT_DEFN( G4_OcAt, UI32, "Grp4 OC Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G4_OcDnd, DndMode, "Grp4 _OC DND", "" ) \
DPOINT_DEFN( G4_EfAt, UI32, "Grp4 _EF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G4_EfDnd, DndMode, "Grp4 _EF DND", "" ) \
DPOINT_DEFN( G4_SefAt, UI32, "Grp4 _SEF Torque Angle.  See MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G4_SefDnd, DndMode, "Grp4 _SEF DND", "" ) \
DPOINT_DEFN( G4_ArOCEF_ZSCmode, EnDis, "Grp4 1AutoReclose ZSC mod", "" ) \
DPOINT_DEFN( G4_VrcEnable, EnDis, "Grp4 AutoReclose VRC mode", "" ) \
DPOINT_DEFN( SimSwitchStatusPeer, SwState, "0:Unknown, 1:Open, 2:Close, 3:Lockout, 4:InterLocked, 5:OpenABR, 6:Failure, 7:OpenACO, 8:OpenAC, 9:LogicallyLocked", "" ) \
DPOINT_DEFN( G4_ArOCEF_Trec1, UI32, "Grp4 AutoReclose Reclose Trip 1", "" ) \
DPOINT_DEFN( G4_ArOCEF_Trec2, UI32, "Grp4 AutoReclose Reclose Trip 2", "" ) \
DPOINT_DEFN( G4_ArOCEF_Trec3, UI32, "Grp4 AutoReclose Reclose Trip 3", "" ) \
DPOINT_DEFN( G4_ResetTime, UI32, "Grp4 Reset time", "" ) \
DPOINT_DEFN( G4_TtaMode, TtaMode, "Grp4  Transient additional time mode", "" ) \
DPOINT_DEFN( G4_TtaTime, UI32, "Grp4 Transient additional time", "" ) \
DPOINT_DEFN( G4_SstOcForward, UI8, "Grp4  OC Single shot to trip.", "" ) \
DPOINT_DEFN( G4_EftEnable, EnDis, "Grp4 En/Disables the excess fast trip engine.", "" ) \
DPOINT_DEFN( G4_ClpClm, UI32, "Grp4 CLP multiplier", "" ) \
DPOINT_DEFN( G4_ClpTcl, UI32, "Grp4  CLP load time", "" ) \
DPOINT_DEFN( G4_ClpTrec, UI32, "Grp4  CLP recognition time", "" ) \
DPOINT_DEFN( G4_IrrIrm, UI32, "Grp4  IRR multiplier", "" ) \
DPOINT_DEFN( G4_IrrTir, UI32, "Grp4  IRR restraint time", "" ) \
DPOINT_DEFN( G4_VrcMode, VrcMode, "Grp4  VRC mode", "" ) \
DPOINT_DEFN( G4_VrcUMmin, UI32, "Grp4  VRC voltage multiplier", "" ) \
DPOINT_DEFN( G4_AbrMode, EnDis, "Grp4  ABR mode", "" ) \
DPOINT_DEFN( G4_OC1F_Ip, UI32, "Grp4 OC1+ Pickup current", "" ) \
DPOINT_DEFN( G4_OC1F_Tcc, UI16, "Grp4 OC1+ TCC Type", "" ) \
DPOINT_DEFN( G4_OC1F_TDtMin, UI32, "Grp4 OC1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_OC1F_TDtRes, UI32, "Grp4 OC1+ DT reset time", "" ) \
DPOINT_DEFN( G4_OC1F_Tm, UI32, "Grp4 OC1+ Time multiplier", "" ) \
DPOINT_DEFN( G4_OC1F_Imin, UI32, "Grp4 OC1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OC1F_Tmin, UI32, "Grp4 OC1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OC1F_Tmax, UI32, "Grp4 OC1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OC1F_Ta, UI32, "Grp4 OC1+ Additional time", "" ) \
DPOINT_DEFN( G4_OC1F_ImaxEn, EnDis, "Grp4 OC1+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_OC1F_Imax, UI32, "Grp4 OC1+ Max current multiplier", "" ) \
DPOINT_DEFN( G4_OC1F_DirEn, EnDis, "Grp4 OC1+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC1F_Tr1, TripMode, "Grp4 OC1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC1F_Tr2, TripMode, "Grp4 OC1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC1F_Tr3, TripMode, "Grp4 OC1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC1F_Tr4, TripMode, "Grp4 OC1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OC1F_TccUD, TccCurve, "Grp4 OC1+ User defined curve", "" ) \
DPOINT_DEFN( G4_OC2F_Ip, UI32, "Grp4 OC2+ Pickup current", "" ) \
DPOINT_DEFN( G4_OC2F_Tcc, UI16, "Grp4 OC2+ TCC Type", "" ) \
DPOINT_DEFN( G4_OC2F_TDtMin, UI32, "Grp4 OC2+ DT min tripping time", "" ) \
DPOINT_DEFN( G4_OC2F_TDtRes, UI32, "Grp4 OC2+ DT reset time", "" ) \
DPOINT_DEFN( G4_OC2F_Tm, UI32, "Grp4 OC2+ Time multiplier", "" ) \
DPOINT_DEFN( G4_OC2F_Imin, UI32, "Grp4 OC2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OC2F_Tmin, UI32, "Grp4 OC2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OC2F_Tmax, UI32, "Grp4 OC2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OC2F_Ta, UI32, "Grp4 OC2+ Additional time", "" ) \
DPOINT_DEFN( G4_EftTripCount, UI8, "Grp4 Applicable to EFT mode: The threshould count of the number of protection trips before disabling fast trips.", "" ) \
DPOINT_DEFN( G4_OC2F_ImaxEn, EnDis, "Grp4 OC2+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_OC2F_Imax, UI32, "Grp4 OC2+ Max current multiplier", "" ) \
DPOINT_DEFN( G4_OC2F_DirEn, EnDis, "Grp4 OC2+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC2F_Tr1, TripMode, "Grp4 OC2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC2F_Tr2, TripMode, "Grp4 OC2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC2F_Tr3, TripMode, "Grp4 OC2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC2F_Tr4, TripMode, "Grp4 OC2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OC2F_TccUD, TccCurve, "Grp4 OC2+ User defined curve", "" ) \
DPOINT_DEFN( G4_OC3F_Ip, UI32, "Grp4 OC3+ Pickup current", "" ) \
DPOINT_DEFN( G4_OC3F_TDtMin, UI32, "Grp4 OC3+ DT tripping time", "" ) \
DPOINT_DEFN( G4_OC3F_TDtRes, UI32, "Grp4 OC3+ DT reset time", "" ) \
DPOINT_DEFN( G4_OC3F_DirEn, EnDis, "Grp4 OC3+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC3F_Tr1, TripMode, "Grp4 OC3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC3F_Tr2, TripMode, "Grp4 OC3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC3F_Tr3, TripMode, "Grp4 OC3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC3F_Tr4, TripMode, "Grp4 OC3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OC1R_Ip, UI32, "Grp4 OC1- Pickup current", "" ) \
DPOINT_DEFN( G4_OC1R_Tcc, UI16, "Grp4 OC1- TCC Type", "" ) \
DPOINT_DEFN( G4_OC1R_TDtMin, UI32, "Grp4 OC1- DT min tripping time", "" ) \
DPOINT_DEFN( G4_OC1R_TDtRes, UI32, "Grp4 OC1- DT reset time", "" ) \
DPOINT_DEFN( G4_OC1R_Tm, UI32, "Grp4 OC1- Time multiplier", "" ) \
DPOINT_DEFN( G4_OC1R_Imin, UI32, "Grp4 OC1- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OC1R_Tmin, UI32, "Grp4 OC1- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OC1R_Tmax, UI32, "Grp4 OC1- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OC1R_Ta, UI32, "Grp4 OC1- Additional time", "" ) \
DPOINT_DEFN( G4_EftTripWindow, UI8, "Grp4 Applicable to EFT mode: The period window used when monitoring the number of protection trips.", "" ) \
DPOINT_DEFN( G4_OC1R_ImaxEn, EnDis, "Grp4 OC1- Enable Max mode", "" ) \
DPOINT_DEFN( G4_OC1R_Imax, UI32, "Grp4 OC1- Max current multiplier", "" ) \
DPOINT_DEFN( G4_OC1R_DirEn, EnDis, "Grp4 OC1- Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC1R_Tr1, TripMode, "Grp4 OC1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC1R_Tr2, TripMode, "Grp4 OC1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC1R_Tr3, TripMode, "Grp4 OC1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC1R_Tr4, TripMode, "Grp4 OC1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OC1R_TccUD, TccCurve, "Grp4 OC1- User defined curve", "" ) \
DPOINT_DEFN( G4_OC2R_Ip, UI32, "Grp4 OC2- Pickup current", "" ) \
DPOINT_DEFN( G4_OC2R_Tcc, UI16, "Grp4 OC2- TCC Type", "" ) \
DPOINT_DEFN( G4_OC2R_TDtMin, UI32, "Grp4 OC2- DT min tripping time", "" ) \
DPOINT_DEFN( G4_OC2R_TDtRes, UI32, "Grp4 OC2- DT reset time", "" ) \
DPOINT_DEFN( G4_OC2R_Tm, UI32, "Grp4 OC2- Time multiplier", "" ) \
DPOINT_DEFN( G4_OC2R_Imin, UI32, "Grp4 OC2- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OC2R_Tmin, UI32, "Grp4 OC2- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OC2R_Tmax, UI32, "Grp4 OC2- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OC2R_Ta, UI32, "Grp4 OC2- Additional time", "" ) \
DPOINT_DEFN( G4_OC2R_ImaxEn, EnDis, "Grp4 OC2- Enable Max mode", "" ) \
DPOINT_DEFN( G4_OC2R_Imax, UI32, "Grp4 OC2- Max current multiplier", "" ) \
DPOINT_DEFN( G4_OC2R_DirEn, EnDis, "Grp4 OC2- Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC2R_Tr1, TripMode, "Grp4 OC2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC2R_Tr2, TripMode, "Grp4 OC2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC2R_Tr3, TripMode, "Grp4 OC2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC2R_Tr4, TripMode, "Grp4 OC2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OC2R_TccUD, TccCurve, "Grp4 OC2- User defined curve", "" ) \
DPOINT_DEFN( G4_OC3R_Ip, UI32, "Grp4 OC3- Pickup current", "" ) \
DPOINT_DEFN( G4_OC3R_TDtMin, UI32, "Grp4 OC3- DT tripping time", "" ) \
DPOINT_DEFN( G4_OC3R_TDtRes, UI32, "Grp4 OC3- DT reset time", "" ) \
DPOINT_DEFN( G4_OC3R_DirEn, EnDis, "Grp4 OC3- Enable directional protection", "" ) \
DPOINT_DEFN( G4_OC3R_Tr1, TripMode, "Grp4 OC3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_OC3R_Tr2, TripMode, "Grp4 OC3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_OC3R_Tr3, TripMode, "Grp4 OC3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_OC3R_Tr4, TripMode, "Grp4 OC3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF1F_Ip, UI32, "Grp4 EF1+ Pickup current", "" ) \
DPOINT_DEFN( G4_EF1F_Tcc, UI16, "Grp4 EF1+ TCC Type", "" ) \
DPOINT_DEFN( G4_EF1F_TDtMin, UI32, "Grp4 EF1+ DT min tripping time", "" ) \
DPOINT_DEFN( G4_EF1F_TDtRes, UI32, "Grp4 EF1+ DT reset time", "" ) \
DPOINT_DEFN( G4_EF1F_Tm, UI32, "Grp4 EF1+ Time multiplier", "" ) \
DPOINT_DEFN( G4_EF1F_Imin, UI32, "Grp4 EF1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EF1F_Tmin, UI32, "Grp4 EF1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EF1F_Tmax, UI32, "Grp4 EF1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EF1F_Ta, UI32, "Grp4 EF1+ Additional time", "" ) \
DPOINT_DEFN( G4_DEPRECATED_G1EF1F_Tres, UI32, "Grp4 EF1+ Reset time", "" ) \
DPOINT_DEFN( G4_EF1F_ImaxEn, EnDis, "Grp4 EF1+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_EF1F_Imax, UI32, "Grp4 EF1+ Max current multiplier", "" ) \
DPOINT_DEFN( G4_EF1F_DirEn, EnDis, "Grp4 EF1+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF1F_Tr1, TripMode, "Grp4 EF1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF1F_Tr2, TripMode, "Grp4 EF1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF1F_Tr3, TripMode, "Grp4 EF1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF1F_Tr4, TripMode, "Grp4 EF1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF1F_TccUD, TccCurve, "Grp4 EF1+ User defined curve", "" ) \
DPOINT_DEFN( G4_EF2F_Ip, UI32, "Grp4 EF2+ Pickup current", "" ) \
DPOINT_DEFN( G4_EF2F_Tcc, UI16, "Grp4 EF2+ TCC Type", "" ) \
DPOINT_DEFN( G4_EF2F_TDtMin, UI32, "Grp4 EF2+ DT min tripping time", "" ) \
DPOINT_DEFN( G4_EF2F_TDtRes, UI32, "Grp4 EF2+ DT reset time", "" ) \
DPOINT_DEFN( G4_EF2F_Tm, UI32, "Grp4 EF2+ Time multiplier", "" ) \
DPOINT_DEFN( G4_EF2F_Imin, UI32, "Grp4 EF2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EF2F_Tmin, UI32, "Grp4 EF2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EF2F_Tmax, UI32, "Grp4 EF2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EF2F_Ta, UI32, "Grp4 EF2+ Additional time", "" ) \
DPOINT_DEFN( G4_DEPRECATED_G1EF2F_Tres, UI32, "Grp4 EF2+ Reset time", "" ) \
DPOINT_DEFN( G4_EF2F_ImaxEn, EnDis, "Grp4 EF2+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_EF2F_Imax, UI32, "Grp4 EF2+ Max mode", "" ) \
DPOINT_DEFN( G4_EF2F_DirEn, EnDis, "Grp4 EF2+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF2F_Tr1, TripMode, "Grp4 EF2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF2F_Tr2, TripMode, "Grp4 EF2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF2F_Tr3, TripMode, "Grp4 EF2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF2F_Tr4, TripMode, "Grp4 EF2+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF2F_TccUD, TccCurve, "Grp4 EF2+ User defined curve", "" ) \
DPOINT_DEFN( G4_EF3F_Ip, UI32, "Grp4 EF3+ Pickup current", "" ) \
DPOINT_DEFN( G4_EF3F_TDtMin, UI32, "Grp4 EF3+ DT tripping time", "" ) \
DPOINT_DEFN( G4_EF3F_TDtRes, UI32, "Grp4 EF3+ DT reset time", "" ) \
DPOINT_DEFN( G4_EF3F_DirEn, EnDis, "Grp4 EF3+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF3F_Tr1, TripMode, "Grp4 EF3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF3F_Tr2, TripMode, "Grp4 EF3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF3F_Tr3, TripMode, "Grp4 EF3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF3F_Tr4, TripMode, "Grp4 EF3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF1R_Ip, UI32, "Grp4 EF1- Pickup current", "" ) \
DPOINT_DEFN( G4_EF1R_Tcc, UI16, "Grp4 EF1- TCC Type", "" ) \
DPOINT_DEFN( G4_EF1R_TDtMin, UI32, "Grp4 EF1- DT min tripping time", "" ) \
DPOINT_DEFN( G4_EF1R_TDtRes, UI32, "Grp4 EF1- DT reset time", "" ) \
DPOINT_DEFN( G4_EF1R_Tm, UI32, "Grp4 EF1- Time multiplier", "" ) \
DPOINT_DEFN( G4_EF1R_Imin, UI32, "Grp4 EF1- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EF1R_Tmin, UI32, "Grp4 EF1- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EF1R_Tmax, UI32, "Grp4 EF1- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EF1R_Ta, UI32, "Grp4 EF1- Additional time", "" ) \
DPOINT_DEFN( G4_DEPRECATED_G1EF1R_Tres, UI32, "Grp4 EF1- Reset time", "" ) \
DPOINT_DEFN( G4_EF1R_ImaxEn, EnDis, "Grp4 EF1- Enable Max mode", "" ) \
DPOINT_DEFN( G4_EF1R_Imax, UI32, "Grp4 EF1- Max current multiplier", "" ) \
DPOINT_DEFN( G4_EF1R_DirEn, EnDis, "Grp4 EF1- Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF1R_Tr1, TripMode, "Grp4 EF1- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF1R_Tr2, TripMode, "Grp4 EF1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF1R_Tr3, TripMode, "Grp4 EF1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF1R_Tr4, TripMode, "Grp4 EF1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF1R_TccUD, TccCurve, "Grp4 EF1- User defined curve", "" ) \
DPOINT_DEFN( G4_EF2R_Ip, UI32, "Grp4 EF2- Pickup current", "" ) \
DPOINT_DEFN( G4_EF2R_Tcc, UI16, "Grp4 EF2- TCC Type", "" ) \
DPOINT_DEFN( G4_EF2R_TDtMin, UI32, "Grp4 EF2- DT min tripping time", "" ) \
DPOINT_DEFN( G4_EF2R_TDtRes, UI32, "Grp4 EF2- DT reset time", "" ) \
DPOINT_DEFN( G4_EF2R_Tm, UI32, "Grp4 EF2- Time multiplier", "" ) \
DPOINT_DEFN( G4_EF2R_Imin, UI32, "Grp4 EF2- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EF2R_Tmin, UI32, "Grp4 EF2- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EF2R_Tmax, UI32, "Grp4 EF2- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EF2R_Ta, UI32, "Grp4 EF2- Additional time", "" ) \
DPOINT_DEFN( G4_EF2R_ImaxEn, EnDis, "Grp4 EF2- Enable Max mode", "" ) \
DPOINT_DEFN( G4_EF2R_Imax, UI32, "Grp4 EF2- Max current multiplier", "" ) \
DPOINT_DEFN( G4_EF2R_DirEn, EnDis, "Grp4 EF2- Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF2R_Tr1, TripMode, "Grp4 EF2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF2R_Tr2, TripMode, "Grp4 EF2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF2R_Tr3, TripMode, "Grp4 EF2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF2R_Tr4, TripMode, "Grp4 EF2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_EF2R_TccUD, TccCurve, "Grp4 EF2- User defined curve", "" ) \
DPOINT_DEFN( G4_EF3R_Ip, UI32, "Grp4 EF3- Pickup current", "" ) \
DPOINT_DEFN( G4_EF3R_TDtMin, UI32, "Grp4 EF3- DT tripping time", "" ) \
DPOINT_DEFN( G4_EF3R_TDtRes, UI32, "Grp4 EF3- DT reset time", "" ) \
DPOINT_DEFN( G4_EF3R_DirEn, EnDis, "Grp4 EF3- Enable directional protection", "" ) \
DPOINT_DEFN( G4_EF3R_Tr1, TripMode, "Grp4 EF3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_EF3R_Tr2, TripMode, "Grp4 EF3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_EF3R_Tr3, TripMode, "Grp4 EF3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_EF3R_Tr4, TripMode, "Grp4 EF3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_SEFF_Ip, UI32, "Grp4 SEF+ Pickup current", "" ) \
DPOINT_DEFN( G4_SEFF_TDtMin, UI32, "Grp4 SEF+ DT tripping time", "" ) \
DPOINT_DEFN( G4_SEFF_TDtRes, UI32, "Grp4 SEF+ DT reset time", "" ) \
DPOINT_DEFN( G4_SEFF_DirEn, EnDis, "Grp4 SEF+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_SEFF_Tr1, TripMode, "Grp4 SEF+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_SEFF_Tr2, TripMode, "Grp4 SEF+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_SEFF_Tr3, TripMode, "Grp4 SEF+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_SEFF_Tr4, TripMode, "Grp4 SEF+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_SEFR_Ip, UI32, "Grp4 SEF- Pickup current", "" ) \
DPOINT_DEFN( G4_SEFR_TDtMin, UI32, "Grp4 SEF- DT tripping time", "" ) \
DPOINT_DEFN( G4_SEFR_TDtRes, UI32, "Grp4 SEF- DT reset time", "" ) \
DPOINT_DEFN( G4_SEFR_DirEn, EnDis, "Grp4 SEF- Enable directional protection", "" ) \
DPOINT_DEFN( G4_SEFR_Tr1, TripMode, "Grp4 SEF- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_SEFR_Tr2, TripMode, "Grp4 SEF- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_SEFR_Tr3, TripMode, "Grp4 SEF- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_SEFR_Tr4, TripMode, "Grp4 SEF- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_OcLl_Ip, UI32, "Grp4 OC3 LL Pickup current", "" ) \
DPOINT_DEFN( G4_OcLl_TDtMin, UI32, "Grp4 OC LL3 DT tripping time", "" ) \
DPOINT_DEFN( G4_OcLl_TDtRes, UI32, "Grp4 OC LL3 DT reset time", "" ) \
DPOINT_DEFN( G4_EfLl_Ip, UI32, "Grp4 EF LL3 Pickup current", "" ) \
DPOINT_DEFN( G4_EfLl_TDtMin, UI32, "Grp4 EF LL3 DT tripping time", "" ) \
DPOINT_DEFN( G4_EfLl_TDtRes, UI32, "Grp4 EF LL3 DT reset time", "" ) \
DPOINT_DEFN( G4_Uv1_Um, UI32, "Grp4  UV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Uv1_TDtMin, UI32, "Grp4  UV1 DT tripping time", "" ) \
DPOINT_DEFN( G4_Uv1_TDtRes, UI32, "Grp4  UV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Uv1_Trm, TripMode, "Grp4 1 UV1 Trip mod", "" ) \
DPOINT_DEFN( G4_Uv2_Um, UI32, "Grp4  UV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Uv2_TDtMin, UI32, "Grp4  UV2 DT tripping time", "" ) \
DPOINT_DEFN( G4_Uv2_TDtRes, UI32, "Grp4  UV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Uv2_Trm, TripMode, "Grp4 1 UV2 Trip mod", "" ) \
DPOINT_DEFN( G4_Uv3_TDtMin, UI32, "Grp4 UV3 DT tripping time", "" ) \
DPOINT_DEFN( G4_Uv3_TDtRes, UI32, "Grp4  UV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Uv3_Trm, TripMode, "Grp4 1 UV3 Trip mod", "" ) \
DPOINT_DEFN( G4_Ov1_Um, UI32, "Grp4  OV1 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Ov1_TDtMin, UI32, "Grp4  OV1 DT tripping time", "" ) \
DPOINT_DEFN( G4_Ov1_TDtRes, UI32, "Grp4  OV1 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Ov1_Trm, TripMode, "Grp4 1 OV1 Trip mod", "" ) \
DPOINT_DEFN( G4_Ov2_Um, UI32, "Grp4  OV2 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Ov2_TDtMin, UI32, "Grp4  OV2 DT tripping time", "" ) \
DPOINT_DEFN( G4_Ov2_TDtRes, UI32, "Grp4  OV2 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Ov2_Trm, TripMode, "Grp4 1 OV2 Trip mod", "" ) \
DPOINT_DEFN( G4_Uf_Fp, UI32, "Grp4  UF Pickup frequency", "" ) \
DPOINT_DEFN( G4_Uf_TDtMin, UI32, "Grp4  UF DT tripping time", "" ) \
DPOINT_DEFN( G4_Uf_TDtRes, UI32, "Grp4  UF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Uf_Trm, TripModeDLA, "Grp4  UF Trip mode", "" ) \
DPOINT_DEFN( G4_Of_Fp, UI32, "Grp4 OF Pickup frequency", "" ) \
DPOINT_DEFN( G4_Of_TDtMin, UI32, "Grp4  OF DT tripping time", "" ) \
DPOINT_DEFN( G4_Of_TDtRes, UI32, "Grp4  OF DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Of_Trm, TripModeDLA, "Grp4  OF Trip mode", "" ) \
DPOINT_DEFN( G4_DEPRECATED_OC1F_ImaxAbs, UI32, "Grp4 OC1+ Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_OC2F_ImaxAbs, UI32, "Grp4 OC2+ Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_OC1R_ImaxAbs, UI32, "Grp4 OC1- Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_OC2R_ImaxAbs, UI32, "Grp4 OC2- Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_EF1F_ImaxAbs, UI32, "Grp4 EF1+ Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_EF2F_ImaxAbs, UI32, "Grp4 EF2+ Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_EF1R_ImaxAbs, UI32, "Grp4 EF1- Max abs current", "" ) \
DPOINT_DEFN( G4_DEPRECATED_EF2R_ImaxAbs, UI32, "Grp4 EF2- Max abs current", "" ) \
DPOINT_DEFN( G4_SstEfForward, UI8, "Grp4 EF Single shot to trip", "" ) \
DPOINT_DEFN( G4_SstSefForward, UI8, "Grp4 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G4_AbrTrest, UI32, "Grp4 The ABR restoration time in s.", "" ) \
DPOINT_DEFN( G4_AutoOpenMode, AutoOpenMode, "Grp4 AutoOpen method: Disabled/Timer/Power Flow", "" ) \
DPOINT_DEFN( G4_AutoOpenTime, UI16, "Grp4 The time in minutes to wait before auto open after a close by ABR", "" ) \
DPOINT_DEFN( G4_AutoOpenOpns, UI8, "Grp4 The number of times this element will allow ABR closes before locking out.", "" ) \
DPOINT_DEFN( G4_SstOcReverse, UI8, "Grp4 ", "" ) \
DPOINT_DEFN( G4_SstEfReverse, UI8, "Grp4 Grp 1 EF Single shot to trip", "" ) \
DPOINT_DEFN( G4_SstSefReverse, UI8, "Grp4 SEF Single shot to trip", "" ) \
DPOINT_DEFN( G4_ArUVOV_Trec, UI32, "Grp4 Under / Over voltage auto reclose time in seconds", "" ) \
DPOINT_DEFN( G4_GrpName, Str, "Grp4 _Group Name", "" ) \
DPOINT_DEFN( G4_GrpDes, Str, "Grp4 G1_Grp Description Group description", "" ) \
DPOINT_DEFN( ChEvLifetimeCounters, ChangeEvent, "This datapoint is used to log the change to lifetime counters.", "" ) \
DPOINT_DEFN( ACOUnhealthy, Signal, "ACO Unhealthy", "" ) \
DPOINT_DEFN( p2pHealth, OkFail, "p2pcomm health indicator", "" ) \
DPOINT_DEFN( SigP2PCommFail, Signal, "warning when p2pcomm fails", "" ) \
DPOINT_DEFN( ACOIsMaster, Bool, "Is this recloser ACO master?", "" ) \
DPOINT_DEFN( ACOEnableSlave, UI8, "Enable the peer as slave", "" ) \
DPOINT_DEFN( ACOEnableSlavePeer, UI8, "The remote mapped datapoint of ACOEnableSlave.", "" ) \
DPOINT_DEFN( ACOSwRqst , UI32, "Control to request an ACO close or open ", "" ) \
DPOINT_DEFN( ACOSwState , UI32, "Indication of ACO switch state. ", "" ) \
DPOINT_DEFN( ACOSwStatePeer, UI32, "Indication of ACO switch state. ", "" ) \
DPOINT_DEFN( ACOSwRqstPeer, UI32, "Control to request an ACO close or open ", "" ) \
DPOINT_DEFN( ChEvLogic, ChangeEvent, "Log change to logic settings", "" ) \
DPOINT_DEFN( SupplyHealthStatePeer, SupplyState, "The health state of peer supply source.", "" ) \
DPOINT_DEFN( ResetBinaryFaultTargets, Signal, "Request Reset Binary Fault Targets", "" ) \
DPOINT_DEFN( IaTrip, UI32, "Trip current - Phase A", "" ) \
DPOINT_DEFN( IbTrip, UI32, "Trip current - Phase B", "" ) \
DPOINT_DEFN( IcTrip, UI32, "Trip current - Phase C", "" ) \
DPOINT_DEFN( InTrip, UI32, "Trip current - Neutral", "" ) \
DPOINT_DEFN( ResetTripCurrents, Signal, "Request to reset trip currents", "" ) \
DPOINT_DEFN( ACO_TPupPeer, UI32, "Peer's ACO Time", "" ) \
DPOINT_DEFN( LoadDeadPeer, UI32, "for ACO debug purpose only", "" ) \
DPOINT_DEFN( CanIoModuleResetStatus, UI8, "IO Module reset status", "" ) \
DPOINT_DEFN( ScadaDNP3EnableCommsLog, EnDis, "Enable DNP3 comms logging", "" ) \
DPOINT_DEFN( ScadaCMSEnableCommsLog, EnDis, "Enable CMS comms logging", "" ) \
DPOINT_DEFN( ScadaHMIEnableCommsLog, EnDis, "Enable HMI comms logging", "" ) \
DPOINT_DEFN( p2pCommEnableCommsLog, EnDis, "Enable p2pcomm comms logging", "" ) \
DPOINT_DEFN( p2pCommCommsLogMaxSize, UI8, "p2pcomm comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( ScadaDNP3CommsLogMaxSize, UI8, "DNP3 comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( ScadaCMSCommsLogMaxSize, UI8, "CMS comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( ScadaHMICommsLogMaxSize, UI8, "HMI comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( ScadaT10BEnableCommsLog, EnDis, "Enable T10B comms log ", "" ) \
DPOINT_DEFN( ScadaT10BCommsLogMaxSize, UI8, "T10B comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( SigOpenLogic, Signal, "Open due to logic", "" ) \
DPOINT_DEFN( SigClosedLogic, Signal, "Closed due to logic", "" ) \
DPOINT_DEFN( ChEvIoSettings, ChangeEvent, "This datapoint is used to log 'batch' changes to I/O settings", "" ) \
DPOINT_DEFN( SigOperWarning, Signal, "Operational Warning", "" ) \
DPOINT_DEFN( SigOperWarningPeer, Signal, "Peer Operational Warning", "" ) \
DPOINT_DEFN( LogEventV, LogEventV, "For passing events with variable length critical parameter values.", "" ) \
DPOINT_DEFN( PhaseConfig, PhaseConfig, "Phase configuration", "" ) \
DPOINT_DEFN( ScadaDnp3PollWatchDogTime, UI16, "ScadaDnp3 Poll WatchDog Time (in minutes)", "" ) \
DPOINT_DEFN( ScadaT10BPollWatchDogTime, UI16, "ScadaT10B Poll WatchDog Time (in minutes)", "" ) \
DPOINT_DEFN( ScadaDnp3BinaryControlWatchDogTime, UI16, "ScadaDnp3 Binary Control WatchDog Time (in minutes)", "" ) \
DPOINT_DEFN( ScadaT10BBinaryControlWatchDogTime, UI16, "ScadaT10B Binary Control WatchDog Time(in minutes)", "" ) \
DPOINT_DEFN( ScadaDnp3Polled, UI8, "ScadaDnp3 Polled.  Set when polled by master. ", "" ) \
DPOINT_DEFN( ScadaT10BPolled, UI8, "ScadaT10B Polled.  Set when polled by master.", "" ) \
DPOINT_DEFN( ScadaDnp3CommunicationWatchDogTimeout, UI32, "ScadaDnp3 Communication WatchDog Timeout", "" ) \
DPOINT_DEFN( ScadaT10BCommunicationWatchDogTimeout, UI32, "ScadaT10B Communication WatchDog Timeout", "" ) \
DPOINT_DEFN( ScadaDnp3WatchDogControl, Signal, "ScadaDnp3 WatchDog Control", "" ) \
DPOINT_DEFN( ScadaT10BWatchDogControl, Signal, "ScadaT10B WatchDog Control", "" ) \
DPOINT_DEFN( IaLGVT, UI32, "Last Good Value Trapped for phase A", "" ) \
DPOINT_DEFN( IcLGVT, UI32, "Last Good Value Trapped for phase C", "" ) \
DPOINT_DEFN( IaMDIToday, UI32, "Maximum Demand for phase A for TODAY ", "" ) \
DPOINT_DEFN( IbMDIToday, UI32, "Maximum Demand for phase B for TODAY ", "" ) \
DPOINT_DEFN( IcMDIToday, UI32, "Maximum Demand for phase C for TODAY ", "" ) \
DPOINT_DEFN( IaMDIYesterday, UI32, "Maximum Demand for phase A for YESTERDAY ", "" ) \
DPOINT_DEFN( IbMDIYesterday, UI32, "Maximum Demand for phase B for YESTERDAY ", "" ) \
DPOINT_DEFN( IcMDIYesterday, UI32, "Maximum Demand for phase C for YESTERDAY ", "" ) \
DPOINT_DEFN( IaMDILastWeek, UI32, "Maximum Demand for phase A for LAST WEEK ", "" ) \
DPOINT_DEFN( IbMDILastWeek, UI32, "Maximum Demand for phase B for LAST WEEK ", "" ) \
DPOINT_DEFN( IcMDILastWeek, UI32, "Maximum Demand for phase C for LAST WEEK", "" ) \
DPOINT_DEFN( IbLGVT, UI32, "Last Good Value Trapped for phase B", "" ) \
DPOINT_DEFN( IdRelayNumModel, UI32, "Relay serial number - model field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelayNumPlant, UI32, "Relay serial number - plant field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelayNumDate, UI32, "Relay serial number - date field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelayNumSeq, UI32, "Relay serial number - sequence field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelaySwVer1, UI32, "Relay firmware version - Field 1. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelaySwVer2, UI32, "Relay firmware version - field 2. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelaySwVer3, UI32, "Relay firmware version - field 3. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdRelaySwVer4, UI32, "Relay firmware version - field 4. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMNumModel, UI32, "SIM serial number - model field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMNumPlant, UI32, "SIM serial number - supplier field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMNumDate, UI32, "SIM serial number - date field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMNumSeq, UI32, "SIM serial number - sequence field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMSwVer1, UI32, "SIM firmware - field 1. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMSwVer2, UI32, "SIM firmware - field 2. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMSwVer3, UI32, "SIM firmware - field 3. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdSIMSwVer4, UI32, "SIM firmware - field 4. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllVerStrs() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumModel, UI32, "Osm serial number - model field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumPlant, UI32, "Osm serial number - plant field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumDate, UI32, "Osm serial number - date field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumSeq, UI32, "Osm serial number - sequence field. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( SigRTCHwFault, Signal, "RTC Hardware Fault", "" ) \
DPOINT_DEFN( SigCtrlLinkHltToLl, Signal, "Link HLT to LL", "" ) \
DPOINT_DEFN( OscEnable, EnDis, "Enable or disable oscillography", "" ) \
DPOINT_DEFN( OscCaptureTime, OscCaptureTime, "Length of an oscillography capture.", "" ) \
DPOINT_DEFN( OscCapturePrior, OscCapturePrior, "Percentage of oscillography capture time to occur before the trigger event.", "" ) \
DPOINT_DEFN( OscOverwrite, EnDis, "Overwrite existing oscillography captures.", "" ) \
DPOINT_DEFN( OscSaveToUSB, EnDis, "Enables or disables saving oscillography captures to a USB memory stick.", "" ) \
DPOINT_DEFN( SigCtrlRqstOscCapture, Signal, "Request that the oscillography process perform a capture.", "" ) \
DPOINT_DEFN( OscEvent, OscEvent, "Event to trigger an oscillography capture", "" ) \
DPOINT_DEFN( SigPickupLSDIabc, Signal, "The currents are below LSD threshold.", "" ) \
DPOINT_DEFN( QueryGpio, UI32, "Set or query for io process regarding GPIO:\r\nUpper byte selects gpio device, or 0 to for all gpio. Lower bytes select operation: 0 to dump interesting details to system message log, 0x1 to reset gpio.", "" ) \
DPOINT_DEFN( OscEventTriggered, YesNo, "Indicates if an oscillography event has occurred.", "" ) \
DPOINT_DEFN( OscEventTriggerType, OscEvent, "Type of oscillography event that was last triggered.", "" ) \
DPOINT_DEFN( OscLogCount, UI8, "Number of oscillography logs currently in internal storage.", "" ) \
DPOINT_DEFN( OscTransferData, YesNo, "Set to Yes to copy captured oscillography data to the USB memory stick.", "" ) \
DPOINT_DEFN( HrmIaTDD, UI32, "Total Demand Distortion for Ia", "" ) \
DPOINT_DEFN( HrmIbTDD, UI32, "Total Demand Distortion for Ib", "" ) \
DPOINT_DEFN( HrmIcTDD, UI32, "Total Demand Distortion for Ic", "" ) \
DPOINT_DEFN( HrmUaTHD, UI32, "Total Harmonic Distortion for Ua", "" ) \
DPOINT_DEFN( HrmUbTHD, UI32, "Total Harmonic Distortion for Ub", "" ) \
DPOINT_DEFN( HrmUcTHD, UI32, "Total Harmonic Distortion for Uc", "" ) \
DPOINT_DEFN( HrmInTDD, UI32, "Total Demand Distortion for In", "" ) \
DPOINT_DEFN( EventLogOldestId, UI32, "Log record ID for oldest record in the current RC10 event log", "" ) \
DPOINT_DEFN( EventLogNewestId, UI32, "Log record ID for newest record in the current RC10 event log", "" ) \
DPOINT_DEFN( SettingLogOldestId, UI32, "Log record ID for oldest record in the current RC10 setting log\r\n", "" ) \
DPOINT_DEFN( SettingLogNewestId, UI32, "Log record ID for newest record in the current RC10 setting log", "" ) \
DPOINT_DEFN( FaultLogOldestId, UI32, "Log record ID for oldest record in the current RC10 fault log", "" ) \
DPOINT_DEFN( FaultLogNewestId, UI32, "Log record ID for newest record in the current RC10 fault log", "" ) \
DPOINT_DEFN( CloseOpenLogOldestId, UI32, "Log record ID for oldest record in the current RC10 close/open log", "" ) \
DPOINT_DEFN( CloseOpenLogNewestId, UI32, "Log record ID for newest record in the current RC10 close/open log", "" ) \
DPOINT_DEFN( LoadProfileOldestId, UI32, "Log record ID for oldest record in the current RC10 load profile", "" ) \
DPOINT_DEFN( LoadProfileNewestId, UI32, "Log record ID for newest record in the current RC10 load profile", "" ) \
DPOINT_DEFN( LogToCmsTransferRequest, LogTransferRequest, "The cms process makes requests to the log process to generate data to send to the CMS", "" ) \
DPOINT_DEFN( LogToCmsTransferReply, LogTransferReply, "The log process replies with the result of the generation of log data", "" ) \
DPOINT_DEFN( OscSimFilename, Str, "Name of the file to play for an oscillography simulation.", "" ) \
DPOINT_DEFN( OscSimLoopCount, UI16, "Number of times to loop an oscillography simulation; zero for infinite.", "" ) \
DPOINT_DEFN( OscSimRun, YesNo, "Starts or stops an oscillography simulation.  Set to 1 to start the simulation running.", "" ) \
DPOINT_DEFN( OscSimStatus, OscSimStatus, "Status of the current or last oscillography simulation.", "" ) \
DPOINT_DEFN( OscTraceDir, Str, "Name of the directory that stores COMTRADE trace files for oscillography captures.", "" ) \
DPOINT_DEFN( HrmIa1st, UI32, "Ia fundamental current (1st harmonic)", "" ) \
DPOINT_DEFN( HrmIb1st, UI32, "Ib fundamental current (1st harmonic)", "" ) \
DPOINT_DEFN( HrmIc1st, UI32, "Ic fundamental current (1st harmonic)", "" ) \
DPOINT_DEFN( HrmIn1st, UI32, "In fundamental current (1st harmonic)", "" ) \
DPOINT_DEFN( CmsPort, UI8, "The port ID that the CMS module will accept commands from.", "" ) \
DPOINT_DEFN( SigOpen, Signal, "Switch is open", "" ) \
DPOINT_DEFN( SigOpenProt, Signal, "Open due to Prot, OC1+, OC2+, OC3+, OC1-, OC2-, OC3-, EF1+, EF2+, EF3+, EF1-, EF2-, EF3-, SEF+, SEF-, OCLL, EFLL, UV1, UV2, UV3, OV1, OV2, OF, UF", "" ) \
DPOINT_DEFN( SigOpenOc1F, Signal, "Open due to OC1+ tripping", "" ) \
DPOINT_DEFN( SigOpenOc2F, Signal, "Open due to OC2+ tripping", "" ) \
DPOINT_DEFN( SigOpenOc3F, Signal, "Open due to OC3+ tripping", "" ) \
DPOINT_DEFN( SigOpenOc1R, Signal, "Open due to OC1- tripping", "" ) \
DPOINT_DEFN( SigOpenOc2R, Signal, "Open due to OC2- tripping", "" ) \
DPOINT_DEFN( SigOpenOc3R, Signal, "Open due to OC3- tripping", "" ) \
DPOINT_DEFN( SigOpenEf1F, Signal, "Open due to EF1+ tripping", "" ) \
DPOINT_DEFN( SigOpenEf2F, Signal, "Open due to EF2+ tripping", "" ) \
DPOINT_DEFN( SigOpenEf3F, Signal, "Open due to EF3+ tripping", "" ) \
DPOINT_DEFN( SigOpenEf1R, Signal, "Open due to EF1- tripping", "" ) \
DPOINT_DEFN( SigOpenEf2R, Signal, "Open due to EF2- tripping", "" ) \
DPOINT_DEFN( SigOpenEf3R, Signal, "Open due to EF3- tripping", "" ) \
DPOINT_DEFN( SigOpenSefF, Signal, "Open due to SEF+ tripping", "" ) \
DPOINT_DEFN( SigOpenSefR, Signal, "Open due to SEF- tripping", "" ) \
DPOINT_DEFN( SigOpenOcll, Signal, "Open due to OCLL3 tripping (formerly OCLL)", "" ) \
DPOINT_DEFN( SigOpenEfll, Signal, "Open due to EFLL3 tripping (formerly EFLL)", "" ) \
DPOINT_DEFN( SigOpenUv1, Signal, "Open due to UV1 tripping", "" ) \
DPOINT_DEFN( SigOpenUv2, Signal, "Open due to UV2 tripping", "" ) \
DPOINT_DEFN( SigOpenUv3, Signal, "Open due to UV3 tripping", "" ) \
DPOINT_DEFN( SigOpenOv1, Signal, "Open due to OV1 tripping", "" ) \
DPOINT_DEFN( SigOpenOv2, Signal, "Open due to OV2 tripping", "" ) \
DPOINT_DEFN( SigOpenOf, Signal, "Open due to OF tripping", "" ) \
DPOINT_DEFN( SigOpenUf, Signal, "Open due to UF tripping", "" ) \
DPOINT_DEFN( SigOpenRemote, Signal, "Open due to SCADA or I/O control signal", "" ) \
DPOINT_DEFN( SigOpenSCADA, Signal, "Open due to SCADA control signal", "" ) \
DPOINT_DEFN( SigOpenIO, Signal, "Open due to I/O control signal", "" ) \
DPOINT_DEFN( SigOpenLocal, Signal, "Open due to HMI, PC contol signal or manual tripping", "" ) \
DPOINT_DEFN( SigOpenMMI, Signal, "Open due to HMI control signal", "" ) \
DPOINT_DEFN( SigOpenPC, Signal, "Open due to PC control signal", "" ) \
DPOINT_DEFN( DEPRECATED_SigOpenManual, Signal, "Open due to manual tripping(no origin discovered)", "" ) \
DPOINT_DEFN( SigAlarm, Signal, "Alarm ouput of any of OC1+, OC2+, OC3+, OC1-, OC2-, OC3-, EF1+, EF2+, EF3+, EF1-, EF2-, EF3-, SEF+, SEF-, UV1, UV2, UV3, OV1, OV2, OF, UF elements activated", "" ) \
DPOINT_DEFN( SigAlarmOc1F, Signal, "Alarm output of OC1+ activated", "" ) \
DPOINT_DEFN( SigAlarmOc2F, Signal, "Alarm output of OC2+ activated", "" ) \
DPOINT_DEFN( SigAlarmOc3F, Signal, "Alarm output of OC3+ activated", "" ) \
DPOINT_DEFN( SigAlarmOc1R, Signal, "Alarm output of OC1- activated", "" ) \
DPOINT_DEFN( SigAlarmOc2R, Signal, "Alarm output of OC2- activated", "" ) \
DPOINT_DEFN( SigAlarmOc3R, Signal, "Alarm output of OC3- activated", "" ) \
DPOINT_DEFN( SigAlarmEf1F, Signal, "Alarm output of EF1+ activated", "" ) \
DPOINT_DEFN( SigAlarmEf2F, Signal, "Alarm output of EF2+ activated", "" ) \
DPOINT_DEFN( SigAlarmEf3F, Signal, "Alarm output of EF3+ activated", "" ) \
DPOINT_DEFN( SigAlarmEf1R, Signal, "Alarm output of EF1- activated", "" ) \
DPOINT_DEFN( SigAlarmEf2R, Signal, "Alarm output of EF2- activated", "" ) \
DPOINT_DEFN( SigAlarmEf3R, Signal, "Alarm output of EF3- activated", "" ) \
DPOINT_DEFN( SigAlarmSefF, Signal, "Alarm output of SEF+ activated", "" ) \
DPOINT_DEFN( SigAlarmSefR, Signal, "Alarm output of SEF- activated", "" ) \
DPOINT_DEFN( SigAlarmUv1, Signal, "Alarm output of UV1 activated", "" ) \
DPOINT_DEFN( SigAlarmUv2, Signal, "Alarm output of UV2 activated", "" ) \
DPOINT_DEFN( SigAlarmUv3, Signal, "Alarm output of UV3 activated", "" ) \
DPOINT_DEFN( SigAlarmOv1, Signal, "Alarm output of OV1 activated", "" ) \
DPOINT_DEFN( SigAlarmOv2, Signal, "Alarm output of OV2 activated", "" ) \
DPOINT_DEFN( SigAlarmOf, Signal, "Alarm output of OF activated", "" ) \
DPOINT_DEFN( SigAlarmUf, Signal, "Alarm output of UF activated", "" ) \
DPOINT_DEFN( SigClosed, Signal, "Switch is closed", "" ) \
DPOINT_DEFN( SigClosedAR, Signal, "Closed due to AR OCEF, AR SEF, AR UV, ABR contol signal", "" ) \
DPOINT_DEFN( SigClosedAR_OcEf, Signal, "Closed due to AR OCEFSEF reclosing. AR SEF signal is not used any more. SigClosedAR_OcEf is the primary signal to report AR operations.", "" ) \
DPOINT_DEFN( SigClosedAR_Sef, Signal, "Closed due to AR OCEFSEF reclosing. AR SEF signal is not used any more. SigClosedAR_OcEf is the primary signal to report AR operations.", "" ) \
DPOINT_DEFN( SigClosedAR_Uv, Signal, "Closed due to AR UV reclosing", "" ) \
DPOINT_DEFN( SigClosedAR_Ov, Signal, "Closed due to AR OV reclosing", "" ) \
DPOINT_DEFN( SigClosedABR, Signal, "Closed due to ABR reclosing", "" ) \
DPOINT_DEFN( SigClosedRemote, Signal, "Closed due to SCADA or I/O control signal", "" ) \
DPOINT_DEFN( SigClosedSCADA, Signal, "Closed due to SCADA control signal", "" ) \
DPOINT_DEFN( SigClosedIO, Signal, "Closed due to I/O control signal", "" ) \
DPOINT_DEFN( SigClosedLocal, Signal, "Closed due to HMI, PC contol signal or undefined closed", "" ) \
DPOINT_DEFN( SigClosedMMI, Signal, "Closed due to HMI control signal", "" ) \
DPOINT_DEFN( SigClosedPC, Signal, "Closed due to PC control signal", "" ) \
DPOINT_DEFN( SigClosedUndef, Signal, "Source of close undefined, recognized after On(Power) or servicing", "" ) \
DPOINT_DEFN( CmsPortBaud, BaudRateType, "CMS default port's BAUD rate based on the Linux's termbits.h MACRO. Please to see the BaudRateType enum to tell the proper Baud rate value.  ", "" ) \
DPOINT_DEFN( DEPRECATED_CmsAuxPortBaud, BaudRateType, "CMS default port's BAUD rate based on the Linux's termbits.h MACRO. Please to see the BaudRateType enum to tell the proper Baud rate value.  ", "" ) \
DPOINT_DEFN( CmsPortCrcCnt, I32, "CMS default port CRC error counter", "" ) \
DPOINT_DEFN( CmsAuxPortCrcCnt, UI32, "CMS AUX port's CRC error counter", "" ) \
DPOINT_DEFN( HrmUa1st, UI32, "Ua fundamental voltage (1st harmonic)", "" ) \
DPOINT_DEFN( CanDataRequestSim, CanObjType, "request data from SIM device on the CAN network", "" ) \
DPOINT_DEFN( ProtCfgInUse, UI32, "The base address of the protection configuration in use. Set by the protection process after loading a new config.", "" ) \
DPOINT_DEFN( CanSimBusErr, UI32, "CAN bus error status", "" ) \
DPOINT_DEFN( ChEvNonGroup, ChangeEvent, "This datapoint is used to log 'batch' changes to non-grouped protection settings.", "" ) \
DPOINT_DEFN( ChEvGrp1, ChangeEvent, "This datapoint is used to log 'batch' changes to protection group 1 settings", "" ) \
DPOINT_DEFN( ChEvGrp2, ChangeEvent, "This datapoint is used to log 'batch' changes to protection group 2 settings.", "" ) \
DPOINT_DEFN( ChEvGrp3, ChangeEvent, "This datapoint is used to log 'batch' changes to protection group 2 settings.", "" ) \
DPOINT_DEFN( ChEvGrp4, ChangeEvent, "This datapoint is used to log 'batch' changes to protection group 4 settings.", "" ) \
DPOINT_DEFN( HrmUb1st, UI32, "Ub fundamental voltage (1st harmonic)", "" ) \
DPOINT_DEFN( SigCtrlProtOn, Signal, "Protection is switched on \r\n", "" ) \
DPOINT_DEFN( SigCtrlGroup1On, Signal, "Active Group 1 \r\n", "" ) \
DPOINT_DEFN( SigCtrlGroup2On, Signal, "Active Group 2\r\n", "" ) \
DPOINT_DEFN( SigCtrlGroup3On, Signal, "Active Group 3\r\n", "" ) \
DPOINT_DEFN( SigCtrlGroup4On, Signal, "Active Group 4 \r\n", "" ) \
DPOINT_DEFN( SigCtrlEFOn, Signal, "Earth overcurrent element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlSEFOn, Signal, "Sensitive Earth fault element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlUVOn, Signal, "Undervoltage element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlUFOn, Signal, "Under frequency element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlOVOn, Signal, "Overvoltage element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlOFOn, Signal, "Overfrequency element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlCLPOn, Signal, "Cold load pickup element is switched on\r\n", "" ) \
DPOINT_DEFN( SigCtrlLLOn, Signal, "Live line element is switched on \r\n", "" ) \
DPOINT_DEFN( SigCtrlAROn, Signal, "OC/NPS/EF/SEF, VE reclosing and ABR are switched on", "" ) \
DPOINT_DEFN( SigCtrlMNTOn, Signal, "MNT is enabled", "" ) \
DPOINT_DEFN( SigCtrlABROn, Signal, "Control to turn on/off Automatic Backfeed Restoration. NOTE: Should be flagged as volatile as we do not want the relay to restart with ABR on.\r\n", "" ) \
DPOINT_DEFN( SigStatusConnectionEstablished, Signal, "?CONNECT? string received from DCE or the DCD signal has changed state from low to high.", "" ) \
DPOINT_DEFN( SigStatusConnectionCompleted, Signal, "Hangup due to inactive timeout or received ?NO CARRIER? string from DCE or the DCD signal has changed from high to low.", "" ) \
DPOINT_DEFN( SigStatusDialupInitiated, Signal, "Started dialling to master due to unsolicited response.", "" ) \
DPOINT_DEFN( SigStatusDialupFailed, Signal, "Failed to dial in to Master", "" ) \
DPOINT_DEFN( SigMalfunction, Signal, "Activated by any other malfunction", "" ) \
DPOINT_DEFN( HrmUc1st, UI32, "Uc fundamental voltage (1st harmonic)", "" ) \
DPOINT_DEFN( HrmIa2nd, UI32, "Ia 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb2nd, UI32, "Ib 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc2nd, UI32, "Ic 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigMalfRelay, Signal, "Internal fault of Relay module detected", "" ) \
DPOINT_DEFN( SigMalfSimComms, Signal, "No response from SIM", "" ) \
DPOINT_DEFN( SigMalfIo1Comms, Signal, "No response from I/O1", "" ) \
DPOINT_DEFN( SigMalfIo2Comms, Signal, "No response from I/O2", "" ) \
DPOINT_DEFN( SigMalfIo1Fault, Signal, "I/O1 internal fault detected", "" ) \
DPOINT_DEFN( SigMalfIo2Fault, Signal, "I/O2 internal fault detected", "" ) \
DPOINT_DEFN( SigWarning, Signal, "Activated by any Warning", "" ) \
DPOINT_DEFN( HrmIn2nd, UI32, "In 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa2nd, UI32, "Ua 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( CntrOcATrips, I32, "Fault Counter of OC A Trips", "" ) \
DPOINT_DEFN( CntrOcBTrips, I32, "Fault counter of OC B Trips", "" ) \
DPOINT_DEFN( CntrOcCTrips, I32, "Fault counter of OC C Trips", "" ) \
DPOINT_DEFN( CntrEfTrips, I32, "Fault counter of EF Trips", "" ) \
DPOINT_DEFN( CntrSefTrips, I32, "Fault counter of SEF Trips", "" ) \
DPOINT_DEFN( CntrUvTrips, I32, "Fault counter of UV Trips", "" ) \
DPOINT_DEFN( CntrOvTrips, I32, "Fault counter of OV Trips", "" ) \
DPOINT_DEFN( CntrUfTrips, I32, "Fault counter of UF Trips", "" ) \
DPOINT_DEFN( CntrOfTrips, I32, "Fault counter of OF Trips", "" ) \
DPOINT_DEFN( TripCnt, UI32, "Lifetime counter of Total Close/Open Operation. This value is calculated from TripCnta, TripCntb, and TripCntc; trip count can not be reset by writing to this DPID.", "" ) \
DPOINT_DEFN( MechanicalWear, UI32, "Mechanical wear (min value is no wear, max value is 100%). Ratio of total operations and maximum operations (see DPIDs 'SP_OC1' and 'TripCnt').", "" ) \
DPOINT_DEFN( BreakerWear, UI32, "Breaker wear (min value is no wear, max value is 100%). Value is calculated from BreakerWeara (b|c), writing to this DPID does not reset breaker wear.", "" ) \
DPOINT_DEFN( MeasCurrIa, UI32, "Measurement Currents: Ia", "" ) \
DPOINT_DEFN( MeasCurrIb, UI32, "Measurement Current: Ib", "" ) \
DPOINT_DEFN( MeasCurrIc, UI32, "Measurement Current: Ic", "" ) \
DPOINT_DEFN( MeasCurrIn, UI32, "Measurement Current: In", "" ) \
DPOINT_DEFN( MeasVoltUa, UI32, "Measurement Voltage: Ua", "" ) \
DPOINT_DEFN( MeasVoltUb, UI32, "Measurement Voltage: Ub", "" ) \
DPOINT_DEFN( MeasVoltUc, UI32, "Measurement Voltage: Uc", "" ) \
DPOINT_DEFN( MeasVoltUab, UI32, "Measurement Voltage: Uab", "" ) \
DPOINT_DEFN( MeasVoltUbc, UI32, "Measurement Voltage: Ubc", "" ) \
DPOINT_DEFN( MeasVoltUca, UI32, "Measurement Voltage: Uca", "" ) \
DPOINT_DEFN( MeasVoltUr, UI32, "Measurement Voltage: Ur", "" ) \
DPOINT_DEFN( MeasVoltUs, UI32, "Measurement Voltage: Us", "" ) \
DPOINT_DEFN( MeasVoltUt, UI32, "Measurement Voltage: Ut", "" ) \
DPOINT_DEFN( MeasVoltUrs, UI32, "Measurement Voltage: Urs", "" ) \
DPOINT_DEFN( MeasVoltUst, UI32, "Measurement Voltage: Ust", "" ) \
DPOINT_DEFN( MeasVoltUtr, UI32, "Measurement Voltage: Utr", "" ) \
DPOINT_DEFN( MeasFreqabc, UI32, "Measurement Frequency: abc", "" ) \
DPOINT_DEFN( MeasFreqrst, UI32, "Measurement Frequency: rst", "" ) \
DPOINT_DEFN( MeasPowerPhase3kVA, UI32, "Measurement Power: Phase3kVA", "" ) \
DPOINT_DEFN( MeasPowerPhase3kW, UI32, "Measurement Power: Phase3kW", "" ) \
DPOINT_DEFN( MeasPowerPhase3kVAr, UI32, "Measurement Power: Phase3kVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseAkVA, UI32, "Measurement Power: PhaseAkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseAkW, UI32, "Measurement Power: PhaseAkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseAkVAr, UI32, "Measurement Power: PhaseAkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseBkVA, UI32, "Measurement Power: PhaseBkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseBkW, UI32, "Measurement Power: PhaseBkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseBkVAr, UI32, "Measurement Power: PhaseBkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseCkVA, UI32, "Measurement Power: PhaseCkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseCkW, UI32, "Measurement Power: PhaseCkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseCkVAr, UI32, "Measurement Power: PhaseCkVAr", "" ) \
DPOINT_DEFN( MeasPowerFactor3phase, I32, "Measurement Power Factor: 3 phase", "" ) \
DPOINT_DEFN( MeasPowerFactorAphase, I32, "Measurement Power Factor: A phase", "" ) \
DPOINT_DEFN( MeasPowerFactorBphase, I32, "Measurement Power Factor: B phase", "" ) \
DPOINT_DEFN( MeasPowerFactorCphase, I32, "Measurement Power Factor: C phase", "" ) \
DPOINT_DEFN( HrmUb2nd, UI32, "Ub 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( MeasPowerFlowDirectionOC, ProtDirOut, "Measurement Power Flow Direction: OC", "" ) \
DPOINT_DEFN( MeasPowerFlowDirectionEF, ProtDirOut, "Measurement Power Flow Direction: EF", "" ) \
DPOINT_DEFN( MeasPowerFlowDirectionSEF, ProtDirOut, "Measurement Power Flow Direction: SEF", "" ) \
DPOINT_DEFN( MeasEnergyPhase3FkVAh, UI32, "Lifetime Measurement Energy: Phase3FkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhase3FkVArh, UI32, "Lifetime Measurement Energy: Phase3FkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhase3FkWh, UI32, "Lifetime Measurement Energy: Phase3FkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseAFkVAh, UI32, "Lifetime Measurement Energy: PhaseAFkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseAFkVArh, UI32, "Lifetime Measurement Energy: PhaseAFkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseAFkWh, UI32, "Lifetime Measurement Energy: PhaseAFkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBFkVAh, UI32, "Lifetime Measurement Energy: PhaseBFkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBFkVArh, UI32, "Lifetime Measurement Energy: PhaseBFkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBFkWh, UI32, "Lifetime Measurement Energy: PhaseBFkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCFkVAh, UI32, "Lifetime Measurement Energy: PhaseCFkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCFkVArh, UI32, "Lifetime Measurement Energy: PhaseCFkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCFkWh, UI32, "Lifetime Measurement Energy: PhaseCFkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhase3RkVAh, UI32, "Lifetime Measurement Energy: Phase3RkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhase3RkVArh, UI32, "Lifetime Measurement Energy: Phase3RkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhase3RkWh, UI32, "Lifetime Measurement Energy: Phase3RkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseARkVAh, UI32, "Lifetime Measurement Energy: PhaseARkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseARkVArh, UI32, "Lifetime Measurement Energy: PhaseARkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseARkWh, UI32, "Lifetime Measurement Energy: PhaseARkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBRkVAh, UI32, "Lifetime Measurement Energy: PhaseBRkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBRkVArh, UI32, "Lifetime Measurement Energy: PhaseBRkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseBRkWh, UI32, "Lifetime Measurement Energy: PhaseBRkWh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCRkVAh, UI32, "Lifetime Measurement Energy: PhaseCRkVAh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCRkVArh, UI32, "Lifetime Measurement Energy: PhaseCRkVArh", "" ) \
DPOINT_DEFN( MeasEnergyPhaseCRkWh, UI32, "Lifetime Measurement Energy: PhaseCRkWh", "" ) \
DPOINT_DEFN( IdRelayNumber, SerialNumber, "Identification: Relay Number", "" ) \
DPOINT_DEFN( IdRelayDbVer, Str, "Identification: Relay Database Version", "" ) \
DPOINT_DEFN( IdRelaySoftwareVer, Str, "Identification: Relay Software Version", "" ) \
DPOINT_DEFN( IdRelayHardwareVer, Str, "Identification: Relay Hardware Version", "" ) \
DPOINT_DEFN( IdSIMNumber, SerialNumber, "Identification: SIM Number", "" ) \
DPOINT_DEFN( IdSIMSoftwareVer, Str, "Identification: SIM Software Version", "" ) \
DPOINT_DEFN( IdSIMHardwareVer, Str, "Identification: SIM Hardware Version", "" ) \
DPOINT_DEFN( IdPanelNumber, SerialNumber, "Identification: Panel Number", "" ) \
DPOINT_DEFN( IdPanelHMIVer, Str, "Identification: Panel Hardware Version", "" ) \
DPOINT_DEFN( IdPanelSoftwareVer, Str, "Identification: Panel Software Version", "" ) \
DPOINT_DEFN( IdPanelHardwareVer, Str, "Identification: Panel Hardware Version", "" ) \
DPOINT_DEFN( SysDateTime, TimeStamp, "System Date and Time", "" ) \
DPOINT_DEFN( HltEnableCid, DbClientId, "The CID of the process that enabled HLT.  This is set by the prot configurator process when approving the setting of HLT.  It is also used by config process when determining whether a request to disable HLT should be approved.", "" ) \
DPOINT_DEFN( SysControlMode, LocalRemote, "System Status: Local/Remote Mode", "" ) \
DPOINT_DEFN( MeasLoadProfDef, LoadProfileDefType, "Load Profile definition, byte[0-1] always set to 1 by CMS, ", "" ) \
DPOINT_DEFN( MeasLoadProfTimer, UI16, "Load profile interval timer in mins. (1, 5, 15, 20, 30, 60, 120)", "" ) \
DPOINT_DEFN( HrmUc2nd, UI32, "Uc 2nd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SimSwReqOpen, UI8, "*TEST DPOINT* This datapoint is used to signal an open request. The idea being that non protection processes will write to this point to signal an open request.\r\n\r\nNOTE: This point is highly likely to be deprecated.  It is only here for temporary dev. purposes.", "" ) \
DPOINT_DEFN( SimSwReqClose, UI8, "*TEST DPOINT* This datapoint is used to signal a close request. The idea being that non protection processes will write to this point to signal a close request.\r\n\r\nNOTE: This point is highly likely to be deprecated.  It is only here for temporary dev. purposes.", "" ) \
DPOINT_DEFN( HrmIa3rd, UI32, "Ia 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigCtrlRqstOpen, Signal, "Request the switch to open", "" ) \
DPOINT_DEFN( SigCtrlRqstClose, Signal, "Request the switch to close", "" ) \
DPOINT_DEFN( SigCtrlRemoteOn, Signal, "Control mode is set Remote", "" ) \
DPOINT_DEFN( SigGenLockout, Signal, "All AR OCEF, AR SEF, ABR elements are set in the O1 state ", "" ) \
DPOINT_DEFN( SigGenARInit, Signal, "Any of AR OCEF, AR SEF, AR UV or ABR elements set in one of O2, O3 or O4 states", "" ) \
DPOINT_DEFN( SigGenProtInit, Signal, "Logical OR of AR initiated and Pickup signals", "" ) \
DPOINT_DEFN( HrmIb3rd, UI32, "Ib 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( swsimEn, UI8, "This value en/disables the switch simulator.  If the value is even the simulator is enabled. This value should not be confused with dpId 2262 (enSwSimulator). The role of enSwSimulator is to tell the simultor whether to use the switch simulator (i.e . whether to set this point) during a simulation run.", "" ) \
DPOINT_DEFN( HrmIc3rd, UI32, "Ic 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusActive, Signal, "Set if Trip or Close Active or failed. If failed, reset when next sucessfull trip or close", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripFail, Signal, "Opening time exceeds 60ms or no confirmation received that open command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseFail, Signal, "Closing time exceeds 100ms or no confirmation received that close command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripActive, Signal, "Set while trip active", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseActive, Signal, "Set while close active", "" ) \
DPOINT_DEFN( SigSwitchPositionStatusUnavailable, Signal, "OSM Position Status is Unavailable due to being disconnected or a malfunction", "" ) \
DPOINT_DEFN( SigSwitchManualTrip, Signal, "Open due to manual operation", "" ) \
DPOINT_DEFN( SigSwitchDisconnectionStatus, Signal, "OSM Disconnected", "" ) \
DPOINT_DEFN( HrmIn3rd, UI32, "In 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigSwitchLockoutStatusMechaniclocked, Signal, "OSM Mechanically Locked Out, Trip ring pulled down", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusCoilOc, Signal, "OSM Actuator 1 Coil open circuit", "" ) \
DPOINT_DEFN( SigOsmActuatorFaultStatusCoilSc, Signal, "OSM coil short circuit detected", "" ) \
DPOINT_DEFN( SigOsmLimitFaultStatusFault, Signal, "OSM Limit Switch Fault", "" ) \
DPOINT_DEFN( SigDriverStatusNotReady, Signal, "SIM Actuator Driver Not Ready", "" ) \
DPOINT_DEFN( SigBatteryStatusAbnormal, Signal, "Battery is either high, low or disconnected", "" ) \
DPOINT_DEFN( SigBatteryChargerStatusFlat, Signal, "Battery Charge State: Flat", "" ) \
DPOINT_DEFN( SigBatteryChargerStatusNormal, Signal, "Battery Charge State: Normal", "" ) \
DPOINT_DEFN( SigBatteryChargerStatusLowPower, Signal, "Battery charge state is in low power mode", "" ) \
DPOINT_DEFN( SigBatteryChargerStatusTrickle, Signal, "Battery Charge State: Trickle", "" ) \
DPOINT_DEFN( SigBatteryChargerStatusFails, Signal, "Battery charger fault", "" ) \
DPOINT_DEFN( SigLowPowerBatteryCharge, Signal, "High system power, puts battery charger in low power charge state", "" ) \
DPOINT_DEFN( SigExtSupplyStatusOff, Signal, "External supply is off", "" ) \
DPOINT_DEFN( SigExtSupplyStatusOverLoad, Signal, "External load overload", "" ) \
DPOINT_DEFN( SigUPSStatusAcOff, Signal, "UPS is in \"AC Off\" state", "" ) \
DPOINT_DEFN( SigUPSStatusBatteryOff, Signal, "UPS is in \"Battery Off\" state", "" ) \
DPOINT_DEFN( SigUPSPowerDown, Signal, "System shutdown in less than 5 min due to low battery level", "" ) \
DPOINT_DEFN( HrmUa3rd, UI32, "Ua 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb3rd, UI32, "Ub 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigModuleSimHealthFault, Signal, "SIM Module Fault", "" ) \
DPOINT_DEFN( SigModuleTypeSimDisconnected, Signal, "SIM Disconnected", "" ) \
DPOINT_DEFN( SigModuleTypeIo1Connected, Signal, "IO1 Connected", "" ) \
DPOINT_DEFN( SigModuleTypeIo2Connected, Signal, "IO2 Connected", "" ) \
DPOINT_DEFN( SigModuleTypePcConnected, Signal, "PC Connected", "" ) \
DPOINT_DEFN( SigCANControllerOverrun, Signal, "CAN Bus Overrun(from SIM Side)", "" ) \
DPOINT_DEFN( SigCANControllerError, Signal, "CAN Bus Error (from SIM Side)", "" ) \
DPOINT_DEFN( SigCANMessagebufferoverflow, Signal, "CAN Buf Overflow (from SIM Side)", "" ) \
DPOINT_DEFN( swsimInLockout, UI8, "BOOL flag indicating that an open to Lockout was initiated.  This is reset when the switch is closed. NOTE: Do not use this flag to determine if in Lockout, use SigGenLockout instead.  Applies to phase A only in single-triple configurations.", "" ) \
DPOINT_DEFN( fpgaBaseAddr, UI32, "This is the base address of the FPGA. Note that this is set by dbServer at startup; the default value provided is ignored.", "" ) \
DPOINT_DEFN( MeasCurrI1, UI32, "Measurement Currents: I1", "" ) \
DPOINT_DEFN( MeasCurrI2, UI32, "Measurement Currents: I2", "" ) \
DPOINT_DEFN( MeasVoltUar, UI32, "Measurement Voltage: Uar", "" ) \
DPOINT_DEFN( MeasVoltUbs, UI32, "Measurement Voltage: Ubs", "" ) \
DPOINT_DEFN( MeasVoltUct, UI32, "Measurement Voltage: Uct", "" ) \
DPOINT_DEFN( MeasVoltU0, UI32, "Measurement Voltage: U0", "" ) \
DPOINT_DEFN( MeasVoltU1, UI32, "Measurement Voltage: U1", "" ) \
DPOINT_DEFN( MeasVoltU2, UI32, "Measurement Voltage: U2", "" ) \
DPOINT_DEFN( MeasA0, I32, "Measurement A0:\r\nThe 21-bit value is scaled in pi-radians with a range from -pi to +pi.  The 21 bit (signed integer) value is sign extended to fill the 32 bit buffer; therefore this value can be treated as a normal I32.\r\n\r\nTo convert the value into degrees: divide the number by 2^18 and multiply by 180.\r\n\r\n", "" ) \
DPOINT_DEFN( MeasA1, I32, "Measurement A1:\r\nThe 21-bit value is scaled in pi-radians with a range from -pi to +pi.  The 21 bit (signed integer) value is sign extended to fill the 32 bit buffer; therefore this value can be treated as a normal I32.\r\n\r\nTo convert the value into degrees: divide the number by 2^18 and multiply by 180.\r\n\r\n", "" ) \
DPOINT_DEFN( MeasA2, I32, "Measurement A2:\r\nThe 21-bit value is scaled in pi-radians with a range from -pi to +pi.  The 21 bit (signed integer) value is sign extended to fill the 32 bit buffer; therefore this value can be treated as a normal I32.\r\n\r\nTo convert the value into degrees: divide the number by 2^18 and multiply by 180.\r\n\r\n", "" ) \
DPOINT_DEFN( MeasPhSABC, MeasPhaseSeqAbcType, "Measurement PhSABC", "" ) \
DPOINT_DEFN( MeasPhSRST, MeasPhaseSeqRstType, "Measurement PhSRST", "" ) \
DPOINT_DEFN( HrmUc3rd, UI32, "Uc 3rd harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa4th, UI32, "Ia 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb4th, UI32, "Ib 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc4th, UI32, "Ic 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( smpFpgaDataValid, I8, "FPGA's data is valid, this will be set by the SMP process after downloading the FPGA image. ", "" ) \
DPOINT_DEFN( SigClosedAR_VE, Signal, "Closed due to AR VE reclosing.  (TRUE if closed because of either AR UV or AR OV).", "" ) \
DPOINT_DEFN( HrmIn4th, UI32, "In 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa4th, UI32, "Ua 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb4th, UI32, "Ub 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( seqSimulatorFname, Str, "The name of the simulator sequence .CSV file.", "" ) \
DPOINT_DEFN( enSwSimulator, UI8, "This BOOL value will enable the use of the switch simulator while running a simulator sequence.", "" ) \
DPOINT_DEFN( enSeqSimulator, UI8, "Setting this value to non-zero will start the simulator sequence run.  Setting this to '2' will continuously run the simulator sequence.\r\n\r\nSetting this value to zero will abort a active simulator run.", "" ) \
DPOINT_DEFN( HrmUc4th, UI32, "Uc 4th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa5th, UI32, "Ia 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh1, IoStatus, "IO1 Input Channel1", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh2, IoStatus, "IO1 Input Channel2", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh3, IoStatus, "IO1 Input Channel3", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh4, IoStatus, "IO1 Input Channel4", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh5, IoStatus, "IO1 Input Channel5", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh6, IoStatus, "IO1 Input Channel6", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh7, IoStatus, "IO1 Input Channel7", "" ) \
DPOINT_DEFN( IoSettingIo1InputCh8, IoStatus, "IO1 Input Channel8", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh1, IoStatus, "IO2 Input Channel1", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh2, IoStatus, "IO2 Input Channel2", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh3, IoStatus, "IO2 Input Channel3", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh4, IoStatus, "IO2 Input Channel4", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh5, IoStatus, "IO2 Input Channel5", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh6, IoStatus, "IO2 Input Channel6", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh7, IoStatus, "IO2 Input Channel7", "" ) \
DPOINT_DEFN( IoSettingIo2InputCh8, IoStatus, "IO2 Input Channel8", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh1, IoStatus, "IO1 Output Channel1", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh2, IoStatus, "IO1 Output Channel2", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh3, IoStatus, "IO1 Output Channel3", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh4, IoStatus, "IO1 Output Channel4", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh5, IoStatus, "IO1 Output Channel5", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh6, IoStatus, "IO1 Output Channel6", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh7, IoStatus, "IO1 Output Channel7", "" ) \
DPOINT_DEFN( IoSettingIo1OutputCh8, IoStatus, "IO1 Output Channel8", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh1, IoStatus, "IO2 Output Channel1", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh2, IoStatus, "IO2 Output Channel2", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh3, IoStatus, "IO2 Output Channel3", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh4, IoStatus, "IO2 Output Channel4", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh5, IoStatus, "IO2 Output Channel5", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh6, IoStatus, "IO2 Output Channel6", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh7, IoStatus, "IO2 Output Channel7", "" ) \
DPOINT_DEFN( IoSettingIo2OutputCh8, IoStatus, "IO2 Output Channel8", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh1, UI16, "IO Setting: IO1 Output Recognition Time Channel1 ", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh2, UI16, "IO Setting: IO1 Output Recognition Time Channel2", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh3, UI16, "IO Setting: IO1 Output Recognition Time Channel3", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh4, UI16, "IO Setting: IO1 Output Recognition Time Channel4", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh5, UI16, "IO Setting: IO1 Output Recognition Time Channel5", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh6, UI16, "IO Setting: IO1 Output Recognition Time Channel6", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh7, UI16, "IO Setting: IO1 Output Recognition Time Channel7", "" ) \
DPOINT_DEFN( IoSettingIo1TrecCh8, UI16, "IO Setting: IO1 Output Recognition Time Channel8", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh1, UI16, "IO Setting: IO2 Output Recognition Time Channel1", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh2, UI16, "IO Setting: IO2 Output Recognition Time Channel2", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh3, UI16, "IO Setting: IO2 Output Recognition Time Channel3", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh4, UI16, "IO Setting: IO2 Output Recognition Time Channel4", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh5, UI16, "IO Setting: IO2 Output Recognition Time Channel5", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh6, UI16, "IO Setting: IO2 Output Recognition Time Channel6", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh7, UI16, "IO Setting: IO2 Output Recognition Time Channel7", "" ) \
DPOINT_DEFN( IoSettingIo2TrecCh8, UI16, "IO Setting: IO2 Output Recognition Time Channel8", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh1, UI16, "IO Setting: IO1 Output Reset Time Channel1", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh2, UI16, "IO Setting: IO1 Output Reset Time Channel2", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh3, UI16, "IO Setting: IO1 Output Reset Time Channel3", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh4, UI16, "IO Setting: IO1 Output Reset Time Channel4", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh5, UI16, "IO Setting: IO1 Output Reset Time Channel5", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh6, UI16, "IO Setting: IO1 Output Reset Time Channel6", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh7, UI16, "IO Setting: IO1 Output Reset Time Channel7", "" ) \
DPOINT_DEFN( IoSettingIo1TresCh8, UI16, "IO Setting: IO1 Output Reset Time Channel8", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh1, UI16, "IO Setting: IO2 Output Reset Time Channel1", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh2, UI16, "IO Setting: IO2 Output Reset Time Channel2", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh3, UI16, "IO Setting: IO2 Output Reset Time Channel3", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh4, UI16, "IO Setting: IO2 Output Reset Time Channel4", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh5, UI16, "IO Setting: IO2 Output Reset Time Channel5", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh6, UI16, "IO Setting: IO2 Output Reset Time Channel6", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh7, UI16, "IO Setting: IO2 Output Reset Time Channel7", "" ) \
DPOINT_DEFN( IoSettingIo2TresCh8, UI16, "IO Setting: IO2 Output Reset Time Channel8", "" ) \
DPOINT_DEFN( IoSettingRpnStrLoc1, LogicStr, "IO RPN String for I Local Channel1", "" ) \
DPOINT_DEFN( IoSettingRpnStrLoc2, LogicStr, "IO RPN String for I Local Channel2", "" ) \
DPOINT_DEFN( IoSettingRpnStrLoc3, LogicStr, "IO RPN String for I Local Channel3", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In1, LogicStr, "IO RPN String for IO1 input  Channel1", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In2, LogicStr, "IO RPN String for IO1 input  Channel2", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In3, LogicStr, "IO RPN String for IO1 input  Channel3", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In4, LogicStr, "IO RPN String for IO1 input  Channel4", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In5, LogicStr, "IO RPN String for IO1 input  Channel5", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In6, LogicStr, "IO RPN String for IO1 input  Channel6", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In7, LogicStr, "IO RPN String for IO1 input  Channel7", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1In8, LogicStr, "IO RPN String for IO1 input  Channel8", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out1, LogicStr, "IO RPN String for IO1 output Channel1", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out2, LogicStr, "IO RPN String for IO1 output Channel2", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out3, LogicStr, "IO RPN String for IO1 output Channel3", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out4, LogicStr, "IO RPN String for IO1 output Channel4", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out5, LogicStr, "IO RPN String for IO1 output Channel5", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out6, LogicStr, "IO RPN String for IO1 output Channel6", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out7, LogicStr, "IO RPN String for IO1 output Channel7", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo1Out8, LogicStr, "IO RPN String for IO1 output Channel8", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In1, LogicStr, "IO RPN String for IO2 input  Channel1", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In2, LogicStr, "IO RPN String for IO2 input  Channel2", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In3, LogicStr, "IO RPN String for IO2 input  Channel3", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In4, LogicStr, "IO RPN String for IO2 input  Channel4", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In5, LogicStr, "IO RPN String for IO2 input  Channel5", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In6, LogicStr, "IO RPN String for IO2 input  Channel6", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In7, LogicStr, "IO RPN String for IO2 input  Channel7", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2In8, LogicStr, "IO RPN String for IO2 input  Channel8", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out1, LogicStr, "IO RPN String for IO2 output Channel1", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out2, LogicStr, "IO RPN String for IO2 output Channel2", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out3, LogicStr, "IO RPN String for IO2 output Channel3", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out4, LogicStr, "IO RPN String for IO2 output Channel4", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out5, LogicStr, "IO RPN String for IO2 output Channel5", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out6, LogicStr, "IO RPN String for IO2 output Channel6", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out7, LogicStr, "IO RPN String for IO2 output Channel7", "" ) \
DPOINT_DEFN( IoSettingRpnStrIo2Out8, LogicStr, "IO RPN String for IO2 output Channel8", "" ) \
DPOINT_DEFN( IoSettingILocMode, IOSettingMode, "IO Setting: Local inputs mode\r\n0:Disable, 1:Enable", "" ) \
DPOINT_DEFN( IoSettingIo1Mode, GPIOSettingMode, "IO Setting: IO1 Mode\r\n0:Disable, 1:Enable, 2:Test1, 3:Test2, 4:Test3", "" ) \
DPOINT_DEFN( IoSettingIo2Mode, GPIOSettingMode, "IO Setting: IO2 Mode\r\n0:Disable, 1:Enable, 2:Test1, 3:Test2, 4:Test3", "" ) \
DPOINT_DEFN( TestIo, UI8, "This is point is used for the testing purpose. \r\n\r\n\r\n", "" ) \
DPOINT_DEFN( MeasPowerPhaseF3kVA, UI32, "Measurement Power (Forward): Phase3kVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseF3kW, UI32, "Measurement Power (Forward): Phase3kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseF3kVAr, UI32, "Measurement Power (Forward): Phase3kVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseFAkVA, UI32, "Measurement Power (Forward): PhaseAkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseFAkW, UI32, "Measurement Power (Forward): PhaseAkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseFAkVAr, UI32, "Measurement Power (Forward): PhaseAkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseFBkVA, UI32, "Measurement Power (Forward): PhaseBkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseFBkW, UI32, "Measurement Power (Forward): PhaseBkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseFBkVAr, UI32, "Measurement Power (Forward): PhaseBkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseFCkVA, UI32, "Measurement Power (Forward): PhaseCkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseFCkW, UI32, "Measurement Power (Forward): PhaseCkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseFCkVAr, UI32, "Measurement Power (Forward): PhaseCkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseR3kVA, UI32, "Measurement Power (Reverse): Phase3kVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseR3kW, UI32, "Measurement Power (Reverse): Phase3kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseR3kVAr, UI32, "Measurement Power (Reverse): Phase3kVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseRAkVA, UI32, "Measurement Power (Reverse): PhaseAkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseRAkW, UI32, "Measurement Power (Reverse): PhaseAkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseRAkVAr, UI32, "Measurement Power (Reverse): PhaseAkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseRBkVA, UI32, "Measurement Power (Reverse): PhaseBkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseRBkW, UI32, "Measurement Power (Reverse): PhaseBkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseRBkVAr, UI32, "Measurement Power (Reverse): PhaseBkVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseRCkVA, UI32, "Measurement Power (Reverse): PhaseCkVA", "" ) \
DPOINT_DEFN( MeasPowerPhaseRCkW, UI32, "Measurement Power (Reverse): PhaseCkW", "" ) \
DPOINT_DEFN( MeasPowerPhaseRCkVAr, UI32, "Measurement Power (Reverse): PhaseCkVAr", "" ) \
DPOINT_DEFN( ProtOcDir, ProtDirOut, "Over current (OC) protection's direction output(F/R/?)", "" ) \
DPOINT_DEFN( ProtEfDir, ProtDirOut, "Earth fault (EF) protection's direction output (F/R/?) ", "" ) \
DPOINT_DEFN( ProtSefDir, ProtDirOut, "Sensitive earth fault (SEF) protection direction output (F/R/?)", "" ) \
DPOINT_DEFN( HrmIb5th, UI32, "Ib 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3FkVAh, UI32, "Load profile interval Energy for Forward 3 Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3FkVArh, UI32, "Load profile interval Energy for Forward 3 Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3FkWh, UI32, "Load profile interval Energy for Forward 3 Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgAFkVAh, UI32, "Load profile interval Energy for Forward A Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgAFkVArh, UI32, "Load profile interval Energy for Forward A Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgAFkWh, UI32, "Load profile interval Energy for Forward A Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBFkVAh, UI32, "Load profile interval Energy for Forward B Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBFkVArh, UI32, "Load profile interval Energy for Forward B Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBFkWh, UI32, "Load profile interval Energy for Forward B Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCFkVAh, UI32, "Load profile interval Energy for Forward C Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCFkVArh, UI32, "Load profile interval Energy for Forward C Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCFkWh, UI32, "Load profile interval Energy for Forward C Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3RkVAh, UI32, "Load profile interval Energy for Reverse 3 Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3RkVArh, UI32, "Load profile interval Energy for Reverse 3 Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrg3RkWh, UI32, "Load profile interval Energy for Reverse 3 Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgARkVAh, UI32, "Load profile interval Energy for Reverse A Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgARkVArh, UI32, "Load profile interval Energy for Reverse A Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgARkWh, UI32, "Load profile interval Energy for Reverse A Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBRkVAh, UI32, "Load profile interval Energy for Reverse B Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBRkVArh, UI32, "Load profile interval Energy for Reverse B Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgBRkWh, UI32, "Load profile interval Energy for Reverse B Phase  in kWh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCRkVAh, UI32, "Load profile interval Energy for Reverse C Phase  in kVAh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCRkVArh, UI32, "Load profile interval Energy for Reverse C Phase  in kVArh", "" ) \
DPOINT_DEFN( MeasLoadProfEnrgCRkWh, UI32, "Load profile interval Energy for Reverse C Phase  in kWh", "" ) \
DPOINT_DEFN( FaultProfileDataAddr, UI32, "This value provides the address of the FaultProfileData structure maintained by the protection process", "" ) \
DPOINT_DEFN( dbSaveFName, Str, "The name of the database saved values file.  This file is read from at startup and written to at shutdown.", "" ) \
DPOINT_DEFN( dbConfigFName, Str, "The name of the file used by the database server when instructed to save / read the configuration.", "" ) \
DPOINT_DEFN( dbFileCmd, DbFileCommand, "This datapoint is used to issue file save / read commands to the DB server.  On completion of the command the value will be reset to DbFCmdNone.", "" ) \
DPOINT_DEFN( HrmIc5th, UI32, "Ic 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn5th, UI32, "In 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa5th, UI32, "Ua 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb5th, UI32, "Ub 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( protLifeTickCnt, UI32, "This is a lifetime 'tick' counter for the protection process.  It is incremented by the protection process at every 1/4 cycle tick.", "" ) \
DPOINT_DEFN( HrmUc5th, UI32, "Uc 5th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkSlaveAddr, UI32, "Slave Address in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkConfirmationMode, UI8, "Confirmation Mode in SCADA DNP3 General Setting\r\n(0 never, 1 sometimes, 2 always)", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkConfirmationTimeout, UI32, "Confirmation Timeout in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkMaxRetries, UI32, "Maximum Retries in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkMaxTransFrameSize, UI32, "Maximum Transmitted Frame Size in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenLinkValidMasterAddr, Bool, "Validate Master Address in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppSBOTimeout, UI32, "SBO Timeout in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppConfirmationMode, UI8, "Confirmation Mode in SCADA DNP3 General Setting\r\n(0 Events, 1 Events and Mult)", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppConfirmationTimeout, UI32, "Confirmation Timeout in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppNeedTimeDelay, UI32, "Need Time Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppColdRestartDelay, UI32, "Cold Restart Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenAppWarmRestartDelay, UI32, "Warm Restart Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenUnsolicitedResponse, EnDis, "Unsolicited Response in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenMasterAddr, UI32, "Master Address in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenRetryDelay, UI32, "Retry Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenRetries, UI32, "Retries in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenOfflineInterval, UI32, "Offline Interval in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass1, UI8, "Class1 in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass1Events, UI32, "Events in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass1Delays, UI32, "Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass2, UI8, "Class2 in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass2Events, UI32, "Events in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass2Delays, UI32, "Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass3, UI8, "Class3 in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass3Events, UI32, "Events in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDnp3GenClass3Delays, UI32, "Delay in SCADA DNP3 General Setting", "" ) \
DPOINT_DEFN( ScadaDNP3BinaryInputs, ScadaDNP3BinaryInputs, "Binary Inputs Structure Datapoint for SCADA DNP3", "" ) \
DPOINT_DEFN( ScadaDNP3BinaryOutputs, ScadaDNP3BinaryOutputs, "Binary Outputs Structure Datapoint for SCADA DNP3", "" ) \
DPOINT_DEFN( ScadaDNP3BinaryCounters, ScadaDNP3BinaryCounters, "Binary Counters Structure Datapoint for SCADA DNP3", "" ) \
DPOINT_DEFN( ScadaDNP3AnalogInputs, ScadaDNP3AnalogInputs, "Analog Inputs Structure Datapoint for SCADA DNP3", "" ) \
DPOINT_DEFN( ScadaDNP3OctetStrings, ScadaDNP3OctetStrings, "Octet Strings Structure Datapoint for SCADA DNP3", "" ) \
DPOINT_DEFN( ScadaDNP3EnableProtocol, EnDis, "DNP3 Protocol Enabled in SCADA", "" ) \
DPOINT_DEFN( ScadaDNP3ChannelPort, CommsPort, "DNP3 Communication Channel Port in SCADA", "" ) \
DPOINT_DEFN( ScadaCMSEnableProtocol, EnDis, "Enables Port #2 for CMS.\r\nName of this datapoint is incorrect, but we can't change it. Trust this description.", "" ) \
DPOINT_DEFN( ScadaCMSUseDNP3Trans, EnDis, "CMS Use DNP3 for Transmission in SCADA", "" ) \
DPOINT_DEFN( ScadaCMSChannelPort, CommsPort, "SCADA CMS Port #2", "" ) \
DPOINT_DEFN( ScadaAnlogInputEvReport, UI8, "Analogue Event Reporting in Analog Inputs tab of SCADA DNP3\r\n(0 Report all events, 1 Report Last Event)\r\n(Discarded. Replaced with additional options in Object32-SCADA DNP3  AnalogInputs)", "" ) \
DPOINT_DEFN( CanSimTripRequestFailCode, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimTripRetry, UI8, "Description:   If there is a need for more than one retry on a trip operation due to the switches not being in the correct state, this will return that a retry has occurred and the retry number", "" ) \
DPOINT_DEFN( CanSimOperationFault, UI32, "Description:   BIT0 Close capacitor Voltage drop too high\r\n                        BIT1 Trip Capacitor Voltage drop too high\r\n                        BIT2 Trip Capacitor Voltage dropped  on a close operation (indicates cap board diode failed)\r\n\r\nThe capacitor voltages will also be returned when this operation is sent through\r\n", "" ) \
DPOINT_DEFN( CanSimCloseRequestFailCode, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n                        BIT 5: Excess operations\r\n                        BIT 6: Close Cap Not Ok\r\n                        BIT 7: Trip Cap can’t perform 2 trips\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimCloseRetry, UI8, "Description:   If there is a need for more than one retry on a close operation due to the switches not being in the correct state, this will return that a retry has occurred and the retry number", "" ) \
DPOINT_DEFN( HrmIa6th, UI32, "Ia 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( ProtStatusState, UI32, "The bitfield representing the current protection status state. The bitfield is defined by the ProtStatus enum. This value is written to the event log on ProtStatus events. This value is set by the protCfg process. This is a display only value; changing this value does _NOT_ change the actual protection state.", "" ) \
DPOINT_DEFN( IdRelayFpgaVer, Str, "Identification: Relay FPGA Version", "" ) \
DPOINT_DEFN( CmsShutdownRequest, UI8, "CMS shutdown request flag, monitored by the SMP process.\r\n2016/04/20. Renamed for CMS-1577", "" ) \
DPOINT_DEFN( HrmIb6th, UI32, "Ib 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( CanSimOSMDisableActuatorTest, UI32, "1217  - disables the ctuator test\r\n2171  - enables the actuator test\r\n \r\n", "" ) \
DPOINT_DEFN( resetRelayCtr, UI8, "CMS set 1 to this dp, and the relay will restart", "" ) \
DPOINT_DEFN( HrmIc6th, UI32, "Ic 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn6th, UI32, "In 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa6th, UI32, "Ua 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb6th, UI32, "Ub 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusQ503Failed, Signal, "SIM Actuator Driver Q503 Failed", "" ) \
DPOINT_DEFN( ClearEventLogDir, Bool, "Clear the event log directory", "" ) \
DPOINT_DEFN( ClearCloseOpenLogDir, Bool, "Clear the Close/Open log directory", "" ) \
DPOINT_DEFN( ClearFaultProfileDir, Bool, "Clear the Fault Profile directory", "" ) \
DPOINT_DEFN( ClearLoadProfileDir, Bool, "Clear the Load Profile Directory", "" ) \
DPOINT_DEFN( ClearChangeLogDir, Bool, "Clear the Change Log directory", "" ) \
DPOINT_DEFN( UpsRestartTime, TimeStamp, "Time of the last system startup. Set by the SMP when it starts, even if startup is unsuccessful.", "" ) \
DPOINT_DEFN( DbugDbServer, UI32, "This value en/disables debug/trace reporting in the dbServer.\r\n\r\n0 == No trace reports.\r\n1 == File save / read operations.", "" ) \
DPOINT_DEFN( CmsOpMode, LocalRemote, "The local/remote mode that the CMS channel is to operate with.", "" ) \
DPOINT_DEFN( CmsAuxOpMode, LocalRemote, "The local/remote mode that the CMS AUX channel is to operate with.", "" ) \
DPOINT_DEFN( CmsAux2OpMode, LocalRemote, "The local/remote mode that the CMS AUX 2 channel is to operate with.", "" ) \
DPOINT_DEFN( IoOpMode, LocalRemote, "The operating mode that the local digital inputs are to operate under.", "" ) \
DPOINT_DEFN( HmiOpMode, LocalRemote, "The local/remote mode that the HMI process is to operate under", "" ) \
DPOINT_DEFN( DEPRECATED_HmiServerLifeTickCnt, UI32, "This is a lifetime 'tick' counter for the HMI server process.  It is incremented with no specific period.", "" ) \
DPOINT_DEFN( DEPRECATED_HmiPanelLifeTickCnt, UI32, "This is a lifetime 'tick' counter for the HMI server process.  It is incremented with no specific period.", "" ) \
DPOINT_DEFN( CanSimSIMCTaCalCoefHi, UI16, "CTA  high channel calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTbCalCoefHi, UI16, "CTB high channel calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimSIMCTcCalCoefHi, UI16, "CTC high channel calibration coefficient from 0 to 65535. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUa, UI16, "Switchgear Default CUa Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUb, UI16, "Switchgear Default CUb Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUc, UI16, "Switchgear Default CUc Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUr, UI16, "Switchgear Default CUr Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUs, UI16, "Switchgear Default CUs Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCUt, UI16, "Switchgear Default CUt Coefficients. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCIa, UI16, "Switchgear Default CIa Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCIb, UI16, "Switchgear Default CIb Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCIc, UI16, "Switchgear Default CIc Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( SwitchDefaultCoefCIn, UI16, "Switchgear Default CIn Coefficent. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTaCalCoef, UI16, "CTA Default calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTbCalCoef, UI16, "CTB Default calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTcCalCoef, UI16, "CTC Default calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTnCalCoef, UI16, "CTN Default calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTTempCompCoef, UI16, "CT Default temperature Compensation Coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTaCalCoef, UI16, "CVTa Default Calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTbCalCoef, UI16, "CVTb Default Calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTcCalCoef, UI16, "CVTc Default Calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTrCalCoef, UI16, "CVTr Default Calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTsCalCoef, UI16, "CVTs Default Calibration coefficient. After multiply the \"ScalingMultply\" value, it will give the actual coefficients based on the nominated unit.", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCVTtCalCoef, UI16, "CVTt Default Calibration coefficient", "" ) \
DPOINT_DEFN( CanSimSIMDefaultCVTTempCompCoef, UI16, "CVT Default Temperature compensation coefficient", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTaCalCoefHi, UI16, "CTA  high channel default calibration coefficient from 0 to 65535", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTbCalCoefHi, UI16, "CTB high channel default calibration coefficient from 0 to 65535", "" ) \
DPOINT_DEFN( CanSimDefaultSIMCTcCalCoefHi, UI16, "CTC high channel default calibration coefficient from 0 to 65535", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUa, UI16, "Fpga Default CUa Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUb, UI16, "Fpga Default CUb Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUc, UI16, "Fpga Default CUc Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUr, UI16, "Fpga Default CUr Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUs, UI16, "Fpga Default CUs Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCUt, UI16, "Fpga Default CUt Coefficients", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIa, UI16, "Fpga Default CIa Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIb, UI16, "Fpga Default CIb Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIc, UI16, "Fpga Default CIc Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIaHi, UI16, "Fpga Default CIa High Channel Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIbHi, UI16, "Fpga Default CIb High Channel Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIcHi, UI16, "Fpga Default CIc High Channel Coefficent", "" ) \
DPOINT_DEFN( FpgaDefaultCoefCIn, UI16, "Fpga Default CIn Coefficent", "" ) \
DPOINT_DEFN( SaveSimCalibration, UI8, "when relay get notification of this DBpoint, it will save the calibration to the SIM non-volatile memory. And reset the SIM (in order to save non-volatile memory). \r\nCMS or panel process set this value to 1 after the download the calibration in whole. Then Calibration process save this value to 2 once it calculate the calibration value for the SIM. \r\nSimProg process will start the SIM bootload main program in order the save the value to SIM's flash once it get notifcation of this DB set to 2. ", "" ) \
DPOINT_DEFN( StartSimCalibration, UI8, "This is used a group (bulkset) notification from CMS about the SIM calibration values. ", "" ) \
DPOINT_DEFN( SimSwitchStatus, SwState, "0:Unknown, 1:Open, 2:Close, 3:Lockout, 4:InterLocked, 5:OpenABR, 6:Failure, 7:OpenACO, 8:OpenAC, 9:LogicallyLocked", "" ) \
DPOINT_DEFN( CanSimRdData, SimImageBytes, "SIM image download write\r\nOn request byte[0] = number of bytes to read\r\nOn return byte[0..8] is the data", "" ) \
DPOINT_DEFN( CanSimFirmwareTypeRunning, UI8, "CanSimFirmwareTypeRunning\r\n0 main code running\r\n1 mini bootloader running\r\n2 main bootloader running\r\n", "" ) \
DPOINT_DEFN( CanSimRequestMoreData, UI8, "Number of packets to send         \r\n\r\nSent by the device firmware is being loaded on to.  Therefore it has control of the data flow.\r\n", "" ) \
DPOINT_DEFN( CanSimFirmwareVerifyStatus, UI8, "0  DOWNLOAD_NEXT   - get next block of data.\r\n1  DOWNLOAD_REPT   - repeat block as data was corrupt.\r\n2  DOWNLOAD_BUSY   - unit still processing the data.\r\n\r\nWhen polled indicates what it is currently happening with the block data.\r\n", "" ) \
DPOINT_DEFN( CanSimResetExtLoad, UI8, " Off:0\r\n On:1\r\n   \r\nSetExtLoadReset: \r\nOnly If external supply is on, the external supply will be turned off for 10 sec and then on again.\r\n\r\nIf external supply off when sent through nothing will happen \r\n\r\nRelay can write to the this point\r\n", "" ) \
DPOINT_DEFN( CanSimBatteryCapacityAmpHrs, UI16, "Battery Capacity 0 – 50.00 Amp Hrs  \r\n\r\nNo Battery Connected Capacity = 0 Amp Hrs\r\nAfter battery connected the battery capacity is calculated\r\n", "" ) \
DPOINT_DEFN( CanSimPower, UI32, "Power provided to peripherals through SIM or PSC.\r\n0 to 500Watts, resolutions is 0.01Watt.\r\n\r\nNote: Older SIM's only wrote the low 16-bits of this value, leaving the high 16-bits in a random state.  Make sure to mask off the high bits before using this value.", "" ) \
DPOINT_DEFN( HmiResourceFile, Str, "The last successfully loaded HMI resource file. This will be the default resource file used when the relay restarts.", "" ) \
DPOINT_DEFN( StartSwgCalibration, UI8, "This is used a group (bulkset) notification from CMS about the SWG calibration values", "" ) \
DPOINT_DEFN( HmiPasswords, HmiPassword, "All passwords for controlling access to content in the HMI panel. ", "" ) \
DPOINT_DEFN( IabcRMS_trip, TripCurrent, "Instantaneous current for phase A, B, and C at the time the breaker was opened. This value is used internally by the relay, it can be safely ignored by CMS.", "" ) \
DPOINT_DEFN( OC_SP1, UI32, "Maximum number of operations for set point 1 (see also KA_SP1). This is the Y-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( OC_SP2, UI32, "Maximum number of operations for set point 2 (see also KA_SP2). This is the Y-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( OC_SP3, UI32, "Maximum number of operations for set point 3 (see also KA_SP3). This is the Y-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( KA_SP1, UI32, "Interruption current (RMS) in milliamps for set point 1 (see also CO_SP1). This is the X-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( KA_SP2, UI32, "Interruption current (RMS) in milliamps for set point 2 (see also CO_SP2). This is the X-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( KA_SP3, UI32, "Interruption current (RMS) in milliamps for set point 3 (see also CO_SP3). This is the X-axis for the breaker maintenace curve (CO verse KA).", "" ) \
DPOINT_DEFN( TripCnta, UI32, "Total number of open operations for the phase A breaker.", "" ) \
DPOINT_DEFN( TripCntb, UI32, "Total number of open operations for the phase B breaker.", "" ) \
DPOINT_DEFN( TripCntc, UI32, "Total number of open operations for the phase C breaker.", "" ) \
DPOINT_DEFN( BreakerWeara, UI32, "Phase A breaker wear (min value is no wear, max value is 100%). ", "" ) \
DPOINT_DEFN( BreakerWearb, UI32, "Phase B breaker wear (min value is no wear, max value is 100%). ", "" ) \
DPOINT_DEFN( BreakerWearc, UI32, "Phase C breaker wear (min value is no wear, max value is 100%). ", "" ) \
DPOINT_DEFN( IabcRMS, TripCurrent, "Instantaneous current for phase A, B, and C.", "" ) \
DPOINT_DEFN( RelayWdResponseTime, UI32, "This point is used for checking the watch dog response time. SIM should turn off the relay if relay don't respond with in 1 second. Can use this db point to control how long relay going to response. Don't ever change the default value from 0 (only let the tester change this value after relay is running). ", "" ) \
DPOINT_DEFN( ChEvLoadProfDef, ChangeEvent, "This is used to log setting change in load profile log definition", "" ) \
DPOINT_DEFN( SimulSwitchPositionStatus, UI8, "open:0, closed:1, unavailable: 2   *** Candidate for deprecation since DB v17? ***", "" ) \
DPOINT_DEFN( ActiveSwitchPositionStatus, UI32, "** Internal to simSwRqst ONLY ** You do not need to know what this is for. You do not want to know what this is for. Move along citizen.", "" ) \
DPOINT_DEFN( RelayCTaCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative. ", "" ) \
DPOINT_DEFN( RelayCTbCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCTcCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCTaCalCoefHi, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCTbCalCoefHi, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCTcCalCoefHi, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCTnCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTaCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTbCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTcCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTrCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTsCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( RelayCVTtCalCoef, I32, "This value will provide a relay FPGA calibration coefficient offset value by multiply this point, final value to FPGA will be added with this offset. Note: it can be negative.", "" ) \
DPOINT_DEFN( StartRelayCalibration, UI8, "This is used a group (bulkset) notification from CMS about the relay calibration values. ", "" ) \
DPOINT_DEFN( scadaPollPeriod, UI32, "The period (in ms) between polls of the database to check for events.  ", "" ) \
DPOINT_DEFN( scadaPollCount, UI32, "The count of the number of SCADA DB poll periods since startup. Changes to this counter trigger a scan of the DB to detect SCADA events. This is set by the prot process using dbSet() so notifications will be sent.", "" ) \
DPOINT_DEFN( HrmUc6th, UI32, "Uc 6th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa7th, UI32, "Ia 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb7th, UI32, "Ib 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc7th, UI32, "Ic 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn7th, UI32, "In 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa7th, UI32, "Ua 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb7th, UI32, "Ub 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc7th, UI32, "Uc 7th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa8th, UI32, "Ia 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb8th, UI32, "Ib 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc8th, UI32, "Ic 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn8th, UI32, "In 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa8th, UI32, "Ua 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb8th, UI32, "Ub 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc8th, UI32, "Uc 8th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa9th, UI32, "Ia 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb9th, UI32, "Ib 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc9th, UI32, "Ic 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn9th, UI32, "In 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa9th, UI32, "Ua 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb9th, UI32, "Ub 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc9th, UI32, "Uc 9th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa10th, UI32, "Ia 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb10th, UI32, "Ib 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc10th, UI32, "Ic 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn10th, UI32, "In 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa10th, UI32, "Ua 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb10th, UI32, "Ub 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc10th, UI32, "Uc 10th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa11th, UI32, "Ia 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb11th, UI32, "Ib 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc11th, UI32, "Ic 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn11th, UI32, "In 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa11th, UI32, "Ua 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb11th, UI32, "Ub 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc11th, UI32, "Uc 11th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa12th, UI32, "Ia 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb12th, UI32, "Ib 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc12th, UI32, "Ic 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn12th, UI32, "In 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa12th, UI32, "Ua 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb12th, UI32, "Ub 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc12th, UI32, "Uc 12th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa13th, UI32, "Ia 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb13th, UI32, "Ib 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc13th, UI32, "Ic 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn13th, UI32, "In 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa13th, UI32, "Ua 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb13th, UI32, "Ub 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc13th, UI32, "Uc 13th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa14th, UI32, "Ia 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb14th, UI32, "Ib 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc14th, UI32, "Ic 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn14th, UI32, "In 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa14th, UI32, "Ua 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb14th, UI32, "Ub 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc14th, UI32, "Uc 14th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIa15th, UI32, "Ia 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIb15th, UI32, "Ib 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIc15th, UI32, "Ic 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmIn15th, UI32, "In 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUa15th, UI32, "Ua 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUb15th, UI32, "Ub 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( HrmUc15th, UI32, "Uc 15th harmonic, as a percentage of the 1st harmonic.", "" ) \
DPOINT_DEFN( ConfirmUpdateType, UI8, "An indicator for the type of update to be confirmed. Allows selection of appropriate prompt to user on HMI.", "" ) \
DPOINT_DEFN( SigListWarning, SignalList, "All signals which are active for the warning signal.", "" ) \
DPOINT_DEFN( SigListMalfunction, SignalList, "List of all Malfunctions", "" ) \
DPOINT_DEFN( Rs232DteConfigType, SerialPortConfigType, "RS-232 Port configuration type", "" ) \
DPOINT_DEFN( USBAConfigType, UsbPortConfigType, "USB A Device config type for COMMS library", "" ) \
DPOINT_DEFN( USBBConfigType, UsbPortConfigType, "USB B Device config type for COMMS library", "" ) \
DPOINT_DEFN( USBCConfigType, UsbPortConfigType, "USB C Device config type for COMMS library", "" ) \
DPOINT_DEFN( Dnp3DataflowUnit, DataflowUnit, "For Dnp3 counter page display purpose. If using serial, we let user see the unit as in \"bytes\"; if using TCP/IP, we let user see \"packet\" as unit. ", "" ) \
DPOINT_DEFN( Dnp3RxCnt, UI32, "DNP3 RX data count for HMI's \"DNP3 counter\" page. This is not real DNP3 RX data count, but count of the physical port DNP3 is using. If using serial, this value will be in unit of \"bytes\"; if using TCP/IP, the unit will be \"packets\" as indicated in \"Dnp3DataflowUnit\" db point. ", "" ) \
DPOINT_DEFN( Dnp3TxCnt, UI32, "DNP3 TX data count for HMI's \"DNP3 counter\" page. This is not real DNP3 RX data count, but count of the physical port DNP3 is using. If using serial, this value will be in unit of \"bytes\"; if using TCP/IP, the unit will be \"packets\" as indicated in \"Dnp3DataflowUnit\" db point. ", "" ) \
DPOINT_DEFN( SigPickupPhA, Signal, "Pickup output of Phase A activated.", "" ) \
DPOINT_DEFN( SigPickupPhB, Signal, "Pickup output of Phase B activated.", "" ) \
DPOINT_DEFN( SigPickupPhC, Signal, "Pickup output of Phase C activated.", "" ) \
DPOINT_DEFN( SigPickupPhN, Signal, "Pickup output of Phase N activated.", "" ) \
DPOINT_DEFN( SigMalfComms, Signal, "SIM or I/O Module comms error", "" ) \
DPOINT_DEFN( SigMalfPanelComms, Signal, "Panel communication error", "" ) \
DPOINT_DEFN( SigMalfRc10, Signal, "Active due to Module fault and Comms error", "" ) \
DPOINT_DEFN( SigMalfModule, Signal, "Active due to Panel module, SIM disconnected, SIM fault, I/O1 fault, I/O2 fault, Relay Fault", "" ) \
DPOINT_DEFN( SigMalfPanelModule, Signal, "Internal fault of HMI (panel) module detected.", "" ) \
DPOINT_DEFN( SigMalfOsm, Signal, "Active due to 1, 2 or 3xCoil OC; Limit switch fault, Coil SC ", "" ) \
DPOINT_DEFN( SigMalfCanBus, Signal, "Active due to CAN Bus Overrun, Error, Overflow", "" ) \
DPOINT_DEFN( SigOpenPhA, Signal, "Open due to Phase A tripping", "" ) \
DPOINT_DEFN( SigOpenPhB, Signal, "Open due to Phase B tripping", "" ) \
DPOINT_DEFN( SigOpenPhC, Signal, "Open due to Phase C tripping", "" ) \
DPOINT_DEFN( SigOpenPhN, Signal, "Open due to Phase N tripping", "" ) \
DPOINT_DEFN( SigOpenABRAutoOpen, Signal, "Open due to ABR AutoOpen operation", "" ) \
DPOINT_DEFN( SigOpenUndef, Signal, "Open state recognized after On (Power) or switch reconnection.", "" ) \
DPOINT_DEFN( SigAlarmPhA, Signal, "Alarm output of Phase A activated", "" ) \
DPOINT_DEFN( SigAlarmPhB, Signal, "Alarm output of Phase B activated", "" ) \
DPOINT_DEFN( SigAlarmPhC, Signal, "Alarm output of Phase C activated", "" ) \
DPOINT_DEFN( SigAlarmPhN, Signal, "Alarm output of Phase N activated", "" ) \
DPOINT_DEFN( SigClosedABRAutoOpen, Signal, "Closed due to a ABR operation while an ABR Auto Open operatin count is active", "" ) \
DPOINT_DEFN( SmpTicks, SmpTick, "Tick counts for all monitored processes. Use DbClientId to index this array of UI32s.", "" ) \
DPOINT_DEFN( SignalBitFieldOpen, SignalBitField, "The bit field value indicating the open event categories.  Applies only to phase A in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldClose, SignalBitField, "The bit field value identifying the close event categories.  Applies to phase A only in single-triple configurations.", "" ) \
DPOINT_DEFN( G1_SerialDTRStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_SerialDSRStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_SerialCDStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_SerialRTSStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_SerialCTSStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_SerialRIStatus, CommsSerialPinStatus, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_ConnectionStatus, CommsConnectionStatus, "Grp1 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G1_BytesReceivedStatus, UI32, "Grp1 Bytes received on a port.", "" ) \
DPOINT_DEFN( G1_BytesTransmittedStatus, UI32, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_PacketsReceivedStatus, UI32, "Grp1 Packets received on a port.", "" ) \
DPOINT_DEFN( G1_PacketsTransmittedStatus, UI32, "Grp1 Packets Transmitted", "" ) \
DPOINT_DEFN( G1_ErrorPacketsReceivedStatus, UI32, "Grp1 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G1_ErrorPacketsTransmittedStatus, UI32, "Grp1 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G1_IpAddrStatus, IpAddr, "Grp1 IPv4 Address", "" ) \
DPOINT_DEFN( G1_SubnetMaskStatus, IpAddr, "Grp1 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G1_DefaultGatewayStatus, IpAddr, "Grp1 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G1_PortDetectedType, CommsPortDetectedType, "Grp1 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G1_PortDetectedName, Str, "Grp1 USB Port detected device name", "" ) \
DPOINT_DEFN( G1_SerialTxTestStatus, OnOff, "Grp1 serial port TX testing status", "" ) \
DPOINT_DEFN( G1_PacketsReceivedStatusIPv6, UI32, "Grp1 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G1_PacketsTransmittedStatusIPv6, UI32, "Grp1 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G1_ErrorPacketsReceivedStatusIPv6, UI32, "Grp1 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G1_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp1 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G1_Ipv6AddrStatus, Ipv6Addr, "Grp1 IPv6 Address", "" ) \
DPOINT_DEFN( G1_LanPrefixLengthStatus, UI8, "Grp1 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G1_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp1 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G1_IpVersionStatus, IpVersion, "Grp1 LAN IP version", "" ) \
DPOINT_DEFN( G2_SerialDTRStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_SerialDSRStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_SerialCDStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_SerialRTSStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_SerialCTSStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_SerialRIStatus, CommsSerialPinStatus, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_ConnectionStatus, CommsConnectionStatus, "Grp2 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G2_BytesReceivedStatus, UI32, "Grp2 Bytes received on a port.", "" ) \
DPOINT_DEFN( G2_BytesTransmittedStatus, UI32, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_PacketsReceivedStatus, UI32, "Grp2 Packets received on a port.", "" ) \
DPOINT_DEFN( G2_PacketsTransmittedStatus, UI32, "Grp2 Packets Transmitted", "" ) \
DPOINT_DEFN( G2_ErrorPacketsReceivedStatus, UI32, "Grp2 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G2_ErrorPacketsTransmittedStatus, UI32, "Grp2 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G2_IpAddrStatus, IpAddr, "Grp2 IPv4 Address", "" ) \
DPOINT_DEFN( G2_SubnetMaskStatus, IpAddr, "Grp2 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G2_DefaultGatewayStatus, IpAddr, "Grp2 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G2_PortDetectedType, CommsPortDetectedType, "Grp2 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G2_PortDetectedName, Str, "Grp2 USB Port detected device name", "" ) \
DPOINT_DEFN( G2_SerialTxTestStatus, OnOff, "Grp2 serial port TX testing status", "" ) \
DPOINT_DEFN( G2_PacketsReceivedStatusIPv6, UI32, "Grp2 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G2_PacketsTransmittedStatusIPv6, UI32, "Grp2 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G2_ErrorPacketsReceivedStatusIPv6, UI32, "Grp2 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G2_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp2 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G2_Ipv6AddrStatus, Ipv6Addr, "Grp2 IPv6 Address", "" ) \
DPOINT_DEFN( G2_LanPrefixLengthStatus, UI8, "Grp2 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G2_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp2 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G2_IpVersionStatus, IpVersion, "Grp2 LAN IP version", "" ) \
DPOINT_DEFN( G3_SerialDTRStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_SerialDSRStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_SerialCDStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_SerialRTSStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_SerialCTSStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_SerialRIStatus, CommsSerialPinStatus, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_ConnectionStatus, CommsConnectionStatus, "Grp3 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G3_BytesReceivedStatus, UI32, "Grp3 Bytes received on a port.", "" ) \
DPOINT_DEFN( G3_BytesTransmittedStatus, UI32, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_PacketsReceivedStatus, UI32, "Grp3 Packets received on a port.", "" ) \
DPOINT_DEFN( G3_PacketsTransmittedStatus, UI32, "Grp3 Packets Transmitted", "" ) \
DPOINT_DEFN( G3_ErrorPacketsReceivedStatus, UI32, "Grp3 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G3_ErrorPacketsTransmittedStatus, UI32, "Grp3 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G3_IpAddrStatus, IpAddr, "Grp3 IPv4 Address", "" ) \
DPOINT_DEFN( G3_SubnetMaskStatus, IpAddr, "Grp3 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G3_DefaultGatewayStatus, IpAddr, "Grp3 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G3_PortDetectedType, CommsPortDetectedType, "Grp3 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G3_PortDetectedName, Str, "Grp3 USB Port detected device name", "" ) \
DPOINT_DEFN( G3_SerialTxTestStatus, OnOff, "Grp3 serial port TX testing status", "" ) \
DPOINT_DEFN( G3_PacketsReceivedStatusIPv6, UI32, "Grp3 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G3_PacketsTransmittedStatusIPv6, UI32, "Grp3 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G3_ErrorPacketsReceivedStatusIPv6, UI32, "Grp3 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G3_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp3 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G3_Ipv6AddrStatus, Ipv6Addr, "Grp3 IPv6 Address", "" ) \
DPOINT_DEFN( G3_LanPrefixLengthStatus, UI8, "Grp3 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G3_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp3 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G3_IpVersionStatus, IpVersion, "Grp3 LAN IP version", "" ) \
DPOINT_DEFN( G4_SerialDTRStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_SerialDSRStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_SerialCDStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_SerialRTSStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_SerialCTSStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_SerialRIStatus, CommsSerialPinStatus, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_ConnectionStatus, CommsConnectionStatus, "Grp4 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G4_BytesReceivedStatus, UI32, "Grp4 Bytes received on a port.", "" ) \
DPOINT_DEFN( G4_BytesTransmittedStatus, UI32, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_PacketsReceivedStatus, UI32, "Grp4 Packets received on a port.", "" ) \
DPOINT_DEFN( G4_PacketsTransmittedStatus, UI32, "Grp4 Packets Transmitted", "" ) \
DPOINT_DEFN( G4_ErrorPacketsReceivedStatus, UI32, "Grp4 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G4_ErrorPacketsTransmittedStatus, UI32, "Grp4 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G4_IpAddrStatus, IpAddr, "Grp4 IPv4 Address", "" ) \
DPOINT_DEFN( G4_SubnetMaskStatus, IpAddr, "Grp4 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G4_DefaultGatewayStatus, IpAddr, "Grp4 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G4_PortDetectedType, CommsPortDetectedType, "Grp4 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G4_PortDetectedName, Str, "Grp4 USB Port detected device name", "" ) \
DPOINT_DEFN( G4_SerialTxTestStatus, OnOff, "Grp4 serial port TX testing status", "" ) \
DPOINT_DEFN( G4_PacketsReceivedStatusIPv6, UI32, "Grp4 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G4_PacketsTransmittedStatusIPv6, UI32, "Grp4 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G4_ErrorPacketsReceivedStatusIPv6, UI32, "Grp4 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G4_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp4 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G4_Ipv6AddrStatus, Ipv6Addr, "Grp4 IPv6 Address", "" ) \
DPOINT_DEFN( G4_LanPrefixLengthStatus, UI8, "Grp4 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G4_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp4 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G4_IpVersionStatus, IpVersion, "Grp4 LAN IP version", "" ) \
DPOINT_DEFN( G1_SerialPortTestCmd, Signal, "Grp1 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G1_SerialPortHangupCmd, Signal, "Grp1 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G1_BytesReceivedResetCmd, Signal, "Grp1 reset bytes Received", "" ) \
DPOINT_DEFN( G1_BytesTransmittedResetCmd, Signal, "Grp1 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G2_SerialPortTestCmd, Signal, "Grp2 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G2_SerialPortHangupCmd, Signal, "Grp2 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G2_BytesReceivedResetCmd, Signal, "Grp2 reset bytes Received", "" ) \
DPOINT_DEFN( G2_BytesTransmittedResetCmd, Signal, "Grp2 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G3_SerialPortTestCmd, Signal, "Grp3 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G3_SerialPortHangupCmd, Signal, "Grp3 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G3_BytesReceivedResetCmd, Signal, "Grp3 reset bytes Received", "" ) \
DPOINT_DEFN( G3_BytesTransmittedResetCmd, Signal, "Grp3 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G4_SerialPortTestCmd, Signal, "Grp4 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G4_SerialPortHangupCmd, Signal, "Grp4 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G4_BytesReceivedResetCmd, Signal, "Grp4 reset bytes Received", "" ) \
DPOINT_DEFN( G4_BytesTransmittedResetCmd, Signal, "Grp4 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G1_SerialBaudRate, CommsSerialBaudRate, "Grp1  Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G1_SerialDuplexType, CommsSerialDuplex, "Grp1 Serial Duplex Type", "" ) \
DPOINT_DEFN( G1_SerialRTSMode, CommsSerialRTSMode, "Grp1 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G1_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp1 Serial RTS On Level", "" ) \
DPOINT_DEFN( G1_SerialDTRMode, CommsSerialDTRMode, "Grp1 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G1_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp1 Serial DTR On Level", "" ) \
DPOINT_DEFN( G1_SerialParity, CommsSerialParity, "Grp1 Serial Parity", "" ) \
DPOINT_DEFN( G1_SerialCTSMode, CommsSerialCTSMode, "Grp1 Clear To Send setting.", "" ) \
DPOINT_DEFN( G1_SerialDSRMode, CommsSerialDSRMode, "Grp1 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G1_SerialDTRLowTime, UI32, "Grp1 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G1_SerialTxDelay, UI32, "Grp1 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G1_SerialPreTxTime, UI32, "Grp1 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G1_SerialDCDFallTime, UI32, "Grp1 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G1_SerialCharTimeout, UI32, "Grp1 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G1_SerialPostTxTime, UI32, "Grp1 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G1_SerialInactivityTime, UI32, "Grp1 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G1_SerialCollisionAvoidance, Bool, "Grp1 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G1_SerialMinIdleTime, UI32, "Grp1 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G1_SerialMaxRandomDelay, UI32, "Grp1 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G1_ModemPoweredFromExtLoad, Bool, "Grp1 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G1_ModemUsedWithLeasedLine, Bool, "Grp1 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G1_ModemInitString, Str, "Grp1 Modem Init String", "" ) \
DPOINT_DEFN( G1_ModemMaxCallDuration, UI32, "Grp1 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G1_ModemResponseTime, UI32, "Grp1 Modem Response Time", "" ) \
DPOINT_DEFN( G1_ModemHangUpCommand, Str, "Grp1 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G1_ModemOffHookCommand, Str, "Grp1 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G1_ModemAutoAnswerOn, Str, "Grp1 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G1_ModemAutoAnswerOff, Str, "Grp1 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G1_RadioPreamble, Bool, "Grp1 Radio Preamble", "" ) \
DPOINT_DEFN( G1_RadioPreambleChar, UI8, "Grp1 Radio Preamble Char", "" ) \
DPOINT_DEFN( G1_RadioPreambleRepeat, UI32, "Grp1 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G1_RadioPreambleLastChar, UI8, "Grp1 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G1_LanSpecifyIP, YesNo, "Grp1 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G1_LanIPAddr, IpAddr, "Grp1 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G1_LanSubnetMask, IpAddr, "Grp1 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G1_LanDefaultGateway, IpAddr, "Grp1 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G1_WlanNetworkSSID, Str, "Grp1 Wlan Network SSID", "" ) \
DPOINT_DEFN( G1_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp1 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G1_WlanDataEncryption, CommsWlanDataEncryption, "Grp1 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G1_WlanNetworkKey, Str, "Grp1 Wlan Network Key", "" ) \
DPOINT_DEFN( G1_WlanKeyIndex, UI32, "Grp1 Wlan Key Index", "" ) \
DPOINT_DEFN( G1_PortLocalRemoteMode, LocalRemote, "Grp1 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G1_GPRSServiceProvider, Str, "Grp1 GPRS service provider name", "" ) \
DPOINT_DEFN( G1_GPRSUserName, Str, "Grp1 GPRS user name", "" ) \
DPOINT_DEFN( G1_GPRSPassWord, Str, "Grp1 ", "" ) \
DPOINT_DEFN( G1_SerialDebugMode, YesNo, "Grp1 serial debug mode selection", "" ) \
DPOINT_DEFN( G1_SerialDebugFileName, Str, "Grp1 ", "" ) \
DPOINT_DEFN( G1_GPRSBaudRate, CommsSerialBaudRate, "Grp1 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G1_GPRSConnectionTimeout, UI32, "Grp1 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G1_DNP3InputPipe, Str, "Grp1 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G1_DNP3OutputPipe, Str, "Grp1 DNP3 output pipe", "" ) \
DPOINT_DEFN( G1_CMSInputPipe, Str, "Grp1 CMS Input Pipe", "" ) \
DPOINT_DEFN( G1_CMSOutputPipe, Str, "Grp1 CMS Output Pipe", "" ) \
DPOINT_DEFN( G1_HMIInputPipe, Str, "Grp1 HMI Input Pipe", "" ) \
DPOINT_DEFN( G1_HMIOutputPipe, Str, "Grp1 HMI Output Pipe", "" ) \
DPOINT_DEFN( G1_DNP3ChannelRequest, Str, "Grp1 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G1_DNP3ChannelOpen, Str, "Grp1 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G1_CMSChannelRequest, Str, "Grp1 CMS Channel Request", "" ) \
DPOINT_DEFN( G1_CMSChannelOpen, Str, "Grp1 CMS Channel Open", "" ) \
DPOINT_DEFN( G1_HMIChannelRequest, Str, "Grp1 HMI Channel Request", "" ) \
DPOINT_DEFN( G1_HMIChannelOpen, Str, "Grp1 HMI Channel Open", "" ) \
DPOINT_DEFN( G1_GPRSUseModemSetting, YesNo, "Grp1 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G1_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp1 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.\r\n\r\n*NOTE* Max value temporarily set to prevent setting of PTT RTS/CTS until we have that working.", "" ) \
DPOINT_DEFN( G1_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp1 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G1_T10BInputPipe, Str, "Grp1 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G1_T10BOutputPipe, Str, "Grp1 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G1_T10BChannelRequest, Str, "Grp1 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G1_T10BChannelOpen, Str, "Grp1 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G1_P2PInputPipe, Str, "Grp1 P2P input pipe ", "" ) \
DPOINT_DEFN( G1_P2POutputPipe, Str, "Grp1 P2P output pipe ", "" ) \
DPOINT_DEFN( G1_P2PChannelRequest, Str, "Grp1 P2P Channel Request", "" ) \
DPOINT_DEFN( G1_P2PChannelOpen, Str, "Grp1 P2P Channel Open", "" ) \
DPOINT_DEFN( G1_PGEInputPipe, Str, "Grp1 PGE Input Pipe", "" ) \
DPOINT_DEFN( G1_PGEOutputPipe, Str, "Grp1 PGE output pipe ", "" ) \
DPOINT_DEFN( G1_PGEChannelRequest, Str, "Grp1 PGE Channel Request", "" ) \
DPOINT_DEFN( G1_PGEChannelOpen, Str, "Grp1 PGE Channel Open", "" ) \
DPOINT_DEFN( G1_LanProvideIP, YesNo, "Grp1 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G1_LanSpecifyIPv6, YesNo, "Grp1 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G1_LanIPv6Addr, Ipv6Addr, "Grp1 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G1_LanPrefixLength, UI8, "Grp1 LAN Prefix Length", "" ) \
DPOINT_DEFN( G1_LanIPv6DefaultGateway, Ipv6Addr, "Grp1 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G1_LanIpVersion, IpVersion, "Grp1 LAN IP version", "" ) \
DPOINT_DEFN( G2_SerialBaudRate, CommsSerialBaudRate, "Grp2 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G2_SerialDuplexType, CommsSerialDuplex, "Grp2 Serial Duplex Type", "" ) \
DPOINT_DEFN( G2_SerialRTSMode, CommsSerialRTSMode, "Grp2 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G2_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp2 Serial RTS On Level", "" ) \
DPOINT_DEFN( G2_SerialDTRMode, CommsSerialDTRMode, "Grp2 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G2_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp2 Serial DTR On Level", "" ) \
DPOINT_DEFN( G2_SerialParity, CommsSerialParity, "Grp2 Serial Parity", "" ) \
DPOINT_DEFN( G2_SerialCTSMode, CommsSerialCTSMode, "Grp2 Clear To Send setting.", "" ) \
DPOINT_DEFN( G2_SerialDSRMode, CommsSerialDSRMode, "Grp2 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G2_SerialDTRLowTime, UI32, "Grp2 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G2_SerialTxDelay, UI32, "Grp2 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G2_SerialPreTxTime, UI32, "Grp2 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G2_SerialDCDFallTime, UI32, "Grp2 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G2_SerialCharTimeout, UI32, "Grp2 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G2_SerialPostTxTime, UI32, "Grp2 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G2_SerialInactivityTime, UI32, "Grp2 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G2_SerialCollisionAvoidance, Bool, "Grp2 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G2_SerialMinIdleTime, UI32, "Grp2 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G2_SerialMaxRandomDelay, UI32, "Grp2 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G2_ModemPoweredFromExtLoad, Bool, "Grp2 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G2_ModemUsedWithLeasedLine, Bool, "Grp2 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G2_ModemInitString, Str, "Grp2 Modem Init String", "" ) \
DPOINT_DEFN( G2_ModemMaxCallDuration, UI32, "Grp2 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G2_ModemResponseTime, UI32, "Grp2 Modem Response Time", "" ) \
DPOINT_DEFN( G2_ModemHangUpCommand, Str, "Grp2 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G2_ModemOffHookCommand, Str, "Grp2 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G2_ModemAutoAnswerOn, Str, "Grp2 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G2_ModemAutoAnswerOff, Str, "Grp2 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G2_RadioPreamble, Bool, "Grp2 Radio Preamble", "" ) \
DPOINT_DEFN( G2_RadioPreambleChar, UI8, "Grp2 Radio Preamble Char", "" ) \
DPOINT_DEFN( G2_RadioPreambleRepeat, UI32, "Grp2 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G2_RadioPreambleLastChar, UI8, "Grp2 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G2_LanSpecifyIP, YesNo, "Grp2 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G2_LanIPAddr, IpAddr, "Grp2 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G2_LanSubnetMask, IpAddr, "Grp2 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G2_LanDefaultGateway, IpAddr, "Grp2 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G2_WlanNetworkSSID, Str, "Grp2 Wlan Network SSID", "" ) \
DPOINT_DEFN( G2_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp2 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G2_WlanDataEncryption, CommsWlanDataEncryption, "Grp2 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G2_WlanNetworkKey, Str, "Grp2 Wlan Network Key", "" ) \
DPOINT_DEFN( G2_WlanKeyIndex, UI32, "Grp2 Wlan Key Index", "" ) \
DPOINT_DEFN( G2_PortLocalRemoteMode, LocalRemote, "Grp2 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G2_GPRSServiceProvider, Str, "Grp2 GPRS service provider name", "" ) \
DPOINT_DEFN( G2_GPRSUserName, Str, "Grp2 GPRS user name", "" ) \
DPOINT_DEFN( G2_GPRSPassWord, Str, "Grp2 ", "" ) \
DPOINT_DEFN( G2_SerialDebugMode, YesNo, "Grp2 serial debug mode selection", "" ) \
DPOINT_DEFN( G2_SerialDebugFileName, Str, "Grp2 ", "" ) \
DPOINT_DEFN( G2_GPRSBaudRate, CommsSerialBaudRate, "Grp2 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G2_GPRSConnectionTimeout, UI32, "Grp2 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G2_DNP3InputPipe, Str, "Grp2 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G2_DNP3OutputPipe, Str, "Grp2 DNP3 output pipe", "" ) \
DPOINT_DEFN( G2_CMSInputPipe, Str, "Grp2 CMS Input Pipe", "" ) \
DPOINT_DEFN( G2_CMSOutputPipe, Str, "Grp2 CMS Output Pipe", "" ) \
DPOINT_DEFN( G2_HMIInputPipe, Str, "Grp2 HMI Input Pipe", "" ) \
DPOINT_DEFN( G2_HMIOutputPipe, Str, "Grp2 HMI Output Pipe", "" ) \
DPOINT_DEFN( G2_DNP3ChannelRequest, Str, "Grp2 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G2_DNP3ChannelOpen, Str, "Grp2 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G2_CMSChannelRequest, Str, "Grp2 CMS Channel Request", "" ) \
DPOINT_DEFN( G2_CMSChannelOpen, Str, "Grp2 CMS Channel Open", "" ) \
DPOINT_DEFN( G2_HMIChannelRequest, Str, "Grp2 HMI Channel Request", "" ) \
DPOINT_DEFN( G2_HMIChannelOpen, Str, "Grp2 HMI Channel Open", "" ) \
DPOINT_DEFN( G2_GPRSUseModemSetting, YesNo, "Grp2 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G2_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp2 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G2_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp2 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G2_T10BInputPipe, Str, "Grp2 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G2_T10BOutputPipe, Str, "Grp2 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G2_T10BChannelRequest, Str, "Grp2 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G2_T10BChannelOpen, Str, "Grp2 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G2_P2PInputPipe, Str, "Grp2 P2P input pipe ", "" ) \
DPOINT_DEFN( G2_P2POutputPipe, Str, "Grp2 P2P output pipe ", "" ) \
DPOINT_DEFN( G2_P2PChannelRequest, Str, "Grp2 P2P Channel Request", "" ) \
DPOINT_DEFN( G2_P2PChannelOpen, Str, "Grp2 P2P Channel Open", "" ) \
DPOINT_DEFN( G2_PGEInputPipe, Str, "Grp2 PGE Input Pipe", "" ) \
DPOINT_DEFN( G2_PGEOutputPipe, Str, "Grp2 PGE output pipe ", "" ) \
DPOINT_DEFN( G2_PGEChannelRequest, Str, "Grp2 PGE Channel Request", "" ) \
DPOINT_DEFN( G2_PGEChannelOpen, Str, "Grp2 PGE Channel Open", "" ) \
DPOINT_DEFN( G2_LanProvideIP, YesNo, "Grp2 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G2_LanSpecifyIPv6, YesNo, "Grp2 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G2_LanIPv6Addr, Ipv6Addr, "Grp2 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G2_LanPrefixLength, UI8, "Grp2 LAN Prefix Length", "" ) \
DPOINT_DEFN( G2_LanIPv6DefaultGateway, Ipv6Addr, "Grp2 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G2_LanIpVersion, IpVersion, "Grp2 LAN IP version", "" ) \
DPOINT_DEFN( G3_SerialBaudRate, CommsSerialBaudRate, "Grp3 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G3_SerialDuplexType, CommsSerialDuplex, "Grp3 Serial Duplex Type", "" ) \
DPOINT_DEFN( G3_SerialRTSMode, CommsSerialRTSMode, "Grp3 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G3_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp3 Serial RTS On Level", "" ) \
DPOINT_DEFN( G3_SerialDTRMode, CommsSerialDTRMode, "Grp3 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G3_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp3 Serial DTR On Level", "" ) \
DPOINT_DEFN( G3_SerialParity, CommsSerialParity, "Grp3 Serial Parity", "" ) \
DPOINT_DEFN( G3_SerialCTSMode, CommsSerialCTSMode, "Grp3 Clear To Send setting.", "" ) \
DPOINT_DEFN( G3_SerialDSRMode, CommsSerialDSRMode, "Grp3 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G3_SerialDTRLowTime, UI32, "Grp3 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G3_SerialTxDelay, UI32, "Grp3 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G3_SerialPreTxTime, UI32, "Grp3 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G3_SerialDCDFallTime, UI32, "Grp3 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G3_SerialCharTimeout, UI32, "Grp3 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G3_SerialPostTxTime, UI32, "Grp3 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G3_SerialInactivityTime, UI32, "Grp3 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G3_SerialCollisionAvoidance, Bool, "Grp3 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G3_SerialMinIdleTime, UI32, "Grp3 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G3_SerialMaxRandomDelay, UI32, "Grp3 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G3_ModemPoweredFromExtLoad, Bool, "Grp3 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G3_ModemUsedWithLeasedLine, Bool, "Grp3 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G3_ModemInitString, Str, "Grp3 Modem Init String", "" ) \
DPOINT_DEFN( G3_ModemMaxCallDuration, UI32, "Grp3 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G3_ModemResponseTime, UI32, "Grp3 Modem Response Time", "" ) \
DPOINT_DEFN( G3_ModemHangUpCommand, Str, "Grp3 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G3_ModemOffHookCommand, Str, "Grp3 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G3_ModemAutoAnswerOn, Str, "Grp3 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G3_ModemAutoAnswerOff, Str, "Grp3 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G3_RadioPreamble, Bool, "Grp3 Radio Preamble", "" ) \
DPOINT_DEFN( G3_RadioPreambleChar, UI8, "Grp3 Radio Preamble Char", "" ) \
DPOINT_DEFN( G3_RadioPreambleRepeat, UI32, "Grp3 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G3_RadioPreambleLastChar, UI8, "Grp3 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G3_LanSpecifyIP, YesNo, "Grp3 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G3_LanIPAddr, IpAddr, "Grp3 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G3_LanSubnetMask, IpAddr, "Grp3 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G3_LanDefaultGateway, IpAddr, "Grp3 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G3_WlanNetworkSSID, Str, "Grp3 Wlan Network SSID", "" ) \
DPOINT_DEFN( G3_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp3 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G3_WlanDataEncryption, CommsWlanDataEncryption, "Grp3 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G3_WlanNetworkKey, Str, "Grp3 Wlan Network Key", "" ) \
DPOINT_DEFN( G3_WlanKeyIndex, UI32, "Grp3 Wlan Key Index", "" ) \
DPOINT_DEFN( G3_PortLocalRemoteMode, LocalRemote, "Grp3 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G3_GPRSServiceProvider, Str, "Grp3 GPRS service provider name", "" ) \
DPOINT_DEFN( G3_GPRSUserName, Str, "Grp3 GPRS user name", "" ) \
DPOINT_DEFN( G3_GPRSPassWord, Str, "Grp3 ", "" ) \
DPOINT_DEFN( G3_SerialDebugMode, YesNo, "Grp3 serial debug mode selection", "" ) \
DPOINT_DEFN( G3_SerialDebugFileName, Str, "Grp3 ", "" ) \
DPOINT_DEFN( G3_GPRSBaudRate, CommsSerialBaudRate, "Grp3 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G3_GPRSConnectionTimeout, UI32, "Grp3 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G3_DNP3InputPipe, Str, "Grp3 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G3_DNP3OutputPipe, Str, "Grp3 DNP3 output pipe", "" ) \
DPOINT_DEFN( G3_CMSInputPipe, Str, "Grp3 CMS Input Pipe", "" ) \
DPOINT_DEFN( G3_CMSOutputPipe, Str, "Grp3 CMS Output Pipe", "" ) \
DPOINT_DEFN( G3_HMIInputPipe, Str, "Grp3 HMI Input Pipe", "" ) \
DPOINT_DEFN( G3_HMIOutputPipe, Str, "Grp3 HMI Output Pipe", "" ) \
DPOINT_DEFN( G3_DNP3ChannelRequest, Str, "Grp3 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G3_DNP3ChannelOpen, Str, "Grp3 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G3_CMSChannelRequest, Str, "Grp3 CMS Channel Request", "" ) \
DPOINT_DEFN( G3_CMSChannelOpen, Str, "Grp3 CMS Channel Open", "" ) \
DPOINT_DEFN( G3_HMIChannelRequest, Str, "Grp3 HMI Channel Request", "" ) \
DPOINT_DEFN( G3_HMIChannelOpen, Str, "Grp3 HMI Channel Open", "" ) \
DPOINT_DEFN( G3_GPRSUseModemSetting, YesNo, "Grp3 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G3_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp3 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G3_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp3 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G3_T10BInputPipe, Str, "Grp3 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G3_T10BOutputPipe, Str, "Grp3 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G3_T10BChannelRequest, Str, "Grp3 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G3_T10BChannelOpen, Str, "Grp3 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G3_P2PInputPipe, Str, "Grp3 P2P input pipe ", "" ) \
DPOINT_DEFN( G3_P2POutputPipe, Str, "Grp3 P2P output pipe ", "" ) \
DPOINT_DEFN( G3_P2PChannelRequest, Str, "Grp3 P2P Channel Request", "" ) \
DPOINT_DEFN( G3_P2PChannelOpen, Str, "Grp3 P2P Channel Open", "" ) \
DPOINT_DEFN( G3_PGEInputPipe, Str, "Grp3 PGE Input Pipe", "" ) \
DPOINT_DEFN( G3_PGEOutputPipe, Str, "Grp3 PGE output pipe ", "" ) \
DPOINT_DEFN( G3_PGEChannelRequest, Str, "Grp3 PGE Channel Request", "" ) \
DPOINT_DEFN( G3_PGEChannelOpen, Str, "Grp3 PGE Channel Open", "" ) \
DPOINT_DEFN( G3_LanProvideIP, YesNo, "Grp3 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G3_LanSpecifyIPv6, YesNo, "Grp3 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G3_LanIPv6Addr, Ipv6Addr, "Grp3 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G3_LanPrefixLength, UI8, "Grp3 LAN Prefix Length", "" ) \
DPOINT_DEFN( G3_LanIPv6DefaultGateway, Ipv6Addr, "Grp3 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G3_LanIpVersion, IpVersion, "Grp3 LAN IP version", "" ) \
DPOINT_DEFN( G4_SerialBaudRate, CommsSerialBaudRate, "Grp4 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G4_SerialDuplexType, CommsSerialDuplex, "Grp4 Serial Duplex Type", "" ) \
DPOINT_DEFN( G4_SerialRTSMode, CommsSerialRTSMode, "Grp4 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G4_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp4 Serial RTS On Level", "" ) \
DPOINT_DEFN( G4_SerialDTRMode, CommsSerialDTRMode, "Grp4 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G4_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp4 Serial DTR On Level", "" ) \
DPOINT_DEFN( G4_SerialParity, CommsSerialParity, "Grp4 Serial Parity", "" ) \
DPOINT_DEFN( G4_SerialCTSMode, CommsSerialCTSMode, "Grp4 Clear To Send setting.", "" ) \
DPOINT_DEFN( G4_SerialDSRMode, CommsSerialDSRMode, "Grp4 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G4_SerialDTRLowTime, UI32, "Grp4 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G4_SerialTxDelay, UI32, "Grp4 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G4_SerialPreTxTime, UI32, "Grp4 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G4_SerialDCDFallTime, UI32, "Grp4 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G4_SerialCharTimeout, UI32, "Grp4 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G4_SerialPostTxTime, UI32, "Grp4 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G4_SerialInactivityTime, UI32, "Grp4 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G4_SerialCollisionAvoidance, Bool, "Grp4 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G4_SerialMinIdleTime, UI32, "Grp4 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G4_SerialMaxRandomDelay, UI32, "Grp4 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G4_ModemPoweredFromExtLoad, Bool, "Grp4 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G4_ModemUsedWithLeasedLine, Bool, "Grp4 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G4_ModemInitString, Str, "Grp4 Modem Init String", "" ) \
DPOINT_DEFN( G4_ModemMaxCallDuration, UI32, "Grp4 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G4_ModemResponseTime, UI32, "Grp4 Modem Response Time", "" ) \
DPOINT_DEFN( G4_ModemHangUpCommand, Str, "Grp4 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G4_ModemOffHookCommand, Str, "Grp4 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G4_ModemAutoAnswerOn, Str, "Grp4 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G4_ModemAutoAnswerOff, Str, "Grp4 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G4_RadioPreamble, Bool, "Grp4 Radio Preamble", "" ) \
DPOINT_DEFN( G4_RadioPreambleChar, UI8, "Grp4 Radio Preamble Char", "" ) \
DPOINT_DEFN( G4_RadioPreambleRepeat, UI32, "Grp4 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G4_RadioPreambleLastChar, UI8, "Grp4 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G4_LanSpecifyIP, YesNo, "Grp4 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G4_LanIPAddr, IpAddr, "Grp4 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G4_LanSubnetMask, IpAddr, "Grp4 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G4_LanDefaultGateway, IpAddr, "Grp4 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G4_WlanNetworkSSID, Str, "Grp4 Wlan Network SSID", "" ) \
DPOINT_DEFN( G4_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp4 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G4_WlanDataEncryption, CommsWlanDataEncryption, "Grp4 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G4_WlanNetworkKey, Str, "Grp4 Wlan Network Key", "" ) \
DPOINT_DEFN( G4_WlanKeyIndex, UI32, "Grp4 Wlan Key Index", "" ) \
DPOINT_DEFN( G4_PortLocalRemoteMode, LocalRemote, "Grp4 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G4_GPRSServiceProvider, Str, "Grp4 GPRS service provider name", "" ) \
DPOINT_DEFN( G4_GPRSUserName, Str, "Grp4 GPRS user name", "" ) \
DPOINT_DEFN( G4_GPRSPassWord, Str, "Grp4 ", "" ) \
DPOINT_DEFN( G4_SerialDebugMode, YesNo, "Grp4 serial debug mode selection", "" ) \
DPOINT_DEFN( G4_SerialDebugFileName, Str, "Grp4 ", "" ) \
DPOINT_DEFN( G4_GPRSBaudRate, CommsSerialBaudRate, "Grp4 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G4_GPRSConnectionTimeout, UI32, "Grp4 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G4_DNP3InputPipe, Str, "Grp4 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G4_DNP3OutputPipe, Str, "Grp4 DNP3 output pipe", "" ) \
DPOINT_DEFN( G4_CMSInputPipe, Str, "Grp4 CMS Input Pipe", "" ) \
DPOINT_DEFN( G4_CMSOutputPipe, Str, "Grp4 CMS Output Pipe", "" ) \
DPOINT_DEFN( G4_HMIInputPipe, Str, "Grp4 HMI Input Pipe", "" ) \
DPOINT_DEFN( G4_HMIOutputPipe, Str, "Grp4 HMI Output Pipe", "" ) \
DPOINT_DEFN( G4_DNP3ChannelRequest, Str, "Grp4 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G4_DNP3ChannelOpen, Str, "Grp4 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G4_CMSChannelRequest, Str, "Grp4 CMS Channel Request", "" ) \
DPOINT_DEFN( G4_CMSChannelOpen, Str, "Grp4 CMS Channel Open", "" ) \
DPOINT_DEFN( G4_HMIChannelRequest, Str, "Grp4 HMI Channel Request", "" ) \
DPOINT_DEFN( G4_HMIChannelOpen, Str, "Grp4 HMI Channel Open", "" ) \
DPOINT_DEFN( G4_GPRSUseModemSetting, YesNo, "Grp4 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G4_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp4 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G4_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp4 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G4_T10BInputPipe, Str, "Grp4 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G4_T10BOutputPipe, Str, "Grp4 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G4_T10BChannelRequest, Str, "Grp4 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G4_T10BChannelOpen, Str, "Grp4 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G4_P2PInputPipe, Str, "Grp4 P2P input pipe ", "" ) \
DPOINT_DEFN( G4_P2POutputPipe, Str, "Grp4 P2P output pipe ", "" ) \
DPOINT_DEFN( G4_P2PChannelRequest, Str, "Grp4 P2P Channel Request", "" ) \
DPOINT_DEFN( G4_P2PChannelOpen, Str, "Grp4 P2P Channel Open", "" ) \
DPOINT_DEFN( G4_PGEInputPipe, Str, "Grp4 PGE Input Pipe", "" ) \
DPOINT_DEFN( G4_PGEOutputPipe, Str, "Grp4 PGE output pipe ", "" ) \
DPOINT_DEFN( G4_PGEChannelRequest, Str, "Grp4 PGE Channel Request", "" ) \
DPOINT_DEFN( G4_PGEChannelOpen, Str, "Grp4 PGE Channel Open", "" ) \
DPOINT_DEFN( G4_LanProvideIP, YesNo, "Grp4 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G4_LanSpecifyIPv6, YesNo, "Grp4 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G4_LanIPv6Addr, Ipv6Addr, "Grp4 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G4_LanPrefixLength, UI8, "Grp4 LAN Prefix Length", "" ) \
DPOINT_DEFN( G4_LanIPv6DefaultGateway, Ipv6Addr, "Grp4 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G4_LanIpVersion, IpVersion, "Grp4 LAN IP version", "" ) \
DPOINT_DEFN( TripMaxCurrIa, UI32, "Max phase A current at the time of the most recent trip.", "" ) \
DPOINT_DEFN( TripMaxCurrIb, UI32, "Max phase B current at the time of the most recent trip", "" ) \
DPOINT_DEFN( TripMaxCurrIc, UI32, "Max phase C current at the time of the most recent trip.", "" ) \
DPOINT_DEFN( TripMaxCurrIn, UI32, "Max neutral current at the time of the most recent trip", "" ) \
DPOINT_DEFN( TripMinVoltP2P, UI32, "Minimum phase to phase voltage as of the most recent under voltage trip", "" ) \
DPOINT_DEFN( TripMaxVoltP2P, UI32, "Maximum phase to phase voltage as of the most recent over voltage trip", "" ) \
DPOINT_DEFN( TripMinFreq, UI32, "Minimum frequency measured up to the most recent under frequency operation.", "" ) \
DPOINT_DEFN( TripMaxFreq, UI32, "Maximum frequency measured up to the most recent over frequency trip command.", "" ) \
DPOINT_DEFN( UsbDiscMountPath, Str, "If a zero length string then there is no USB disc mounted, otherwise this value specifies the absolute file system path for the mounted USB disc (e.g. /var/usb)", "" ) \
DPOINT_DEFN( CanSimPartAndSupplierCode, Str, "SIM Part And Supplier Code", "" ) \
DPOINT_DEFN( CanSimCalibrationInvalidate, UI32, "SIM Calibration Invalidate", "" ) \
DPOINT_DEFN( ProgramSimCmd, ProgramSimCmd, "Issue commands to the SIM programmer process (progSim).", "" ) \
DPOINT_DEFN( ScadaCounterFramesTx, UI32, "Count of the number of frames transmitted", "" ) \
DPOINT_DEFN( ScadaCounterFramesRx, UI32, "Count of the number of frames received", "" ) \
DPOINT_DEFN( ScadaCounterErrorLength, UI32, "Count of the number of length errors.", "" ) \
DPOINT_DEFN( ScadaCounterErrorCrc, UI32, "Count of the number of CRC errors.", "" ) \
DPOINT_DEFN( ScadaCounterBufferC1, UI32, "Count of the number of buffered class 1 events.", "" ) \
DPOINT_DEFN( ScadaCounterBufferC2, UI32, "Count of the number of buffered class 2 events.", "" ) \
DPOINT_DEFN( ScadaCounterBufferC3, UI32, "Count of the number of buffered class 3 events.", "" ) \
DPOINT_DEFN( CommsChEvNonGroup, ChangeEvent, "This datapoint is used to log 'batch' changes to non-grouped comms settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp1, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 1 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp2, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 2 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp3, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 3 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp4, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 4 settings.", "" ) \
DPOINT_DEFN( SigPickupLSD, Signal, "Pickup output of Loss of Supply Detection elemet activated.", "" ) \
DPOINT_DEFN( SigCtrlLocalOn, Signal, "Control mode is set to Local", "" ) \
DPOINT_DEFN( SigCtrlTestBit, Signal, "The test bit, available for testing of SCADA controls.", "" ) \
DPOINT_DEFN( SigUpsPowerUp, Signal, "UPS Power Up", "" ) \
DPOINT_DEFN( SigLineSupplyStatusNormal, Signal, "Line Supply Normal. Not currently used.", "" ) \
DPOINT_DEFN( SigLineSupplyStatusOff, Signal, "Line Supply Off", "" ) \
DPOINT_DEFN( SigLineSupplyStatusHigh, Signal, "Line Supply High.\r\n\r\nNot currently used.", "" ) \
DPOINT_DEFN( SigOperationFaultCap, Signal, "SIM operation fault due to capacitor voltage drop", "" ) \
DPOINT_DEFN( SigRelayCANMessagebufferoverflow, Signal, "CAN Buf Overflow (from Relay Side)", "" ) \
DPOINT_DEFN( SigRelayCANControllerError, Signal, "CAN Bus Error (from Relay Side)", "" ) \
DPOINT_DEFN( UsbDiscCmd, UsbDiscCmd, "Specify the command which should be performed by the usbcopy process.", "" ) \
DPOINT_DEFN( UsbDiscCmdPercent, UI8, "Percentage complete for the current USB copy command (0 not started, 100 complete).", "" ) \
DPOINT_DEFN( UsbDiscStatus, UsbDiscStatus, "Status of the USB disc copy process (usbcopy).", "" ) \
DPOINT_DEFN( UsbDiscUpdateCount, UI32, "Number of upgrade files found on the USB disc which usbcopy can move to /var/nand/staging. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( UsbDiscUpdateVersions, StrArray, "Version strings for all updates found on the USB disc. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( UsbDiscError, UpdateError, "Error messages generated by usbcopy which are displayed on the user interface.", "" ) \
DPOINT_DEFN( UpdateFilesReady, Bool, "Notify the update process that new update files are ready. A process sets this DPID to true when it has added new files to the staging directory (/var/nand/staging).", "" ) \
DPOINT_DEFN( UpdateBootOk, Bool, "Set to true by SMP after it determines the relay image has booted okay. Typically this is ~150s after starting up (refer SMP_BOOT_OK_TIME_S). Setting this value will force the update process to delete files, use with caution.", "" ) \
DPOINT_DEFN( IdOsmNumber, SerialNumber, "13 character serial number for the switchgear.  For single-triple, this is the serial number of the first switch.", "" ) \
DPOINT_DEFN( PanelDelayedCloseRemain, UI16, "Number of seconds remaining before delayed close is asserted (zero means no delayed close active).", "" ) \
DPOINT_DEFN( FactorySettings, EnDis, "If enabled additional factory settings will be presented on the user interface.", "" ) \
DPOINT_DEFN( G5_SerialDTRStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_SerialDSRStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_SerialCDStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_SerialRTSStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_SerialCTSStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_SerialRIStatus, CommsSerialPinStatus, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_ConnectionStatus, CommsConnectionStatus, "Grp5 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G5_BytesReceivedStatus, UI32, "Grp5 Bytes received on a port.", "" ) \
DPOINT_DEFN( G5_BytesTransmittedStatus, UI32, "Grp5 No description", "" ) \
DPOINT_DEFN( G5_PacketsReceivedStatus, UI32, "Grp5 Packets received on a port.", "" ) \
DPOINT_DEFN( G5_PacketsTransmittedStatus, UI32, "Grp5 Packets Transmitted", "" ) \
DPOINT_DEFN( G5_ErrorPacketsReceivedStatus, UI32, "Grp5 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G5_ErrorPacketsTransmittedStatus, UI32, "Grp5 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G5_IpAddrStatus, IpAddr, "Grp5 IPv4 Address", "" ) \
DPOINT_DEFN( G5_SubnetMaskStatus, IpAddr, "Grp5 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G5_DefaultGatewayStatus, IpAddr, "Grp5 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G5_PortDetectedType, CommsPortDetectedType, "Grp5 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G5_PortDetectedName, Str, "Grp5 USB Port detected device name", "" ) \
DPOINT_DEFN( G5_SerialTxTestStatus, OnOff, "Grp5 serial port TX testing status", "" ) \
DPOINT_DEFN( G5_PacketsReceivedStatusIPv6, UI32, "Grp5 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G5_PacketsTransmittedStatusIPv6, UI32, "Grp5 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G5_ErrorPacketsReceivedStatusIPv6, UI32, "Grp5 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G5_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp5 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G5_Ipv6AddrStatus, Ipv6Addr, "Grp5 IPv6 Address", "" ) \
DPOINT_DEFN( G5_LanPrefixLengthStatus, UI8, "Grp5 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G5_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp5 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G5_IpVersionStatus, IpVersion, "Grp5 LAN IP version", "" ) \
DPOINT_DEFN( G6_SerialDTRStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_SerialDSRStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_SerialCDStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_SerialRTSStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_SerialCTSStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_SerialRIStatus, CommsSerialPinStatus, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_ConnectionStatus, CommsConnectionStatus, "Grp6 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G6_BytesReceivedStatus, UI32, "Grp6 Bytes received on a port.", "" ) \
DPOINT_DEFN( G6_BytesTransmittedStatus, UI32, "Grp6 No description", "" ) \
DPOINT_DEFN( G6_PacketsReceivedStatus, UI32, "Grp6 Packets received on a port.", "" ) \
DPOINT_DEFN( G6_PacketsTransmittedStatus, UI32, "Grp6 Packets Transmitted", "" ) \
DPOINT_DEFN( G6_ErrorPacketsReceivedStatus, UI32, "Grp6 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G6_ErrorPacketsTransmittedStatus, UI32, "Grp6 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G6_IpAddrStatus, IpAddr, "Grp6 IPv4 Address", "" ) \
DPOINT_DEFN( G6_SubnetMaskStatus, IpAddr, "Grp6 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G6_DefaultGatewayStatus, IpAddr, "Grp6 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G6_PortDetectedType, CommsPortDetectedType, "Grp6 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G6_PortDetectedName, Str, "Grp6 USB Port detected device name", "" ) \
DPOINT_DEFN( G6_SerialTxTestStatus, OnOff, "Grp6 serial port TX testing status", "" ) \
DPOINT_DEFN( G6_PacketsReceivedStatusIPv6, UI32, "Grp6 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G6_PacketsTransmittedStatusIPv6, UI32, "Grp6 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G6_ErrorPacketsReceivedStatusIPv6, UI32, "Grp6 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G6_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp6 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G6_Ipv6AddrStatus, Ipv6Addr, "Grp6 IPv6 Address", "" ) \
DPOINT_DEFN( G6_LanPrefixLengthStatus, UI8, "Grp6 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G6_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp6 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G6_IpVersionStatus, IpVersion, "Grp6 LAN IP version", "" ) \
DPOINT_DEFN( G7_SerialDTRStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_SerialDSRStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_SerialCDStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_SerialRTSStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_SerialCTSStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_SerialRIStatus, CommsSerialPinStatus, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_ConnectionStatus, CommsConnectionStatus, "Grp7 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G7_BytesReceivedStatus, UI32, "Grp7 Bytes received on a port.", "" ) \
DPOINT_DEFN( G7_BytesTransmittedStatus, UI32, "Grp7 No description", "" ) \
DPOINT_DEFN( G7_PacketsReceivedStatus, UI32, "Grp7 Packets received on a port.", "" ) \
DPOINT_DEFN( G7_PacketsTransmittedStatus, UI32, "Grp7 Packets Transmitted", "" ) \
DPOINT_DEFN( G7_ErrorPacketsReceivedStatus, UI32, "Grp7 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G7_ErrorPacketsTransmittedStatus, UI32, "Grp7 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G7_IpAddrStatus, IpAddr, "Grp7 IPv4 Address", "" ) \
DPOINT_DEFN( G7_SubnetMaskStatus, IpAddr, "Grp7 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G7_DefaultGatewayStatus, IpAddr, "Grp7 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G7_PortDetectedType, CommsPortDetectedType, "Grp7 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G7_PortDetectedName, Str, "Grp7 USB Port detected device name", "" ) \
DPOINT_DEFN( G7_SerialTxTestStatus, OnOff, "Grp7 serial port TX testing status", "" ) \
DPOINT_DEFN( G7_PacketsReceivedStatusIPv6, UI32, "Grp7 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G7_PacketsTransmittedStatusIPv6, UI32, "Grp7 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G7_ErrorPacketsReceivedStatusIPv6, UI32, "Grp7 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G7_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp7 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G7_Ipv6AddrStatus, Ipv6Addr, "Grp7 IPv6 Address", "" ) \
DPOINT_DEFN( G7_LanPrefixLengthStatus, UI8, "Grp7 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G7_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp7 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G7_IpVersionStatus, IpVersion, "Grp7 LAN IP version", "" ) \
DPOINT_DEFN( G8_SerialDTRStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_SerialDSRStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_SerialCDStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_SerialRTSStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_SerialCTSStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_SerialRIStatus, CommsSerialPinStatus, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_ConnectionStatus, CommsConnectionStatus, "Grp8 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G8_BytesReceivedStatus, UI32, "Grp8 Bytes received on a port.", "" ) \
DPOINT_DEFN( G8_BytesTransmittedStatus, UI32, "Grp8 No description", "" ) \
DPOINT_DEFN( G8_PacketsReceivedStatus, UI32, "Grp8 Packets received on a port.", "" ) \
DPOINT_DEFN( G8_PacketsTransmittedStatus, UI32, "Grp8 Packets Transmitted", "" ) \
DPOINT_DEFN( G8_ErrorPacketsReceivedStatus, UI32, "Grp8 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G8_ErrorPacketsTransmittedStatus, UI32, "Grp8 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G8_IpAddrStatus, IpAddr, "Grp8 IPv4 Address", "" ) \
DPOINT_DEFN( G8_SubnetMaskStatus, IpAddr, "Grp8 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G8_DefaultGatewayStatus, IpAddr, "Grp8 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G8_PortDetectedType, CommsPortDetectedType, "Grp8 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G8_PortDetectedName, Str, "Grp8 USB Port detected device name", "" ) \
DPOINT_DEFN( G8_SerialTxTestStatus, OnOff, "Grp8 serial port TX testing status", "" ) \
DPOINT_DEFN( G8_PacketsReceivedStatusIPv6, UI32, "Grp8 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G8_PacketsTransmittedStatusIPv6, UI32, "Grp8 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G8_ErrorPacketsReceivedStatusIPv6, UI32, "Grp8 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G8_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp8 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G8_Ipv6AddrStatus, Ipv6Addr, "Grp8 IPv6 Address", "" ) \
DPOINT_DEFN( G8_LanPrefixLengthStatus, UI8, "Grp8 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G8_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp8 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G8_IpVersionStatus, IpVersion, "Grp8 LAN IP version", "" ) \
DPOINT_DEFN( G5_SerialPortTestCmd, Signal, "Grp5 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G5_SerialPortHangupCmd, Signal, "Grp5 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G5_BytesReceivedResetCmd, Signal, "Grp5 reset bytes Received", "" ) \
DPOINT_DEFN( G5_BytesTransmittedResetCmd, Signal, "Grp5 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G6_SerialPortTestCmd, Signal, "Grp6 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G6_SerialPortHangupCmd, Signal, "Grp6 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G6_BytesReceivedResetCmd, Signal, "Grp6 reset bytes Received", "" ) \
DPOINT_DEFN( G6_BytesTransmittedResetCmd, Signal, "Grp6 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G7_SerialPortTestCmd, Signal, "Grp7 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G7_SerialPortHangupCmd, Signal, "Grp7 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G7_BytesReceivedResetCmd, Signal, "Grp7 reset bytes Received", "" ) \
DPOINT_DEFN( G7_BytesTransmittedResetCmd, Signal, "Grp7 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G8_SerialPortTestCmd, Signal, "Grp8 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G8_SerialPortHangupCmd, Signal, "Grp8 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G8_BytesReceivedResetCmd, Signal, "Grp8 reset bytes Received", "" ) \
DPOINT_DEFN( G8_BytesTransmittedResetCmd, Signal, "Grp8 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G5_SerialBaudRate, CommsSerialBaudRate, "Grp5 Serial Baud Rate (default value is 57600)", "" ) \
DPOINT_DEFN( G5_SerialDuplexType, CommsSerialDuplex, "Grp5_Serial Duplex Type", "" ) \
DPOINT_DEFN( G5_SerialRTSMode, CommsSerialRTSMode, "Grp5_Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G5_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp5_Serial RTS On Level", "" ) \
DPOINT_DEFN( G5_SerialDTRMode, CommsSerialDTRMode, "Grp5_Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G5_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp5_Serial DTR On Level", "" ) \
DPOINT_DEFN( G5_SerialParity, CommsSerialParity, "Grp5_Serial Parity", "" ) \
DPOINT_DEFN( G5_SerialCTSMode, CommsSerialCTSMode, "Grp5_Clear To Send setting.", "" ) \
DPOINT_DEFN( G5_SerialDSRMode, CommsSerialDSRMode, "Grp5_Data Set Ready setting.", "" ) \
DPOINT_DEFN( G5_SerialDTRLowTime, UI32, "Grp5 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G5_SerialTxDelay, UI32, "Grp5 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G5_SerialPreTxTime, UI32, "Grp5 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G5_SerialDCDFallTime, UI32, "Grp5 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G5_SerialCharTimeout, UI32, "Grp5_Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G5_SerialPostTxTime, UI32, "Grp5 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G5_SerialInactivityTime, UI32, "Grp5 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G5_SerialCollisionAvoidance, Bool, "Grp5_Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G5_SerialMinIdleTime, UI32, "Grp5 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G5_SerialMaxRandomDelay, UI32, "Grp5 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G5_ModemPoweredFromExtLoad, Bool, "Grp5 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G5_ModemUsedWithLeasedLine, Bool, "Grp5_Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G5_ModemInitString, Str, "Grp5 Modem Init String", "" ) \
DPOINT_DEFN( G5_ModemMaxCallDuration, UI32, "Grp5 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G5_ModemResponseTime, UI32, "Grp5 Modem Response Time", "" ) \
DPOINT_DEFN( G5_ModemHangUpCommand, Str, "Grp5 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G5_ModemOffHookCommand, Str, "Grp5 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G5_ModemAutoAnswerOn, Str, "Grp5 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G5_ModemAutoAnswerOff, Str, "Grp5 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G5_RadioPreamble, Bool, "Grp5 Radio Preamble", "" ) \
DPOINT_DEFN( G5_RadioPreambleChar, UI8, "Grp5 Radio Preamble Char", "" ) \
DPOINT_DEFN( G5_RadioPreambleRepeat, UI32, "Grp5 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G5_RadioPreambleLastChar, UI8, "Grp5 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G5_LanSpecifyIP, YesNo, "Grp5 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G5_LanIPAddr, IpAddr, "Grp5 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G5_LanSubnetMask, IpAddr, "Grp5 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G5_LanDefaultGateway, IpAddr, "Grp5 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G5_WlanNetworkSSID, Str, "Grp5 Wlan Network SSID", "" ) \
DPOINT_DEFN( G5_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp5_Wlan Network Authentication", "" ) \
DPOINT_DEFN( G5_WlanDataEncryption, CommsWlanDataEncryption, "Grp5_Wlan Data Encryption", "" ) \
DPOINT_DEFN( G5_WlanNetworkKey, Str, "Grp5_Wlan Network Key", "" ) \
DPOINT_DEFN( G5_WlanKeyIndex, UI32, "Grp5_Wlan Key Index", "" ) \
DPOINT_DEFN( G5_PortLocalRemoteMode, LocalRemote, "Grp5_Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G5_GPRSServiceProvider, Str, "Grp5_GPRS service provider name", "" ) \
DPOINT_DEFN( G5_GPRSUserName, Str, "Grp5_GPRS user name", "" ) \
DPOINT_DEFN( G5_GPRSPassWord, Str, "Grp5_", "" ) \
DPOINT_DEFN( G5_SerialDebugMode, YesNo, "Grp5 serial debug mode selection", "" ) \
DPOINT_DEFN( G5_SerialDebugFileName, Str, "Grp5_", "" ) \
DPOINT_DEFN( G5_GPRSBaudRate, CommsSerialBaudRate, "Grp5 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G5_GPRSConnectionTimeout, UI32, "Grp5 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G5_DNP3InputPipe, Str, "Grp5 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G5_DNP3OutputPipe, Str, "Grp5 DNP3 output pipe", "" ) \
DPOINT_DEFN( G5_CMSInputPipe, Str, "Grp5 CMS Input Pipe", "" ) \
DPOINT_DEFN( G5_CMSOutputPipe, Str, "Grp5 CMS Output Pipe", "" ) \
DPOINT_DEFN( G5_HMIInputPipe, Str, "Grp5 HMI Input Pipe", "" ) \
DPOINT_DEFN( G5_HMIOutputPipe, Str, "Grp5 HMI Output Pipe", "" ) \
DPOINT_DEFN( G5_DNP3ChannelRequest, Str, "Grp5 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G5_DNP3ChannelOpen, Str, "Grp5 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G5_CMSChannelRequest, Str, "Grp5 CMS Channel Request", "" ) \
DPOINT_DEFN( G5_CMSChannelOpen, Str, "Grp5 CMS Channel Open", "" ) \
DPOINT_DEFN( G5_HMIChannelRequest, Str, "Grp5 HMI Channel Request", "" ) \
DPOINT_DEFN( G5_HMIChannelOpen, Str, "Grp5 HMI Channel Open", "" ) \
DPOINT_DEFN( G5_GPRSUseModemSetting, YesNo, "Grp5 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G5_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp5 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G5_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp5 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G5_T10BInputPipe, Str, "Grp5 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G5_T10BOutputPipe, Str, "Grp5 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G5_T10BChannelRequest, Str, "Grp5 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G5_T10BChannelOpen, Str, "Grp5 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G5_P2PInputPipe, Str, "Grp5 P2P input pipe ", "" ) \
DPOINT_DEFN( G5_P2POutputPipe, Str, "Grp5 P2P output pipe ", "" ) \
DPOINT_DEFN( G5_P2PChannelRequest, Str, "Grp5 P2P Channel Request", "" ) \
DPOINT_DEFN( G5_P2PChannelOpen, Str, "Grp5 P2P Channel Open", "" ) \
DPOINT_DEFN( G5_PGEInputPipe, Str, "Grp5 PGE Input Pipe", "" ) \
DPOINT_DEFN( G5_PGEOutputPipe, Str, "Grp5 PGE output pipe ", "" ) \
DPOINT_DEFN( G5_PGEChannelRequest, Str, "Grp5 PGE Channel Request", "" ) \
DPOINT_DEFN( G5_PGEChannelOpen, Str, "Grp5 PGE Channel Open", "" ) \
DPOINT_DEFN( G5_LanProvideIP, YesNo, "Grp5 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G5_LanSpecifyIPv6, YesNo, "Grp5 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G5_LanIPv6Addr, Ipv6Addr, "Grp5 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G5_LanPrefixLength, UI8, "Grp5 LAN Prefix Length", "" ) \
DPOINT_DEFN( G5_LanIPv6DefaultGateway, Ipv6Addr, "Grp5 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G5_LanIpVersion, IpVersion, "Grp5 LAN IP version", "" ) \
DPOINT_DEFN( G6_SerialBaudRate, CommsSerialBaudRate, "Grp6 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G6_SerialDuplexType, CommsSerialDuplex, "Grp6_Serial Duplex Type", "" ) \
DPOINT_DEFN( G6_SerialRTSMode, CommsSerialRTSMode, "Grp6_Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G6_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp6_Serial RTS On Level", "" ) \
DPOINT_DEFN( G6_SerialDTRMode, CommsSerialDTRMode, "Grp6_Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G6_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp6_Serial DTR On Level", "" ) \
DPOINT_DEFN( G6_SerialParity, CommsSerialParity, "Grp6_Serial Parity", "" ) \
DPOINT_DEFN( G6_SerialCTSMode, CommsSerialCTSMode, "Grp6_Clear To Send setting.", "" ) \
DPOINT_DEFN( G6_SerialDSRMode, CommsSerialDSRMode, "Grp6_Data Set Ready setting.", "" ) \
DPOINT_DEFN( G6_SerialDTRLowTime, UI32, "Grp6 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G6_SerialTxDelay, UI32, "Grp6 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G6_SerialPreTxTime, UI32, "Grp6 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G6_SerialDCDFallTime, UI32, "Grp6 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G6_SerialCharTimeout, UI32, "Grp6_Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G6_SerialPostTxTime, UI32, "Grp6 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G6_SerialInactivityTime, UI32, "Grp6 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G6_SerialCollisionAvoidance, Bool, "Grp6_Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G6_SerialMinIdleTime, UI32, "Grp6 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G6_SerialMaxRandomDelay, UI32, "Grp6 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G6_ModemPoweredFromExtLoad, Bool, "Grp6 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G6_ModemUsedWithLeasedLine, Bool, "Grp6_Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G6_ModemInitString, Str, "Grp6 Modem Init String", "" ) \
DPOINT_DEFN( G6_ModemMaxCallDuration, UI32, "Grp6 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G6_ModemResponseTime, UI32, "Grp6 Modem Response Time", "" ) \
DPOINT_DEFN( G6_ModemHangUpCommand, Str, "Grp6 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G6_ModemOffHookCommand, Str, "Grp6 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G6_ModemAutoAnswerOn, Str, "Grp6 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G6_ModemAutoAnswerOff, Str, "Grp6 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G6_RadioPreamble, Bool, "Grp6 Radio Preamble", "" ) \
DPOINT_DEFN( G6_RadioPreambleChar, UI8, "Grp6 Radio Preamble Char", "" ) \
DPOINT_DEFN( G6_RadioPreambleRepeat, UI32, "Grp6 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G6_RadioPreambleLastChar, UI8, "Grp6 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G6_LanSpecifyIP, YesNo, "Grp6 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G6_LanIPAddr, IpAddr, "Grp6 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G6_LanSubnetMask, IpAddr, "Grp6 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G6_LanDefaultGateway, IpAddr, "Grp6 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G6_WlanNetworkSSID, Str, "Grp6 Wlan Network SSID", "" ) \
DPOINT_DEFN( G6_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp6_Wlan Network Authentication", "" ) \
DPOINT_DEFN( G6_WlanDataEncryption, CommsWlanDataEncryption, "Grp6_Wlan Data Encryption", "" ) \
DPOINT_DEFN( G6_WlanNetworkKey, Str, "Grp6_Wlan Network Key", "" ) \
DPOINT_DEFN( G6_WlanKeyIndex, UI32, "Grp6_Wlan Key Index", "" ) \
DPOINT_DEFN( G6_PortLocalRemoteMode, LocalRemote, "Grp6_Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G6_GPRSServiceProvider, Str, "Grp6_GPRS service provider name", "" ) \
DPOINT_DEFN( G6_GPRSUserName, Str, "Grp6_GPRS user name", "" ) \
DPOINT_DEFN( G6_GPRSPassWord, Str, "Grp6_", "" ) \
DPOINT_DEFN( G6_SerialDebugMode, YesNo, "Grp6 serial debug mode selection", "" ) \
DPOINT_DEFN( G6_SerialDebugFileName, Str, "Grp6_", "" ) \
DPOINT_DEFN( G6_GPRSBaudRate, CommsSerialBaudRate, "Grp6 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G6_GPRSConnectionTimeout, UI32, "Grp6 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G6_DNP3InputPipe, Str, "Grp6 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G6_DNP3OutputPipe, Str, "Grp6 DNP3 output pipe", "" ) \
DPOINT_DEFN( G6_CMSInputPipe, Str, "Grp6 CMS Input Pipe", "" ) \
DPOINT_DEFN( G6_CMSOutputPipe, Str, "Grp6 CMS Output Pipe", "" ) \
DPOINT_DEFN( G6_HMIInputPipe, Str, "Grp6 HMI Input Pipe", "" ) \
DPOINT_DEFN( G6_HMIOutputPipe, Str, "Grp6 HMI Output Pipe", "" ) \
DPOINT_DEFN( G6_DNP3ChannelRequest, Str, "Grp6 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G6_DNP3ChannelOpen, Str, "Grp6 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G6_CMSChannelRequest, Str, "Grp6 CMS Channel Request", "" ) \
DPOINT_DEFN( G6_CMSChannelOpen, Str, "Grp6 CMS Channel Open", "" ) \
DPOINT_DEFN( G6_HMIChannelRequest, Str, "Grp6 HMI Channel Request", "" ) \
DPOINT_DEFN( G6_HMIChannelOpen, Str, "Grp6 HMI Channel Open", "" ) \
DPOINT_DEFN( G6_GPRSUseModemSetting, YesNo, "Grp6 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G6_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp6 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G6_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp6 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G6_T10BInputPipe, Str, "Grp6 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G6_T10BOutputPipe, Str, "Grp6 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G6_T10BChannelRequest, Str, "Grp6 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G6_T10BChannelOpen, Str, "Grp6 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G6_P2PInputPipe, Str, "Grp6 P2P input pipe ", "" ) \
DPOINT_DEFN( G6_P2POutputPipe, Str, "Grp6 P2P output pipe ", "" ) \
DPOINT_DEFN( G6_P2PChannelRequest, Str, "Grp6 P2P Channel Request", "" ) \
DPOINT_DEFN( G6_P2PChannelOpen, Str, "Grp6 P2P Channel Open", "" ) \
DPOINT_DEFN( G6_PGEInputPipe, Str, "Grp6 PGE Input Pipe", "" ) \
DPOINT_DEFN( G6_PGEOutputPipe, Str, "Grp6 PGE output pipe ", "" ) \
DPOINT_DEFN( G6_PGEChannelRequest, Str, "Grp6 PGE Channel Request", "" ) \
DPOINT_DEFN( G6_PGEChannelOpen, Str, "Grp6 PGE Channel Open", "" ) \
DPOINT_DEFN( G6_LanProvideIP, YesNo, "Grp6 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G6_LanSpecifyIPv6, YesNo, "Grp6 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G6_LanIPv6Addr, Ipv6Addr, "Grp6 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G6_LanPrefixLength, UI8, "Grp6 LAN Prefix Length", "" ) \
DPOINT_DEFN( G6_LanIPv6DefaultGateway, Ipv6Addr, "Grp6 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G6_LanIpVersion, IpVersion, "Grp6 LAN IP version", "" ) \
DPOINT_DEFN( G7_SerialBaudRate, CommsSerialBaudRate, "Grp7 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G7_SerialDuplexType, CommsSerialDuplex, "Grp7_Serial Duplex Type", "" ) \
DPOINT_DEFN( G7_SerialRTSMode, CommsSerialRTSMode, "Grp7_Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G7_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp7_Serial RTS On Level", "" ) \
DPOINT_DEFN( G7_SerialDTRMode, CommsSerialDTRMode, "Grp7_Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G7_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp7_Serial DTR On Level", "" ) \
DPOINT_DEFN( G7_SerialParity, CommsSerialParity, "Grp7_Serial Parity", "" ) \
DPOINT_DEFN( G7_SerialCTSMode, CommsSerialCTSMode, "Grp7_Clear To Send setting.", "" ) \
DPOINT_DEFN( G7_SerialDSRMode, CommsSerialDSRMode, "Grp7_Data Set Ready setting.", "" ) \
DPOINT_DEFN( G7_SerialDTRLowTime, UI32, "Grp7 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G7_SerialTxDelay, UI32, "Grp7 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G7_SerialPreTxTime, UI32, "Grp7 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G7_SerialDCDFallTime, UI32, "Grp7 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G7_SerialCharTimeout, UI32, "Grp7_Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G7_SerialPostTxTime, UI32, "Grp7 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G7_SerialInactivityTime, UI32, "Grp7 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G7_SerialCollisionAvoidance, Bool, "Grp7_Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G7_SerialMinIdleTime, UI32, "Grp7 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G7_SerialMaxRandomDelay, UI32, "Grp7 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G7_ModemPoweredFromExtLoad, Bool, "Grp7 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G7_ModemUsedWithLeasedLine, Bool, "Grp7_Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G7_ModemInitString, Str, "Grp7 Modem Init String", "" ) \
DPOINT_DEFN( G7_ModemMaxCallDuration, UI32, "Grp7 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G7_ModemResponseTime, UI32, "Grp7 Modem Response Time", "" ) \
DPOINT_DEFN( G7_ModemHangUpCommand, Str, "Grp7 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G7_ModemOffHookCommand, Str, "Grp7 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G7_ModemAutoAnswerOn, Str, "Grp7 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G7_ModemAutoAnswerOff, Str, "Grp7 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G7_RadioPreamble, Bool, "Grp7 Radio Preamble", "" ) \
DPOINT_DEFN( G7_RadioPreambleChar, UI8, "Grp7 Radio Preamble Char", "" ) \
DPOINT_DEFN( G7_RadioPreambleRepeat, UI32, "Grp7 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G7_RadioPreambleLastChar, UI8, "Grp7 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G7_LanSpecifyIP, YesNo, "Grp7 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G7_LanIPAddr, IpAddr, "Grp7 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G7_LanSubnetMask, IpAddr, "Grp7 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G7_LanDefaultGateway, IpAddr, "Grp7 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G7_WlanNetworkSSID, Str, "Grp7 Wlan Network SSID", "" ) \
DPOINT_DEFN( G7_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp7_Wlan Network Authentication", "" ) \
DPOINT_DEFN( G7_WlanDataEncryption, CommsWlanDataEncryption, "Grp7_Wlan Data Encryption", "" ) \
DPOINT_DEFN( G7_WlanNetworkKey, Str, "Grp7_Wlan Network Key", "" ) \
DPOINT_DEFN( G7_WlanKeyIndex, UI32, "Grp7_Wlan Key Index", "" ) \
DPOINT_DEFN( G7_PortLocalRemoteMode, LocalRemote, "Grp7_Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G7_GPRSServiceProvider, Str, "Grp7_GPRS service provider name", "" ) \
DPOINT_DEFN( G7_GPRSUserName, Str, "Grp7_GPRS user name", "" ) \
DPOINT_DEFN( G7_GPRSPassWord, Str, "Grp7_", "" ) \
DPOINT_DEFN( G7_SerialDebugMode, YesNo, "Grp7 serial debug mode selection", "" ) \
DPOINT_DEFN( G7_SerialDebugFileName, Str, "Grp7_", "" ) \
DPOINT_DEFN( G7_GPRSBaudRate, CommsSerialBaudRate, "Grp7 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G7_GPRSConnectionTimeout, UI32, "Grp7 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G7_DNP3InputPipe, Str, "Grp7 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G7_DNP3OutputPipe, Str, "Grp7 DNP3 output pipe", "" ) \
DPOINT_DEFN( G7_CMSInputPipe, Str, "Grp7 CMS Input Pipe", "" ) \
DPOINT_DEFN( G7_CMSOutputPipe, Str, "Grp7 CMS Output Pipe", "" ) \
DPOINT_DEFN( G7_HMIInputPipe, Str, "Grp7 HMI Input Pipe", "" ) \
DPOINT_DEFN( G7_HMIOutputPipe, Str, "Grp7 HMI Output Pipe", "" ) \
DPOINT_DEFN( G7_DNP3ChannelRequest, Str, "Grp7 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G7_DNP3ChannelOpen, Str, "Grp7 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G7_CMSChannelRequest, Str, "Grp7 CMS Channel Request", "" ) \
DPOINT_DEFN( G7_CMSChannelOpen, Str, "Grp7 CMS Channel Open", "" ) \
DPOINT_DEFN( G7_HMIChannelRequest, Str, "Grp7 HMI Channel Request", "" ) \
DPOINT_DEFN( G7_HMIChannelOpen, Str, "Grp7 HMI Channel Open", "" ) \
DPOINT_DEFN( G7_GPRSUseModemSetting, YesNo, "Grp7 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G7_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp7 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G7_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp7 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G7_T10BInputPipe, Str, "Grp7 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G7_T10BOutputPipe, Str, "Grp7 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G7_T10BChannelRequest, Str, "Grp7 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G7_T10BChannelOpen, Str, "Grp7 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G7_P2PInputPipe, Str, "Grp7 P2P input pipe ", "" ) \
DPOINT_DEFN( G7_P2POutputPipe, Str, "Grp7 P2P output pipe ", "" ) \
DPOINT_DEFN( G7_P2PChannelRequest, Str, "Grp7 P2P Channel Request", "" ) \
DPOINT_DEFN( G7_P2PChannelOpen, Str, "Grp7 P2P Channel Open", "" ) \
DPOINT_DEFN( G7_PGEInputPipe, Str, "Grp7 PGE Input Pipe", "" ) \
DPOINT_DEFN( G7_PGEOutputPipe, Str, "Grp7 PGE output pipe ", "" ) \
DPOINT_DEFN( G7_PGEChannelRequest, Str, "Grp7 PGE Channel Request", "" ) \
DPOINT_DEFN( G7_PGEChannelOpen, Str, "Grp7 PGE Channel Open", "" ) \
DPOINT_DEFN( G7_LanProvideIP, YesNo, "Grp7 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G7_LanSpecifyIPv6, YesNo, "Grp7 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G7_LanIPv6Addr, Ipv6Addr, "Grp7 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G7_LanPrefixLength, UI8, "Grp7 LAN Prefix Length", "" ) \
DPOINT_DEFN( G7_LanIPv6DefaultGateway, Ipv6Addr, "Grp7 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G7_LanIpVersion, IpVersion, "Grp7 LAN IP version", "" ) \
DPOINT_DEFN( G8_SerialBaudRate, CommsSerialBaudRate, "Grp8 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G8_SerialDuplexType, CommsSerialDuplex, "Grp8_Serial Duplex Type", "" ) \
DPOINT_DEFN( G8_SerialRTSMode, CommsSerialRTSMode, "Grp8_Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G8_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp8_Serial RTS On Level", "" ) \
DPOINT_DEFN( G8_SerialDTRMode, CommsSerialDTRMode, "Grp8_Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G8_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp8_Serial DTR On Level", "" ) \
DPOINT_DEFN( G8_SerialParity, CommsSerialParity, "Grp8_Serial Parity", "" ) \
DPOINT_DEFN( G8_SerialCTSMode, CommsSerialCTSMode, "Grp8_Clear To Send setting.", "" ) \
DPOINT_DEFN( G8_SerialDSRMode, CommsSerialDSRMode, "Grp8_Data Set Ready setting.", "" ) \
DPOINT_DEFN( G8_SerialDTRLowTime, UI32, "Grp8 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G8_SerialTxDelay, UI32, "Grp8 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G8_SerialPreTxTime, UI32, "Grp8 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G8_SerialDCDFallTime, UI32, "Grp8 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G8_SerialCharTimeout, UI32, "Grp8_Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G8_SerialPostTxTime, UI32, "Grp8 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G8_SerialInactivityTime, UI32, "Grp8 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G8_SerialCollisionAvoidance, Bool, "Grp8_Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G8_SerialMinIdleTime, UI32, "Grp8 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G8_SerialMaxRandomDelay, UI32, "Grp8 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G8_ModemPoweredFromExtLoad, Bool, "Grp8 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G8_ModemUsedWithLeasedLine, Bool, "Grp8_Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G8_ModemInitString, Str, "Grp8 Modem Init String", "" ) \
DPOINT_DEFN( G8_ModemMaxCallDuration, UI32, "Grp8 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G8_ModemResponseTime, UI32, "Grp8 Modem Response Time", "" ) \
DPOINT_DEFN( G8_ModemHangUpCommand, Str, "Grp8 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G8_ModemOffHookCommand, Str, "Grp8 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G8_ModemAutoAnswerOn, Str, "Grp8 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G8_ModemAutoAnswerOff, Str, "Grp8 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G8_RadioPreamble, Bool, "Grp8 Radio Preamble", "" ) \
DPOINT_DEFN( G8_RadioPreambleChar, UI8, "Grp8 Radio Preamble Char", "" ) \
DPOINT_DEFN( G8_RadioPreambleRepeat, UI32, "Grp8 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G8_RadioPreambleLastChar, UI8, "Grp8 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G8_LanSpecifyIP, YesNo, "Grp8 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G8_LanIPAddr, IpAddr, "Grp8 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G8_LanSubnetMask, IpAddr, "Grp8 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G8_LanDefaultGateway, IpAddr, "Grp8 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G8_WlanNetworkSSID, Str, "Grp8 Wlan Network SSID", "" ) \
DPOINT_DEFN( G8_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp8_Wlan Network Authentication", "" ) \
DPOINT_DEFN( G8_WlanDataEncryption, CommsWlanDataEncryption, "Grp8_Wlan Data Encryption", "" ) \
DPOINT_DEFN( G8_WlanNetworkKey, Str, "Grp8_Wlan Network Key", "" ) \
DPOINT_DEFN( G8_WlanKeyIndex, UI32, "Grp8_Wlan Key Index", "" ) \
DPOINT_DEFN( G8_PortLocalRemoteMode, LocalRemote, "Grp8_Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G8_GPRSServiceProvider, Str, "Grp8_GPRS service provider name", "" ) \
DPOINT_DEFN( G8_GPRSUserName, Str, "Grp8_GPRS user name", "" ) \
DPOINT_DEFN( G8_GPRSPassWord, Str, "Grp8_", "" ) \
DPOINT_DEFN( G8_SerialDebugMode, YesNo, "Grp8 serial debug mode selection", "" ) \
DPOINT_DEFN( G8_SerialDebugFileName, Str, "Grp8_", "" ) \
DPOINT_DEFN( G8_GPRSBaudRate, CommsSerialBaudRate, "Grp8 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G8_GPRSConnectionTimeout, UI32, "Grp8 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G8_DNP3InputPipe, Str, "Grp8 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G8_DNP3OutputPipe, Str, "Grp8 DNP3 output pipe", "" ) \
DPOINT_DEFN( G8_CMSInputPipe, Str, "Grp8 CMS Input Pipe", "" ) \
DPOINT_DEFN( G8_CMSOutputPipe, Str, "Grp8 CMS Output Pipe", "" ) \
DPOINT_DEFN( G8_HMIInputPipe, Str, "Grp8 HMI Input Pipe", "" ) \
DPOINT_DEFN( G8_HMIOutputPipe, Str, "Grp8 HMI Output Pipe", "" ) \
DPOINT_DEFN( G8_DNP3ChannelRequest, Str, "Grp8 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G8_DNP3ChannelOpen, Str, "Grp8 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G8_CMSChannelRequest, Str, "Grp8 CMS Channel Request", "" ) \
DPOINT_DEFN( G8_CMSChannelOpen, Str, "Grp8 CMS Channel Open", "" ) \
DPOINT_DEFN( G8_HMIChannelRequest, Str, "Grp8 HMI Channel Request", "" ) \
DPOINT_DEFN( G8_HMIChannelOpen, Str, "Grp8 HMI Channel Open", "" ) \
DPOINT_DEFN( G8_GPRSUseModemSetting, YesNo, "Grp8 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G8_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp8 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G8_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp8 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G8_T10BInputPipe, Str, "Grp8 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G8_T10BOutputPipe, Str, "Grp8 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G8_T10BChannelRequest, Str, "Grp8 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G8_T10BChannelOpen, Str, "Grp8 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G8_P2PInputPipe, Str, "Grp8 P2P input pipe ", "" ) \
DPOINT_DEFN( G8_P2POutputPipe, Str, "Grp8 P2P output pipe ", "" ) \
DPOINT_DEFN( G8_P2PChannelRequest, Str, "Grp8 P2P Channel Request", "" ) \
DPOINT_DEFN( G8_P2PChannelOpen, Str, "Grp8 P2P Channel Open", "" ) \
DPOINT_DEFN( G8_PGEInputPipe, Str, "Grp8 PGE Input Pipe", "" ) \
DPOINT_DEFN( G8_PGEOutputPipe, Str, "Grp8 PGE output pipe ", "" ) \
DPOINT_DEFN( G8_PGEChannelRequest, Str, "Grp8 PGE Channel Request", "" ) \
DPOINT_DEFN( G8_PGEChannelOpen, Str, "Grp8 PGE Channel Open", "" ) \
DPOINT_DEFN( G8_LanProvideIP, YesNo, "Grp8 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G8_LanSpecifyIPv6, YesNo, "Grp8 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G8_LanIPv6Addr, Ipv6Addr, "Grp8 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G8_LanPrefixLength, UI8, "Grp8 LAN Prefix Length", "" ) \
DPOINT_DEFN( G8_LanIPv6DefaultGateway, Ipv6Addr, "Grp8 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G8_LanIpVersion, IpVersion, "Grp8 LAN IP version", "" ) \
DPOINT_DEFN( G1_Hrm_VTHD_Mode, TripModeDLA, "Grp1 Trip mode for Voltage THD protection.", "" ) \
DPOINT_DEFN( G1_Hrm_VTHD_Level, UI32, "Grp1 Level above which Voltage THD values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_VTHD_TDtMin, UI32, "Grp1 Minimum tripping time for Voltage THD protection.", "" ) \
DPOINT_DEFN( G1_Hrm_ITDD_Mode, TripModeDLA, "Grp1 Trip mode for Current TDD protection.", "" ) \
DPOINT_DEFN( G1_Hrm_ITDD_Level, UI32, "Grp1 Level above which Current TDD values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_ITDD_TDtMin, UI32, "Grp1 Minimum tripping time for Current TDD protection.", "" ) \
DPOINT_DEFN( G1_Hrm_Ind_Mode, TripModeDLA, "Grp1 Trip mode for individual harmonics protection.", "" ) \
DPOINT_DEFN( G1_Hrm_Ind_TDtMin, UI32, "Grp1 Minimum tripping time for individual harmonics protection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndA_Name, HrmIndividual, "Grp1 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G1_Hrm_IndA_Level, UI32, "Grp1 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndB_Name, HrmIndividual, "Grp1 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G1_Hrm_IndB_Level, UI32, "Grp1 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndC_Name, HrmIndividual, "Grp1 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G1_Hrm_IndC_Level, UI32, "Grp1 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndD_Name, HrmIndividual, "Grp1 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G1_Hrm_IndD_Level, UI32, "Grp1 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndE_Name, HrmIndividual, "Grp1 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G1_Hrm_IndE_Level, UI32, "Grp1 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G1_OCLL1_Ip, UI32, "Grp1 OCLL1 Pickup current", "" ) \
DPOINT_DEFN( G1_OCLL1_Tcc, UI16, "Grp1 OCLL1 TCC Type", "" ) \
DPOINT_DEFN( G1_OCLL1_TDtMin, UI32, "Grp1 OCLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_OCLL1_TDtRes, UI32, "Grp1 OCLL1 DT reset time", "" ) \
DPOINT_DEFN( G1_OCLL1_Tm, UI32, "Grp1 OCLL1 Time multiplier", "" ) \
DPOINT_DEFN( G1_OCLL1_Imin, UI32, "Grp1 OCLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OCLL1_Tmin, UI32, "Grp1 OCLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OCLL1_Tmax, UI32, "Grp1 OCLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OCLL1_Ta, UI32, "Grp1 OCLL1 Additional time", "" ) \
DPOINT_DEFN( G1_OCLL1_ImaxEn, EnDis, "Grp1 OCLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G1_OCLL1_Imax, UI32, "Grp1 OCLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G1_OCLL1_En, EnDis, "Grp1 OCLL1 Enable", "" ) \
DPOINT_DEFN( G1_OCLL1_TccUD, TccCurve, "Grp1 OCLL1 User defined curve", "" ) \
DPOINT_DEFN( G1_OCLL2_Ip, UI32, "Grp1 OCLL2 Pickup current", "" ) \
DPOINT_DEFN( G1_OCLL2_Tcc, UI16, "Grp1 OCLL2 TCC Type", "" ) \
DPOINT_DEFN( G1_OCLL2_TDtMin, UI32, "Grp1 OCLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_OCLL2_TDtRes, UI32, "Grp1 OCLL2 DT reset time", "" ) \
DPOINT_DEFN( G1_OCLL2_Tm, UI32, "Grp1 OCLL2 Time multiplier", "" ) \
DPOINT_DEFN( G1_OCLL2_Imin, UI32, "Grp1 OCLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_OCLL2_Tmin, UI32, "Grp1 OCLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_OCLL2_Tmax, UI32, "Grp1 OCLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_OCLL2_Ta, UI32, "Grp1 OCLL2 Additional time", "" ) \
DPOINT_DEFN( G1_OCLL2_ImaxEn, EnDis, "Grp1 OCLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G1_OCLL2_Imax, UI32, "Grp1 OCLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G1_OCLL2_En, EnDis, "Grp1 OCLL2 Enable", "" ) \
DPOINT_DEFN( G1_OCLL2_TccUD, TccCurve, "Grp1 OCLL2 User defined curve", "" ) \
DPOINT_DEFN( G1_OCLL3_En, EnDis, "Grp1 OCLL3 Enable", "" ) \
DPOINT_DEFN( G1_AutoClose_En, EnDis, "Grp1 Auto Close en/disable mode.", "" ) \
DPOINT_DEFN( G1_AutoClose_Tr, UI16, "Grp1 The time in seconds to wait before auto close after voltage on both ABC/RST bushing is detected (OSM must be open by UV3).", "" ) \
DPOINT_DEFN( G1_AutoOpenPowerFlowDirChanged, EnDis, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_AutoOpenPowerFlowReduced, EnDis, "Grp1 No description", "" ) \
DPOINT_DEFN( G2_Hrm_VTHD_Mode, TripModeDLA, "Grp2 Trip mode for Voltage THD protection.", "" ) \
DPOINT_DEFN( G2_Hrm_VTHD_Level, UI32, "Grp2 Level above which Voltage THD values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_VTHD_TDtMin, UI32, "Grp2 Minimum tripping time for Voltage THD protection.", "" ) \
DPOINT_DEFN( G2_Hrm_ITDD_Mode, TripModeDLA, "Grp2 Trip mode for Current TDD protection.", "" ) \
DPOINT_DEFN( G2_Hrm_ITDD_Level, UI32, "Grp2 Level above which Current TDD values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_ITDD_TDtMin, UI32, "Grp2 Minimum tripping time for Current TDD protection.", "" ) \
DPOINT_DEFN( G2_Hrm_Ind_Mode, TripModeDLA, "Grp2 Trip mode for individual harmonics protection.", "" ) \
DPOINT_DEFN( G2_Hrm_Ind_TDtMin, UI32, "Grp2 Minimum tripping time for individual harmonics protection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndA_Name, HrmIndividual, "Grp2 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G2_Hrm_IndA_Level, UI32, "Grp2 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndB_Name, HrmIndividual, "Grp2 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G2_Hrm_IndB_Level, UI32, "Grp2 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndC_Name, HrmIndividual, "Grp2 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G2_Hrm_IndC_Level, UI32, "Grp2 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndD_Name, HrmIndividual, "Grp2 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G2_Hrm_IndD_Level, UI32, "Grp2 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndE_Name, HrmIndividual, "Grp2 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G2_Hrm_IndE_Level, UI32, "Grp2 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G2_OCLL1_Ip, UI32, "Grp2 OCLL1 Pickup current", "" ) \
DPOINT_DEFN( G2_OCLL1_Tcc, UI16, "Grp2 OCLL1 TCC Type", "" ) \
DPOINT_DEFN( G2_OCLL1_TDtMin, UI32, "Grp2 OCLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_OCLL1_TDtRes, UI32, "Grp2 OCLL1 DT reset time", "" ) \
DPOINT_DEFN( G2_OCLL1_Tm, UI32, "Grp2 OCLL1 Time multiplier", "" ) \
DPOINT_DEFN( G2_OCLL1_Imin, UI32, "Grp2 OCLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OCLL1_Tmin, UI32, "Grp2 OCLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OCLL1_Tmax, UI32, "Grp2 OCLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OCLL1_Ta, UI32, "Grp2 OCLL1 Additional time", "" ) \
DPOINT_DEFN( G2_OCLL1_ImaxEn, EnDis, "Grp2 OCLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G2_OCLL1_Imax, UI32, "Grp2 OCLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G2_OCLL1_En, EnDis, "Grp2 OCLL1 Enable", "" ) \
DPOINT_DEFN( G2_OCLL1_TccUD, TccCurve, "Grp2 OCLL1 User defined curve", "" ) \
DPOINT_DEFN( G2_OCLL2_Ip, UI32, "Grp2 OCLL2 Pickup current", "" ) \
DPOINT_DEFN( G2_OCLL2_Tcc, UI16, "Grp2 OCLL2 TCC Type", "" ) \
DPOINT_DEFN( G2_OCLL2_TDtMin, UI32, "Grp2 OCLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_OCLL2_TDtRes, UI32, "Grp2 OCLL2 DT reset time", "" ) \
DPOINT_DEFN( G2_OCLL2_Tm, UI32, "Grp2 OCLL2 Time multiplier", "" ) \
DPOINT_DEFN( G2_OCLL2_Imin, UI32, "Grp2 OCLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_OCLL2_Tmin, UI32, "Grp2 OCLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_OCLL2_Tmax, UI32, "Grp2 OCLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_OCLL2_Ta, UI32, "Grp2 OCLL2 Additional time", "" ) \
DPOINT_DEFN( G2_OCLL2_ImaxEn, EnDis, "Grp2 OCLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G2_OCLL2_Imax, UI32, "Grp2 OCLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G2_OCLL2_En, EnDis, "Grp2 OCLL2 Enable", "" ) \
DPOINT_DEFN( G2_OCLL2_TccUD, TccCurve, "Grp2 OCLL2 User defined curve", "" ) \
DPOINT_DEFN( G2_OCLL3_En, EnDis, "Grp2 OCLL3 Enable", "" ) \
DPOINT_DEFN( G2_AutoClose_En, EnDis, "Grp2 Auto Close en/disable mode.", "" ) \
DPOINT_DEFN( G2_AutoClose_Tr, UI16, "Grp2 The time in seconds to wait before auto close after voltage on both ABC/RST bushing is detected (OSM must be open by UV3).", "" ) \
DPOINT_DEFN( G2_AutoOpenPowerFlowDirChanged, EnDis, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_AutoOpenPowerFlowReduced, EnDis, "Grp2 No description", "" ) \
DPOINT_DEFN( G3_Hrm_VTHD_Mode, TripModeDLA, "Grp3 Trip mode for Voltage THD protection.", "" ) \
DPOINT_DEFN( G3_Hrm_VTHD_Level, UI32, "Grp3 Level above which Voltage THD values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_VTHD_TDtMin, UI32, "Grp3 Minimum tripping time for Voltage THD protection.", "" ) \
DPOINT_DEFN( G3_Hrm_ITDD_Mode, TripModeDLA, "Grp3 Trip mode for Current TDD protection.", "" ) \
DPOINT_DEFN( G3_Hrm_ITDD_Level, UI32, "Grp3 Level above which Current TDD values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_ITDD_TDtMin, UI32, "Grp3 Minimum tripping time for Current TDD protection.", "" ) \
DPOINT_DEFN( G3_Hrm_Ind_Mode, TripModeDLA, "Grp3 Trip mode for individual harmonics protection.", "" ) \
DPOINT_DEFN( G3_Hrm_Ind_TDtMin, UI32, "Grp3 Minimum tripping time for individual harmonics protection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndA_Name, HrmIndividual, "Grp3 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G3_Hrm_IndA_Level, UI32, "Grp3 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndB_Name, HrmIndividual, "Grp3 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G3_Hrm_IndB_Level, UI32, "Grp3 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndC_Name, HrmIndividual, "Grp3 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G3_Hrm_IndC_Level, UI32, "Grp3 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndD_Name, HrmIndividual, "Grp3 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G3_Hrm_IndD_Level, UI32, "Grp3 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndE_Name, HrmIndividual, "Grp3 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G3_Hrm_IndE_Level, UI32, "Grp3 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G3_OCLL1_Ip, UI32, "Grp3 OCLL1 Pickup current", "" ) \
DPOINT_DEFN( G3_OCLL1_Tcc, UI16, "Grp3 OCLL1 TCC Type", "" ) \
DPOINT_DEFN( G3_OCLL1_TDtMin, UI32, "Grp3 OCLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_OCLL1_TDtRes, UI32, "Grp3 OCLL1 DT reset time", "" ) \
DPOINT_DEFN( G3_OCLL1_Tm, UI32, "Grp3 OCLL1 Time multiplier", "" ) \
DPOINT_DEFN( G3_OCLL1_Imin, UI32, "Grp3 OCLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OCLL1_Tmin, UI32, "Grp3 OCLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OCLL1_Tmax, UI32, "Grp3 OCLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OCLL1_Ta, UI32, "Grp3 OCLL1 Additional time", "" ) \
DPOINT_DEFN( G3_OCLL1_ImaxEn, EnDis, "Grp3 OCLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G3_OCLL1_Imax, UI32, "Grp3 OCLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G3_OCLL1_En, EnDis, "Grp3 OCLL1 Enable", "" ) \
DPOINT_DEFN( G3_OCLL1_TccUD, TccCurve, "Grp3 OCLL1 User defined curve", "" ) \
DPOINT_DEFN( G3_OCLL2_Ip, UI32, "Grp3 OCLL2 Pickup current", "" ) \
DPOINT_DEFN( G3_OCLL2_Tcc, UI16, "Grp3 OCLL2 TCC Type", "" ) \
DPOINT_DEFN( G3_OCLL2_TDtMin, UI32, "Grp3 OCLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_OCLL2_TDtRes, UI32, "Grp3 OCLL2 DT reset time", "" ) \
DPOINT_DEFN( G3_OCLL2_Tm, UI32, "Grp3 OCLL2 Time multiplier", "" ) \
DPOINT_DEFN( G3_OCLL2_Imin, UI32, "Grp3 OCLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_OCLL2_Tmin, UI32, "Grp3 OCLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_OCLL2_Tmax, UI32, "Grp3 OCLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_OCLL2_Ta, UI32, "Grp3 OCLL2 Additional time", "" ) \
DPOINT_DEFN( G3_OCLL2_ImaxEn, EnDis, "Grp3 OCLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G3_OCLL2_Imax, UI32, "Grp3 OCLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G3_OCLL2_En, EnDis, "Grp3 OCLL2 Enable", "" ) \
DPOINT_DEFN( G3_OCLL2_TccUD, TccCurve, "Grp3 OCLL2 User defined curve", "" ) \
DPOINT_DEFN( G3_OCLL3_En, EnDis, "Grp3 OCLL3 Enable", "" ) \
DPOINT_DEFN( G3_AutoClose_En, EnDis, "Grp3 Auto Close en/disable mode.", "" ) \
DPOINT_DEFN( G3_AutoClose_Tr, UI16, "Grp3 The time in seconds to wait before auto close after voltage on both ABC/RST bushing is detected (OSM must be open by UV3).", "" ) \
DPOINT_DEFN( G3_AutoOpenPowerFlowDirChanged, EnDis, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_AutoOpenPowerFlowReduced, EnDis, "Grp3 No description", "" ) \
DPOINT_DEFN( G4_Hrm_VTHD_Mode, TripModeDLA, "Grp4 Trip mode for Voltage THD protection.", "" ) \
DPOINT_DEFN( G4_Hrm_VTHD_Level, UI32, "Grp4 Level above which Voltage THD values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_VTHD_TDtMin, UI32, "Grp4 Minimum tripping time for Voltage THD protection.", "" ) \
DPOINT_DEFN( G4_Hrm_ITDD_Mode, TripModeDLA, "Grp4 Trip mode for Current TDD protection.", "" ) \
DPOINT_DEFN( G4_Hrm_ITDD_Level, UI32, "Grp4 Level above which Current TDD values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_ITDD_TDtMin, UI32, "Grp4 Minimum tripping time for Current TDD protection.", "" ) \
DPOINT_DEFN( G4_Hrm_Ind_Mode, TripModeDLA, "Grp4 Trip mode for individual harmonics protection.", "" ) \
DPOINT_DEFN( G4_Hrm_Ind_TDtMin, UI32, "Grp4 Minimum tripping time for individual harmonics protection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndA_Name, HrmIndividual, "Grp4 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G4_Hrm_IndA_Level, UI32, "Grp4 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndB_Name, HrmIndividual, "Grp4 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G4_Hrm_IndB_Level, UI32, "Grp4 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndC_Name, HrmIndividual, "Grp4 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G4_Hrm_IndC_Level, UI32, "Grp4 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndD_Name, HrmIndividual, "Grp4 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G4_Hrm_IndD_Level, UI32, "Grp4 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndE_Name, HrmIndividual, "Grp4 Name of the harmonic to select for this protection element.", "" ) \
DPOINT_DEFN( G4_Hrm_IndE_Level, UI32, "Grp4 Level above which harmonic distortion values should trigger protection.", "" ) \
DPOINT_DEFN( G4_OCLL1_Ip, UI32, "Grp4 OCLL1 Pickup current", "" ) \
DPOINT_DEFN( G4_OCLL1_Tcc, UI16, "Grp4 OCLL1 TCC Type", "" ) \
DPOINT_DEFN( G4_OCLL1_TDtMin, UI32, "Grp4 OCLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_OCLL1_TDtRes, UI32, "Grp4 OCLL1 DT reset time", "" ) \
DPOINT_DEFN( G4_OCLL1_Tm, UI32, "Grp4 OCLL1 Time multiplier", "" ) \
DPOINT_DEFN( G4_OCLL1_Imin, UI32, "Grp4 OCLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OCLL1_Tmin, UI32, "Grp4 OCLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OCLL1_Tmax, UI32, "Grp4 OCLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OCLL1_Ta, UI32, "Grp4 OCLL1 Additional time", "" ) \
DPOINT_DEFN( G4_OCLL1_ImaxEn, EnDis, "Grp4 OCLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G4_OCLL1_Imax, UI32, "Grp4 OCLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G4_OCLL1_En, EnDis, "Grp4 OCLL1 Enable", "" ) \
DPOINT_DEFN( G4_OCLL1_TccUD, TccCurve, "Grp4 OCLL1 User defined curve", "" ) \
DPOINT_DEFN( G4_OCLL2_Ip, UI32, "Grp4 OCLL2 Pickup current", "" ) \
DPOINT_DEFN( G4_OCLL2_Tcc, UI16, "Grp4 OCLL2 TCC Type", "" ) \
DPOINT_DEFN( G4_OCLL2_TDtMin, UI32, "Grp4 OCLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_OCLL2_TDtRes, UI32, "Grp4 OCLL2 DT reset time", "" ) \
DPOINT_DEFN( G4_OCLL2_Tm, UI32, "Grp4 OCLL2 Time multiplier", "" ) \
DPOINT_DEFN( G4_OCLL2_Imin, UI32, "Grp4 OCLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_OCLL2_Tmin, UI32, "Grp4 OCLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_OCLL2_Tmax, UI32, "Grp4 OCLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_OCLL2_Ta, UI32, "Grp4 OCLL2 Additional time", "" ) \
DPOINT_DEFN( G4_OCLL2_ImaxEn, EnDis, "Grp4 OCLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G4_OCLL2_Imax, UI32, "Grp4 OCLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G4_OCLL2_En, EnDis, "Grp4 OCLL2 Enable", "" ) \
DPOINT_DEFN( G4_OCLL2_TccUD, TccCurve, "Grp4 OCLL2 User defined curve", "" ) \
DPOINT_DEFN( G4_OCLL3_En, EnDis, "Grp4 OCLL3 Enable", "" ) \
DPOINT_DEFN( G4_AutoClose_En, EnDis, "Grp4 Auto Close en/disable mode.", "" ) \
DPOINT_DEFN( G4_AutoClose_Tr, UI16, "Grp4 The time in seconds to wait before auto close after voltage on both ABC/RST bushing is detected (OSM must be open by UV3).", "" ) \
DPOINT_DEFN( G4_AutoOpenPowerFlowDirChanged, EnDis, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_AutoOpenPowerFlowReduced, EnDis, "Grp4 No description", "" ) \
DPOINT_DEFN( SigCtrlHRMOn, Signal, "Harmonic element is switched on", "" ) \
DPOINT_DEFN( SigPickupHrm, Signal, "Pickup output of harmonics (THD, TDD, or any discrete harmonic) activated", "" ) \
DPOINT_DEFN( SigAlarmHrm, Signal, "Alarm output of harmonics (THD, TDD, or any discrete harmonic) activated", "" ) \
DPOINT_DEFN( SigOpenHrm, Signal, "Open output of harmonics (THD, TDD, or any discrete harmonic) activated", "" ) \
DPOINT_DEFN( CntrHrmTrips, UI32, "Fault counter of HRM Trips", "" ) \
DPOINT_DEFN( TripMaxHrm, UI32, "Maximum harmonic percentage between the Open and Trip", "" ) \
DPOINT_DEFN( SigCtrlBlockProtOpenOn, Signal, "Control to block open from protection.  Intended to be driven from IO, Logic, SCADA.", "" ) \
DPOINT_DEFN( StartupExtLoadConfirm, UI8, "Checked and set at startup to see whether the external load was switched on at prior startup without causing a reboot (eg. due to short circuit).", "" ) \
DPOINT_DEFN( InMDIToday, UI32, "Maximum Demand for neutral current for TODAY ", "" ) \
DPOINT_DEFN( InMDIYesterday, UI32, "Maximum Demand for neutral current for YESTERDAY ", "" ) \
DPOINT_DEFN( InMDILastWeek, UI32, "Maximum Demand for neutral current for LAST WEEK ", "" ) \
DPOINT_DEFN( ClearOscCaptures, ClearCommand, "Erase Oscillography Files", "" ) \
DPOINT_DEFN( InterruptMonitorEnable, EnDis, "Enables or disables monitoring of long and short duration interruptions.", "" ) \
DPOINT_DEFN( InterruptLogShortEnable, EnDis, "Enables or disables logging of short duration interruptions.", "" ) \
DPOINT_DEFN( InterruptDuration, UI32, "Minimum duration in seconds for detecting a long duration interruption.  Interruptions that last less than this amount are characterised as short duration interruptions.", "" ) \
DPOINT_DEFN( InterruptShortABCCnt, UI32, "U(a,b,c) Number of Short Interruptions", "" ) \
DPOINT_DEFN( InterruptShortRSTCnt, UI32, "U(r,s,t) Number of Short Interruptions", "" ) \
DPOINT_DEFN( InterruptLongABCCnt, UI32, "U(a,b,c) Number of Long Interruptions", "" ) \
DPOINT_DEFN( InterruptLongRSTCnt, UI32, "U(r,s,t) Number of Long Interruptions", "" ) \
DPOINT_DEFN( InterruptShortABCTotDuration, Duration, "U(a,b,c) Accumulated Short Interruption Duration in seconds", "" ) \
DPOINT_DEFN( InterruptShortRSTTotDuration, Duration, "U(r,s,t) Accumulated Short Interruption Duration in seconds", "" ) \
DPOINT_DEFN( InterruptLongABCTotDuration, Duration, "U(a,b,c) Accumulated Long Interruption Duration in seconds", "" ) \
DPOINT_DEFN( InterruptLongRSTTotDuration, Duration, "U(r,s,t) Accumulated Long Interruption Duration in seconds", "" ) \
DPOINT_DEFN( SagMonitorEnable, EnDis, "Enables or disables the monitoring of voltage sags.", "" ) \
DPOINT_DEFN( SagNormalThreshold, UI32, "Normal threshold multiplier for sags.", "" ) \
DPOINT_DEFN( SagMinThreshold, UI32, "Minimum threshold multiplier for sags.", "" ) \
DPOINT_DEFN( SagTime, UI32, "Number of milliseconds that the voltage should be abnormally low before it is registered as a sag.", "" ) \
DPOINT_DEFN( SwellMonitorEnable, EnDis, "Enables or disables the monitoring of voltage swells.", "" ) \
DPOINT_DEFN( SwellNormalThreshold, UI32, "Normal threshold multiplier for swells.", "" ) \
DPOINT_DEFN( SwellTime, UI32, "Number of milliseconds that the voltage should be abnormally high before it is registered as a swell.", "" ) \
DPOINT_DEFN( SagSwellResetTime, UI32, "Number of milliseconds before the detection process for a sag or swell should reset.", "" ) \
DPOINT_DEFN( SagABCCnt, UI32, "U(a,b,c) Number of Sags", "" ) \
DPOINT_DEFN( SagRSTCnt, UI32, "U(r,s,t) Number of Sags", "" ) \
DPOINT_DEFN( SwellABCCnt, UI32, "U(a,b,c) Number of Swells", "" ) \
DPOINT_DEFN( SwellRSTCnt, UI32, "U(r,s,t) Number of Swells", "" ) \
DPOINT_DEFN( SagABCLastDuration, Duration, "Duration of the last sag that occurred on ABC.", "" ) \
DPOINT_DEFN( SagRSTLastDuration, Duration, "Duration of the last sag that occurred on RST.", "" ) \
DPOINT_DEFN( SwellABCLastDuration, Duration, "Duration of the last swell that occurred on ABC.", "" ) \
DPOINT_DEFN( SwellRSTLastDuration, Duration, "Duration of the last swell that occurred on RST.", "" ) \
DPOINT_DEFN( HrmLogEnabled, EnDis, "Enables or disables logging of harmonic values that are out of range.", "" ) \
DPOINT_DEFN( HrmLogTHDEnabled, EnDis, "Enables or disables logging of out of range THD values.", "" ) \
DPOINT_DEFN( HrmLogTHDDeadband, UI32, "Deadband value for logging out of range THD values.", "" ) \
DPOINT_DEFN( HrmLogTDDEnabled, EnDis, "Enables or disables logging of out of range TDD values.", "" ) \
DPOINT_DEFN( HrmLogTDDDeadband, UI32, "Deadband value for logging out of range TDD values.", "" ) \
DPOINT_DEFN( HrmLogIndivIEnabled, EnDis, "Enables or disables logging of out of range individual current harmonic values.", "" ) \
DPOINT_DEFN( HrmLogIndivIDeadband, UI32, "Deadband value for logging out of range individual current harmonic values.", "" ) \
DPOINT_DEFN( HrmLogIndivVEnabled, EnDis, "Enables or disables logging of out of range individual voltage harmonic values.", "" ) \
DPOINT_DEFN( HrmLogIndivVDeadband, UI32, "Deadband value for logging out of range individual voltage harmonic values.", "" ) \
DPOINT_DEFN( HrmLogTime, UI16, "Minimum time for a harmonic value to be out of range before it triggers logging.", "" ) \
DPOINT_DEFN( InterruptClearCounters, ClearCommand, "Erase Interruption Counters and Duration Counters", "" ) \
DPOINT_DEFN( SagSwellClearCounters, ClearCommand, "Erase Sag/Swell Counters and Duration Counters", "" ) \
DPOINT_DEFN( LogInterrupt, LogPQDIF, "For passing abbreviated interruption PQDIF events to the logging process.", "" ) \
DPOINT_DEFN( LogSagSwell, LogPQDIF, "For passing abbreviated sag/swell PQDIF events to the logging process.", "" ) \
DPOINT_DEFN( LogHrm, LogPQDIF, "For passing abbreviated harmonic PQDIF events to the logging process.", "" ) \
DPOINT_DEFN( CanIo1OutputEnableMasked, UI8, "GPIO enable/disable masked outputs", "" ) \
DPOINT_DEFN( CanIo2OutputEnableMasked, UI8, "GPIO output enable/disable masked outputs", "" ) \
DPOINT_DEFN( CanIo1OutputSetMasked, UI16, "Set GPIO outputs using a bit mask", "" ) \
DPOINT_DEFN( CanIo2OutputSetMasked, UI16, "Set GPIO outputs using a bit mask", "" ) \
DPOINT_DEFN( LogInterruptDir, Str, "Log file directory for long and short duration interruptions.", "" ) \
DPOINT_DEFN( LogSagSwellDir, Str, "Log file directory for sags and swells.", "" ) \
DPOINT_DEFN( LogHrmDir, Str, "Log file directory for harmonics.", "" ) \
DPOINT_DEFN( ClearInterruptDir, Bool, "Clears the log directory for long and short duration interruptions.", "" ) \
DPOINT_DEFN( ClearSagSwellDir, Bool, "Clears the log directory for sags and swells.", "" ) \
DPOINT_DEFN( ClearHrmDir, Bool, "Clears the log directory for harmonics.", "" ) \
DPOINT_DEFN( ChEvInterruptLog, ChangeEvent, "Interruption log changes.", "" ) \
DPOINT_DEFN( ChEvSagSwellLog, ChangeEvent, "Sag/swell log changes", "" ) \
DPOINT_DEFN( ChEvHrmLog, ChangeEvent, "Harmonic log changes.", "" ) \
DPOINT_DEFN( OscSaveFormat, OscCaptureFormat, "File format to use when saving oscillography captures.", "" ) \
DPOINT_DEFN( PGEChannelPort, CommsPort, "Channel Port for 2179 protocol", "" ) \
DPOINT_DEFN( PGEEnableProtocol, EnDis, "2179 Protocol Enabled", "" ) \
DPOINT_DEFN( PGEEnableCommsLog, EnDis, "Enable 2179 comms logging", "" ) \
DPOINT_DEFN( PGECommsLogMaxSize, UI8, "2179 comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( PGESlaveAddress, UI16, "2179 Slave Address", "" ) \
DPOINT_DEFN( PGEMasterAddress, UI8, "2179 Master Address", "" ) \
DPOINT_DEFN( PGEIgnoreMasterAddress, UI8, "2179 Ignore Master Address", "" ) \
DPOINT_DEFN( G11_SerialDTRStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_SerialDSRStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_SerialCDStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_SerialRTSStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_SerialCTSStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_SerialRIStatus, CommsSerialPinStatus, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_ConnectionStatus, CommsConnectionStatus, "Grp11 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G11_BytesReceivedStatus, UI32, "Grp11 Bytes received on a port.", "" ) \
DPOINT_DEFN( G11_BytesTransmittedStatus, UI32, "Grp11 No description", "" ) \
DPOINT_DEFN( G11_PacketsReceivedStatus, UI32, "Grp11 Packets received on a port.", "" ) \
DPOINT_DEFN( G11_PacketsTransmittedStatus, UI32, "Grp11 Packets Transmitted", "" ) \
DPOINT_DEFN( G11_ErrorPacketsReceivedStatus, UI32, "Grp11 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G11_ErrorPacketsTransmittedStatus, UI32, "Grp11 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G11_IpAddrStatus, IpAddr, "Grp11 IPv4 Address", "" ) \
DPOINT_DEFN( G11_SubnetMaskStatus, IpAddr, "Grp11 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G11_DefaultGatewayStatus, IpAddr, "Grp11 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G11_PortDetectedType, CommsPortDetectedType, "Grp11 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G11_PortDetectedName, Str, "Grp11 USB Port detected device name", "" ) \
DPOINT_DEFN( G11_SerialTxTestStatus, OnOff, "Grp11 serial port TX testing status", "" ) \
DPOINT_DEFN( G11_PacketsReceivedStatusIPv6, UI32, "Grp11 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G11_PacketsTransmittedStatusIPv6, UI32, "Grp11 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G11_ErrorPacketsReceivedStatusIPv6, UI32, "Grp11 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G11_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp11 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G11_Ipv6AddrStatus, Ipv6Addr, "Grp11 IPv6 Address", "" ) \
DPOINT_DEFN( G11_LanPrefixLengthStatus, UI8, "Grp11 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G11_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp11 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G11_IpVersionStatus, IpVersion, "Grp11 LAN IP version", "" ) \
DPOINT_DEFN( G11_SerialPortTestCmd, Signal, "Grp11_If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G11_SerialPortHangupCmd, Signal, "Grp11_Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G11_BytesReceivedResetCmd, Signal, "Grp11_reset bytes Received", "" ) \
DPOINT_DEFN( G11_BytesTransmittedResetCmd, Signal, "Grp11_reset bytes Transmitted", "" ) \
DPOINT_DEFN( G11_SerialBaudRate, CommsSerialBaudRate, "Grp11_Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G11_SerialDuplexType, CommsSerialDuplex, "Grp11_Serial Duplex Type", "" ) \
DPOINT_DEFN( G11_SerialRTSMode, CommsSerialRTSMode, "Grp11_Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G11_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp11_Serial RTS On Level", "" ) \
DPOINT_DEFN( G11_SerialDTRMode, CommsSerialDTRMode, "Grp11_Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G11_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp11_Serial DTR On Level", "" ) \
DPOINT_DEFN( G11_SerialParity, CommsSerialParity, "Grp11_Serial Parity", "" ) \
DPOINT_DEFN( G11_SerialCTSMode, CommsSerialCTSMode, "Grp11_Clear To Send setting.", "" ) \
DPOINT_DEFN( G11_SerialDSRMode, CommsSerialDSRMode, "Grp11_Data Set Ready setting.", "" ) \
DPOINT_DEFN( G11_SerialDTRLowTime, UI32, "Grp11 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G11_SerialTxDelay, UI32, "Grp11 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G11_SerialPreTxTime, UI32, "Grp11 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G11_SerialDCDFallTime, UI32, "Grp11 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G11_SerialCharTimeout, UI32, "Grp11_Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G11_SerialPostTxTime, UI32, "Grp11 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G11_SerialInactivityTime, UI32, "Grp11 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G11_SerialCollisionAvoidance, Bool, "Grp11_Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G11_SerialMinIdleTime, UI32, "Grp11 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G11_SerialMaxRandomDelay, UI32, "Grp11 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G11_ModemPoweredFromExtLoad, Bool, "Grp11_Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G11_ModemUsedWithLeasedLine, Bool, "Grp11_Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G11_ModemInitString, Str, "Grp11_Modem Init String", "" ) \
DPOINT_DEFN( G11_ModemDialOut, Bool, "Grp11_Modem Dial Out", "" ) \
DPOINT_DEFN( G11_ModemPreDialString, Str, "Grp11_Modem Pre Dial String", "" ) \
DPOINT_DEFN( G11_ModemDialNumber1, Str, "Grp11_Modem Dial Number1", "" ) \
DPOINT_DEFN( G11_ModemDialNumber2, Str, "Grp11_Modem Dial Number2", "" ) \
DPOINT_DEFN( G11_ModemDialNumber3, Str, "Grp11_Modem Dial Number3", "" ) \
DPOINT_DEFN( G11_ModemDialNumber4, Str, "Grp11_Modem Dial Number4", "" ) \
DPOINT_DEFN( G11_ModemDialNumber5, Str, "Grp11_Modem Dial Number5", "" ) \
DPOINT_DEFN( G11_ModemAutoDialInterval, UI32, "Grp11_Modem Auto Dial Interval time between failure to connect to one number in seconds. ", "" ) \
DPOINT_DEFN( G11_ModemConnectionTimeout, UI32, "Grp11_Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G11_ModemMaxCallDuration, UI32, "Grp11 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G11_ModemResponseTime, UI32, "Grp11 Modem Response Time", "" ) \
DPOINT_DEFN( G11_ModemHangUpCommand, Str, "Grp11_Modem Hang Up Command", "" ) \
DPOINT_DEFN( G11_ModemOffHookCommand, Str, "Grp11_Modem Off Hook Command", "" ) \
DPOINT_DEFN( G11_ModemAutoAnswerOn, Str, "Grp11_Modem Auto Answer On", "" ) \
DPOINT_DEFN( G11_ModemAutoAnswerOff, Str, "Grp11_Modem Auto Answer On", "" ) \
DPOINT_DEFN( G11_RadioPreamble, Bool, "Grp11_Radio Preamble", "" ) \
DPOINT_DEFN( G11_RadioPreambleChar, UI8, "Grp11_Radio Preamble Char", "" ) \
DPOINT_DEFN( G11_RadioPreambleRepeat, UI32, "Grp11_Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G11_RadioPreambleLastChar, UI8, "Grp11_Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G11_LanSpecifyIP, YesNo, "Grp11 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G11_LanIPAddr, IpAddr, "Grp11 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G11_LanSubnetMask, IpAddr, "Grp11 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G11_LanDefaultGateway, IpAddr, "Grp11 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G11_WlanNetworkSSID, Str, "Grp11_Wlan Network SSID", "" ) \
DPOINT_DEFN( G11_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp11_Wlan Network Authentication", "" ) \
DPOINT_DEFN( G11_WlanDataEncryption, CommsWlanDataEncryption, "Grp11_Wlan Data Encryption", "" ) \
DPOINT_DEFN( G11_WlanNetworkKey, Str, "Grp11_Wlan Network Key", "" ) \
DPOINT_DEFN( G11_WlanKeyIndex, UI32, "Grp11_Wlan Key Index", "" ) \
DPOINT_DEFN( G11_PortLocalRemoteMode, LocalRemote, "Grp11_Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G11_GPRSServiceProvider, Str, "Grp11_GPRS service provider name", "" ) \
DPOINT_DEFN( G11_GPRSUserName, Str, "Grp11_GPRS user name", "" ) \
DPOINT_DEFN( G11_GPRSPassWord, Str, "Grp11_", "" ) \
DPOINT_DEFN( G11_SerialDebugMode, YesNo, "Grp11_serial debug mode selection", "" ) \
DPOINT_DEFN( G11_SerialDebugFileName, Str, "Grp11_", "" ) \
DPOINT_DEFN( G11_GPRSBaudRate, CommsSerialBaudRate, "Grp11_GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G11_GPRSConnectionTimeout, UI32, "Grp11 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G11_DNP3InputPipe, Str, "Grp11_DNP3 input pipe ", "" ) \
DPOINT_DEFN( G11_DNP3OutputPipe, Str, "Grp11_DNP3 output pipe", "" ) \
DPOINT_DEFN( G11_CMSInputPipe, Str, "Grp11_CMS Input Pipe", "" ) \
DPOINT_DEFN( G11_CMSOutputPipe, Str, "Grp11_CMS Output Pipe", "" ) \
DPOINT_DEFN( G11_HMIInputPipe, Str, "Grp11_HMI Input Pipe", "" ) \
DPOINT_DEFN( G11_HMIOutputPipe, Str, "Grp11_HMI Output Pipe", "" ) \
DPOINT_DEFN( G11_DNP3ChannelRequest, Str, "Grp11_DNP3 Channel Request", "" ) \
DPOINT_DEFN( G11_DNP3ChannelOpen, Str, "Grp11_DNP3 Channel Open", "" ) \
DPOINT_DEFN( G11_CMSChannelRequest, Str, "Grp11_CMS Channel Request", "" ) \
DPOINT_DEFN( G11_CMSChannelOpen, Str, "Grp11_CMS Channel Open", "" ) \
DPOINT_DEFN( G11_HMIChannelRequest, Str, "Grp11_HMI Channel Request", "" ) \
DPOINT_DEFN( G11_HMIChannelOpen, Str, "Grp11_HMI Channel Open", "" ) \
DPOINT_DEFN( G11_GPRSUseModemSetting, YesNo, "Grp11 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G11_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp11_Replaced SerialRTSMode element for DB v5+.\r\nWe dont choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G11_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp11_Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G11_T10BInputPipe, Str, "Grp11_IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G11_T10BOutputPipe, Str, "Grp11_IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G11_T10BChannelRequest, Str, "Grp11_IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G11_T10BChannelOpen, Str, "Grp11_IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G11_P2PInputPipe, Str, "Grp11_P2P input pipe ", "" ) \
DPOINT_DEFN( G11_P2POutputPipe, Str, "Grp11_P2P output pipe ", "" ) \
DPOINT_DEFN( G11_P2PChannelRequest, Str, "Grp11_P2P Channel Request", "" ) \
DPOINT_DEFN( G11_P2PChannelOpen, Str, "Grp11_P2P Channel Open", "" ) \
DPOINT_DEFN( G11_PGEInputPipe, Str, "Grp11_PGE Input Pipe", "" ) \
DPOINT_DEFN( G11_PGEOutputPipe, Str, "Grp11_PGE output pipe ", "" ) \
DPOINT_DEFN( G11_PGEChannelRequest, Str, "Grp11_PGE Channel Request", "" ) \
DPOINT_DEFN( G11_PGEChannelOpen, Str, "Grp11_PGE Channel Open", "" ) \
DPOINT_DEFN( G11_LanProvideIP, YesNo, "Grp11 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G11_LanSpecifyIPv6, YesNo, "Grp11 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G11_LanIPv6Addr, Ipv6Addr, "Grp11 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G11_LanPrefixLength, UI8, "Grp11 LAN Prefix Length", "" ) \
DPOINT_DEFN( G11_LanIPv6DefaultGateway, Ipv6Addr, "Grp11 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G11_LanIpVersion, IpVersion, "Grp11 LAN IP version", "" ) \
DPOINT_DEFN( LanConfigType, UsbPortConfigType, "LAN port config type", "" ) \
DPOINT_DEFN( CommsChEvGrp11, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 11 settings.", "" ) \
DPOINT_DEFN( SigPickupNps1F, Signal, "Pickup output of NPS1+ activated", "" ) \
DPOINT_DEFN( SigPickupNps2F, Signal, "Pickup output of NPS2+ activated", "" ) \
DPOINT_DEFN( SigPickupNps3F, Signal, "Pickup output of NPS3+ activated", "" ) \
DPOINT_DEFN( SigPickupNps1R, Signal, "Pickup output of NPS1- activated", "" ) \
DPOINT_DEFN( SigPickupNps2R, Signal, "Pickup output of NPS2- activated", "" ) \
DPOINT_DEFN( SigPickupNps3R, Signal, "Pickup output of NPS3- activated", "" ) \
DPOINT_DEFN( SigPickupOcll1, Signal, "Pickup output of OCLL1 activated", "" ) \
DPOINT_DEFN( SigPickupOcll2, Signal, "Pickup output of OCLL2 activated", "" ) \
DPOINT_DEFN( SigPickupNpsll1, Signal, "Pickup output of NPSLL1 activated", "" ) \
DPOINT_DEFN( SigPickupNpsll2, Signal, "Pickup output of NPSLL2 activated", "" ) \
DPOINT_DEFN( SigPickupNpsll3, Signal, "Pickup output of NPSLL3 activated", "" ) \
DPOINT_DEFN( SigPickupEfll1, Signal, "Pickup output of EFLL1 activated", "" ) \
DPOINT_DEFN( SigPickupEfll2, Signal, "Pickup output of EFLL2 activated", "" ) \
DPOINT_DEFN( SigPickupSefll, Signal, "Pickup output of SEFLL activated", "" ) \
DPOINT_DEFN( SigOpenNps1F, Signal, "Open due to NPS1+ tripping", "" ) \
DPOINT_DEFN( SigOpenNps2F, Signal, "Open due to NPS2+ tripping", "" ) \
DPOINT_DEFN( SigOpenNps3F, Signal, "Open due to NPS3+ tripping", "" ) \
DPOINT_DEFN( SigOpenNps1R, Signal, "Open due to NPS1- tripping", "" ) \
DPOINT_DEFN( SigOpenNps2R, Signal, "Open due to NPS2- tripping", "" ) \
DPOINT_DEFN( SigOpenNps3R, Signal, "Open due to NPS3- tripping", "" ) \
DPOINT_DEFN( SigOpenOcll1, Signal, "Open due to OCLL1 tripping", "" ) \
DPOINT_DEFN( SigOpenOcll2, Signal, "Open due to OCLL2 tripping", "" ) \
DPOINT_DEFN( SigOpenNpsll1, Signal, "Open due to NPSLL1 tripping", "" ) \
DPOINT_DEFN( SigOpenNpsll2, Signal, "Open due to NPSLL2 tripping", "" ) \
DPOINT_DEFN( SigOpenNpsll3, Signal, "Open due to NPSLL3 tripping", "" ) \
DPOINT_DEFN( SigOpenEfll1, Signal, "Open due to EFLL1 tripping", "" ) \
DPOINT_DEFN( SigOpenEfll2, Signal, "Open due to EFLL2 tripping", "" ) \
DPOINT_DEFN( SigOpenSefll, Signal, "Open due to SEFLL tripping", "" ) \
DPOINT_DEFN( SigAlarmNps1F, Signal, "Alarm output of NPS1+ activated", "" ) \
DPOINT_DEFN( SigAlarmNps2F, Signal, "Alarm output of NPS2+ activated", "" ) \
DPOINT_DEFN( SigAlarmNps3F, Signal, "Alarm output of NPS3+ activated", "" ) \
DPOINT_DEFN( SigAlarmNps1R, Signal, "Alarm output of NPS1- activated", "" ) \
DPOINT_DEFN( SigAlarmNps2R, Signal, "Alarm output of NPS2- activated", "" ) \
DPOINT_DEFN( SigAlarmNps3R, Signal, "Alarm output of NPS3- activated", "" ) \
DPOINT_DEFN( SigCtrlNPSOn, Signal, "Negative phase sequence element is switched on\r\n", "" ) \
DPOINT_DEFN( CntrNpsTrips, UI32, "Fault Counter of NPS Trips", "" ) \
DPOINT_DEFN( MeasPowerFlowDirectionNPS, ProtDirOut, "Measurement Power Flow Direction: NPS", "" ) \
DPOINT_DEFN( ProtNpsDir, ProtDirOut, "Negative phase sequency (NPS) protection's direction output(F/R/?)", "" ) \
DPOINT_DEFN( TripMaxCurrI2, UI32, "Max I2 current at the time of the most recent trip.", "" ) \
DPOINT_DEFN( G1_NpsAt, UI32, "Grp1 NPS Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G1_NpsDnd, DndMode, "Grp1 NPS DND", "" ) \
DPOINT_DEFN( G1_SstNpsForward, UI8, "Grp1 NPS+ Single shot to trip.", "" ) \
DPOINT_DEFN( G1_SstNpsReverse, UI8, "Grp1 NPS- Single shot to trip.", "" ) \
DPOINT_DEFN( G1_NPS1F_Ip, UI32, "Grp1 NPS1+ Pickup current", "" ) \
DPOINT_DEFN( G1_NPS1F_Tcc, UI16, "Grp1 NPS1+ TCC Type", "" ) \
DPOINT_DEFN( G1_NPS1F_TDtMin, UI32, "Grp1 NPS1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_NPS1F_TDtRes, UI32, "Grp1 NPS1+ DT reset time", "" ) \
DPOINT_DEFN( G1_NPS1F_Tm, UI32, "Grp1 NPS1+ Time multiplier", "" ) \
DPOINT_DEFN( G1_NPS1F_Imin, UI32, "Grp1 NPS1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPS1F_Tmin, UI32, "Grp1 NPS1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPS1F_Tmax, UI32, "Grp1 NPS1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPS1F_Ta, UI32, "Grp1 NPS1+ Additional time", "" ) \
DPOINT_DEFN( G1_NPS1F_ImaxEn, EnDis, "Grp1 NPS1+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPS1F_Imax, UI32, "Grp1 NPS1+ Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPS1F_DirEn, EnDis, "Grp1 NPS1+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS1F_Tr1, TripMode, "Grp1 NPS1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_NPS1F_Tr2, TripMode, "Grp1 NPS1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS1F_Tr3, TripMode, "Grp1 NPS1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS1F_Tr4, TripMode, "Grp1 NPS1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPS1F_TccUD, TccCurve, "Grp1 NPS1+ User defined curve", "" ) \
DPOINT_DEFN( G1_NPS2F_Ip, UI32, "Grp1 NPS2+ Pickup current", "" ) \
DPOINT_DEFN( G1_NPS2F_Tcc, UI16, "Grp1 NPS2+ TCC Type", "" ) \
DPOINT_DEFN( G1_NPS2F_TDtMin, UI32, "Grp1 NPS2+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_NPS2F_TDtRes, UI32, "Grp1 NPS2+ DT reset time", "" ) \
DPOINT_DEFN( G1_NPS2F_Tm, UI32, "Grp1 NPS2+ Time multiplier", "" ) \
DPOINT_DEFN( G1_NPS2F_Imin, UI32, "Grp1 NPS2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPS2F_Tmin, UI32, "Grp1 NPS2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPS2F_Tmax, UI32, "Grp1 NPS2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPS2F_Ta, UI32, "Grp1 NPS2+ Additional time", "" ) \
DPOINT_DEFN( G1_NPS2F_ImaxEn, EnDis, "Grp1 NPS2+ Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPS2F_Imax, UI32, "Grp1 NPS2+ Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPS2F_DirEn, EnDis, "Grp1 NPS2+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS2F_Tr1, TripMode, "Grp1 NPS2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_NPS2F_Tr2, TripMode, "Grp1 NPS2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS2F_Tr3, TripMode, "Grp1 NPS2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS2F_Tr4, TripMode, "Grp1 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPS2F_TccUD, TccCurve, "Grp1 NPS2+ User defined curve", "" ) \
DPOINT_DEFN( G1_NPS3F_Ip, UI32, "Grp1 NPS3+ Pickup current", "" ) \
DPOINT_DEFN( G1_NPS3F_TDtMin, UI32, "Grp1 NPS3+ DT tripping time", "" ) \
DPOINT_DEFN( G1_NPS3F_TDtRes, UI32, "Grp1 NPS3+ DT reset time", "" ) \
DPOINT_DEFN( G1_NPS3F_DirEn, EnDis, "Grp1 NPS3+ Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS3F_Tr1, TripMode, "Grp1 NPS3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_NPS3F_Tr2, TripMode, "Grp1 NPS3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS3F_Tr3, TripMode, "Grp1 NPS3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS3F_Tr4, TripMode, "Grp1 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPS1R_Ip, UI32, "Grp1 NPS1- Pickup current", "" ) \
DPOINT_DEFN( G1_NPS1R_Tcc, UI16, "Grp1 NPS1- TCC Type", "" ) \
DPOINT_DEFN( G1_NPS1R_TDtMin, UI32, "Grp1 NPS1- DT min tripping time", "" ) \
DPOINT_DEFN( G1_NPS1R_TDtRes, UI32, "Grp1 NPS1- DT reset time", "" ) \
DPOINT_DEFN( G1_NPS1R_Tm, UI32, "Grp1 NPS1- Time multiplier", "" ) \
DPOINT_DEFN( G1_NPS1R_Imin, UI32, "Grp1 NPS1- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPS1R_Tmin, UI32, "Grp1 NPS1- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPS1R_Tmax, UI32, "Grp1 NPS1- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPS1R_Ta, UI32, "Grp1 NPS1- Additional time", "" ) \
DPOINT_DEFN( G1_NPS1R_ImaxEn, EnDis, "Grp1 NPS1- Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPS1R_Imax, UI32, "Grp1 NPS1- Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPS1R_DirEn, EnDis, "Grp1 NPS1- Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS1R_Tr1, TripMode, "Grp1 NPS1- Mode, Trip 1", "" ) \
DPOINT_DEFN( G1_NPS1R_Tr2, TripMode, "Grp1 NPS1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS1R_Tr3, TripMode, "Grp1 NPS1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS1R_Tr4, TripMode, "Grp1 NPS1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPS1R_TccUD, TccCurve, "Grp1 NPS1- User defined curve", "" ) \
DPOINT_DEFN( G1_NPS2R_Ip, UI32, "Grp1 NPS2- Pickup current", "" ) \
DPOINT_DEFN( G1_NPS2R_Tcc, UI16, "Grp1 NPS2- TCC Type", "" ) \
DPOINT_DEFN( G1_NPS2R_TDtMin, UI32, "Grp1 NPS2- DT min tripping time", "" ) \
DPOINT_DEFN( G1_NPS2R_TDtRes, UI32, "Grp1 NPS2- DT reset time", "" ) \
DPOINT_DEFN( G1_NPS2R_Tm, UI32, "Grp1 NPS2- Time multiplier", "" ) \
DPOINT_DEFN( G1_NPS2R_Imin, UI32, "Grp1 NPS2- Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPS2R_Tmin, UI32, "Grp1 NPS2- Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPS2R_Tmax, UI32, "Grp1 NPS2- Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPS2R_Ta, UI32, "Grp1 NPS2- Additional time", "" ) \
DPOINT_DEFN( G1_NPS2R_ImaxEn, EnDis, "Grp1 NPS2- Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPS2R_Imax, UI32, "Grp1 NPS2- Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPS2R_DirEn, EnDis, "Grp1 NPS2- Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS2R_Tr1, TripMode, "Grp1 NPS2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_NPS2R_Tr2, TripMode, "Grp1 NPS2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS2R_Tr3, TripMode, "Grp1 NPS2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS2R_Tr4, TripMode, "Grp1 NPS2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPS2R_TccUD, TccCurve, "Grp1 NPS2- User defined curve", "" ) \
DPOINT_DEFN( G1_NPS3R_Ip, UI32, "Grp1 NPS3- Pickup current", "" ) \
DPOINT_DEFN( G1_NPS3R_TDtMin, UI32, "Grp1 NPS3- DT tripping time", "" ) \
DPOINT_DEFN( G1_NPS3R_TDtRes, UI32, "Grp1 NPS3- DT reset time", "" ) \
DPOINT_DEFN( G1_NPS3R_DirEn, EnDis, "Grp1 NPS3- Enable directional protection", "" ) \
DPOINT_DEFN( G1_NPS3R_Tr1, TripMode, "Grp1 NPS3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G1_NPS3R_Tr2, TripMode, "Grp1 NPS3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G1_NPS3R_Tr3, TripMode, "Grp1 NPS3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G1_NPS3R_Tr4, TripMode, "Grp1 NPS3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G1_NPSLL1_Ip, UI32, "Grp1 NPSLL1 Pickup current", "" ) \
DPOINT_DEFN( G1_NPSLL1_Tcc, UI16, "Grp1 NPSLL1 TCC Type", "" ) \
DPOINT_DEFN( G1_NPSLL1_TDtMin, UI32, "Grp1 NPSLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_NPSLL1_TDtRes, UI32, "Grp1 NPSLL1 DT reset time", "" ) \
DPOINT_DEFN( G1_NPSLL1_Tm, UI32, "Grp1 NPSLL1 Time multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL1_Imin, UI32, "Grp1 NPSLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL1_Tmin, UI32, "Grp1 NPSLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPSLL1_Tmax, UI32, "Grp1 NPSLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPSLL1_Ta, UI32, "Grp1 NPSLL1 Additional time", "" ) \
DPOINT_DEFN( G1_NPSLL1_ImaxEn, EnDis, "Grp1 NPSLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPSLL1_Imax, UI32, "Grp1 NPSLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL1_En, EnDis, "Grp1 NPSLL1 Enable", "" ) \
DPOINT_DEFN( G1_NPSLL1_TccUD, TccCurve, "Grp1 NPSLL1 User defined curve", "" ) \
DPOINT_DEFN( G1_NPSLL2_Ip, UI32, "Grp1 NPSLL2 Pickup current", "" ) \
DPOINT_DEFN( G1_NPSLL2_Tcc, UI16, "Grp1 NPSLL2 TCC Type", "" ) \
DPOINT_DEFN( G1_NPSLL2_TDtMin, UI32, "Grp1 NPSLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_NPSLL2_TDtRes, UI32, "Grp1 NPSLL2 DT reset time", "" ) \
DPOINT_DEFN( G1_NPSLL2_Tm, UI32, "Grp1 NPSLL2 Time multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL2_Imin, UI32, "Grp1 NPSLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL2_Tmin, UI32, "Grp1 NPSLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_NPSLL2_Tmax, UI32, "Grp1 NPSLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_NPSLL2_Ta, UI32, "Grp1 NPSLL2 Additional time", "" ) \
DPOINT_DEFN( G1_NPSLL2_ImaxEn, EnDis, "Grp1 NPSLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G1_NPSLL2_Imax, UI32, "Grp1 NPSLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G1_NPSLL2_En, EnDis, "Grp1 NPSLL2 Enable", "" ) \
DPOINT_DEFN( G1_NPSLL2_TccUD, TccCurve, "Grp1 NPSLL2 User defined curve", "" ) \
DPOINT_DEFN( G1_NPSLL3_Ip, UI32, "Grp1 NPSLL3 Pickup current", "" ) \
DPOINT_DEFN( G1_NPSLL3_TDtMin, UI32, "Grp1 NPSLL3 DT tripping time", "" ) \
DPOINT_DEFN( G1_NPSLL3_TDtRes, UI32, "Grp1 NPSLL3 DT reset time", "" ) \
DPOINT_DEFN( G1_NPSLL3_En, EnDis, "Grp1 NPSLL3 Enable", "" ) \
DPOINT_DEFN( G1_EFLL1_Ip, UI32, "Grp1 EFLL1 Pickup current", "" ) \
DPOINT_DEFN( G1_EFLL1_Tcc, UI16, "Grp1 EFLL1 TCC Type", "" ) \
DPOINT_DEFN( G1_EFLL1_TDtMin, UI32, "Grp1 EFLL1 DT min tripping time", "" ) \
DPOINT_DEFN( G1_EFLL1_TDtRes, UI32, "Grp1 EFLL1 DT reset time", "" ) \
DPOINT_DEFN( G1_EFLL1_Tm, UI32, "Grp1 EFLL1 Time multiplier", "" ) \
DPOINT_DEFN( G1_EFLL1_Imin, UI32, "Grp1 EFLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EFLL1_Tmin, UI32, "Grp1 EFLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EFLL1_Tmax, UI32, "Grp1 EFLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EFLL1_Ta, UI32, "Grp1 EFLL1 Additional time", "" ) \
DPOINT_DEFN( G1_EFLL1_ImaxEn, EnDis, "Grp1 EFLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G1_EFLL1_Imax, UI32, "Grp1 EFLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G1_EFLL1_En, EnDis, "Grp1 EFLL1 Enable", "" ) \
DPOINT_DEFN( G1_EFLL1_TccUD, TccCurve, "Grp1 EFLL1 User defined curve", "" ) \
DPOINT_DEFN( G1_EFLL2_Ip, UI32, "Grp1 EFLL2 Pickup current", "" ) \
DPOINT_DEFN( G1_EFLL2_Tcc, UI16, "Grp1 EFLL2 TCC Type", "" ) \
DPOINT_DEFN( G1_EFLL2_TDtMin, UI32, "Grp1 EFLL2 DT min tripping time", "" ) \
DPOINT_DEFN( G1_EFLL2_TDtRes, UI32, "Grp1 EFLL2 DT reset time", "" ) \
DPOINT_DEFN( G1_EFLL2_Tm, UI32, "Grp1 EFLL2 Time multiplier", "" ) \
DPOINT_DEFN( G1_EFLL2_Imin, UI32, "Grp1 EFLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G1_EFLL2_Tmin, UI32, "Grp1 EFLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G1_EFLL2_Tmax, UI32, "Grp1 EFLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G1_EFLL2_Ta, UI32, "Grp1 EFLL2 Additional time", "" ) \
DPOINT_DEFN( G1_EFLL2_ImaxEn, EnDis, "Grp1 EFLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G1_EFLL2_Imax, UI32, "Grp1 EFLL2 Max mode", "" ) \
DPOINT_DEFN( G1_EFLL2_En, EnDis, "Grp1 EFLL2 Enable", "" ) \
DPOINT_DEFN( G1_EFLL2_TccUD, TccCurve, "Grp1 EFLL2 User defined curve", "" ) \
DPOINT_DEFN( G1_EFLL3_En, EnDis, "Grp1 EFLL3 Enable", "" ) \
DPOINT_DEFN( G1_SEFLL_Ip, UI32, "Grp1 SEFLL Pickup current", "" ) \
DPOINT_DEFN( G1_SEFLL_TDtMin, UI32, "Grp1 SEFLL DT tripping time", "" ) \
DPOINT_DEFN( G1_SEFLL_TDtRes, UI32, "Grp1 SEFLL DT reset time", "" ) \
DPOINT_DEFN( G1_SEFLL_En, EnDis, "Grp1 SEFLL Enable", "" ) \
DPOINT_DEFN( G1_AutoOpenPowerFlowReduction, UI8, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_AutoOpenPowerFlowTime, UI16, "Grp1 No description", "" ) \
DPOINT_DEFN( G1_LSRM_Timer, UI16, "Grp1 ", "" ) \
DPOINT_DEFN( G1_LSRM_En, EnDis, "Grp1 ", "" ) \
DPOINT_DEFN( G1_Uv4_TDtMin, UI32, "Grp1 UV4 DT operation time", "" ) \
DPOINT_DEFN( G1_Uv4_TDtRes, UI32, "Grp1 UV4 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Uv4_Trm, TripMode, "Grp1 UV4 Trip mode", "" ) \
DPOINT_DEFN( G1_Uv4_Um_min, UI32, "Grp1 UV4 Min voltage multiplier", "" ) \
DPOINT_DEFN( G1_Uv4_Um_max, UI32, "Grp1 UV4 Max voltage multiplier", "" ) \
DPOINT_DEFN( G1_Uv4_Um_mid, UI32, "Grp1 UV4 Mid voltage multiplier", "" ) \
DPOINT_DEFN( G1_Uv4_Tlock, UI16, "Grp1 UV4 lockout time", "" ) \
DPOINT_DEFN( G1_Uv4_Utype, Uv4VoltageType, "Grp1 UV4: Voltage type - Phase/Ground or Phase/Phase", "" ) \
DPOINT_DEFN( G1_Uv4_Voltages, Uv4Voltages, "Grp1 UV4: Voltages - ABC_RST, ABC, RST", "" ) \
DPOINT_DEFN( G1_SingleTripleModeF, SingleTripleMode, "Grp1 Single-triple mode for the forward direction.", "" ) \
DPOINT_DEFN( G1_SingleTripleModeR, SingleTripleMode, "Grp1 Single-triple mode for the reverse direction.", "" ) \
DPOINT_DEFN( G1_SinglePhaseVoltageDetect, EnDis, "Grp1 Indicates whether ABR should monitor all three phases or any single phase for below LSD when single-triple is active.", "" ) \
DPOINT_DEFN( G1_Uv1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp1 Voltages to monitor for UV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G1_Ov1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp1 Voltages to monitor for OV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G1_LlbEnable, EnDis, "Grp1 Live Load Block Enable/disable", "" ) \
DPOINT_DEFN( G1_LlbUM, UI32, "Grp1 LLB voltage multiplier", "" ) \
DPOINT_DEFN( G1_SectionaliserMode, EnDis, "Grp1 Sectionaliser Mode", "" ) \
DPOINT_DEFN( G1_OcDcr, LockDynamic, "Grp1 OC DCR", "" ) \
DPOINT_DEFN( G1_NpsDcr, LockDynamic, "Grp1 NPS DCR", "" ) \
DPOINT_DEFN( G1_EfDcr, LockDynamic, "Grp1 EF DCR", "" ) \
DPOINT_DEFN( G1_SefDcr, LockDynamic, "Grp1 SEF DCR", "" ) \
DPOINT_DEFN( G1_Ov3_Um, UI32, "Grp1 OV3 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Ov3_TDtMin, UI32, "Grp1 OV3 DT tripping time", "" ) \
DPOINT_DEFN( G1_Ov3_TDtRes, UI32, "Grp1 OV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G1_Ov3_Trm, TripMode, "Grp1 OV3 Trip mode", "" ) \
DPOINT_DEFN( G1_Ov4_Um, UI32, "Grp1 OV4 Voltage multiplier", "" ) \
DPOINT_DEFN( G1_Ov4_TDtMin, UI32, "Grp1 OV4 DT tripping time", "" ) \
DPOINT_DEFN( G1_Ov4_TDtRes, UI32, "Grp1 OV4 DT reset time. Note that this value is not yet user configurable", "" ) \
DPOINT_DEFN( G1_Ov4_Trm, TripMode, "Grp1 OV4 Trip mode", "" ) \
DPOINT_DEFN( G1_SequenceAdvanceStep, UI8, "Grp1 The sequence advance step config; specifies the maximum count that the sequence step will be advanced to if LSD is detected while the switch is closed.", "" ) \
DPOINT_DEFN( G1_UV3_SSTOnly, EnDis, "Grp1 Enable flag for UV3 Operate in SST only mode.", "" ) \
DPOINT_DEFN( G1_OV3MovingAverageMode, EnDis, "Grp1 Moving average mode for OV3", "" ) \
DPOINT_DEFN( G1_OV3MovingAverageWindow, UI32, "Grp1 Length of the OV3 moving average window in seconds", "" ) \
DPOINT_DEFN( G1_ArveTripsToLockout, TripsToLockout, "Grp1 Number of trips to lockout for voltage engines.", "" ) \
DPOINT_DEFN( G1_I2I1_Trm, TripModeDLA, "Grp1 I2/I1 trip mode", "" ) \
DPOINT_DEFN( G1_I2I1_Pickup, UI32, "Grp1 I2/I1 pickup value", "" ) \
DPOINT_DEFN( G1_I2I1_MinI2, UI32, "Grp1 Minimum I2 value for I2/I1 operation", "" ) \
DPOINT_DEFN( G1_I2I1_TDtMin, UI32, "Grp1 I2/I1 minimum tripping time", "" ) \
DPOINT_DEFN( G1_I2I1_TDtRes, UI32, "Grp1 I2/I1 DT reset time", "" ) \
DPOINT_DEFN( G1_SEFF_Ip_HighPrec, UI32, "Grp1 SEF+ Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G1_SEFR_Ip_HighPrec, UI32, "Grp1 SEF- Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G1_SEFLL_Ip_HighPrec, UI32, "Grp1 SEFLL Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G1_SSTControl_En, EnDis, "Grp1 Enable/disable setting for SST Control feature.", "" ) \
DPOINT_DEFN( G1_SSTControl_Tst, UI32, "Grp1 SST Control: time", "" ) \
DPOINT_DEFN( G2_NpsAt, UI32, "Grp2 NPS Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G2_NpsDnd, DndMode, "Grp2 NPS DND", "" ) \
DPOINT_DEFN( G2_SstNpsForward, UI8, "Grp2 NPS+ Single shot to trip.", "" ) \
DPOINT_DEFN( G2_SstNpsReverse, UI8, "Grp2 NPS- Single shot to trip.", "" ) \
DPOINT_DEFN( G2_NPS1F_Ip, UI32, "Grp2 NPS1+ Pickup current", "" ) \
DPOINT_DEFN( G2_NPS1F_Tcc, UI16, "Grp2 NPS1+ TCC Type", "" ) \
DPOINT_DEFN( G2_NPS1F_TDtMin, UI32, "Grp2 NPS1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_NPS1F_TDtRes, UI32, "Grp2 NPS1+ DT reset time", "" ) \
DPOINT_DEFN( G2_NPS1F_Tm, UI32, "Grp2 NPS1+ Time multiplier", "" ) \
DPOINT_DEFN( G2_NPS1F_Imin, UI32, "Grp2 NPS1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPS1F_Tmin, UI32, "Grp2 NPS1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPS1F_Tmax, UI32, "Grp2 NPS1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPS1F_Ta, UI32, "Grp2 NPS1+ Additional time", "" ) \
DPOINT_DEFN( G2_NPS1F_ImaxEn, EnDis, "Grp2 NPS1+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPS1F_Imax, UI32, "Grp2 NPS1+ Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPS1F_DirEn, EnDis, "Grp2 NPS1+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS1F_Tr1, TripMode, "Grp2 NPS1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_NPS1F_Tr2, TripMode, "Grp2 NPS1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS1F_Tr3, TripMode, "Grp2 NPS1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS1F_Tr4, TripMode, "Grp2 NPS1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPS1F_TccUD, TccCurve, "Grp2 NPS1+ User defined curve", "" ) \
DPOINT_DEFN( G2_NPS2F_Ip, UI32, "Grp2 NPS2+ Pickup current", "" ) \
DPOINT_DEFN( G2_NPS2F_Tcc, UI16, "Grp2 NPS2+ TCC Type", "" ) \
DPOINT_DEFN( G2_NPS2F_TDtMin, UI32, "Grp2 NPS2+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_NPS2F_TDtRes, UI32, "Grp2 NPS2+ DT reset time", "" ) \
DPOINT_DEFN( G2_NPS2F_Tm, UI32, "Grp2 NPS2+ Time multiplier", "" ) \
DPOINT_DEFN( G2_NPS2F_Imin, UI32, "Grp2 NPS2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPS2F_Tmin, UI32, "Grp2 NPS2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPS2F_Tmax, UI32, "Grp2 NPS2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPS2F_Ta, UI32, "Grp2 NPS2+ Additional time", "" ) \
DPOINT_DEFN( G2_NPS2F_ImaxEn, EnDis, "Grp2 NPS2+ Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPS2F_Imax, UI32, "Grp2 NPS2+ Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPS2F_DirEn, EnDis, "Grp2 NPS2+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS2F_Tr1, TripMode, "Grp2 NPS2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_NPS2F_Tr2, TripMode, "Grp2 NPS2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS2F_Tr3, TripMode, "Grp2 NPS2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS2F_Tr4, TripMode, "Grp2 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPS2F_TccUD, TccCurve, "Grp2 NPS2+ User defined curve", "" ) \
DPOINT_DEFN( G2_NPS3F_Ip, UI32, "Grp2 NPS3+ Pickup current", "" ) \
DPOINT_DEFN( G2_NPS3F_TDtMin, UI32, "Grp2 NPS3+ DT tripping time", "" ) \
DPOINT_DEFN( G2_NPS3F_TDtRes, UI32, "Grp2 NPS3+ DT reset time", "" ) \
DPOINT_DEFN( G2_NPS3F_DirEn, EnDis, "Grp2 NPS3+ Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS3F_Tr1, TripMode, "Grp2 NPS3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_NPS3F_Tr2, TripMode, "Grp2 NPS3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS3F_Tr3, TripMode, "Grp2 NPS3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS3F_Tr4, TripMode, "Grp2 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPS1R_Ip, UI32, "Grp2 NPS1- Pickup current", "" ) \
DPOINT_DEFN( G2_NPS1R_Tcc, UI16, "Grp2 NPS1- TCC Type", "" ) \
DPOINT_DEFN( G2_NPS1R_TDtMin, UI32, "Grp2 NPS1- DT min tripping time", "" ) \
DPOINT_DEFN( G2_NPS1R_TDtRes, UI32, "Grp2 NPS1- DT reset time", "" ) \
DPOINT_DEFN( G2_NPS1R_Tm, UI32, "Grp2 NPS1- Time multiplier", "" ) \
DPOINT_DEFN( G2_NPS1R_Imin, UI32, "Grp2 NPS1- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPS1R_Tmin, UI32, "Grp2 NPS1- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPS1R_Tmax, UI32, "Grp2 NPS1- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPS1R_Ta, UI32, "Grp2 NPS1- Additional time", "" ) \
DPOINT_DEFN( G2_NPS1R_ImaxEn, EnDis, "Grp2 NPS1- Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPS1R_Imax, UI32, "Grp2 NPS1- Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPS1R_DirEn, EnDis, "Grp2 NPS1- Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS1R_Tr1, TripMode, "Grp2 NPS1- Mode, Trip 1", "" ) \
DPOINT_DEFN( G2_NPS1R_Tr2, TripMode, "Grp2 NPS1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS1R_Tr3, TripMode, "Grp2 NPS1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS1R_Tr4, TripMode, "Grp2 NPS1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPS1R_TccUD, TccCurve, "Grp2 NPS1- User defined curve", "" ) \
DPOINT_DEFN( G2_NPS2R_Ip, UI32, "Grp2 NPS2- Pickup current", "" ) \
DPOINT_DEFN( G2_NPS2R_Tcc, UI16, "Grp2 NPS2- TCC Type", "" ) \
DPOINT_DEFN( G2_NPS2R_TDtMin, UI32, "Grp2 NPS2- DT min tripping time", "" ) \
DPOINT_DEFN( G2_NPS2R_TDtRes, UI32, "Grp2 NPS2- DT reset time", "" ) \
DPOINT_DEFN( G2_NPS2R_Tm, UI32, "Grp2 NPS2- Time multiplier", "" ) \
DPOINT_DEFN( G2_NPS2R_Imin, UI32, "Grp2 NPS2- Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPS2R_Tmin, UI32, "Grp2 NPS2- Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPS2R_Tmax, UI32, "Grp2 NPS2- Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPS2R_Ta, UI32, "Grp2 NPS2- Additional time", "" ) \
DPOINT_DEFN( G2_NPS2R_ImaxEn, EnDis, "Grp2 NPS2- Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPS2R_Imax, UI32, "Grp2 NPS2- Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPS2R_DirEn, EnDis, "Grp2 NPS2- Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS2R_Tr1, TripMode, "Grp2 NPS2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_NPS2R_Tr2, TripMode, "Grp2 NPS2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS2R_Tr3, TripMode, "Grp2 NPS2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS2R_Tr4, TripMode, "Grp2 NPS2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPS2R_TccUD, TccCurve, "Grp2 NPS2- User defined curve", "" ) \
DPOINT_DEFN( G2_NPS3R_Ip, UI32, "Grp2 NPS3- Pickup current", "" ) \
DPOINT_DEFN( G2_NPS3R_TDtMin, UI32, "Grp2 NPS3- DT tripping time", "" ) \
DPOINT_DEFN( G2_NPS3R_TDtRes, UI32, "Grp2 NPS3- DT reset time", "" ) \
DPOINT_DEFN( G2_NPS3R_DirEn, EnDis, "Grp2 NPS3- Enable directional protection", "" ) \
DPOINT_DEFN( G2_NPS3R_Tr1, TripMode, "Grp2 NPS3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G2_NPS3R_Tr2, TripMode, "Grp2 NPS3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G2_NPS3R_Tr3, TripMode, "Grp2 NPS3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G2_NPS3R_Tr4, TripMode, "Grp2 NPS3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G2_NPSLL1_Ip, UI32, "Grp2 NPSLL1 Pickup current", "" ) \
DPOINT_DEFN( G2_NPSLL1_Tcc, UI16, "Grp2 NPSLL1 TCC Type", "" ) \
DPOINT_DEFN( G2_NPSLL1_TDtMin, UI32, "Grp2 NPSLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_NPSLL1_TDtRes, UI32, "Grp2 NPSLL1 DT reset time", "" ) \
DPOINT_DEFN( G2_NPSLL1_Tm, UI32, "Grp2 NPSLL1 Time multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL1_Imin, UI32, "Grp2 NPSLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL1_Tmin, UI32, "Grp2 NPSLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPSLL1_Tmax, UI32, "Grp2 NPSLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPSLL1_Ta, UI32, "Grp2 NPSLL1 Additional time", "" ) \
DPOINT_DEFN( G2_NPSLL1_ImaxEn, EnDis, "Grp2 NPSLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPSLL1_Imax, UI32, "Grp2 NPSLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL1_En, EnDis, "Grp2 NPSLL1 Enable", "" ) \
DPOINT_DEFN( G2_NPSLL1_TccUD, TccCurve, "Grp2 NPSLL1 User defined curve", "" ) \
DPOINT_DEFN( G2_NPSLL2_Ip, UI32, "Grp2 NPSLL2 Pickup current", "" ) \
DPOINT_DEFN( G2_NPSLL2_Tcc, UI16, "Grp2 NPSLL2 TCC Type", "" ) \
DPOINT_DEFN( G2_NPSLL2_TDtMin, UI32, "Grp2 NPSLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_NPSLL2_TDtRes, UI32, "Grp2 NPSLL2 DT reset time", "" ) \
DPOINT_DEFN( G2_NPSLL2_Tm, UI32, "Grp2 NPSLL2 Time multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL2_Imin, UI32, "Grp2 NPSLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL2_Tmin, UI32, "Grp2 NPSLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_NPSLL2_Tmax, UI32, "Grp2 NPSLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_NPSLL2_Ta, UI32, "Grp2 NPSLL2 Additional time", "" ) \
DPOINT_DEFN( G2_NPSLL2_ImaxEn, EnDis, "Grp2 NPSLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G2_NPSLL2_Imax, UI32, "Grp2 NPSLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G2_NPSLL2_En, EnDis, "Grp2 NPSLL2 Enable", "" ) \
DPOINT_DEFN( G2_NPSLL2_TccUD, TccCurve, "Grp2 NPSLL2 User defined curve", "" ) \
DPOINT_DEFN( G2_NPSLL3_Ip, UI32, "Grp2 NPSLL3 Pickup current", "" ) \
DPOINT_DEFN( G2_NPSLL3_TDtMin, UI32, "Grp2 NPSLL3 DT tripping time", "" ) \
DPOINT_DEFN( G2_NPSLL3_TDtRes, UI32, "Grp2 NPSLL3 DT reset time", "" ) \
DPOINT_DEFN( G2_NPSLL3_En, EnDis, "Grp2 NPSLL3 Enable", "" ) \
DPOINT_DEFN( G2_EFLL1_Ip, UI32, "Grp2 EFLL1 Pickup current", "" ) \
DPOINT_DEFN( G2_EFLL1_Tcc, UI16, "Grp2 EFLL1 TCC Type", "" ) \
DPOINT_DEFN( G2_EFLL1_TDtMin, UI32, "Grp2 EFLL1 DT min tripping time", "" ) \
DPOINT_DEFN( G2_EFLL1_TDtRes, UI32, "Grp2 EFLL1 DT reset time", "" ) \
DPOINT_DEFN( G2_EFLL1_Tm, UI32, "Grp2 EFLL1 Time multiplier", "" ) \
DPOINT_DEFN( G2_EFLL1_Imin, UI32, "Grp2 EFLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EFLL1_Tmin, UI32, "Grp2 EFLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EFLL1_Tmax, UI32, "Grp2 EFLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EFLL1_Ta, UI32, "Grp2 EFLL1 Additional time", "" ) \
DPOINT_DEFN( G2_EFLL1_ImaxEn, EnDis, "Grp2 EFLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G2_EFLL1_Imax, UI32, "Grp2 EFLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G2_EFLL1_En, EnDis, "Grp2 EFLL1 Enable", "" ) \
DPOINT_DEFN( G2_EFLL1_TccUD, TccCurve, "Grp2 EFLL1 User defined curve", "" ) \
DPOINT_DEFN( G2_EFLL2_Ip, UI32, "Grp2 EFLL2 Pickup current", "" ) \
DPOINT_DEFN( G2_EFLL2_Tcc, UI16, "Grp2 EFLL2 TCC Type", "" ) \
DPOINT_DEFN( G2_EFLL2_TDtMin, UI32, "Grp2 EFLL2 DT min tripping time", "" ) \
DPOINT_DEFN( G2_EFLL2_TDtRes, UI32, "Grp2 EFLL2 DT reset time", "" ) \
DPOINT_DEFN( G2_EFLL2_Tm, UI32, "Grp2 EFLL2 Time multiplier", "" ) \
DPOINT_DEFN( G2_EFLL2_Imin, UI32, "Grp2 EFLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G2_EFLL2_Tmin, UI32, "Grp2 EFLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G2_EFLL2_Tmax, UI32, "Grp2 EFLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G2_EFLL2_Ta, UI32, "Grp2 EFLL2 Additional time", "" ) \
DPOINT_DEFN( G2_EFLL2_ImaxEn, EnDis, "Grp2 EFLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G2_EFLL2_Imax, UI32, "Grp2 EFLL2 Max mode", "" ) \
DPOINT_DEFN( G2_EFLL2_En, EnDis, "Grp2 EFLL2 Enable", "" ) \
DPOINT_DEFN( G2_EFLL2_TccUD, TccCurve, "Grp2 EFLL2 User defined curve", "" ) \
DPOINT_DEFN( G2_EFLL3_En, EnDis, "Grp2 EFLL3 Enable", "" ) \
DPOINT_DEFN( G2_SEFLL_Ip, UI32, "Grp2 SEFLL Pickup current", "" ) \
DPOINT_DEFN( G2_SEFLL_TDtMin, UI32, "Grp2 SEFLL DT tripping time", "" ) \
DPOINT_DEFN( G2_SEFLL_TDtRes, UI32, "Grp2 SEFLL DT reset time", "" ) \
DPOINT_DEFN( G2_SEFLL_En, EnDis, "Grp2 SEFLL Enable", "" ) \
DPOINT_DEFN( G2_AutoOpenPowerFlowReduction, UI8, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_AutoOpenPowerFlowTime, UI16, "Grp2 No description", "" ) \
DPOINT_DEFN( G2_LSRM_Timer, UI16, "Grp2 ", "" ) \
DPOINT_DEFN( G2_LSRM_En, EnDis, "Grp2 ", "" ) \
DPOINT_DEFN( G2_Uv4_TDtMin, UI32, "Grp2 UV4 DT operation time", "" ) \
DPOINT_DEFN( G2_Uv4_TDtRes, UI32, "Grp2 UV4 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Uv4_Trm, TripMode, "Grp2 UV4 Trip mode", "" ) \
DPOINT_DEFN( G2_Uv4_Um_min, UI32, "Grp2 UV4 Min voltage multiplier", "" ) \
DPOINT_DEFN( G2_Uv4_Um_max, UI32, "Grp2 UV4 Max voltage multiplier", "" ) \
DPOINT_DEFN( G2_Uv4_Um_mid, UI32, "Grp2 UV4 Mid voltage multiplier", "" ) \
DPOINT_DEFN( G2_Uv4_Tlock, UI16, "Grp2 UV4 lockout time", "" ) \
DPOINT_DEFN( G2_Uv4_Utype, Uv4VoltageType, "Grp2 UV4: Voltage type - Phase/Ground or Phase/Phase", "" ) \
DPOINT_DEFN( G2_Uv4_Voltages, Uv4Voltages, "Grp2 UV4: Voltages - ABC_RST, ABC, RST", "" ) \
DPOINT_DEFN( G2_SingleTripleModeF, SingleTripleMode, "Grp2 Single-triple mode for the forward direction.", "" ) \
DPOINT_DEFN( G2_SingleTripleModeR, SingleTripleMode, "Grp2 Single-triple mode for the reverse direction.", "" ) \
DPOINT_DEFN( G2_SinglePhaseVoltageDetect, EnDis, "Grp2 Indicates whether ABR should monitor all three phases or any single phase for below LSD when single-triple is active.", "" ) \
DPOINT_DEFN( G2_Uv1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp2 Voltages to monitor for UV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G2_Ov1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp2 Voltages to monitor for OV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G2_LlbEnable, EnDis, "Grp2 Live Load Block Enable/disable", "" ) \
DPOINT_DEFN( G2_LlbUM, UI32, "Grp2 LLB voltage multiplier", "" ) \
DPOINT_DEFN( G2_SectionaliserMode, EnDis, "Grp2 Sectionaliser Mode", "" ) \
DPOINT_DEFN( G2_OcDcr, LockDynamic, "Grp2 OC DCR", "" ) \
DPOINT_DEFN( G2_NpsDcr, LockDynamic, "Grp2 NPS DCR", "" ) \
DPOINT_DEFN( G2_EfDcr, LockDynamic, "Grp2 EF DCR", "" ) \
DPOINT_DEFN( G2_SefDcr, LockDynamic, "Grp2 SEF DCR", "" ) \
DPOINT_DEFN( G2_Ov3_Um, UI32, "Grp2 OV3 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Ov3_TDtMin, UI32, "Grp2 OV3 DT tripping time", "" ) \
DPOINT_DEFN( G2_Ov3_TDtRes, UI32, "Grp2 OV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G2_Ov3_Trm, TripMode, "Grp2 OV3 Trip mode", "" ) \
DPOINT_DEFN( G2_Ov4_Um, UI32, "Grp2 OV4 Voltage multiplier", "" ) \
DPOINT_DEFN( G2_Ov4_TDtMin, UI32, "Grp2 OV4 DT tripping time", "" ) \
DPOINT_DEFN( G2_Ov4_TDtRes, UI32, "Grp2 OV4 DT reset time. Note that this value is not yet user configurable", "" ) \
DPOINT_DEFN( G2_Ov4_Trm, TripMode, "Grp2 OV4 Trip mode", "" ) \
DPOINT_DEFN( G2_SequenceAdvanceStep, UI8, "Grp2 The sequence advance step config; specifies the maximum count that the sequence step will be advanced to if LSD is detected while the switch is closed.", "" ) \
DPOINT_DEFN( G2_UV3_SSTOnly, EnDis, "Grp2 Enable flag for UV3 Operate in SST only mode.", "" ) \
DPOINT_DEFN( G2_OV3MovingAverageMode, EnDis, "Grp2 Moving average mode for OV3", "" ) \
DPOINT_DEFN( G2_OV3MovingAverageWindow, UI32, "Grp2 Length of the OV3 moving average window in seconds", "" ) \
DPOINT_DEFN( G2_ArveTripsToLockout, TripsToLockout, "Grp2 Number of trips to lockout for voltage engines.", "" ) \
DPOINT_DEFN( G2_I2I1_Trm, TripModeDLA, "Grp2 I2/I1 trip mode", "" ) \
DPOINT_DEFN( G2_I2I1_Pickup, UI32, "Grp2 I2/I1 pickup value", "" ) \
DPOINT_DEFN( G2_I2I1_MinI2, UI32, "Grp2 Minimum I2 value for I2/I1 operation", "" ) \
DPOINT_DEFN( G2_I2I1_TDtMin, UI32, "Grp2 I2/I1 minimum tripping time", "" ) \
DPOINT_DEFN( G2_I2I1_TDtRes, UI32, "Grp2 I2/I1 DT reset time", "" ) \
DPOINT_DEFN( G2_SEFF_Ip_HighPrec, UI32, "Grp2 SEF+ Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G2_SEFR_Ip_HighPrec, UI32, "Grp2 SEF- Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G2_SEFLL_Ip_HighPrec, UI32, "Grp2 SEFLL Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G2_SSTControl_En, EnDis, "Grp2 Enable/disable setting for SST Control feature.", "" ) \
DPOINT_DEFN( G2_SSTControl_Tst, UI32, "Grp2 SST Control: time", "" ) \
DPOINT_DEFN( G3_NpsAt, UI32, "Grp3 NPS Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G3_NpsDnd, DndMode, "Grp3 NPS DND", "" ) \
DPOINT_DEFN( G3_SstNpsForward, UI8, "Grp3 NPS+ Single shot to trip.", "" ) \
DPOINT_DEFN( G3_SstNpsReverse, UI8, "Grp3 NPS- Single shot to trip.", "" ) \
DPOINT_DEFN( G3_NPS1F_Ip, UI32, "Grp3 NPS1+ Pickup current", "" ) \
DPOINT_DEFN( G3_NPS1F_Tcc, UI16, "Grp3 NPS1+ TCC Type", "" ) \
DPOINT_DEFN( G3_NPS1F_TDtMin, UI32, "Grp3 NPS1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_NPS1F_TDtRes, UI32, "Grp3 NPS1+ DT reset time", "" ) \
DPOINT_DEFN( G3_NPS1F_Tm, UI32, "Grp3 NPS1+ Time multiplier", "" ) \
DPOINT_DEFN( G3_NPS1F_Imin, UI32, "Grp3 NPS1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPS1F_Tmin, UI32, "Grp3 NPS1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPS1F_Tmax, UI32, "Grp3 NPS1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPS1F_Ta, UI32, "Grp3 NPS1+ Additional time", "" ) \
DPOINT_DEFN( G3_NPS1F_ImaxEn, EnDis, "Grp3 NPS1+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPS1F_Imax, UI32, "Grp3 NPS1+ Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPS1F_DirEn, EnDis, "Grp3 NPS1+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS1F_Tr1, TripMode, "Grp3 NPS1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_NPS1F_Tr2, TripMode, "Grp3 NPS1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS1F_Tr3, TripMode, "Grp3 NPS1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS1F_Tr4, TripMode, "Grp3 NPS1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPS1F_TccUD, TccCurve, "Grp3 NPS1+ User defined curve", "" ) \
DPOINT_DEFN( G3_NPS2F_Ip, UI32, "Grp3 NPS2+ Pickup current", "" ) \
DPOINT_DEFN( G3_NPS2F_Tcc, UI16, "Grp3 NPS2+ TCC Type", "" ) \
DPOINT_DEFN( G3_NPS2F_TDtMin, UI32, "Grp3 NPS2+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_NPS2F_TDtRes, UI32, "Grp3 NPS2+ DT reset time", "" ) \
DPOINT_DEFN( G3_NPS2F_Tm, UI32, "Grp3 NPS2+ Time multiplier", "" ) \
DPOINT_DEFN( G3_NPS2F_Imin, UI32, "Grp3 NPS2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPS2F_Tmin, UI32, "Grp3 NPS2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPS2F_Tmax, UI32, "Grp3 NPS2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPS2F_Ta, UI32, "Grp3 NPS2+ Additional time", "" ) \
DPOINT_DEFN( G3_NPS2F_ImaxEn, EnDis, "Grp3 NPS2+ Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPS2F_Imax, UI32, "Grp3 NPS2+ Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPS2F_DirEn, EnDis, "Grp3 NPS2+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS2F_Tr1, TripMode, "Grp3 NPS2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_NPS2F_Tr2, TripMode, "Grp3 NPS2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS2F_Tr3, TripMode, "Grp3 NPS2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS2F_Tr4, TripMode, "Grp3 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPS2F_TccUD, TccCurve, "Grp3 NPS2+ User defined curve", "" ) \
DPOINT_DEFN( G3_NPS3F_Ip, UI32, "Grp3 NPS3+ Pickup current", "" ) \
DPOINT_DEFN( G3_NPS3F_TDtMin, UI32, "Grp3 NPS3+ DT tripping time", "" ) \
DPOINT_DEFN( G3_NPS3F_TDtRes, UI32, "Grp3 NPS3+ DT reset time", "" ) \
DPOINT_DEFN( G3_NPS3F_DirEn, EnDis, "Grp3 NPS3+ Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS3F_Tr1, TripMode, "Grp3 NPS3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_NPS3F_Tr2, TripMode, "Grp3 NPS3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS3F_Tr3, TripMode, "Grp3 NPS3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS3F_Tr4, TripMode, "Grp3 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPS1R_Ip, UI32, "Grp3 NPS1- Pickup current", "" ) \
DPOINT_DEFN( G3_NPS1R_Tcc, UI16, "Grp3 NPS1- TCC Type", "" ) \
DPOINT_DEFN( G3_NPS1R_TDtMin, UI32, "Grp3 NPS1- DT min tripping time", "" ) \
DPOINT_DEFN( G3_NPS1R_TDtRes, UI32, "Grp3 NPS1- DT reset time", "" ) \
DPOINT_DEFN( G3_NPS1R_Tm, UI32, "Grp3 NPS1- Time multiplier", "" ) \
DPOINT_DEFN( G3_NPS1R_Imin, UI32, "Grp3 NPS1- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPS1R_Tmin, UI32, "Grp3 NPS1- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPS1R_Tmax, UI32, "Grp3 NPS1- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPS1R_Ta, UI32, "Grp3 NPS1- Additional time", "" ) \
DPOINT_DEFN( G3_NPS1R_ImaxEn, EnDis, "Grp3 NPS1- Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPS1R_Imax, UI32, "Grp3 NPS1- Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPS1R_DirEn, EnDis, "Grp3 NPS1- Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS1R_Tr1, TripMode, "Grp3 NPS1- Mode, Trip 1", "" ) \
DPOINT_DEFN( G3_NPS1R_Tr2, TripMode, "Grp3 NPS1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS1R_Tr3, TripMode, "Grp3 NPS1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS1R_Tr4, TripMode, "Grp3 NPS1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPS1R_TccUD, TccCurve, "Grp3 NPS1- User defined curve", "" ) \
DPOINT_DEFN( G3_NPS2R_Ip, UI32, "Grp3 NPS2- Pickup current", "" ) \
DPOINT_DEFN( G3_NPS2R_Tcc, UI16, "Grp3 NPS2- TCC Type", "" ) \
DPOINT_DEFN( G3_NPS2R_TDtMin, UI32, "Grp3 NPS2- DT min tripping time", "" ) \
DPOINT_DEFN( G3_NPS2R_TDtRes, UI32, "Grp3 NPS2- DT reset time", "" ) \
DPOINT_DEFN( G3_NPS2R_Tm, UI32, "Grp3 NPS2- Time multiplier", "" ) \
DPOINT_DEFN( G3_NPS2R_Imin, UI32, "Grp3 NPS2- Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPS2R_Tmin, UI32, "Grp3 NPS2- Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPS2R_Tmax, UI32, "Grp3 NPS2- Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPS2R_Ta, UI32, "Grp3 NPS2- Additional time", "" ) \
DPOINT_DEFN( G3_NPS2R_ImaxEn, EnDis, "Grp3 NPS2- Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPS2R_Imax, UI32, "Grp3 NPS2- Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPS2R_DirEn, EnDis, "Grp3 NPS2- Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS2R_Tr1, TripMode, "Grp3 NPS2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_NPS2R_Tr2, TripMode, "Grp3 NPS2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS2R_Tr3, TripMode, "Grp3 NPS2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS2R_Tr4, TripMode, "Grp3 NPS2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPS2R_TccUD, TccCurve, "Grp3 NPS2- User defined curve", "" ) \
DPOINT_DEFN( G3_NPS3R_Ip, UI32, "Grp3 NPS3- Pickup current", "" ) \
DPOINT_DEFN( G3_NPS3R_TDtMin, UI32, "Grp3 NPS3- DT tripping time", "" ) \
DPOINT_DEFN( G3_NPS3R_TDtRes, UI32, "Grp3 NPS3- DT reset time", "" ) \
DPOINT_DEFN( G3_NPS3R_DirEn, EnDis, "Grp3 NPS3- Enable directional protection", "" ) \
DPOINT_DEFN( G3_NPS3R_Tr1, TripMode, "Grp3 NPS3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G3_NPS3R_Tr2, TripMode, "Grp3 NPS3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G3_NPS3R_Tr3, TripMode, "Grp3 NPS3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G3_NPS3R_Tr4, TripMode, "Grp3 NPS3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G3_NPSLL1_Ip, UI32, "Grp3 NPSLL1 Pickup current", "" ) \
DPOINT_DEFN( G3_NPSLL1_Tcc, UI16, "Grp3 NPSLL1 TCC Type", "" ) \
DPOINT_DEFN( G3_NPSLL1_TDtMin, UI32, "Grp3 NPSLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_NPSLL1_TDtRes, UI32, "Grp3 NPSLL1 DT reset time", "" ) \
DPOINT_DEFN( G3_NPSLL1_Tm, UI32, "Grp3 NPSLL1 Time multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL1_Imin, UI32, "Grp3 NPSLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL1_Tmin, UI32, "Grp3 NPSLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPSLL1_Tmax, UI32, "Grp3 NPSLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPSLL1_Ta, UI32, "Grp3 NPSLL1 Additional time", "" ) \
DPOINT_DEFN( G3_NPSLL1_ImaxEn, EnDis, "Grp3 NPSLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPSLL1_Imax, UI32, "Grp3 NPSLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL1_En, EnDis, "Grp3 NPSLL1 Enable", "" ) \
DPOINT_DEFN( G3_NPSLL1_TccUD, TccCurve, "Grp3 NPSLL1 User defined curve", "" ) \
DPOINT_DEFN( G3_NPSLL2_Ip, UI32, "Grp3 NPSLL2 Pickup current", "" ) \
DPOINT_DEFN( G3_NPSLL2_Tcc, UI16, "Grp3 NPSLL2 TCC Type", "" ) \
DPOINT_DEFN( G3_NPSLL2_TDtMin, UI32, "Grp3 NPSLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_NPSLL2_TDtRes, UI32, "Grp3 NPSLL2 DT reset time", "" ) \
DPOINT_DEFN( G3_NPSLL2_Tm, UI32, "Grp3 NPSLL2 Time multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL2_Imin, UI32, "Grp3 NPSLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL2_Tmin, UI32, "Grp3 NPSLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_NPSLL2_Tmax, UI32, "Grp3 NPSLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_NPSLL2_Ta, UI32, "Grp3 NPSLL2 Additional time", "" ) \
DPOINT_DEFN( G3_NPSLL2_ImaxEn, EnDis, "Grp3 NPSLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G3_NPSLL2_Imax, UI32, "Grp3 NPSLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G3_NPSLL2_En, EnDis, "Grp3 NPSLL2 Enable", "" ) \
DPOINT_DEFN( G3_NPSLL2_TccUD, TccCurve, "Grp3 NPSLL2 User defined curve", "" ) \
DPOINT_DEFN( G3_NPSLL3_Ip, UI32, "Grp3 NPSLL3 Pickup current", "" ) \
DPOINT_DEFN( G3_NPSLL3_TDtMin, UI32, "Grp3 NPSLL3 DT tripping time", "" ) \
DPOINT_DEFN( G3_NPSLL3_TDtRes, UI32, "Grp3 NPSLL3 DT reset time", "" ) \
DPOINT_DEFN( G3_NPSLL3_En, EnDis, "Grp3 NPSLL3 Enable", "" ) \
DPOINT_DEFN( G3_EFLL1_Ip, UI32, "Grp3 EFLL1 Pickup current", "" ) \
DPOINT_DEFN( G3_EFLL1_Tcc, UI16, "Grp3 EFLL1 TCC Type", "" ) \
DPOINT_DEFN( G3_EFLL1_TDtMin, UI32, "Grp3 EFLL1 DT min tripping time", "" ) \
DPOINT_DEFN( G3_EFLL1_TDtRes, UI32, "Grp3 EFLL1 DT reset time", "" ) \
DPOINT_DEFN( G3_EFLL1_Tm, UI32, "Grp3 EFLL1 Time multiplier", "" ) \
DPOINT_DEFN( G3_EFLL1_Imin, UI32, "Grp3 EFLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EFLL1_Tmin, UI32, "Grp3 EFLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EFLL1_Tmax, UI32, "Grp3 EFLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EFLL1_Ta, UI32, "Grp3 EFLL1 Additional time", "" ) \
DPOINT_DEFN( G3_EFLL1_ImaxEn, EnDis, "Grp3 EFLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G3_EFLL1_Imax, UI32, "Grp3 EFLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G3_EFLL1_En, EnDis, "Grp3 EFLL1 Enable", "" ) \
DPOINT_DEFN( G3_EFLL1_TccUD, TccCurve, "Grp3 EFLL1 User defined curve", "" ) \
DPOINT_DEFN( G3_EFLL2_Ip, UI32, "Grp3 EFLL2 Pickup current", "" ) \
DPOINT_DEFN( G3_EFLL2_Tcc, UI16, "Grp3 EFLL2 TCC Type", "" ) \
DPOINT_DEFN( G3_EFLL2_TDtMin, UI32, "Grp3 EFLL2 DT min tripping time", "" ) \
DPOINT_DEFN( G3_EFLL2_TDtRes, UI32, "Grp3 EFLL2 DT reset time", "" ) \
DPOINT_DEFN( G3_EFLL2_Tm, UI32, "Grp3 EFLL2 Time multiplier", "" ) \
DPOINT_DEFN( G3_EFLL2_Imin, UI32, "Grp3 EFLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G3_EFLL2_Tmin, UI32, "Grp3 EFLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G3_EFLL2_Tmax, UI32, "Grp3 EFLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G3_EFLL2_Ta, UI32, "Grp3 EFLL2 Additional time", "" ) \
DPOINT_DEFN( G3_EFLL2_ImaxEn, EnDis, "Grp3 EFLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G3_EFLL2_Imax, UI32, "Grp3 EFLL2 Max mode", "" ) \
DPOINT_DEFN( G3_EFLL2_En, EnDis, "Grp3 EFLL2 Enable", "" ) \
DPOINT_DEFN( G3_EFLL2_TccUD, TccCurve, "Grp3 EFLL2 User defined curve", "" ) \
DPOINT_DEFN( G3_EFLL3_En, EnDis, "Grp3 EFLL3 Enable", "" ) \
DPOINT_DEFN( G3_SEFLL_Ip, UI32, "Grp3 SEFLL Pickup current", "" ) \
DPOINT_DEFN( G3_SEFLL_TDtMin, UI32, "Grp3 SEFLL DT tripping time", "" ) \
DPOINT_DEFN( G3_SEFLL_TDtRes, UI32, "Grp3 SEFLL DT reset time", "" ) \
DPOINT_DEFN( G3_SEFLL_En, EnDis, "Grp3 SEFLL Enable", "" ) \
DPOINT_DEFN( G3_AutoOpenPowerFlowReduction, UI8, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_AutoOpenPowerFlowTime, UI16, "Grp3 No description", "" ) \
DPOINT_DEFN( G3_LSRM_Timer, UI16, "Grp3 ", "" ) \
DPOINT_DEFN( G3_LSRM_En, EnDis, "Grp3 ", "" ) \
DPOINT_DEFN( G3_Uv4_TDtMin, UI32, "Grp3 UV4 DT operation time", "" ) \
DPOINT_DEFN( G3_Uv4_TDtRes, UI32, "Grp3 UV4 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Uv4_Trm, TripMode, "Grp3 UV4 Trip mode", "" ) \
DPOINT_DEFN( G3_Uv4_Um_min, UI32, "Grp3 UV4 Min voltage multiplier", "" ) \
DPOINT_DEFN( G3_Uv4_Um_max, UI32, "Grp3 UV4 Max voltage multiplier", "" ) \
DPOINT_DEFN( G3_Uv4_Um_mid, UI32, "Grp3 UV4 Mid voltage multiplier", "" ) \
DPOINT_DEFN( G3_Uv4_Tlock, UI16, "Grp3 UV4 lockout time", "" ) \
DPOINT_DEFN( G3_Uv4_Utype, Uv4VoltageType, "Grp3 UV4: Voltage type - Phase/Ground or Phase/Phase", "" ) \
DPOINT_DEFN( G3_Uv4_Voltages, Uv4Voltages, "Grp3 UV4: Voltages - ABC_RST, ABC, RST", "" ) \
DPOINT_DEFN( G3_SingleTripleModeF, SingleTripleMode, "Grp3 Single-triple mode for the forward direction.", "" ) \
DPOINT_DEFN( G3_SingleTripleModeR, SingleTripleMode, "Grp3 Single-triple mode for the reverse direction.", "" ) \
DPOINT_DEFN( G3_SinglePhaseVoltageDetect, EnDis, "Grp3 Indicates whether ABR should monitor all three phases or any single phase for below LSD when single-triple is active.", "" ) \
DPOINT_DEFN( G3_Uv1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp3 Voltages to monitor for UV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G3_Ov1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp3 Voltages to monitor for OV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G3_LlbEnable, EnDis, "Grp3 Live Load Block Enable/disable", "" ) \
DPOINT_DEFN( G3_LlbUM, UI32, "Grp3 LLB voltage multiplier", "" ) \
DPOINT_DEFN( G3_SectionaliserMode, EnDis, "Grp3 Sectionaliser Mode", "" ) \
DPOINT_DEFN( G3_OcDcr, LockDynamic, "Grp3 OC DCR", "" ) \
DPOINT_DEFN( G3_NpsDcr, LockDynamic, "Grp3 NPS DCR", "" ) \
DPOINT_DEFN( G3_EfDcr, LockDynamic, "Grp3 EF DCR", "" ) \
DPOINT_DEFN( G3_SefDcr, LockDynamic, "Grp3 SEF DCR", "" ) \
DPOINT_DEFN( G3_Ov3_Um, UI32, "Grp3 OV3 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Ov3_TDtMin, UI32, "Grp3 OV3 DT tripping time", "" ) \
DPOINT_DEFN( G3_Ov3_TDtRes, UI32, "Grp3 OV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G3_Ov3_Trm, TripMode, "Grp3 OV3 Trip mode", "" ) \
DPOINT_DEFN( G3_Ov4_Um, UI32, "Grp3 OV4 Voltage multiplier", "" ) \
DPOINT_DEFN( G3_Ov4_TDtMin, UI32, "Grp3 OV4 DT tripping time", "" ) \
DPOINT_DEFN( G3_Ov4_TDtRes, UI32, "Grp3 OV4 DT reset time. Note that this value is not yet user configurable", "" ) \
DPOINT_DEFN( G3_Ov4_Trm, TripMode, "Grp3 OV4 Trip mode", "" ) \
DPOINT_DEFN( G3_SequenceAdvanceStep, UI8, "Grp3 The sequence advance step config; specifies the maximum count that the sequence step will be advanced to if LSD is detected while the switch is closed.", "" ) \
DPOINT_DEFN( G3_UV3_SSTOnly, EnDis, "Grp3 Enable flag for UV3 Operate in SST only mode.", "" ) \
DPOINT_DEFN( G3_OV3MovingAverageMode, EnDis, "Grp3 Moving average mode for OV3", "" ) \
DPOINT_DEFN( G3_OV3MovingAverageWindow, UI32, "Grp3 Length of the OV3 moving average window in seconds", "" ) \
DPOINT_DEFN( G3_ArveTripsToLockout, TripsToLockout, "Grp3 Number of trips to lockout for voltage engines.", "" ) \
DPOINT_DEFN( G3_I2I1_Trm, TripModeDLA, "Grp3 I2/I1 trip mode", "" ) \
DPOINT_DEFN( G3_I2I1_Pickup, UI32, "Grp3 I2/I1 pickup value", "" ) \
DPOINT_DEFN( G3_I2I1_MinI2, UI32, "Grp3 Minimum I2 value for I2/I1 operation", "" ) \
DPOINT_DEFN( G3_I2I1_TDtMin, UI32, "Grp3 I2/I1 minimum tripping time", "" ) \
DPOINT_DEFN( G3_I2I1_TDtRes, UI32, "Grp3 I2/I1 DT reset time", "" ) \
DPOINT_DEFN( G3_SEFF_Ip_HighPrec, UI32, "Grp3 SEF+ Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G3_SEFR_Ip_HighPrec, UI32, "Grp3 SEF- Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G3_SEFLL_Ip_HighPrec, UI32, "Grp3 SEFLL Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G3_SSTControl_En, EnDis, "Grp3 Enable/disable setting for SST Control feature.", "" ) \
DPOINT_DEFN( G3_SSTControl_Tst, UI32, "Grp3 SST Control: time", "" ) \
DPOINT_DEFN( G4_NpsAt, UI32, "Grp4 NPS Torque Angle. Ref MeasA0 for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( G4_NpsDnd, DndMode, "Grp4 NPS DND", "" ) \
DPOINT_DEFN( G4_SstNpsForward, UI8, "Grp4 NPS+ Single shot to trip.", "" ) \
DPOINT_DEFN( G4_SstNpsReverse, UI8, "Grp4 NPS- Single shot to trip.", "" ) \
DPOINT_DEFN( G4_NPS1F_Ip, UI32, "Grp4 NPS1+ Pickup current", "" ) \
DPOINT_DEFN( G4_NPS1F_Tcc, UI16, "Grp4 NPS1+ TCC Type", "" ) \
DPOINT_DEFN( G4_NPS1F_TDtMin, UI32, "Grp4 NPS1+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_NPS1F_TDtRes, UI32, "Grp4 NPS1+ DT reset time", "" ) \
DPOINT_DEFN( G4_NPS1F_Tm, UI32, "Grp4 NPS1+ Time multiplier", "" ) \
DPOINT_DEFN( G4_NPS1F_Imin, UI32, "Grp4 NPS1+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPS1F_Tmin, UI32, "Grp4 NPS1+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPS1F_Tmax, UI32, "Grp4 NPS1+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPS1F_Ta, UI32, "Grp4 NPS1+ Additional time", "" ) \
DPOINT_DEFN( G4_NPS1F_ImaxEn, EnDis, "Grp4 NPS1+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPS1F_Imax, UI32, "Grp4 NPS1+ Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPS1F_DirEn, EnDis, "Grp4 NPS1+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS1F_Tr1, TripMode, "Grp4 NPS1+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_NPS1F_Tr2, TripMode, "Grp4 NPS1+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS1F_Tr3, TripMode, "Grp4 NPS1+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS1F_Tr4, TripMode, "Grp4 NPS1+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPS1F_TccUD, TccCurve, "Grp4 NPS1+ User defined curve", "" ) \
DPOINT_DEFN( G4_NPS2F_Ip, UI32, "Grp4 NPS2+ Pickup current", "" ) \
DPOINT_DEFN( G4_NPS2F_Tcc, UI16, "Grp4 NPS2+ TCC Type", "" ) \
DPOINT_DEFN( G4_NPS2F_TDtMin, UI32, "Grp4 NPS2+ DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_NPS2F_TDtRes, UI32, "Grp4 NPS2+ DT reset time", "" ) \
DPOINT_DEFN( G4_NPS2F_Tm, UI32, "Grp4 NPS2+ Time multiplier", "" ) \
DPOINT_DEFN( G4_NPS2F_Imin, UI32, "Grp4 NPS2+ Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPS2F_Tmin, UI32, "Grp4 NPS2+ Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPS2F_Tmax, UI32, "Grp4 NPS2+ Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPS2F_Ta, UI32, "Grp4 NPS2+ Additional time", "" ) \
DPOINT_DEFN( G4_NPS2F_ImaxEn, EnDis, "Grp4 NPS2+ Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPS2F_Imax, UI32, "Grp4 NPS2+ Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPS2F_DirEn, EnDis, "Grp4 NPS2+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS2F_Tr1, TripMode, "Grp4 NPS2+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_NPS2F_Tr2, TripMode, "Grp4 NPS2+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS2F_Tr3, TripMode, "Grp4 NPS2+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS2F_Tr4, TripMode, "Grp4 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPS2F_TccUD, TccCurve, "Grp4 NPS2+ User defined curve", "" ) \
DPOINT_DEFN( G4_NPS3F_Ip, UI32, "Grp4 NPS3+ Pickup current", "" ) \
DPOINT_DEFN( G4_NPS3F_TDtMin, UI32, "Grp4 NPS3+ DT tripping time", "" ) \
DPOINT_DEFN( G4_NPS3F_TDtRes, UI32, "Grp4 NPS3+ DT reset time", "" ) \
DPOINT_DEFN( G4_NPS3F_DirEn, EnDis, "Grp4 NPS3+ Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS3F_Tr1, TripMode, "Grp4 NPS3+ Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_NPS3F_Tr2, TripMode, "Grp4 NPS3+ Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS3F_Tr3, TripMode, "Grp4 NPS3+ Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS3F_Tr4, TripMode, "Grp4 NPS3+ Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPS1R_Ip, UI32, "Grp4 NPS1- Pickup current", "" ) \
DPOINT_DEFN( G4_NPS1R_Tcc, UI16, "Grp4 NPS1- TCC Type", "" ) \
DPOINT_DEFN( G4_NPS1R_TDtMin, UI32, "Grp4 NPS1- DT min tripping time", "" ) \
DPOINT_DEFN( G4_NPS1R_TDtRes, UI32, "Grp4 NPS1- DT reset time", "" ) \
DPOINT_DEFN( G4_NPS1R_Tm, UI32, "Grp4 NPS1- Time multiplier", "" ) \
DPOINT_DEFN( G4_NPS1R_Imin, UI32, "Grp4 NPS1- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPS1R_Tmin, UI32, "Grp4 NPS1- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPS1R_Tmax, UI32, "Grp4 NPS1- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPS1R_Ta, UI32, "Grp4 NPS1- Additional time", "" ) \
DPOINT_DEFN( G4_NPS1R_ImaxEn, EnDis, "Grp4 NPS1- Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPS1R_Imax, UI32, "Grp4 NPS1- Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPS1R_DirEn, EnDis, "Grp4 NPS1- Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS1R_Tr1, TripMode, "Grp4 NPS1- Mode, Trip 1", "" ) \
DPOINT_DEFN( G4_NPS1R_Tr2, TripMode, "Grp4 NPS1- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS1R_Tr3, TripMode, "Grp4 NPS1- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS1R_Tr4, TripMode, "Grp4 NPS1- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPS1R_TccUD, TccCurve, "Grp4 NPS1- User defined curve", "" ) \
DPOINT_DEFN( G4_NPS2R_Ip, UI32, "Grp4 NPS2- Pickup current", "" ) \
DPOINT_DEFN( G4_NPS2R_Tcc, UI16, "Grp4 NPS2- TCC Type", "" ) \
DPOINT_DEFN( G4_NPS2R_TDtMin, UI32, "Grp4 NPS2- DT min tripping time", "" ) \
DPOINT_DEFN( G4_NPS2R_TDtRes, UI32, "Grp4 NPS2- DT reset time", "" ) \
DPOINT_DEFN( G4_NPS2R_Tm, UI32, "Grp4 NPS2- Time multiplier", "" ) \
DPOINT_DEFN( G4_NPS2R_Imin, UI32, "Grp4 NPS2- Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPS2R_Tmin, UI32, "Grp4 NPS2- Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPS2R_Tmax, UI32, "Grp4 NPS2- Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPS2R_Ta, UI32, "Grp4 NPS2- Additional time", "" ) \
DPOINT_DEFN( G4_NPS2R_ImaxEn, EnDis, "Grp4 NPS2- Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPS2R_Imax, UI32, "Grp4 NPS2- Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPS2R_DirEn, EnDis, "Grp4 NPS2- Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS2R_Tr1, TripMode, "Grp4 NPS2- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_NPS2R_Tr2, TripMode, "Grp4 NPS2- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS2R_Tr3, TripMode, "Grp4 NPS2- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS2R_Tr4, TripMode, "Grp4 NPS2- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPS2R_TccUD, TccCurve, "Grp4 NPS2- User defined curve", "" ) \
DPOINT_DEFN( G4_NPS3R_Ip, UI32, "Grp4 NPS3- Pickup current", "" ) \
DPOINT_DEFN( G4_NPS3R_TDtMin, UI32, "Grp4 NPS3- DT tripping time", "" ) \
DPOINT_DEFN( G4_NPS3R_TDtRes, UI32, "Grp4 NPS3- DT reset time", "" ) \
DPOINT_DEFN( G4_NPS3R_DirEn, EnDis, "Grp4 NPS3- Enable directional protection", "" ) \
DPOINT_DEFN( G4_NPS3R_Tr1, TripMode, "Grp4 NPS3- Mode, Trip 1 ", "" ) \
DPOINT_DEFN( G4_NPS3R_Tr2, TripMode, "Grp4 NPS3- Mode, Trip 2", "" ) \
DPOINT_DEFN( G4_NPS3R_Tr3, TripMode, "Grp4 NPS3- Mode, Trip 3", "" ) \
DPOINT_DEFN( G4_NPS3R_Tr4, TripMode, "Grp4 NPS3- Mode, Trip 4", "" ) \
DPOINT_DEFN( G4_NPSLL1_Ip, UI32, "Grp4 NPSLL1 Pickup current", "" ) \
DPOINT_DEFN( G4_NPSLL1_Tcc, UI16, "Grp4 NPSLL1 TCC Type", "" ) \
DPOINT_DEFN( G4_NPSLL1_TDtMin, UI32, "Grp4 NPSLL1 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_NPSLL1_TDtRes, UI32, "Grp4 NPSLL1 DT reset time", "" ) \
DPOINT_DEFN( G4_NPSLL1_Tm, UI32, "Grp4 NPSLL1 Time multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL1_Imin, UI32, "Grp4 NPSLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL1_Tmin, UI32, "Grp4 NPSLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPSLL1_Tmax, UI32, "Grp4 NPSLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPSLL1_Ta, UI32, "Grp4 NPSLL1 Additional time", "" ) \
DPOINT_DEFN( G4_NPSLL1_ImaxEn, EnDis, "Grp4 NPSLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPSLL1_Imax, UI32, "Grp4 NPSLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL1_En, EnDis, "Grp4 NPSLL1 Enable", "" ) \
DPOINT_DEFN( G4_NPSLL1_TccUD, TccCurve, "Grp4 NPSLL1 User defined curve", "" ) \
DPOINT_DEFN( G4_NPSLL2_Ip, UI32, "Grp4 NPSLL2 Pickup current", "" ) \
DPOINT_DEFN( G4_NPSLL2_Tcc, UI16, "Grp4 NPSLL2 TCC Type", "" ) \
DPOINT_DEFN( G4_NPSLL2_TDtMin, UI32, "Grp4 NPSLL2 DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_NPSLL2_TDtRes, UI32, "Grp4 NPSLL2 DT reset time", "" ) \
DPOINT_DEFN( G4_NPSLL2_Tm, UI32, "Grp4 NPSLL2 Time multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL2_Imin, UI32, "Grp4 NPSLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL2_Tmin, UI32, "Grp4 NPSLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_NPSLL2_Tmax, UI32, "Grp4 NPSLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_NPSLL2_Ta, UI32, "Grp4 NPSLL2 Additional time", "" ) \
DPOINT_DEFN( G4_NPSLL2_ImaxEn, EnDis, "Grp4 NPSLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G4_NPSLL2_Imax, UI32, "Grp4 NPSLL2 Max current multiplier", "" ) \
DPOINT_DEFN( G4_NPSLL2_En, EnDis, "Grp4 NPSLL2 Enable", "" ) \
DPOINT_DEFN( G4_NPSLL2_TccUD, TccCurve, "Grp4 NPSLL2 User defined curve", "" ) \
DPOINT_DEFN( G4_NPSLL3_Ip, UI32, "Grp4 NPSLL3 Pickup current", "" ) \
DPOINT_DEFN( G4_NPSLL3_TDtMin, UI32, "Grp4 NPSLL3 DT tripping time", "" ) \
DPOINT_DEFN( G4_NPSLL3_TDtRes, UI32, "Grp4 NPSLL3 DT reset time", "" ) \
DPOINT_DEFN( G4_NPSLL3_En, EnDis, "Grp4 NPSLL3 Enable", "" ) \
DPOINT_DEFN( G4_EFLL1_Ip, UI32, "Grp4 EFLL1 Pickup current", "" ) \
DPOINT_DEFN( G4_EFLL1_Tcc, UI16, "Grp4 EFLL1 TCC Type", "" ) \
DPOINT_DEFN( G4_EFLL1_TDtMin, UI32, "Grp4 EFLL1 DT min tripping time", "" ) \
DPOINT_DEFN( G4_EFLL1_TDtRes, UI32, "Grp4 EFLL1 DT reset time", "" ) \
DPOINT_DEFN( G4_EFLL1_Tm, UI32, "Grp4 EFLL1 Time multiplier", "" ) \
DPOINT_DEFN( G4_EFLL1_Imin, UI32, "Grp4 EFLL1 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EFLL1_Tmin, UI32, "Grp4 EFLL1 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EFLL1_Tmax, UI32, "Grp4 EFLL1 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EFLL1_Ta, UI32, "Grp4 EFLL1 Additional time", "" ) \
DPOINT_DEFN( G4_EFLL1_ImaxEn, EnDis, "Grp4 EFLL1 Enable Max mode", "" ) \
DPOINT_DEFN( G4_EFLL1_Imax, UI32, "Grp4 EFLL1 Max current multiplier", "" ) \
DPOINT_DEFN( G4_EFLL1_En, EnDis, "Grp4 EFLL1 Enable", "" ) \
DPOINT_DEFN( G4_EFLL1_TccUD, TccCurve, "Grp4 EFLL1 User defined curve", "" ) \
DPOINT_DEFN( G4_EFLL2_Ip, UI32, "Grp4 EFLL2 Pickup current", "" ) \
DPOINT_DEFN( G4_EFLL2_Tcc, UI16, "Grp4 EFLL2 TCC Type", "" ) \
DPOINT_DEFN( G4_EFLL2_TDtMin, UI32, "Grp4 EFLL2 DT min tripping time", "" ) \
DPOINT_DEFN( G4_EFLL2_TDtRes, UI32, "Grp4 EFLL2 DT reset time", "" ) \
DPOINT_DEFN( G4_EFLL2_Tm, UI32, "Grp4 EFLL2 Time multiplier", "" ) \
DPOINT_DEFN( G4_EFLL2_Imin, UI32, "Grp4 EFLL2 Min. current multiplier", "" ) \
DPOINT_DEFN( G4_EFLL2_Tmin, UI32, "Grp4 EFLL2 Minimum tripping time", "" ) \
DPOINT_DEFN( G4_EFLL2_Tmax, UI32, "Grp4 EFLL2 Maximum tripping time", "" ) \
DPOINT_DEFN( G4_EFLL2_Ta, UI32, "Grp4 EFLL2 Additional time", "" ) \
DPOINT_DEFN( G4_EFLL2_ImaxEn, EnDis, "Grp4 EFLL2 Enable Max mode", "" ) \
DPOINT_DEFN( G4_EFLL2_Imax, UI32, "Grp4 EFLL2 Max mode", "" ) \
DPOINT_DEFN( G4_EFLL2_En, EnDis, "Grp4 EFLL2 Enable", "" ) \
DPOINT_DEFN( G4_EFLL2_TccUD, TccCurve, "Grp4 EFLL2 User defined curve", "" ) \
DPOINT_DEFN( G4_EFLL3_En, EnDis, "Grp4 EFLL3 Enable", "" ) \
DPOINT_DEFN( G4_SEFLL_Ip, UI32, "Grp4 SEFLL Pickup current", "" ) \
DPOINT_DEFN( G4_SEFLL_TDtMin, UI32, "Grp4 SEFLL DT tripping time", "" ) \
DPOINT_DEFN( G4_SEFLL_TDtRes, UI32, "Grp4 SEFLL DT reset time", "" ) \
DPOINT_DEFN( G4_SEFLL_En, EnDis, "Grp4 SEFLL Enable", "" ) \
DPOINT_DEFN( G4_AutoOpenPowerFlowReduction, UI8, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_AutoOpenPowerFlowTime, UI16, "Grp4 No description", "" ) \
DPOINT_DEFN( G4_LSRM_Timer, UI16, "Grp4 ", "" ) \
DPOINT_DEFN( G4_LSRM_En, EnDis, "Grp4 ", "" ) \
DPOINT_DEFN( G4_Uv4_TDtMin, UI32, "Grp4 UV4 DT operation time", "" ) \
DPOINT_DEFN( G4_Uv4_TDtRes, UI32, "Grp4 UV4 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Uv4_Trm, TripMode, "Grp4 UV4 Trip mode", "" ) \
DPOINT_DEFN( G4_Uv4_Um_min, UI32, "Grp4 UV4 Min voltage multiplier", "" ) \
DPOINT_DEFN( G4_Uv4_Um_max, UI32, "Grp4 UV4 Max voltage multiplier", "" ) \
DPOINT_DEFN( G4_Uv4_Um_mid, UI32, "Grp4 UV4 Mid voltage multiplier", "" ) \
DPOINT_DEFN( G4_Uv4_Tlock, UI16, "Grp4 UV4 lockout time", "" ) \
DPOINT_DEFN( G4_Uv4_Utype, Uv4VoltageType, "Grp4 UV4: Voltage type - Phase/Ground or Phase/Phase", "" ) \
DPOINT_DEFN( G4_Uv4_Voltages, Uv4Voltages, "Grp4 UV4: Voltages - ABC_RST, ABC, RST", "" ) \
DPOINT_DEFN( G4_SingleTripleModeF, SingleTripleMode, "Grp4 Single-triple mode for the forward direction.", "" ) \
DPOINT_DEFN( G4_SingleTripleModeR, SingleTripleMode, "Grp4 Single-triple mode for the reverse direction.", "" ) \
DPOINT_DEFN( G4_SinglePhaseVoltageDetect, EnDis, "Grp4 Indicates whether ABR should monitor all three phases or any single phase for below LSD when single-triple is active.", "" ) \
DPOINT_DEFN( G4_Uv1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp4 Voltages to monitor for UV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G4_Ov1_SingleTripleVoltageType, SingleTripleVoltageType, "Grp4 Voltages to monitor for OV1 when single-triple is active.", "" ) \
DPOINT_DEFN( G4_LlbEnable, EnDis, "Grp4 Live Load Block Enable/disable", "" ) \
DPOINT_DEFN( G4_LlbUM, UI32, "Grp4 LLB voltage multiplier", "" ) \
DPOINT_DEFN( G4_SectionaliserMode, EnDis, "Grp4 Sectionaliser Mode", "" ) \
DPOINT_DEFN( G4_OcDcr, LockDynamic, "Grp4 OC DCR", "" ) \
DPOINT_DEFN( G4_NpsDcr, LockDynamic, "Grp4 NPS DCR", "" ) \
DPOINT_DEFN( G4_EfDcr, LockDynamic, "Grp4 EF DCR", "" ) \
DPOINT_DEFN( G4_SefDcr, LockDynamic, "Grp4 SEF DCR", "" ) \
DPOINT_DEFN( G4_Ov3_Um, UI32, "Grp4 OV3 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Ov3_TDtMin, UI32, "Grp4 OV3 DT tripping time", "" ) \
DPOINT_DEFN( G4_Ov3_TDtRes, UI32, "Grp4 OV3 DT reset time. Note that this value is not yet user configurable.", "" ) \
DPOINT_DEFN( G4_Ov3_Trm, TripMode, "Grp4 OV3 Trip mode", "" ) \
DPOINT_DEFN( G4_Ov4_Um, UI32, "Grp4 OV4 Voltage multiplier", "" ) \
DPOINT_DEFN( G4_Ov4_TDtMin, UI32, "Grp4 OV4 DT tripping time", "" ) \
DPOINT_DEFN( G4_Ov4_TDtRes, UI32, "Grp4 OV4 DT reset time. Note that this value is not yet user configurable", "" ) \
DPOINT_DEFN( G4_Ov4_Trm, TripMode, "Grp4 OV4 Trip mode", "" ) \
DPOINT_DEFN( G4_SequenceAdvanceStep, UI8, "Grp4 The sequence advance step config; specifies the maximum count that the sequence step will be advanced to if LSD is detected while the switch is closed.", "" ) \
DPOINT_DEFN( G4_UV3_SSTOnly, EnDis, "Grp4 Enable flag for UV3 Operate in SST only mode.", "" ) \
DPOINT_DEFN( G4_OV3MovingAverageMode, EnDis, "Grp4 Moving average mode for OV3", "" ) \
DPOINT_DEFN( G4_OV3MovingAverageWindow, UI32, "Grp4 Length of the OV3 moving average window in seconds", "" ) \
DPOINT_DEFN( G4_ArveTripsToLockout, TripsToLockout, "Grp4 Number of trips to lockout for voltage engines.", "" ) \
DPOINT_DEFN( G4_I2I1_Trm, TripModeDLA, "Grp4 I2/I1 trip mode", "" ) \
DPOINT_DEFN( G4_I2I1_Pickup, UI32, "Grp4 I2/I1 pickup value", "" ) \
DPOINT_DEFN( G4_I2I1_MinI2, UI32, "Grp4 Minimum I2 value for I2/I1 operation", "" ) \
DPOINT_DEFN( G4_I2I1_TDtMin, UI32, "Grp4 I2/I1 minimum tripping time", "" ) \
DPOINT_DEFN( G4_I2I1_TDtRes, UI32, "Grp4 I2/I1 DT reset time", "" ) \
DPOINT_DEFN( G4_SEFF_Ip_HighPrec, UI32, "Grp4 SEF+ Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G4_SEFR_Ip_HighPrec, UI32, "Grp4 SEF- Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G4_SEFLL_Ip_HighPrec, UI32, "Grp4 SEFLL Pickup current for 3 Phase SEF switchgear", "" ) \
DPOINT_DEFN( G4_SSTControl_En, EnDis, "Grp4 Enable/disable setting for SST Control feature.", "" ) \
DPOINT_DEFN( G4_SSTControl_Tst, UI32, "Grp4 SST Control: time", "" ) \
DPOINT_DEFN( SignalBitFieldOpenHigh, SignalBitField, "The bit field value indicating the open event categories (high word).  Applies only to phase A in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldCloseHigh, SignalBitField, "The bit field value identifying the close event categories (high word).  Applies to phase A only in single-triple configurations.", "" ) \
DPOINT_DEFN( IdRelayModelNo, UI8, "Relay Model Number : REL01, REL02, REL03, REL15, REL15-4G, REL20, REL20-4G", "" ) \
DPOINT_DEFN( IdRelayModelStr, Str, "string display for relay model : \"\", REL-01, REL-02, REL-03, REL-15, REL-15-4G", "" ) \
DPOINT_DEFN( PanelButtABR, EnDis, "HMI Auto Backfeed Restoration fast key control", "" ) \
DPOINT_DEFN( PanelButtACO, EnDis, "HMI Auto Change Over fast key control", "" ) \
DPOINT_DEFN( PanelButtUV, EnDis, "HMI Undervoltage fast key control", "" ) \
DPOINT_DEFN( FastkeyConfigNum, UI8, "Fast key configuration number (1-6)", "" ) \
DPOINT_DEFN( ScadaT10BSendDayOfWeek, EnDis, "When Enabled (the default), the Day Of Week field of time objects is set to the Day Of Week value (1=Monday, 2=Tuesday, .., 7=Sunday) matching the date in the time object. When Disabled, the Day Of week field is set to zero (meaning \"Not used\").", "" ) \
DPOINT_DEFN( SigOpenOc, Signal, "Open due to OC1+, OC2+, OC3+, OC1-, OC2-, OC3-", "" ) \
DPOINT_DEFN( SigOpenEf, Signal, "Open due to EF1+, EF2+, EF3+, EF1-, EF2-, EF3-", "" ) \
DPOINT_DEFN( SigOpenSef, Signal, "Open due to SEF+, SEF-", "" ) \
DPOINT_DEFN( SigOpenUv, Signal, "Open due to UV1, UV2, UV3, UV4", "" ) \
DPOINT_DEFN( SigOpenOv, Signal, "Open due to OV1, OV2, OV3", "" ) \
DPOINT_DEFN( SigAlarmOc, Signal, "Alarm ouput of any of OC1+, OC2+, OC3+, OC1-, OC2-, OC3- elements activated", "" ) \
DPOINT_DEFN( SigAlarmEf, Signal, "Alarm ouput of any of EF elements activated", "" ) \
DPOINT_DEFN( SigAlarmSef, Signal, "Alarm ouput of any of SEF+, SEF- elements activated", "" ) \
DPOINT_DEFN( SigAlarmUv, Signal, "Alarm ouput of any of UV elements activated", "" ) \
DPOINT_DEFN( SigAlarmOv, Signal, "Alarm ouput of any of OV1, OV2 elements activated", "" ) \
DPOINT_DEFN( SigPickupOc, Signal, "Pickup output of any of OC1+, OC2+, OC3+, OC1-, OC2-, OC3- elements activated", "" ) \
DPOINT_DEFN( SigPickupEf, Signal, "Pickup output of any of EF1+, EF2+, EF3+, EF1-, EF2-, EF3-", "" ) \
DPOINT_DEFN( SigPickupSef, Signal, "Pickup output of any of SEF+, SEF- elements activated", "" ) \
DPOINT_DEFN( SigPickupUv, Signal, "Pickup output of any of UV1, UV2, UV3, UV4 elements activated", "" ) \
DPOINT_DEFN( SigPickupOv, Signal, "Pickup output of any of OV1, OV2, OV3, OV4 elements activated", "" ) \
DPOINT_DEFN( ScadaT10B_M_EI_BufferOverflow_COI, I8, "Special Cause of Initialization (COI) qualifier code for M_EI_NA_1 message to be sent if event buffer overflow is detected. The default value -1 inhibits this feature. Valid values are 0..2 for \"standard\" conformance and 32..127 for \"private\" use. Values 3..31 are reserved for future standard assignment.", "" ) \
DPOINT_DEFN( PGESBOTimeout, UI16, "Timeout between Select and Operate for controls", "" ) \
DPOINT_DEFN( Lan_MAC, Str, "MAC address of LAN port", "" ) \
DPOINT_DEFN( SigMalfLoadSavedDb, Signal, "Active due to failure of loading saved db values on startup.", "" ) \
DPOINT_DEFN( ScadaT10BScaleRange, ScadaScaleRangeTable, "Scale range for IEC 60870-5 SCADA protocols: Standard or Alternate", "" ) \
DPOINT_DEFN( ProgramSimStatus, UI8, "Indicates the status of SIM programming (for firmware update or calibration)", "" ) \
DPOINT_DEFN( InstallFilesReady, UI8, "Notify the update process that new update files are ready. A process sets this DPID to true when it has added new files to the staging directory (/var/nand/staging). This is the same as for UpdateFilesReady except that files are installed regardless of version.", "" ) \
DPOINT_DEFN( UsbDiscInstallCount, UI32, "Number of install files found on the USB disc which usbcopy can move to /var/nand/staging. Includes those that are downgrades or same as installed versions. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( UsbDiscInstallVersions, StrArray, "Version strings for all installation files found on the USB disc. Includes those that are downgrades or same as installed versions. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( OscUsbCaptureInProgress, Bool, "TRUE if the oscillography process is writing a capture to the USB stick, FALSE if no such capture is in progress.  Only set by captures, not \"Transfer Oscillography Captures to USB\".\r\n", "" ) \
DPOINT_DEFN( UsbDiscEjectResult, UsbDiscEjectResult, "Unmount result of the USB disc.", "" ) \
DPOINT_DEFN( InterruptShortABCLastDuration, Duration, "Duration of the last short interruption on U(a,b,c)", "" ) \
DPOINT_DEFN( InterruptShortRSTLastDuration, Duration, "Duration of the last short interruption on U(r,s,t)", "" ) \
DPOINT_DEFN( InterruptLongABCLastDuration, Duration, "Duration of the last long interruption on U(a,b,c) in seconds", "" ) \
DPOINT_DEFN( InterruptLongRSTLastDuration, Duration, "Duration of the last long interruption on U(r,s,t) in seconds", "" ) \
DPOINT_DEFN( ScadaT104BlockUntilDisconnected, EnDis, "If enabled the relay will not accept any new TCP connections (for the IEC protocol) if there is an existing connection.", "" ) \
DPOINT_DEFN( TripHrmComponent, UI8, "Harmonic component that caused the trip.\r\n\r\n0:No harmonic trip, or switch has been closed again.\r\n1..3:THD(a, b, c)\r\n4..7:TDD(a, b, c, n)\r\n8..64:I(a, b, c, n) I2, I3, I4, I5, I6, I7, I8, I9, I10, I11, I12, I13, I14, I15\r\n65..106:V(a, b, c)  V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15\r\n", "" ) \
DPOINT_DEFN( UsbDiscUpdatePossible, UI8, "Indicates whether or not an update from USB is possible. Programatically derived from other status including UsbDiscError and UsbDiscUpdateCount.", "" ) \
DPOINT_DEFN( UsbDiscInstallPossible, UI8, "Indicates whether or not an install from USB is possible. Programatically derived from other status including UsbDiscError and UsbDiscInstallCount.", "" ) \
DPOINT_DEFN( UpdateStep, UpdateStep, "Indicates the current step/phase in performing a firmware or language update or installation.", "" ) \
DPOINT_DEFN( SigClosedUV3AutoClose, Signal, "Closed due to UV3 AutoClose", "" ) \
DPOINT_DEFN( InstallPeriod, UI16, "Period of time expected to complete firmware installation/update. Set as U16 to allow indication of seconds if not minutes.", "" ) \
DPOINT_DEFN( I2Trip, UI32, "Trip current - Negative sequence", "" ) \
DPOINT_DEFN( CanSimSwitchPositionStatusST, UI16, "Position of each of the phases in a single-triple environment.  The value is a collection of three 4-bit fields for A, B, and C where each bit field has the values open:0, closed:1, or unavailable:2.  A is bits 0..3, B is bits 4..7, and C is bits 8..11.  If the recloser is triple-only, then A will report the common state and B/C will be reported as unavailable.", "" ) \
DPOINT_DEFN( CanSimSwitchManualTripST, UI8, "Mnaual trip state of the phases in a single-triple environment.  Bit 0 is set if A is manually tripped.  Bit 1 is set if B is manually tripped.  Bit 2 is set if C is manually tripped.  If the recloser is single-triple, then the common manual trip state is reported in A with B/C always zero.", "" ) \
DPOINT_DEFN( CanSimSwitchConnectedPhases, UI8, "Set of phases that are connected in a single triple environment.  Bit 0 is set if A is connected.  Bit 1 is set if B is connected.  Bit 2 is set if C is connected.  If the recloser is triple-only, then only A will be reported as connected.", "" ) \
DPOINT_DEFN( CanSimSwitchLockoutStatusST, UI16, "Lockout status of each of the phases in a single-triple environment. The value is a collection of three 4-bit fields for A, B, and C where each bit field has the values Undetermined: 0, Mechanically Unlocked: 1, Mechanically locked: 2. A is bits 0..3, B is bits 4..7, and C is bits 8..11. If the recloser is triple-only, then A will report the common state and B/C will be reported as undetermined.", "" ) \
DPOINT_DEFN( CanSimSwitchSetCosType, UI8, "Controls the type of COS messages to be sent from the SIM for position, lockout, and manual trip reports.  0: COS messages are triple-only, 1: COS messages are single-triple.", "" ) \
DPOINT_DEFN( SimSwitchStatusA, SwState, "Status of phase A in a single-triple system:\r\n\r\n0:Unknown, 1:Open, 2:Close, 3:Lockout, 4:InterLocked, 5:OpenABR, 6:Failure, 7:OpenACO, 8:OpenAC, 9:LogicallyLocked", "" ) \
DPOINT_DEFN( SimSwitchStatusB, SwState, "Status of phase B in a single-triple system:\r\n\r\n0:Unknown, 1:Open, 2:Close, 3:Lockout, 4:InterLocked, 5:OpenABR, 6:Failure, 7:OpenACO, 8:OpenAC, 9:LogicallyLocked", "" ) \
DPOINT_DEFN( SimSwitchStatusC, SwState, "Status of phase C in a single-triple system:\r\n\r\n0:Unknown, 1:Open, 2:Close, 3:Lockout, 4:InterLocked, 5:OpenABR, 6:Failure, 7:OpenACO, 8:OpenAC, 9:LogicallyLocked", "" ) \
DPOINT_DEFN( SimSingleTriple, Bool, "TRUE if the SIM is capable of single-triple operations (SIM-02), FALSE if the SIM is capable of triple-only operations (SIM-01).", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseA, Signal, "Request the switch to close phase A (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseB, Signal, "Request the switch to close phase B (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseC, Signal, "Request the switch to close phase C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseAB, Signal, "Request the switch to close phases A and B (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseAC, Signal, "Request the switch to close phases A and C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseBC, Signal, "Request the switch to close phases B and C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstCloseABC, Signal, "Request the switch to close phases A, B, and C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenA, Signal, "Request the switch to open phase A (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenB, Signal, "Request the switch to open phase B (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenC, Signal, "Request the switch to open phase C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenAB, Signal, "Request the switch to open phases A and B (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenAC, Signal, "Request the switch to open phases A and C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenBC, Signal, "Request the switch to open phases B and C (single-triple only)", "" ) \
DPOINT_DEFN( SigCtrlRqstOpenABC, Signal, "Request the switch to open phases A, B, and C (single-triple only)", "" ) \
DPOINT_DEFN( CanSimTripCloseRequestStatusB, UI8, "No Trip or close request active:  0\r\n                    Trip active:  3\r\n                      Trip Fail:  5\r\n                   Close active:  9\r\n                     Close Fail: 17\r\n", "" ) \
DPOINT_DEFN( CanSimTripCloseRequestStatusC, UI8, "No Trip or close request active:  0\r\n                    Trip active:  3\r\n                      Trip Fail:  5\r\n                   Close active:  9\r\n                     Close Fail: 17", "" ) \
DPOINT_DEFN( CanSimTripRequestFailCodeB, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimTripRequestFailCodeC, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimCloseRequestFailCodeB, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n                        BIT 5: Excess operations\r\n                        BIT 6: Close Cap Not Ok\r\n                        BIT 7: Trip Cap can’t perform 2 trips\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimCloseRequestFailCodeC, UI32, "Description:   BIT 0: switch gear not connected\r\n                        BIT 1: mechanical lockout\r\n                        BIT 2: operation active\r\n                        BIT 3: faulty actuator\r\n                        BIT 4: mechanism failure\r\n                        BIT 5: Excess operations\r\n                        BIT 6: Close Cap Not Ok\r\n                        BIT 7: Trip Cap can’t perform 2 trips\r\n\r\n__NOTE:__ While set by the SIM this will be 'quietly' reset by the protection process once it has been detected.", "" ) \
DPOINT_DEFN( CanSimOSMActuatorFaultStatusB, UI8, "No fault: 0, coil open cirucit: 1, coil short circuit: 2", "" ) \
DPOINT_DEFN( CanSimOSMActuatorFaultStatusC, UI8, "No fault: 0, coil open cirucit: 1, coil short circuit: 2", "" ) \
DPOINT_DEFN( CanSimOSMlimitSwitchFaultStatusB, UI8, "Description:   No Fault: 0\r\n                        Open limit switch failed closed: 3\r\n                        Open limit switch failed open: 5\r\n                        Close limit switch failed closed: 9\r\n                        Close limit switch failed open: 17\r\n                        Close and Open switches both failed closed: 33\r\n                        Close and Mechanical Interlock Switch Closed:65", "" ) \
DPOINT_DEFN( CanSimOSMlimitSwitchFaultStatusC, UI8, "Description:   No Fault: 0\r\n                        Open limit switch failed closed: 3\r\n                        Open limit switch failed open: 5\r\n                        Close limit switch failed closed: 9\r\n                        Close limit switch failed open: 17\r\n                        Close and Open switches both failed closed: 33\r\n                        Close and Mechanical Interlock Switch Closed:65", "" ) \
DPOINT_DEFN( CanSimTripRetryB, UI8, "Trip retry count for phase B", "" ) \
DPOINT_DEFN( CanSimTripRetryC, UI8, "Trip retry count for phase C", "" ) \
DPOINT_DEFN( SigCtrlUV4On, Signal, "UV4 Sag element switched On", "" ) \
DPOINT_DEFN( SigOpenUv4, Signal, "Open due to UV4 (Sag) tripping", "" ) \
DPOINT_DEFN( SigMalfSimRunningMiniBootloader, Signal, "Set if SIM is stuck in mini bootloader", "" ) \
DPOINT_DEFN( SigOpenSwitchA, Signal, "Phase A on the switch has opened in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigOpenSwitchB, Signal, "Phase B on the switch has opened in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigOpenSwitchC, Signal, "Phase C on the switch has opened in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigClosedSwitchA, Signal, "Phase A on the switch has closed in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigClosedSwitchB, Signal, "Phase B on the switch has closed in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigClosedSwitchC, Signal, "Phase C on the switch has closed in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchDisconnectionStatusA, Signal, "OSM Disconnected on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchDisconnectionStatusB, Signal, "OSM Disconnected on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchDisconnectionStatusC, Signal, "OSM Disconnected on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchLockoutStatusMechaniclockedA, Signal, "OSM Mechanically Locked Out, Trip ring pulled down on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchLockoutStatusMechaniclockedB, Signal, "OSM Mechanically Locked Out, Trip ring pulled down on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchLockoutStatusMechaniclockedC, Signal, "OSM Mechanically Locked Out, Trip ring pulled down on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigMalfOsmA, Signal, "Active due to 1, 2 or 3xCoil OC; Limit switch fault, Coil SC on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigMalfOsmB, Signal, "Active due to 1, 2 or 3xCoil OC; Limit switch fault, Coil SC on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigMalfOsmC, Signal, "Active due to 1, 2 or 3 x Coil OC; Limit switch fault, Coil SC on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusCoilOcA, Signal, "OSM actuator on phase A has coil open circuit", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusCoilOcB, Signal, "OSM actuator on phase B has coil open circuit", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusCoilOcC, Signal, "OSM actuator on phase C has coil open circuit", "" ) \
DPOINT_DEFN( SigOsmActuatorFaultStatusCoilScA, Signal, "OSM actuator on phase A has a coil short circuit", "" ) \
DPOINT_DEFN( SigOsmActuatorFaultStatusCoilScB, Signal, "OSM actuator on phase B has a coil short circuit", "" ) \
DPOINT_DEFN( SigOsmActuatorFaultStatusCoilScC, Signal, "OSM actuator on phase C has a coil short circuit", "" ) \
DPOINT_DEFN( SigOsmLimitFaultStatusFaultA, Signal, "OSM Limit Switch Fault on phase A in a single-triple configuration", "" ) \
DPOINT_DEFN( SigOsmLimitFaultStatusFaultB, Signal, "OSM Limit Switch Fault on phase B in a single-triple configuration", "" ) \
DPOINT_DEFN( SigOsmLimitFaultStatusFaultC, Signal, "OSM Limit Switch Fault on phase C in a single-triple configuration", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusQ503FailedA, Signal, "SIM Actuator Driver Q503 Failed on phase A in a single-triple configuration", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusQ503FailedB, Signal, "SIM Actuator Driver Q503 Failed on phase B in a single-triple configuration", "" ) \
DPOINT_DEFN( SigOSMActuatorFaultStatusQ503FailedC, Signal, "SIM Actuator Driver Q503 Failed on phase C in a single-triple configuration", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusActiveA, Signal, "Set if Trip or Close Active or failed on phase A. If failed, reset when next sucessfull trip or close", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusActiveB, Signal, "Set if Trip or Close Active or failed on phase B. If failed, reset when next sucessfull trip or close", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusActiveC, Signal, "Set if Trip or Close Active or failed on phase C. If failed, reset when next sucessfull trip or close", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripFailA, Signal, "Opening time on phase A exceeds 60ms or no confirmation received that open command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripFailB, Signal, "Opening time on phase B exceeds 60ms or no confirmation received that open command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripFailC, Signal, "Opening time on phase C exceeds 60ms or no confirmation received that open command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseFailA, Signal, "Closing time on phase A exceeds 100ms or no confirmation received that close command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseFailB, Signal, "Closing time on phase B exceeds 100ms or no confirmation received that close command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseFailC, Signal, "Closing time on phase C exceeds 100ms or no confirmation received that close command was executed succefully", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripActiveA, Signal, "Set while trip active on phase A", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripActiveB, Signal, "Set while trip active on phase B", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusTripActiveC, Signal, "Set while trip active on phase C", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseActiveA, Signal, "Set while close active on phase A", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseActiveB, Signal, "Set while close active on phase B", "" ) \
DPOINT_DEFN( SigTripCloseRequestStatusCloseActiveC, Signal, "Set while close active on phase C", "" ) \
DPOINT_DEFN( SigCtrlPhaseSelA, Signal, "Phase Select A is on", "" ) \
DPOINT_DEFN( SigCtrlPhaseSelB, Signal, "Phase Select B is on", "" ) \
DPOINT_DEFN( SigCtrlPhaseSelC, Signal, "Phase Select C is on", "" ) \
DPOINT_DEFN( PanelButtPhaseSel, EnDis, "HMI phase select fast key control", "" ) \
DPOINT_DEFN( SingleTripleModeGlobal, SingleTripleMode, "Single-triple mode that is active globally for when direction is not relevant.", "" ) \
DPOINT_DEFN( s61850ServEnable, EnDis, "IEC 61850 MMS Server Enable", "" ) \
DPOINT_DEFN( SigPickupUv4, Signal, "Pickup output of UV4 Sag activated", "" ) \
DPOINT_DEFN( SigAlarmUv4, Signal, "Alarm output of UV4 Sag activated", "" ) \
DPOINT_DEFN( SigPickupUabcUv4, Signal, "Pickup output of UV4 Sag activated on ABC", "" ) \
DPOINT_DEFN( SigPickupUrstUv4, Signal, "Pickup output of UV4 Sag activated on RST", "" ) \
DPOINT_DEFN( SigAlarmUabcUv4, Signal, "Alarm output of UV4 Sag activated for ABC", "" ) \
DPOINT_DEFN( SigAlarmUrstUv4, Signal, "Alarm output of UV4 Sag activated for RST", "" ) \
DPOINT_DEFN( StackCheckEnable, EnDis, "Enable or disable stack checking", "" ) \
DPOINT_DEFN( StackCheckInterval, UI32, "time interval between stack checks (in seconds)", "" ) \
DPOINT_DEFN( SigAlarmUv4Midpoint, Signal, "Alarm output of UV4 Sag Midpoint activated", "" ) \
DPOINT_DEFN( SigAlarmUabcUv4Midpoint, Signal, "Alarm output of UV4 Sag Midpoint activated for ABC", "" ) \
DPOINT_DEFN( SigAlarmUrstUv4Midpoint, Signal, "Alarm output of UV4 Sag Midpoint activated for RST", "" ) \
DPOINT_DEFN( SigOpenUv4Midpoint, Signal, "Open due to UV4 (Sag) tripping with the sag still above the midpoint", "" ) \
DPOINT_DEFN( SigOpenUabcUv4Midpoint, Signal, "Open due to UV4 (Sag) tripping with the sag still above the midpoint on ABC", "" ) \
DPOINT_DEFN( SigOpenUrstUv4Midpoint, Signal, "Open due to UV4 (Sag) tripping with the sag still above the midpoint on RST", "" ) \
DPOINT_DEFN( SigOpenUv4Ua, Signal, "Open or Alarm of UV4 for Ua", "" ) \
DPOINT_DEFN( SigOpenUv4Ub, Signal, "Open or Alarm of UV4 for Ub", "" ) \
DPOINT_DEFN( SigOpenUv4Uc, Signal, "Open or Alarm of UV4 for Uc", "" ) \
DPOINT_DEFN( SigOpenUv4Ur, Signal, "Open or Alarm of UV4 for Ur", "" ) \
DPOINT_DEFN( SigOpenUv4Us, Signal, "Open or Alarm of UV4 for Us", "" ) \
DPOINT_DEFN( SigOpenUv4Ut, Signal, "Open or Alarm of UV4 for Ut", "" ) \
DPOINT_DEFN( SigOpenUv4Uab, Signal, "Open or Alarm of UV4 for Uab", "" ) \
DPOINT_DEFN( SigOpenUv4Ubc, Signal, "Open or Alarm of UV4 for Ubc", "" ) \
DPOINT_DEFN( SigOpenUv4Uca, Signal, "Open or Alarm of UV4 for Uca", "" ) \
DPOINT_DEFN( SigOpenUv4Urs, Signal, "Open or Alarm of UV4 for Urs", "" ) \
DPOINT_DEFN( SigOpenUv4Ust, Signal, "Open or Alarm of UV4 for Ust", "" ) \
DPOINT_DEFN( SigOpenUv4Utr, Signal, "Open or Alarm of UV4 for Utr", "" ) \
DPOINT_DEFN( SigStatusCloseBlockingUv4, Signal, "UV4 Sag blocking activated", "" ) \
DPOINT_DEFN( TripMinVoltUv4, UI32, "The minimum sag voltage prior to the UV4 Sag Trip.\r\nNOTE: That the DB value is in volts (not 1/8 volt as other voltage values).", "" ) \
DPOINT_DEFN( ActiveSwitchPositionStatusST, UI32, "** Internal to simSwRqst ONLY **  Points to either SimulSwitchPositionStatusST or CanSimSwitchPositionStatusST depending upon whether the simulated switch is enabled or not.", "" ) \
DPOINT_DEFN( SimulSwitchPositionStatusST, UI16, "Simulated position of the single-triple switch: three 4-bit fields each indicating open:0, closed:1, unavailable:2", "" ) \
DPOINT_DEFN( SigGenLockoutA, Signal, "All AR OCEF, AR SEF, ABR elements are set in the O1 state for phase A in single-triple configurations.", "" ) \
DPOINT_DEFN( SigGenLockoutB, Signal, "All AR OCEF, AR SEF, ABR elements are set in the O1 state for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SigGenLockoutC, Signal, "All AR OCEF, AR SEF, ABR elements are set in the O1 state for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SigLockoutProtA, Signal, "This signal will be set when phase A of the switch has been opened to Lockout by any protection source in single-triple configurations.", "" ) \
DPOINT_DEFN( SigLockoutProtB, Signal, "This signal will be set when phase B of the switch has been opened to Lockout by any protection source in single-triple configurations.", "" ) \
DPOINT_DEFN( SigLockoutProtC, Signal, "This signal will be set when phase C of the switch has been opened to Lockout by any protection source in single-triple configurations.", "" ) \
DPOINT_DEFN( SwitchFailureStatusFlagB, UI8, "An internal flag used by the simSwRqst library to flag if the 'failure' mode is set on phase B.", "" ) \
DPOINT_DEFN( SwitchFailureStatusFlagC, UI8, "An internal flag used by the simSwRqst library to flag if the 'failure' mode is set on phase C.", "" ) \
DPOINT_DEFN( CoOpenReqB, LogOpen, "Open request for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( CoOpenReqC, LogOpen, "Open request for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( CoCloseReqB, LogOpen, "CO Log Close Req for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( CoCloseReqC, LogOpen, "CO Log Close Req for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldOpenB, SignalBitField, "The bit field value indicating the open event categories for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldOpenHighB, SignalBitField, "The bit field value indicating the open event categories (high word) for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldOpenC, SignalBitField, "The bit field value indicating the open event categories for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldOpenHighC, SignalBitField, "The bit field value indicating the open event categories (high word) for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldCloseB, SignalBitField, "The bit field value identifying the close event categories for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldCloseHighB, SignalBitField, "The bit field value identifying the close event categories (high word) for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldCloseC, SignalBitField, "The bit field value identifying the close event categories for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SignalBitFieldCloseHighC, SignalBitField, "The bit field value identifying the close event categories (high word) for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( swsimInLockoutB, UI8, "BOOL flag indicating that an open to Lockout was initiated on phase B in single-triple configurations.  This is reset when the switch is closed. NOTE: Do not use this flag to determine if in Lockout, use SigGenLockoutB instead. ", "" ) \
DPOINT_DEFN( swsimInLockoutC, UI8, "BOOL flag indicating that an open to Lockout was initiated on phase C in single-triple configurations.  This is reset when the switch is closed. NOTE: Do not use this flag to determine if in Lockout, use SigGenLockoutC instead. ", "" ) \
DPOINT_DEFN( SimRqOpenB, EnDis, "SIM Request Open for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SimRqOpenC, EnDis, "SIM Request Open for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( SimRqCloseB, EnDis, "SIM Request Close for phase B in single-triple configurations.", "" ) \
DPOINT_DEFN( SimRqCloseC, EnDis, "SIM Request Close for phase C in single-triple configurations.", "" ) \
DPOINT_DEFN( DurMonUpdateInterval, UI32, "Duration monitor report update inteval (in seconds)", "" ) \
DPOINT_DEFN( DurMonInitFlag, UI8, "flag to indicate duration monitor boot up initialization. The first duration monitor initialization call will set it to 1.", "" ) \
DPOINT_DEFN( MechanicalWeara, UI32, "Mechanical wear on phase A (min value is no wear, max value is 100%). Ratio of total operations and maximum operations.", "" ) \
DPOINT_DEFN( MechanicalWearb, UI32, "Mechanical wear on phase B (min value is no wear, max value is 100%). Ratio of total operations and maximum operations.", "" ) \
DPOINT_DEFN( MechanicalWearc, UI32, "Mechanical wear on phase C (min value is no wear, max value is 100%). Ratio of total operations and maximum operations.", "" ) \
DPOINT_DEFN( IdOsmNumber2, SerialNumber, "13 character serial number for the second switchgear in a single-triple configuration.", "" ) \
DPOINT_DEFN( IdOsmNumber3, SerialNumber, "13 character serial number for the third switchgear in a single-triple configuration.", "" ) \
DPOINT_DEFN( IdOsmNumberA, SerialNumber, "13 character serial number for the phase A switchgear in a single-triple configuration.  Note: this is a derived point based on IdOsmNumber1.", "" ) \
DPOINT_DEFN( IdOsmNumberB, SerialNumber, "13 character serial number for the phase B switchgear in a single-triple configuration.  Note: this is a derived point based on IdOsmNumber2.", "" ) \
DPOINT_DEFN( IdOsmNumberC, SerialNumber, "13 character serial number for the phase C switchgear in a single-triple configuration.  Note: this is a derived point based on IdOsmNumber3.", "" ) \
DPOINT_DEFN( OsmSwitchCount, OsmSwitchCount, "Number of switches in use for single-triple (1 or 3).", "" ) \
DPOINT_DEFN( SwitchLogicallyLockedPhases, UI8, "Internal datapoint that indicates which phases are currently logically locked.  That is, the phase is not mechanically locked but some other phase is mechanically locked so this one needs to act as though it is mechanically locked.  Bitflags: A=1, B=2, C=4", "" ) \
DPOINT_DEFN( SigSwitchLogicallyLockedA, Signal, "Phase A is logically locked out because either B or C is mechanically locked out.", "" ) \
DPOINT_DEFN( SigSwitchLogicallyLockedB, Signal, "Phase B is logically locked out because either A or C is mechanically locked out.", "" ) \
DPOINT_DEFN( SigSwitchLogicallyLockedC, Signal, "Phase C is logically locked out because either A or B is mechanically locked out.", "" ) \
DPOINT_DEFN( SigBatteryTestInitiate, Signal, "Initiates a battery test.", "" ) \
DPOINT_DEFN( SigBatteryTestRunning, Signal, "Set when a battery test is running.", "" ) \
DPOINT_DEFN( SigBatteryTestPassed, Signal, "Set if the last battery test passed.", "" ) \
DPOINT_DEFN( SigBatteryTestNotPerformed, Signal, "Set if the last battery test could not be performed for some reason.", "" ) \
DPOINT_DEFN( SigBatteryTestCheckBattery, Signal, "Set if the last battery test resulted in \"Check Battery\".", "" ) \
DPOINT_DEFN( SigBatteryTestFaulty, Signal, "Set if the battery test circuitry in the SIM or PSC is faulty.", "" ) \
DPOINT_DEFN( SigBatteryTestAutoOn, Signal, "Battery test automatic mode is on.", "" ) \
DPOINT_DEFN( BatteryTestInterval, UI32, "Interval between automatic battery tests.", "" ) \
DPOINT_DEFN( BatteryTestIntervalUnits, UI32, "This is an internal datapoint that expresses the units for the BatteryTestInterval datapoint.  This datapoint is set to the number of minutes in each unit.  Normally set to 1440 for \"days\", but can be set to 1 to change the units to \"minutes\" or 60 for \"hours\" for QA testing.", "" ) \
DPOINT_DEFN( BatteryTestResult, BatteryTestResult, "Result of the last battery test.", "" ) \
DPOINT_DEFN( BatteryTestNotPerformedReason, BatteryTestNotPerformedReason, "Reason why the last battery test could not be performed.", "" ) \
DPOINT_DEFN( BatteryTestLastPerformedTime, TimeStamp, "Time and date when the last battery test was performed.", "" ) \
DPOINT_DEFN( ClearBatteryTestResults, ClearCommand, "Clears the battery test results.", "" ) \
DPOINT_DEFN( BatteryTestSupported, Bool, "TRUE if the SIM supports battery testing, FALSE if the SIM software version is too old to support battery testing.", "" ) \
DPOINT_DEFN( SigTrip3Lockout3On, Signal, "Set when 3-phase Trip, 3-phase Lockout is enabled for single-triple.  Will be clear if single-triple is not active.", "" ) \
DPOINT_DEFN( SigTrip1Lockout3On, Signal, "Set when 1-phase Trip, 3-phase Lockout is enabled for single-triple.  Will be clear if single-triple is not active.", "" ) \
DPOINT_DEFN( SigTrip1Lockout1On, Signal, "Set when 1-phase Trip, 1-phase Lockout is enabled for single-triple.  Will be clear if single-triple is not active.", "" ) \
DPOINT_DEFN( MeasPowerPhaseS3kW, I32, "Signed 3 Phase forward kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseS3kVAr, I32, "Signed 3 Phase forward kVAr", "" ) \
DPOINT_DEFN( MeasPowerFactorS3phase, I32, "Signed 3 Phase PF", "" ) \
DPOINT_DEFN( MeasPowerPhaseSAkW, I32, "Signed Phase A kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseSAkVAr, I32, "Signed Phase A kVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseSBkW, I32, "Signed Phase B kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseSBkVAr, I32, "Signed Phase B kVAr", "" ) \
DPOINT_DEFN( MeasPowerPhaseSCkW, I32, "Signed Phase C kW", "" ) \
DPOINT_DEFN( MeasPowerPhaseSCkVAr, I32, "Signed Phase C kVAr", "" ) \
DPOINT_DEFN( UserAnalogCfg01, UserAnalogCfg, "User analog 1 config", "" ) \
DPOINT_DEFN( UserAnalogCfg02, UserAnalogCfg, "User analog 2 config", "" ) \
DPOINT_DEFN( UserAnalogCfg03, UserAnalogCfg, "User analog 3 config", "" ) \
DPOINT_DEFN( UserAnalogCfg04, UserAnalogCfg, "User analog 4 config", "" ) \
DPOINT_DEFN( UserAnalogCfg05, UserAnalogCfg, "User analog 5 config", "" ) \
DPOINT_DEFN( UserAnalogCfg06, UserAnalogCfg, "User analog 6 config", "" ) \
DPOINT_DEFN( UserAnalogCfg07, UserAnalogCfg, "User analog 7 config", "" ) \
DPOINT_DEFN( UserAnalogCfg08, UserAnalogCfg, "User analog 8 config", "" ) \
DPOINT_DEFN( UserAnalogCfg09, UserAnalogCfg, "User analog 9 config", "" ) \
DPOINT_DEFN( UserAnalogCfg10, UserAnalogCfg, "User analog 10 config", "" ) \
DPOINT_DEFN( UserAnalogCfg11, UserAnalogCfg, "User analog 11 config", "" ) \
DPOINT_DEFN( UserAnalogCfg12, UserAnalogCfg, "User analog 12 config", "" ) \
DPOINT_DEFN( UserAnalogOut01, F32, "User analog 1 output", "" ) \
DPOINT_DEFN( UserAnalogOut02, F32, "User analog 2 output", "" ) \
DPOINT_DEFN( UserAnalogOut03, F32, "User analog 3 output", "" ) \
DPOINT_DEFN( UserAnalogOut04, F32, "User analog 4 output", "" ) \
DPOINT_DEFN( UserAnalogOut05, F32, "User analog 5 output", "" ) \
DPOINT_DEFN( UserAnalogOut06, F32, "User analog 6 output", "" ) \
DPOINT_DEFN( UserAnalogOut07, F32, "User analog 7 output", "" ) \
DPOINT_DEFN( UserAnalogOut08, F32, "User analog 8 output", "" ) \
DPOINT_DEFN( UserAnalogOut09, F32, "User analog 9 output", "" ) \
DPOINT_DEFN( UserAnalogOut10, F32, "User analog 10 output", "" ) \
DPOINT_DEFN( UserAnalogOut11, F32, "User analog 11 output", "" ) \
DPOINT_DEFN( UserAnalogOut12, F32, "User analog 12 output", "" ) \
DPOINT_DEFN( SectionaliserEnable, EnDis, "Hardware to operate as sectionaliser", "" ) \
DPOINT_DEFN( ProtStepStateB, ProtectionState, "This represents the current state of the step engine for phase B in single-triple configurations.  This value is considered to be internal to the protection process.", "" ) \
DPOINT_DEFN( ProtStepStateC, ProtectionState, "This represents the current state of the step engine for phase C in single-triple configurations.  This value is considered to be internal to the protection process.", "" ) \
DPOINT_DEFN( UserAnalogCfgOn, EnDis, "User configurable analog enable/disable", "" ) \
DPOINT_DEFN( SigGenARInitA, Signal, "Any of AR OCEF, AR SEF, AR UV or ABR elements set in one of O2, O3 or O4 states have been set on switch phase A in a single-triple configuration", "" ) \
DPOINT_DEFN( SigGenARInitB, Signal, "Any of AR OCEF, AR SEF, AR UV or ABR elements set in one of O2, O3 or O4 states have been set on switch phase B in a single-triple configuration", "" ) \
DPOINT_DEFN( SigGenARInitC, Signal, "Any of AR OCEF, AR SEF, AR UV or ABR elements set in one of O2, O3 or O4 states have been set on switch phase C in a single-triple configuration", "" ) \
DPOINT_DEFN( SigIncorrectPhaseSeq, Signal, "Incorrect phase sequence has been detected.", "" ) \
DPOINT_DEFN( TripHrmComponentA, UI8, "Harmonic component that caused the trip on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( TripHrmComponentB, UI8, "Harmonic component that caused the trip on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( TripHrmComponentC, UI8, "Harmonic component that caused the trip on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrHrmATrips, UI32, "Fault counter of HRM Trips on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrHrmBTrips, UI32, "Fault counter of HRM Trips on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrHrmCTrips, UI32, "Fault counter of HRM Trips on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrHrmNTrips, UI32, "Fault counter of HRM Trips on neutral in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrUvATrips, I32, "Fault counter of UV Trips on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrUvBTrips, I32, "Fault counter of UV Trips on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrUvCTrips, I32, "Fault counter of UV Trips on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrOvATrips, I32, "Fault counter of OV Trips on phase A in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrOvBTrips, I32, "Fault counter of OV Trips on phase B in a single-triple configuration.", "" ) \
DPOINT_DEFN( CntrOvCTrips, I32, "Fault counter of OV Trips on phase C in a single-triple configuration.", "" ) \
DPOINT_DEFN( TripMinUvA, UI32, "Minimum A phase to ground voltage as of the most recent under voltage trip", "" ) \
DPOINT_DEFN( TripMinUvB, UI32, "Minimum B phase to ground voltage as of the most recent under voltage trip", "" ) \
DPOINT_DEFN( TripMinUvC, UI32, "Minimum C phase to ground voltage as of the most recent under voltage trip", "" ) \
DPOINT_DEFN( TripMaxOvA, UI32, "Maximum A phase to ground voltage as of the most recent over voltage trip", "" ) \
DPOINT_DEFN( TripMaxOvB, UI32, "Maximum B phase to ground voltage as of the most recent over voltage trip", "" ) \
DPOINT_DEFN( TripMaxOvC, UI32, "Maximum C phase to ground voltage as of the most recent over voltage trip", "" ) \
DPOINT_DEFN( SigAlarmSwitchA, Signal, "Alarm on switch phase A activated in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigAlarmSwitchB, Signal, "Alarm on switch phase B activated in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigAlarmSwitchC, Signal, "Alarm on switch phase C activated in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigOpenLSRM, Signal, "Open due to LSRM tripping", "" ) \
DPOINT_DEFN( OscTraceUsbDir, Str, "If a zero length string then there is no USB disc mounted, otherwise this value specifies the absolute file system path for the mounted USB disc including subdirectory to Oscillography files (e.g. /var/usb/rc10/osc/SERIALNUMBER)", "" ) \
DPOINT_DEFN( GenericDir, Str, "If a zero length string then no path specified, otherwise this value specifies the absolute directory path which can be used with CMS protocol GETDIR query.", "" ) \
DPOINT_DEFN( SigCtrlLLBOn, Signal, "Live Load Block", "" ) \
DPOINT_DEFN( SigStatusCloseBlockingLLB, Signal, "LLB blocking activated", "" ) \
DPOINT_DEFN( AlarmMode, Signal, "Alarm mode on/off", "" ) \
DPOINT_DEFN( SigFaultTargetOpen, Signal, "Parent of all fault flags that also indicate an open. Note that setting this point should also cause SigOpenFaultTarget to be set (which will in turn set SigOpen)", "" ) \
DPOINT_DEFN( s61850ClientIpAddr1, IpAddr, "IP Address of IEC 61850 Client (1) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850GOOSEPublEnable, EnDis, "IEC 61850 GOOSE Publisher Enable", "" ) \
DPOINT_DEFN( s61850GOOSESubscrEnable, EnDis, "IEC 61850 GOOSE Subscriber Enable", "" ) \
DPOINT_DEFN( s61850ServerIpAddr, IpAddr, "IP Address of IEC 61850 Server in RC10. May be derived from CID file or from Cfg data.", "" ) \
DPOINT_DEFN( s61850PktsRx, UI32, "IEC 61850 Count of total received packets", "" ) \
DPOINT_DEFN( s61850PktsTx, UI32, "IEC 61850 Count of total transmitted packets", "" ) \
DPOINT_DEFN( s61850RxErrPkts, UI32, "IEC 61850 Count of received packets with errors", "" ) \
DPOINT_DEFN( s61850ChannelPort, CommsPort, "IEC 61850 Server (MMS) - Communication Channel selection", "" ) \
DPOINT_DEFN( s61850GOOSEPort, CommsPort, "IEC 61850 GOOSE Communication Channel selection", "" ) \
DPOINT_DEFN( GOOSE_broadcastMacAddr, Str, "GOOSE Publisher  Broadcast MAC address", "" ) \
DPOINT_DEFN( GOOSE_TxCount, UI32, "IEC 61850: GOOSE Publisher - Number of Packets transmitted", "" ) \
DPOINT_DEFN( s61850IEDName, Str, "IEC 61850 IED name for RC10", "" ) \
DPOINT_DEFN( SigOpenSectionaliser, Signal, "Open due to Sectionaliser tripping", "" ) \
DPOINT_DEFN( ChEvCurveSettings, ChangeEvent, "This datapoint is used to log 'batch' changes to curve settings", "" ) \
DPOINT_DEFN( ScadaT10BCyclicWaitForSI, YesNo, "If \"No\", cyclic reporting starts when initialization completes. If \"Yes\", cyclc reporting is suppressed until after Station Initialization completes.", "" ) \
DPOINT_DEFN( ScadaT10BCyclicStartMaxDelay, UI16, "Delay from initialization until first cyclic report is generated. If Cyclic wait for Station Interrogation is \"Yes\", cyclic reporting starts after this period if no interrogation is performed and the cyclic reporting starts immediately after an interrogation if one is performed.", "" ) \
DPOINT_DEFN( SigCmdResetProtConfig, Signal, "DbFileCommand_DbFCmdResetProtConfig completed protection configuration reset", "" ) \
DPOINT_DEFN( SigMalfSectionaliserMismatch, Signal, "Auto Reclose map contains sectionaliser settings with sectionaliser mode disabled", "" ) \
DPOINT_DEFN( SigCtrlSectionaliserOn, Signal, "Sectionaliser Mode Switched On. This is a 'view only' of the current sectionaliser state. Writing to this point will NOT change the sectionalising mode. ", "" ) \
DPOINT_DEFN( UnitTestRoundTrip, UI8, "Internal datapoint that is used by the unit test framework to \"ping\" dbserver to see if it has processed all pending requests.", "" ) \
DPOINT_DEFN( SigOpenSim, Signal, "Indicates if the SigOpen is TRUE because of a switch open signal in Sim", "" ) \
DPOINT_DEFN( SigFaultTarget, Signal, "Parent of all fault flags. ", "" ) \
DPOINT_DEFN( SigFaultTargetNonOpen, Signal, "The parent of all fault signals that are NOT also children of SigOpen.", "" ) \
DPOINT_DEFN( ExtLoadStatus, OnOff, "Status of external load", "" ) \
DPOINT_DEFN( LogicChModeView, LogicChannelMode, "View of the logic channel mode (a mirror of LogicChMode)", "" ) \
DPOINT_DEFN( IoSettingILocModeView, IOSettingMode, "View of the local input mode (a mirror of IoSettingILocMode)", "" ) \
DPOINT_DEFN( IoSettingIo1ModeView, GPIOSettingMode, "The view/status determined related to IoSettingIo1Mode. Setting IoSettingIo1Mode may result in work happening before ultimately setting quietly (or not) of IoSettingIo1Mode to indicate status, and also set this IoSettingIo1ModeView to match.", "" ) \
DPOINT_DEFN( IoSettingIo2ModeView, GPIOSettingMode, "The view/status determined related to IoSettingIo2Mode. Setting IoSettingIo2Mode may result in work happening before ultimately setting quietly (or not) of IoSettingIo2Mode to indicate status, and also set this IoSettingIo2ModeView to match.", "" ) \
DPOINT_DEFN( SigOpenOcllTop, Signal, "Open due to OCLL1, OCLL2, OCLL3", "" ) \
DPOINT_DEFN( SigOpenEfllTop, Signal, "Open due to EFLL1, EFLL2, EFLL3", "" ) \
DPOINT_DEFN( LogicVAR17, Signal, "Logic VAR17", "" ) \
DPOINT_DEFN( LogicVAR18, Signal, "Logic VAR18", "" ) \
DPOINT_DEFN( LogicVAR19, Signal, "Logic VAR19", "" ) \
DPOINT_DEFN( LogicVAR20, Signal, "Logic VAR20", "" ) \
DPOINT_DEFN( LogicVAR21, Signal, "Logic VAR21", "" ) \
DPOINT_DEFN( LogicVAR22, Signal, "Logic VAR22", "" ) \
DPOINT_DEFN( LogicVAR23, Signal, "Logic VAR23", "" ) \
DPOINT_DEFN( LogicVAR24, Signal, "Logic VAR24", "" ) \
DPOINT_DEFN( LogicVAR25, Signal, "Logic VAR25", "" ) \
DPOINT_DEFN( LogicVAR26, Signal, "Logic VAR26", "" ) \
DPOINT_DEFN( LogicVAR27, Signal, "Logic VAR27", "" ) \
DPOINT_DEFN( LogicVAR28, Signal, "Logic VAR28", "" ) \
DPOINT_DEFN( LogicVAR29, Signal, "Logic VAR29", "" ) \
DPOINT_DEFN( LogicVAR30, Signal, "Logic VAR30", "" ) \
DPOINT_DEFN( LogicVAR31, Signal, "Logic VAR31", "" ) \
DPOINT_DEFN( LogicVAR32, Signal, "Logic VAR32", "" ) \
DPOINT_DEFN( s61850ClientIpAddr2, IpAddr, "IP Address of IEC 61850 Client (2) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ClientIpAddr3, IpAddr, "IP Address of IEC 61850 Client (3) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ClientIpAddr4, IpAddr, "IP Address of IEC 61850 Client (4) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ServerTcpPort, UI16, "IEC 61850 Server (MMS) - TCP Port number used for MMS connections", "" ) \
DPOINT_DEFN( s61850TestDI1Bool, Bool, "IEC 61850 Test Digital Input 1 - free for User tests", "" ) \
DPOINT_DEFN( s61850TestDI2Bool, Bool, "IEC 61850 Test Digital Input 2 - free for User tests", "" ) \
DPOINT_DEFN( s61850TestDI3Sig, Signal, "IEC 61850 Test Digital Input 3 - free for User tests", "" ) \
DPOINT_DEFN( s61850TestAI1, I32, "IEC 61850 Test Analog Input 1 (Integer 32) - free for User tests", "" ) \
DPOINT_DEFN( s61850TestAI2, F32, "IEC 61850 Test Analog Input 2 (Float 32) - free for User tests", "" ) \
DPOINT_DEFN( s61850DiagCtrl, I32, "IEC 61850 Diagnostic Control (I32) for User tests", "" ) \
DPOINT_DEFN( LogicCh9OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh9RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh9ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh9PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh9Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh9Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh9Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh9NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh9InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh10OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh10RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh10ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh10PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh10Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh10Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh10Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh10NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh10InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh11OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh11RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh11ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh11PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh11Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh11Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh11Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh11NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh11InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh12OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh12RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh12ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh12PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh12Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh12Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh12Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh12NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh12InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh13OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh13RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh13ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh13PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh13Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh13Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh13Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh13NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh13InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh14OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh14RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh14ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh14PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh14Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh14Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh14Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh14NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh14InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh15OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh15RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh15ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh15PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh15Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh15Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh15Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh15NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh15InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh16OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh16RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh16ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh16PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh16Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh16Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh16Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh16NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh16InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh17OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh17RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh17ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh17PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh17Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh17Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh17Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh17NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh17InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh18OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh18RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh18ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh18PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh18Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh18Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh18Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh18NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh18InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh19OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh19RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh19ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh19PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh19Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh19Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh19Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh19NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh19InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh20OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh20RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh20ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh20PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh20Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh20Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh20Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh20NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh20InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh21OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh21RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh21ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh21PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh21Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh21Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh21Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh21NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh21InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh22OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh22RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh22ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh22PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh22Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh22Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh22Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh22NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh22InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh23OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh23RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh23ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh23PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh23Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh23Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh23Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh23NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh23InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh24OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh24RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh24ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh24PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh24Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh24Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh24Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh24NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh24InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh25OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh25RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh25ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh25PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh25Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh25Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh25Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh25NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh25InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh26OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh26RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh26ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh26PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh26Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh26Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh26Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh26NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh26InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh27OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh27RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh27ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh27PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh27Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh27Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh27Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh27NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh27InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh28OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh28RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh28ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh28PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh28Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh28Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh28Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh28NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh28InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh29OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh29RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh29ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh29PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh29Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh29Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh29Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh29NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh29InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh30OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh30RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh30ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh30PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh30Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh30Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh30Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh30NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh30InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh31OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh31RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh31ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh31PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh31Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh31Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh31Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh31NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh31InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicCh32OutputExp, LogicStr, "Logic channel output expression", "" ) \
DPOINT_DEFN( LogicCh32RecTime, UI16, "Logic channel recognition time", "" ) \
DPOINT_DEFN( LogicCh32ResetTime, UI16, "Logic channel reset time", "" ) \
DPOINT_DEFN( LogicCh32PulseTime, UI16, "Logic channel pulse time", "" ) \
DPOINT_DEFN( LogicCh32Output, OnOff, "Logic channel output", "" ) \
DPOINT_DEFN( LogicCh32Enable, Bool, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicCh32Name, Str, "Logic channel name", "" ) \
DPOINT_DEFN( LogicCh32NameOffline, Str, "Logic channel name offline setting", "" ) \
DPOINT_DEFN( LogicCh32InputExp, LogicStr, "Logic channel input expression", "" ) \
DPOINT_DEFN( LogicChWriteProtect17to32, EnDis, "Prevent setting logic channel attributes for channels 17 to 32", "" ) \
DPOINT_DEFN( SigStatusCloseBlocked, Signal, "Close operation blocked from ANY source", "" ) \
DPOINT_DEFN( LogicChEnableExt, UI32, "Logic channel enable", "" ) \
DPOINT_DEFN( LogicChPulseEnableExt, UI32, "Logic channel pulse enable", "" ) \
DPOINT_DEFN( LogicChLogChangeExt, UI32, "Logic channel log change of state", "" ) \
DPOINT_DEFN( ResetFaultFlagsOnClose, EnDis, "If enabled binary fault flags are reset when either (a) the switch closes or (b) the 'reset fault flags' binary output is activated. Otherwise binary fault flags are only reset when the 'reset fault flags' binary output is activated.", "" ) \
DPOINT_DEFN( SigOpenNps, Signal, "Open due to NPS1+, NPS2+, NPS3+, NPS1-, NPS2-, NPS3-", "" ) \
DPOINT_DEFN( SigAlarmNps, Signal, "Alarm ouput of any of NPS1+, NPS2+, NPS3+, NPS1-, NPS2-, NPS3- elements activated", "" ) \
DPOINT_DEFN( SystemStatus, SystemStatus, "System Status on panel display", "" ) \
DPOINT_DEFN( SigMalfGpioRunningMiniBootloader, Signal, "Set if GPIO is stuck in mini bootloader", "" ) \
DPOINT_DEFN( SigAlarmProtectionOperation, Signal, "Alarm output of Protection Operation. Set whenever a protection element has decided to operate, reset when all engines have reset.", "" ) \
DPOINT_DEFN( s61850GseSig1, Signal, "IEC 61850 Goose Digital Input 1 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig2, Signal, "IEC 61850 Goose Digital Input 2 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig3, Signal, "IEC 61850 Goose Digital Input 3 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig4, Signal, "IEC 61850 Goose Digital Input 4 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig5, Signal, "IEC 61850 Goose Digital Input 5 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig6, Signal, "IEC 61850 Goose Digital Input 6 - Signal", "" ) \
DPOINT_DEFN( s61850GseSig7, Signal, "IEC 61850 Goose Digital Input 7 - Signal", "" ) \
DPOINT_DEFN( s61850GseSubChg, Bool, "Protocol IEC61850: Goose Subscription change event for batch notifications.", "" ) \
DPOINT_DEFN( s61850GseBool1, Bool, "IEC 61850 Goose Digital Input 1 - Boolean", "" ) \
DPOINT_DEFN( s61850GseBool2, Bool, "IEC 61850 Goose Digital Input 2 - Boolean", "" ) \
DPOINT_DEFN( s61850GseBool3, Bool, "IEC 61850 Goose Digital Input 3 - Boolean", "" ) \
DPOINT_DEFN( s61850GseBool4, Bool, "IEC 61850 Goose Digital Input 4 - Boolean", "" ) \
DPOINT_DEFN( s61850GseFp1, F32, "IEC 61850 Goose Analog FP Input 1", "" ) \
DPOINT_DEFN( s61850GseFp2, F32, "IEC 61850 Goose Analog FP Input 2", "" ) \
DPOINT_DEFN( s61850GseFp3, F32, "IEC 61850 Goose Analog FP Input 3", "" ) \
DPOINT_DEFN( s61850GseFp4, F32, "IEC 61850 Goose Analog FP Input 4", "" ) \
DPOINT_DEFN( s61850GseFp5, F32, "IEC 61850 Goose Analog FP Input 5", "" ) \
DPOINT_DEFN( s61850GseFp6, F32, "IEC 61850 Goose Analog FP Input 6", "" ) \
DPOINT_DEFN( s61850GseFp7, F32, "IEC 61850 Goose Analog FP Input 7", "" ) \
DPOINT_DEFN( s61850GseFp8, F32, "IEC 61850 Goose Analog FP Input 8", "" ) \
DPOINT_DEFN( s61850GseInt1, I32, "IEC 61850 Goose Analog Integer Input 1", "" ) \
DPOINT_DEFN( s61850GseInt2, I32, "IEC 61850 Goose Analog Integer Input 2", "" ) \
DPOINT_DEFN( s61850GseInt3, I32, "IEC 61850 Goose Analog Integer Input 3", "" ) \
DPOINT_DEFN( s61850GseInt4, I32, "IEC 61850 Goose Analog Integer Input 4", "" ) \
DPOINT_DEFN( s61850GseInt5, I32, "IEC 61850 Goose Analog Integer Input 5", "" ) \
DPOINT_DEFN( s61850GseInt6, I32, "IEC 61850 Goose Analog Integer Input 6", "" ) \
DPOINT_DEFN( s61850GseInt7, I32, "IEC 61850 Goose Analog Integer Input 7", "" ) \
DPOINT_DEFN( s61850GseInt8, I32, "IEC 61850 Goose Analog Integer Input 8", "" ) \
DPOINT_DEFN( FSMountFailure, UI8, "File system mount failure", "" ) \
DPOINT_DEFN( SigPickupABR, Signal, "Pickup output of ABR element activated", "" ) \
DPOINT_DEFN( SimExtSupplyStatusView, SimExtSupplyStatus, "Intended to track the external supply status provided via CanSimExtSupplyStatus.", "" ) \
DPOINT_DEFN( BatteryType, BatteryType, "Battery Type, AGM or GEL", "" ) \
DPOINT_DEFN( UsbDiscHasDNP3SAUpdateKey, Bool, "Indicates whether a connected USB disc has a DNP3 update key file", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileVer, Str, "Version of update key file", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileNetworkName, Str, "Network name in DNP3-SA update key file on USB", "" ) \
DPOINT_DEFN( DNP3SA_ExpectSessKeyChangeInterval, UI16, "Expected session key change interval", "" ) \
DPOINT_DEFN( DNP3SA_ExpectSessKeyChangeCount, UI32, "Expected session key change count", "" ) \
DPOINT_DEFN( DNP3SA_MaxSessKeyStatusCount, UI8, "Session key status count maximum", "" ) \
DPOINT_DEFN( DNP3SA_AggressiveMode, OnOff, "DNP3SA Aggressive mode", "" ) \
DPOINT_DEFN( DNP3SA_MACAlgorithm, MACAlgorithm, "DNP3SA MAC Algorithm", "" ) \
DPOINT_DEFN( DNP3SA_KeyWrapAlgorithm, AESAlgorithm, "DNP3SA Key Wrap Algorithm", "" ) \
DPOINT_DEFN( DNP3SA_SessKeyChangeIntervalMonitoring, OnOff, "DNP3SA Session Key Change Interval Monitoring", "" ) \
DPOINT_DEFN( DNP3SA_Enable, EnDis, "Enable DNP3-SA", "" ) \
DPOINT_DEFN( DNP3SA_Version, DNP3SAVersion, "DNP3-SA Version status", "" ) \
DPOINT_DEFN( DNP3SA_UpdateKeyInstalled, DNP3SAUpdateKeyInstalledStatus, "DNP3SA Update Key Installed", "" ) \
DPOINT_DEFN( DNP3SA_UpdateKeyFileVer, Str, "DNP3SA Update Key File Version", "" ) \
DPOINT_DEFN( DNP3SA_UpdateKeyInstallState, DNP3SAUpdateKeyInstallStep, "DNP3SA Update Key installation step/state", "" ) \
DPOINT_DEFN( DNP3SA_UnexpectedMsgCount, UI32, "DNP3SA Unexpected message count", "" ) \
DPOINT_DEFN( DNP3SA_AuthorizeFailCount, UI32, "DNP3SA Authorization Fail Count", "" ) \
DPOINT_DEFN( DNP3SA_AuthenticateFailCount, UI32, "DNP3SA Authentication Fail Count", "" ) \
DPOINT_DEFN( DNP3SA_ReplyTimeoutCount, UI32, "DNP3SA Reply Timeout Count", "" ) \
DPOINT_DEFN( DNP3SA_RekeyCount, UI32, "DNP3SA Rekey Count", "" ) \
DPOINT_DEFN( DNP3SA_TotalMsgTxCount, UI32, "DNP3SA Total Message Transmitted Count", "" ) \
DPOINT_DEFN( DNP3SA_TotalMsgRxCount, UI32, "DNP3SA Total Message Received Count", "" ) \
DPOINT_DEFN( DNP3SA_CriticalMsgTxCount, UI32, "DNP3SA Critical Message Tx Count", "" ) \
DPOINT_DEFN( DNP3SA_CriticalMsgRxCount, UI32, "DNP3SA Critical Message Rx Count", "" ) \
DPOINT_DEFN( DNP3SA_DiscardedMsgCount, UI32, "DNP3SA Discarded Message Count", "" ) \
DPOINT_DEFN( DNP3SA_AuthenticateSuccessCount, UI32, "DNP3SA Authenticate Success Count", "" ) \
DPOINT_DEFN( DNP3SA_ErrorMsgTxCount, UI32, "DNP3SA Error Message Tx Count", "" ) \
DPOINT_DEFN( DNP3SA_ErrorMsgRxCount, UI32, "DNP3SA Error Message Rx Count", "" ) \
DPOINT_DEFN( DNP3SA_SessKeyChangeCount, UI32, "DNP3SA Session Key Change Count", "" ) \
DPOINT_DEFN( DNP3SA_FailedSessKeyChangeCount, UI32, "DNP3SA Failed Session Key Change Count", "" ) \
DPOINT_DEFN( ClearDnp3SACntr, ClearCommand, "Clear DNP3-SA Counters", "" ) \
DPOINT_DEFN( IdSIMModelStr, Str, "String to display for SIM model : \"\", SIM-01, SIM-02, SIM-03", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileUserNum, UI16, "User number", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileUserRole, UI16, "User Role", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileCryptoAlg, UI8, "Crypto algorithm", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileDNP3SlaveAddr, UI16, "DNP3 Slave address", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileDevSerialNum, Str, "Device serial number", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileEnableSA, YesNo, "Enable DNP3-SA after install", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileKeyVer, Str, "Update key version", "" ) \
DPOINT_DEFN( DNP3SA_UpdateKeyFileKeyVer, Str, "Protocol DNP3 Update Key Version", "" ) \
DPOINT_DEFN( DNP3SA_MaxErrorCount, UI8, "Number of error messages sent before disabling error message transmission", "" ) \
DPOINT_DEFN( DNP3SA_MaxErrorMessagesSent, UI16, "Maximum error messages sent", "" ) \
DPOINT_DEFN( DNP3SA_MaxAuthenticationFails, UI16, "Maximum authentication failures", "" ) \
DPOINT_DEFN( DNP3SA_MaxAuthenticationRekeys, UI16, "Maximum authentication rekeys", "" ) \
DPOINT_DEFN( DNP3SA_MaxReplyTimeouts, UI16, "Maximum reply timeouts", "" ) \
DPOINT_DEFN( DNP3SA_DisallowSHA1, Bool, "Disallow SHA1", "" ) \
DPOINT_DEFN( ScadaDNP3SecurityStatistics, ScadaDNP3SecurityStatistics, "This is the datapoint that CMS will use to download the required point map to the RC10", "" ) \
DPOINT_DEFN( DNP3SA_VersionSelect, DNP3SAVersion, "Select DNP3-SA Version (which is via offline settings on CMS)", "" ) \
DPOINT_DEFN( ClearDNP3SAUpdateKey, ClearCommand, "Remove DNP3SA Update Key", "" ) \
DPOINT_DEFN( SigAlarmOv3, Signal, "Alarm output of OV3 activated", "" ) \
DPOINT_DEFN( SigAlarmOv4, Signal, "Alarm output of OV4 activated", "" ) \
DPOINT_DEFN( SigOpenOv3, Signal, "Open due to OV3 tripping", "" ) \
DPOINT_DEFN( SigOpenOv4, Signal, "Open due to OV4 tripping", "" ) \
DPOINT_DEFN( SigPickupOv3, Signal, "Pickup output of OV3 activated", "" ) \
DPOINT_DEFN( SigPickupOv4, Signal, "Pickup output of OV4 activated", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileError, UsbDiscDNP3SAUpdateKeyFileError, "Stores value indicating the nature of an error involving USB DNP3-SA key file", "" ) \
DPOINT_DEFN( ProtAngIa, I16, "Protection Angle Ia:\r\nThe value is scaled in pi-radians with a range from -pi to +pi.  The (signed integer) value is sign extended to fill the 16 bit buffer; therefore this value can be treated as a normal I16.\r\n\r\nTo convert the value into degrees: divide the number by 2^13 and multiply by 180.", "" ) \
DPOINT_DEFN( ProtAngIb, I16, "Protection Angle Ib: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngIc, I16, "Protection Angle Ic: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUa, I16, "Protection Angle Ua: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUb, I16, "Protection Angle Ub: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUc, I16, "Protection Angle Uc: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUr, I16, "Protection Angle Ur: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUs, I16, "Protection Angle Us: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( ProtAngUt, I16, "Protection Angle Ut: See ProtAngIa for an explanation of the scale factor.", "" ) \
DPOINT_DEFN( MeasVoltUn, UI32, "Measurement Voltage: Un", "" ) \
DPOINT_DEFN( TripMaxVoltUn, UI32, "Maximum Un voltage as of the most recent OV3 trip", "" ) \
DPOINT_DEFN( TripMaxVoltU2, UI32, "Maximum U2 voltage as of the most recent OV4 trip", "" ) \
DPOINT_DEFN( UsbDiscDNP3SAUpdateKeyFileName, Str, "Name of file containing DNP3SA update key", "" ) \
DPOINT_DEFN( BatteryTypeChangeSupported, Bool, "TRUE if the SIM supports battery type changing, FALSE if the SIM software version is too old to support battery type changing.", "" ) \
DPOINT_DEFN( UsbDiscInstallError, UpdateError, "The \"forced install\" operation has more strict requirements than update only. So this point may indicate an error to prevent install, while the UsbDiscError indicates ok for update.", "" ) \
DPOINT_DEFN( UsbDiscUpdateDirFiles, StrArray, "List of all file names (or as many that can fit in the data type) existing in the USB updates directory, regardless of whether valid or not.", "" ) \
DPOINT_DEFN( UsbDiscUpdateDirFileCount, UI32, "Number of files in the USB updates directory.", "" ) \
DPOINT_DEFN( SigLogicConfigIssue, Signal, "Set when RC10 detects logic operations are happening too fast, probably due to a loop outside the loop detection capability.", "" ) \
DPOINT_DEFN( SigLowestUa, Signal, "Ua has the lowest voltage sag", "" ) \
DPOINT_DEFN( SigLowestUb, Signal, "Ub has the lowest voltage sag", "" ) \
DPOINT_DEFN( SigLowestUc, Signal, "Uc has the lowest voltage sag", "" ) \
DPOINT_DEFN( SigCtrlInhibitMultiPhaseClosesOn, Signal, "When enabled in a single-triple configuration, multi-phase close operations from the Panel, CMS, or Logic are not allowed.", "" ) \
DPOINT_DEFN( CanSimModuleFeatures, UI32, "Bit flags that indicate what features are supported by the SIM.", "" ) \
DPOINT_DEFN( CanSimMaxPower, UI16, "Maximum power supported by the SIM's power supply.  0 to 500W in 0.01W units.  Default is 50W.", "" ) \
DPOINT_DEFN( IdOsmNumber1, SerialNumber, "13 character serial number for the first switchgear in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigSwitchOpen, Signal, "Set if the switch is open, reset otherwise. The feature of this point is that the timestamp will be the time of receipt of the CAN SwitchPositionStatus message from the SIM.", "" ) \
DPOINT_DEFN( SigSwitchClosed, Signal, "Set if the switch is closed, reset otherwise. The feature of this point is that the timestamp will be the time of receipt of the CAN SwitchPositionStatus message from the SIM.", "" ) \
DPOINT_DEFN( s61850GseSimFlgEn, EnDis, "IEC 61850 Monitor Goose Simulation (or Test) Flag", "" ) \
DPOINT_DEFN( s61850GseSimProc, EnDis, "IEC 61850 Process Received Simulated Goose Messages (on/off) ", "" ) \
DPOINT_DEFN( s61850TestQualEn, EnDis, "IEC 61850 Process Quality bits for Test flag", "" ) \
DPOINT_DEFN( s61850GseSubscr01, s61850GseSubscDefn, "IEC 61850: Goose Subscription 01 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr02, s61850GseSubscDefn, "IEC 61850: Goose Subscription 02 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr03, s61850GseSubscDefn, "IEC 61850: Goose Subscription 03 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr04, s61850GseSubscDefn, "IEC 61850: Goose Subscription 04 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( IEC61499Enable, EnDis, "IEC 61499 Enabled", "" ) \
DPOINT_DEFN( IEC61499PortNumber, UI16, "TCP Port number for IEC 61499 Runtime Management Device (Default = 61499)", "" ) \
DPOINT_DEFN( IEC61499AppStatus, IEC61499AppStatus, "Status of the IEC 61499 Runtime resources. The status shall correspond to one of the following \"Running\", or \"Stopped\" to indicate if the installed resources are running or stopped.", "" ) \
DPOINT_DEFN( IEC61499Command, IEC61499Command, "Data point used to issue commands to the IEC61499 Runtime. Upon completion of the execution of the issued command, the value is reset to IEC61499CmdNone. (Default=IEC61499CmdNone)", "" ) \
DPOINT_DEFN( OperatingMode, OperatingMode, "Operating mode of the system: Recloser, Switch, Alarm Switch, Sectionaliser", "" ) \
DPOINT_DEFN( AlarmLatchMode, LatchEnable, "The latch mode for Alarms. Configured under the 'Fault Flags' collections of settings", "" ) \
DPOINT_DEFN( IdPSCSoftwareVer, Str, "Identification: PSC Software Version", "" ) \
DPOINT_DEFN( IdPSCHardwareVer, Str, "Identification: PSC Hardware Version", "" ) \
DPOINT_DEFN( IdPSCNumber, SerialNumber, "Identification: PSC Serial Number", "" ) \
DPOINT_DEFN( CanPscModuleType, UI8, "Module type of the PSC, which should be 6", "" ) \
DPOINT_DEFN( CanPscReadSerialNumber, Str, "Serial Number in YYMMNNNN format", "" ) \
DPOINT_DEFN( CanPscPartAndSupplierCode, Str, "PSC Part And Supplier Code", "" ) \
DPOINT_DEFN( SigModuleTypePscConnected, Signal, "PSC Connected", "" ) \
DPOINT_DEFN( CanPscReadHWVers, UI32, "Firmware version major number\r\nbytes[0..1]       Major\r\nbytes[2..3]       Minor \r\n", "" ) \
DPOINT_DEFN( CanPscReadSWVers, SwVersion, "Software version major number\r\nbytes[0..1]   Major\r\nbytes[2..3]   Minor\r\nbytes[4..5]   Build\r\nbytes[6..7]   Mode  0=Debug,    1=Release\r\n", "" ) \
DPOINT_DEFN( PhaseToPhaseTripping, EnDis, "When enabled, lockout all three phases in single triple when a multi phase fault (i.e. OC fault on more than one phase) occurs and the trip is to lockout.", "" ) \
DPOINT_DEFN( CanPscRdData, SimImageBytes, "PSC image download write\r\nOn request byte[0] = number of bytes to read\r\nOn return byte[0..8] is the data", "" ) \
DPOINT_DEFN( CanPscFirmwareVerifyStatus, UI8, "0  DOWNLOAD_NEXT   - get next block of data.\r\n1  DOWNLOAD_REPT   - repeat block as data was corrupt.\r\n2  DOWNLOAD_BUSY   - unit still processing the data.\r\n\r\nWhen polled indicates what it is currently happening with the block data.\r\n", "" ) \
DPOINT_DEFN( CanPscFirmwareTypeRunning, UI8, "0 main code running\r\n1 mini bootloader running\r\n2 main bootloader running\r\n", "" ) \
DPOINT_DEFN( ProgramPscCmd, ProgramSimCmd, "Issue commands to the PSC programmer process (progPsc).", "" ) \
DPOINT_DEFN( CanDataRequestPsc, CanObjType, "request data from PSC device on the CAN network", "" ) \
DPOINT_DEFN( ProgramPscStatus, UI8, "Indicates the status of PSC programming (for firmware update)", "" ) \
DPOINT_DEFN( CanPscRequestMoreData, UI8, "Number of packets to send", "" ) \
DPOINT_DEFN( SigCtrlRqstTripCloseA, Signal, "Request a trip / close on A. To request a close set value to 1, to request an open set value to 0.", "" ) \
DPOINT_DEFN( SigCtrlRqstTripCloseB, Signal, "Request a trip / close on B. To request a close set value to 1, to request an open set value to 0.", "" ) \
DPOINT_DEFN( SigCtrlRqstTripCloseC, Signal, "Request a trip / close on C. To request a close set value to 1, to request an open set value to 0.", "" ) \
DPOINT_DEFN( GOOSE_RxCount, UI32, "IEC 61850: GOOSE Subscriber -  Number of Packets received. ", "" ) \
DPOINT_DEFN( s61850ClrGseCntrs, ClearCommand, "IEC 61850: Erase Goose Subscriber and Publisher Counters", "" ) \
DPOINT_DEFN( SigClosedSwitchAll, Signal, "All switch phases are closed in a single-triple configuration.", "" ) \
DPOINT_DEFN( SigOpenSwitchAll, Signal, "All switch phases are open in a single-triple configuration.", "" ) \
DPOINT_DEFN( SwitchgearTypeSIMChanged, Bool, "Set to TRUE when the switchgear type has changed due to a change from SIM-01 to SIM-02 or vice versa.  This indicates that a system reset will be required.", "" ) \
DPOINT_DEFN( SwitchgearTypeEraseSettings, Bool, "Set to TRUE when the settings and logs should be erased due to a change from SIM-01 to SIM-02 or vice versa which changed the switchgear type.", "" ) \
DPOINT_DEFN( UpdatePscNew, Str, "PSC firmware version string which is about to be installed. Used at startup to verify whether a firmware update was successful: if IdPSCSoftwareVer matches this datapoint then software update was successful.", "" ) \
DPOINT_DEFN( s61850GseSubscr05, s61850GseSubscDefn, "IEC 61850: Goose Subscription 05 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr06, s61850GseSubscDefn, "IEC 61850: Goose Subscription 06 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr07, s61850GseSubscDefn, "IEC 61850: Goose Subscription 07 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr08, s61850GseSubscDefn, "IEC 61850: Goose Subscription 08 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr09, s61850GseSubscDefn, "IEC 61850: Goose Subscription 09 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr10, s61850GseSubscDefn, "IEC 61850: Goose Subscription 10 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( SigModuleTypePscDisconnected, Signal, "PSC is disconnected and the SIM is not capable of providing system power.", "" ) \
DPOINT_DEFN( SigMalfPscRunningMiniBootloader, Signal, "Set if PSC is stuck in mini bootloader", "" ) \
DPOINT_DEFN( SigMalfPscFault, Signal, "PSC internal fault detected", "" ) \
DPOINT_DEFN( CanPscModuleFault, UI16, "PSC module health. Healthy: 00000000, otherwise bits indicate type of fault.", "" ) \
DPOINT_DEFN( CanPscModuleHealth, UI8, "Healthy: 0, fault: 1", "" ) \
DPOINT_DEFN( ScadaT10BTimeLocal, ScadaTimeIsLocal, "Flag to indicate if time sent over SCADA should be interpreted as local time or UTC time.", "" ) \
DPOINT_DEFN( ScadaT10BIpValidMasterAddr, YesNo, "Whether to accept IEC messages from the configured Master's IP address.", "" ) \
DPOINT_DEFN( ScadaT10BIpMasterAddr, IpAddr, "The Master's IP address. This is used for authorizing, if \"Check Master IP Address\" is ON, and for sending unsolicited messages.", "" ) \
DPOINT_DEFN( DDT001, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT002, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT003, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT004, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT005, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT006, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT007, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT008, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT009, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT010, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT011, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT012, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT013, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT014, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT015, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT016, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT017, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT018, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT019, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT020, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT021, DDT, "Dynamic Data Type (32 bits) ", "" ) \
DPOINT_DEFN( DDT022, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT023, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT024, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT025, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT026, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT027, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT028, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT029, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT030, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT031, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT032, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT033, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT034, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT035, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT036, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT037, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT038, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT039, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT040, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT041, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT042, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT043, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT044, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT045, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT046, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT047, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT048, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT049, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT050, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT051, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT052, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT053, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT054, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT055, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT056, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT057, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT058, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT059, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT060, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT061, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT062, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT063, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT064, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT065, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT066, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT067, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT068, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT069, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT070, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT071, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT072, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT073, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT074, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT075, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT076, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT077, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT078, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT079, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT080, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT081, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT082, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT083, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT084, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT085, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT086, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT087, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT088, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT089, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT090, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT091, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT092, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT093, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT094, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT095, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT096, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT097, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT098, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT099, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( DDT100, DDT, "Dynamic Data Type. Represent any number that fits into 32 bits. Used only in IEC 61499", "" ) \
DPOINT_DEFN( SigAlarmOcll1, Signal, "Alarm output of OCLL1 activated", "" ) \
DPOINT_DEFN( SigAlarmOcll2, Signal, "Alarm output of OCLL2 activated", "" ) \
DPOINT_DEFN( SigAlarmOcll3, Signal, "Alarm output of OCLL3 activated", "" ) \
DPOINT_DEFN( SigAlarmNpsll1, Signal, "Alarm output of NPSLL1 activated", "" ) \
DPOINT_DEFN( SigAlarmNpsll2, Signal, "Alarm output of NPSLL2 activated", "" ) \
DPOINT_DEFN( SigAlarmNpsll3, Signal, "Alarm output of NPSLL3 activated", "" ) \
DPOINT_DEFN( SigAlarmEfll1, Signal, "Alarm output of EFLL1 activated", "" ) \
DPOINT_DEFN( SigAlarmEfll2, Signal, "Alarm output of EFLL2 activated", "" ) \
DPOINT_DEFN( SigAlarmEfll3, Signal, "Alarm output of EFLL3 activated", "" ) \
DPOINT_DEFN( SigAlarmSefll, Signal, "Alarm output of SEFLL activated", "" ) \
DPOINT_DEFN( DDTDef01, DDTDef, "Dynamic Data Type definitions. Contains 100 DDT definitions. Each definition consists of channel, name and type.", "" ) \
DPOINT_DEFN( CanSimBulkReadCount, UI8, "Maximum bulk read count for SIM.  On SIM's that support it, this indicates the number of \"Read Data\" packets that can be returned for a bulk read request.", "" ) \
DPOINT_DEFN( CanIoBulkReadCount, UI8, "Maximum bulk read count for GPIO.  On GPIO's that support it, this indicates the number of \"Read Data\" packets that can be returned for a bulk read request.", "" ) \
DPOINT_DEFN( CanPscBulkReadCount, UI8, "Maximum bulk read count for PSC.  On PSC's that support it, this indicates the number of \"Read Data\" packets that can be returned for a bulk read request.", "" ) \
DPOINT_DEFN( DemoUnitMode, DemoUnitMode, "If configured (set to Standard or Single Triple), the Demonstration Unit Functionality in the Demo Box will be available.", "" ) \
DPOINT_DEFN( DemoUnitAvailable, Bool, "** Internal to Demonstration Unit functionality only ** If set to TRUE, the Demonstration Unit functionality is available on the HMI panel. The Demonstration Unit is available when the SIM module is detected as disconnected and un-available when the SIM module is detected as connected.", "" ) \
DPOINT_DEFN( LanguagesAvailable, StrArray2, "List of languages available", "" ) \
DPOINT_DEFN( DemoUnitActive, Bool, "** Internal to Demonstration Unit functionality only ** If set to TRUE, the Demonstration Unit functionality is active on the HMI panel. The Demonstration Unit is active when the Demonstration Unit  is Available and not Disabled.", "" ) \
DPOINT_DEFN( CanSimReadSWVersExt, SwVersionExt, "SIM software version extended details\r\n", "" ) \
DPOINT_DEFN( CanIo1ReadSwVersExt, SwVersionExt, "IO1 extended software version details", "" ) \
DPOINT_DEFN( CanIo2ReadSwVersExt, SwVersionExt, "IO2 extended software version details", "" ) \
DPOINT_DEFN( CanPscReadSWVersExt, SwVersionExt, "PSC extended software version details", "" ) \
DPOINT_DEFN( RemoteUpdateCommand, RemoteUpdateCommand, "Remote update command", "" ) \
DPOINT_DEFN( RemoteUpdateStatus, RemoteUpdateStatus, "Remote Update Status", "" ) \
DPOINT_DEFN( IEC61499FBOOTChEv, IEC61499FBOOTChEv, "Data point used to generate change log events relating to the FBOOT file. The point is set to automatically generate a change log and 'silently' (not using dbSet to prevent events being generated) resetting the data point directly to [0] IEC61499FBOOTNoCh", "" ) \
DPOINT_DEFN( SigStatusIEC61499FailedFBOOT, Signal, "Signal used to indicate the status of a failed FBOOT, i.e. the FBOOT may be malformed or unable to be executed", "" ) \
DPOINT_DEFN( IdOsmNumModelA, UI32, "SW A serial number field 1. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumModelB, UI32, "SW B serial number field 1. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumModelC, UI32, "SW C serial number field 1. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumPlantA, UI32, "SW A serial number field 2. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumPlantB, UI32, "SW B serial number field 2. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumPlantC, UI32, "SW C serial number field 2. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumDateA, UI32, "SW A serial number field 3. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumDateB, UI32, "SW B serial number field 3. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumDateC, UI32, "SW C serial number field 3. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumSeqA, UI32, "SW A serial number field 4. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumSeqB, UI32, "SW B serial number field 4. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( IdOsmNumSeqC, UI32, "SW C serial number field 4. Send Notifications on New Values Only to prevent perpetual event handling condition if decodeAllSerNums() is called in response to a change event of this data point (such as with scadaS101).", "" ) \
DPOINT_DEFN( LLBPhasesBlocked, UI8, "Bit mask that indicates which phases currently have LLB active on them in a single-triple configuration.", "" ) \
DPOINT_DEFN( CmsClientCapabilities, UI32, "This bit field is used by connecting CMS client devices to announce their capabilities. The values are supposed to be from the CmsClientSupports enumeration. Refer to the wiki page for legal values.", "" ) \
DPOINT_DEFN( SigGenLockoutAll, Signal, "All AR OCEF, AR SEF, ABR elements are set in the Lockout state for all phases in single-triple configurations.", "" ) \
DPOINT_DEFN( SigLockoutProtAll, Signal, "This signal will be set when all switches have been opened to Lockout by any protection source in single-triple.", "" ) \
DPOINT_DEFN( CmsClientAllowAny, Bool, "If set to TRUE, then any CMS client can connect even if its client capabilities are not compatible.  This is intended for testing only.", "" ) \
DPOINT_DEFN( IEC61499FBOOTStatus, IEC61499FBOOTStatus, "Status of the IEC 61499 FBOOT file. The status shall correspond to one of the following \"None\" or \"Installed\".", "" ) \
DPOINT_DEFN( IEC61499AppsRunning, UI8, "Number of IEC 61499 Resources installed on the device", "" ) \
DPOINT_DEFN( IEC61499AppsFailed, UI8, "Number of IEC 61499 Resources which failed to install", "" ) \
DPOINT_DEFN( IEC61499FBOOTOper, IEC61499FBOOTOper, "Status of the IEC 61499 FBOOT file operation. The file operations include Delete FBOOT from non-volatile memory and Copy FBOOT from USB. The status shall correspond to the data type values.", "" ) \
DPOINT_DEFN( PanelButtHLT, EnDis, "HMI Hot Line Tag fast key control", "" ) \
DPOINT_DEFN( GpsAvailable, YesNo, "Indicate whether GPS module is available or not.  Depends on partcode number. ", "" ) \
DPOINT_DEFN( Gps_PortDetectedName, Str, "USB detected port name, ttyUSBx.", "" ) \
DPOINT_DEFN( Gps_Enable, EnDis, "GPS enable control", "" ) \
DPOINT_DEFN( Gps_Restart, YesNo, "GPS restart control\r\n2016/04/20 changed title for CMS-1577", "" ) \
DPOINT_DEFN( Gps_SignalQuality, SignalQuality, "Quality of the GPS signal: No Signal, Low Signal, Very Good, or Excellent", "" ) \
DPOINT_DEFN( Gps_Longitude, I32, "GPS Longitude", "" ) \
DPOINT_DEFN( Gps_Latitude, I32, "GPS Latitude", "" ) \
DPOINT_DEFN( Gps_Altitude, I16, "GPS Altitude", "" ) \
DPOINT_DEFN( Gps_TimeSyncStatus, GpsTimeSyncStatus, "GPS time sync status: not synced or locked", "" ) \
DPOINT_DEFN( SigGpsLocked, Signal, "GPS time locked when set, not synchronised when reset", "" ) \
DPOINT_DEFN( PqChEvNonGroup, ChangeEvent, "For logging changes to power quality settings", "" ) \
DPOINT_DEFN( ChEvSwitchgearCalib, ChangeEvent, "For logging changes to switchgear calibration settings", "" ) \
DPOINT_DEFN( ProtocolChEvNonGroup, ChangeEvent, "To log changes in protocol settings", "" ) \
DPOINT_DEFN( Gps_SyncSimTime, Bool, "Set to TRUE to force the SIM's time to be synchronised with the time from the GPS.  Will be quietly reset to FALSE once synchronisation is complete.", "" ) \
DPOINT_DEFN( Gps_PPS, Signal, "Set if the GPS PPS signal is present and the GPS is enabled for updating the time.  Reset if the GPS is disabled or the PPS signal has stopped.  Note: just because PPS is present doesn't mean that the GPS has yet \"locked\".  This signal is typically used to control whether the user can manually set the time via HMI, CMS, and SCADA or not.", "" ) \
DPOINT_DEFN( SigModuleSimUnhealthy, Signal, "SIM Module Health Fault", "" ) \
DPOINT_DEFN( SigLanAvailable, Signal, "Indicates if the hardware has an Ethernet port for LAN access.", "" ) \
DPOINT_DEFN( MntReset, Bool, "Notification from the protection configurator that it has reset SigMntActivated.", "" ) \
DPOINT_DEFN( WlanConfigType, UsbPortConfigType, "WLAN port config type", "" ) \
DPOINT_DEFN( MobileNetworkConfigType, UsbPortConfigType, "Mobile network port config type", "" ) \
DPOINT_DEFN( WlanConnectionMode, WlanConnectionMode, "WLAN connection mode: Access Point or Client", "" ) \
DPOINT_DEFN( WlanAccessPointSSID, Str, "SSID to use when WLAN is configured as Access Point.  Not used in Client mode.", "" ) \
DPOINT_DEFN( WlanAccessPointIP, IpAddr, "IP address to use when the WLAN is configured as an Access Point.  Not used in Client mode.", "" ) \
DPOINT_DEFN( WlanIPRangeLow, IpAddr, "WLAN IP Address Range Low", "" ) \
DPOINT_DEFN( WlanIPRangeHigh, IpAddr, "WLAN IP Address Range High", "" ) \
DPOINT_DEFN( WlanClientIPAddr1, IpAddr, "WLAN Client IP Address 1", "" ) \
DPOINT_DEFN( WlanClientIPAddr2, IpAddr, "WLAN Client IP Address 2", "" ) \
DPOINT_DEFN( WlanClientIPAddr3, IpAddr, "WLAN Client IP Address 3", "" ) \
DPOINT_DEFN( WlanClientIPAddr4, IpAddr, "WLAN Client IP Address 4", "" ) \
DPOINT_DEFN( WlanClientIPAddr5, IpAddr, "WLAN Client IP Address 5", "" ) \
DPOINT_DEFN( WlanSignalQuality, SignalQuality, "WLAN Signal Quality", "" ) \
DPOINT_DEFN( MobileNetworkSignalQuality, SignalQuality, "Mobile Network Signal Quality", "" ) \
DPOINT_DEFN( MobileNetworkSimCardStatus, MobileNetworkSimCardStatus, "Mobile Network SIM Card Status: Detected or Not Detected", "" ) \
DPOINT_DEFN( MobileNetworkMode, MobileNetworkMode, "Mobile network mode: GSM, WCDMA, etc", "" ) \
DPOINT_DEFN( MobileNetworkModemSerialNumber, Str, "Mobile Network Modem Serial Number", "" ) \
DPOINT_DEFN( MobileNetworkIMEI, Str, "Mobile Network IMEI", "" ) \
DPOINT_DEFN( WlanHideNetwork, YesNo, "When WLAN is in Access Point mode, hide the SSID from Wi-Fi clients and do not broadcast it.", "" ) \
DPOINT_DEFN( WlanChannelNumber, UI8, "WLAN channel number when in Access Point mode", "" ) \
DPOINT_DEFN( WlanRestart, YesNo, "WLAN Restart", "" ) \
DPOINT_DEFN( MobileNetworkRestart, YesNo, "Mobile Network Restart", "" ) \
DPOINT_DEFN( SigWlanAvailable, Signal, "Indicate whether WLAN comms board is available or not.  Depends on partcode number.", "" ) \
DPOINT_DEFN( SigMobileNetworkAvailable, Signal, "Indicate whether mobile network comms board is available or not.  Depends on partcode number.", "" ) \
DPOINT_DEFN( SigCommsBoardConnected, Signal, "Set to 1 if the REL-15 comms board is connected.  Set to 0 if the comms board is not connected.", "" ) \
DPOINT_DEFN( G12_SerialBaudRate, CommsSerialBaudRate, "Grp12 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G12_SerialDuplexType, CommsSerialDuplex, "Grp12 Serial Duplex Type", "" ) \
DPOINT_DEFN( G12_SerialRTSMode, CommsSerialRTSMode, "Grp12 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G12_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp12 Serial RTS On Level", "" ) \
DPOINT_DEFN( G12_SerialDTRMode, CommsSerialDTRMode, "Grp12 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G12_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp12 Serial DTR On Level", "" ) \
DPOINT_DEFN( G12_SerialParity, CommsSerialParity, "Grp12 Serial Parity", "" ) \
DPOINT_DEFN( G12_SerialCTSMode, CommsSerialCTSMode, "Grp12 Clear To Send setting.", "" ) \
DPOINT_DEFN( G12_SerialDSRMode, CommsSerialDSRMode, "Grp12 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G12_SerialDTRLowTime, UI32, "Grp12 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G12_SerialTxDelay, UI32, "Grp12 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G12_SerialPreTxTime, UI32, "Grp12 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G12_SerialDCDFallTime, UI32, "Grp12 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G12_SerialCharTimeout, UI32, "Grp12 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G12_SerialPostTxTime, UI32, "Grp12 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G12_SerialInactivityTime, UI32, "Grp12 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G12_SerialCollisionAvoidance, Bool, "Grp12 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G12_SerialMinIdleTime, UI32, "Grp12 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G12_SerialMaxRandomDelay, UI32, "Grp12 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G12_ModemPoweredFromExtLoad, Bool, "Grp12 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G12_ModemUsedWithLeasedLine, Bool, "Grp12 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G12_ModemInitString, Str, "Grp12 Modem Init String", "" ) \
DPOINT_DEFN( G12_ModemDialOut, Bool, "Grp12 Modem Dial Out", "" ) \
DPOINT_DEFN( G12_ModemPreDialString, Str, "Grp12 Modem Pre Dial String", "" ) \
DPOINT_DEFN( G12_ModemDialNumber1, Str, "Grp12 Modem Dial Number1", "" ) \
DPOINT_DEFN( G12_ModemDialNumber2, Str, "Grp12 Modem Dial Number2", "" ) \
DPOINT_DEFN( G12_ModemDialNumber3, Str, "Grp12 Modem Dial Number3", "" ) \
DPOINT_DEFN( G12_ModemDialNumber4, Str, "Grp12 Modem Dial Number4", "" ) \
DPOINT_DEFN( G12_ModemDialNumber5, Str, "Grp12 Modem Dial Number5", "" ) \
DPOINT_DEFN( G12_ModemAutoDialInterval, UI32, "Grp12 Modem Auto Dial Interval time between failure to connect to one number in seconds. ", "" ) \
DPOINT_DEFN( G12_ModemConnectionTimeout, UI32, "Grp12 Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G12_ModemMaxCallDuration, UI32, "Grp12 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G12_ModemResponseTime, UI32, "Grp12 Modem Response Time", "" ) \
DPOINT_DEFN( G12_ModemHangUpCommand, Str, "Grp12 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G12_ModemOffHookCommand, Str, "Grp12 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G12_ModemAutoAnswerOn, Str, "Grp12 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G12_ModemAutoAnswerOff, Str, "Grp12 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G12_RadioPreamble, Bool, "Grp12 Radio Preamble", "" ) \
DPOINT_DEFN( G12_RadioPreambleChar, UI8, "Grp12 Radio Preamble Char", "" ) \
DPOINT_DEFN( G12_RadioPreambleRepeat, UI32, "Grp12 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G12_RadioPreambleLastChar, UI8, "Grp12 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G12_LanSpecifyIP, YesNo, "Grp12 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G12_LanIPAddr, IpAddr, "Grp12 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G12_LanSubnetMask, IpAddr, "Grp12 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G12_LanDefaultGateway, IpAddr, "Grp12 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G12_WlanNetworkSSID, Str, "Grp12 Wlan Network SSID", "" ) \
DPOINT_DEFN( G12_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp12 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G12_WlanDataEncryption, CommsWlanDataEncryption, "Grp12 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G12_WlanNetworkKey, Str, "Grp12 Wlan Network Key", "" ) \
DPOINT_DEFN( G12_WlanKeyIndex, UI32, "Grp12 Wlan Key Index", "" ) \
DPOINT_DEFN( G12_PortLocalRemoteMode, LocalRemote, "Grp12 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G12_GPRSServiceProvider, Str, "Grp12 GPRS service provider name", "" ) \
DPOINT_DEFN( G12_GPRSUserName, Str, "Grp12 GPRS user name", "" ) \
DPOINT_DEFN( G12_GPRSPassWord, Str, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialDebugMode, YesNo, "Grp12 serial debug mode selection", "" ) \
DPOINT_DEFN( G12_SerialDebugFileName, Str, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_GPRSBaudRate, CommsSerialBaudRate, "Grp12 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G12_GPRSConnectionTimeout, UI32, "Grp12 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G12_DNP3InputPipe, Str, "Grp12 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G12_DNP3OutputPipe, Str, "Grp12 DNP3 output pipe", "" ) \
DPOINT_DEFN( G12_CMSInputPipe, Str, "Grp12 CMS Input Pipe", "" ) \
DPOINT_DEFN( G12_CMSOutputPipe, Str, "Grp12 CMS Output Pipe", "" ) \
DPOINT_DEFN( G12_HMIInputPipe, Str, "Grp12 HMI Input Pipe", "" ) \
DPOINT_DEFN( G12_HMIOutputPipe, Str, "Grp12 HMI Output Pipe", "" ) \
DPOINT_DEFN( G12_DNP3ChannelRequest, Str, "Grp12 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G12_DNP3ChannelOpen, Str, "Grp12 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G12_CMSChannelRequest, Str, "Grp12 CMS Channel Request", "" ) \
DPOINT_DEFN( G12_CMSChannelOpen, Str, "Grp12 CMS Channel Open", "" ) \
DPOINT_DEFN( G12_HMIChannelRequest, Str, "Grp12 HMI Channel Request", "" ) \
DPOINT_DEFN( G12_HMIChannelOpen, Str, "Grp12 HMI Channel Open", "" ) \
DPOINT_DEFN( G12_GPRSUseModemSetting, YesNo, "Grp12 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G12_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp12 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G12_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp12 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G12_T10BInputPipe, Str, "Grp12 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G12_T10BOutputPipe, Str, "Grp12 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G12_T10BChannelRequest, Str, "Grp12 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G12_T10BChannelOpen, Str, "Grp12 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G12_P2PInputPipe, Str, "Grp12 P2P input pipe ", "" ) \
DPOINT_DEFN( G12_P2POutputPipe, Str, "Grp12 P2P output pipe ", "" ) \
DPOINT_DEFN( G12_P2PChannelRequest, Str, "Grp12 P2P Channel Request", "" ) \
DPOINT_DEFN( G12_P2PChannelOpen, Str, "Grp12 P2P Channel Open", "" ) \
DPOINT_DEFN( G12_PGEInputPipe, Str, "Grp12 PGE Input Pipe", "" ) \
DPOINT_DEFN( G12_PGEOutputPipe, Str, "Grp12 PGE output pipe ", "" ) \
DPOINT_DEFN( G12_PGEChannelRequest, Str, "Grp12 PGE Channel Request", "" ) \
DPOINT_DEFN( G12_PGEChannelOpen, Str, "Grp12 PGE Channel Open", "" ) \
DPOINT_DEFN( G12_LanProvideIP, YesNo, "Grp12 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G12_LanSpecifyIPv6, YesNo, "Grp12 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G12_LanIPv6Addr, Ipv6Addr, "Grp12 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G12_LanPrefixLength, UI8, "Grp12 LAN Prefix Length", "" ) \
DPOINT_DEFN( G12_LanIPv6DefaultGateway, Ipv6Addr, "Grp12 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G12_LanIpVersion, IpVersion, "Grp12 LAN IP version", "" ) \
DPOINT_DEFN( G12_SerialDTRStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialDSRStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialCDStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialRTSStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialCTSStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_SerialRIStatus, CommsSerialPinStatus, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_ConnectionStatus, CommsConnectionStatus, "Grp12 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G12_BytesReceivedStatus, UI32, "Grp12 Bytes received on a port.", "" ) \
DPOINT_DEFN( G12_BytesTransmittedStatus, UI32, "Grp12 No description", "" ) \
DPOINT_DEFN( G12_PacketsReceivedStatus, UI32, "Grp12 Packets received on a port.", "" ) \
DPOINT_DEFN( G12_PacketsTransmittedStatus, UI32, "Grp12 Packets Transmitted", "" ) \
DPOINT_DEFN( G12_ErrorPacketsReceivedStatus, UI32, "Grp12 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G12_ErrorPacketsTransmittedStatus, UI32, "Grp12 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G12_IpAddrStatus, IpAddr, "Grp12 IPv4 Address", "" ) \
DPOINT_DEFN( G12_SubnetMaskStatus, IpAddr, "Grp12 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G12_DefaultGatewayStatus, IpAddr, "Grp12 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G12_PortDetectedType, CommsPortDetectedType, "Grp12 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G12_PortDetectedName, Str, "Grp12 USB Port detected device name", "" ) \
DPOINT_DEFN( G12_SerialTxTestStatus, OnOff, "Grp12 serial port TX testing status", "" ) \
DPOINT_DEFN( G12_PacketsReceivedStatusIPv6, UI32, "Grp12 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G12_PacketsTransmittedStatusIPv6, UI32, "Grp12 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G12_ErrorPacketsReceivedStatusIPv6, UI32, "Grp12 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G12_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp12 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G12_Ipv6AddrStatus, Ipv6Addr, "Grp12 IPv6 Address", "" ) \
DPOINT_DEFN( G12_LanPrefixLengthStatus, UI8, "Grp12 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G12_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp12 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G12_IpVersionStatus, IpVersion, "Grp12 LAN IP version", "" ) \
DPOINT_DEFN( G13_SerialDTRStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialDSRStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialCDStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialRTSStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialCTSStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialRIStatus, CommsSerialPinStatus, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_ConnectionStatus, CommsConnectionStatus, "Grp13 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G13_BytesReceivedStatus, UI32, "Grp13 Bytes received on a port.", "" ) \
DPOINT_DEFN( G13_BytesTransmittedStatus, UI32, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_PacketsReceivedStatus, UI32, "Grp13 Packets received on a port.", "" ) \
DPOINT_DEFN( G13_PacketsTransmittedStatus, UI32, "Grp13 Packets Transmitted", "" ) \
DPOINT_DEFN( G13_ErrorPacketsReceivedStatus, UI32, "Grp13 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G13_ErrorPacketsTransmittedStatus, UI32, "Grp13 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G13_IpAddrStatus, IpAddr, "Grp13 IPv4 Address", "" ) \
DPOINT_DEFN( G13_SubnetMaskStatus, IpAddr, "Grp13 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G13_DefaultGatewayStatus, IpAddr, "Grp13 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G13_PortDetectedType, CommsPortDetectedType, "Grp13 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G13_PortDetectedName, Str, "Grp13 USB Port detected device name", "" ) \
DPOINT_DEFN( G13_SerialTxTestStatus, OnOff, "Grp13 serial port TX testing status", "" ) \
DPOINT_DEFN( G13_PacketsReceivedStatusIPv6, UI32, "Grp13 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G13_PacketsTransmittedStatusIPv6, UI32, "Grp13 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G13_ErrorPacketsReceivedStatusIPv6, UI32, "Grp13 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G13_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp13 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G13_Ipv6AddrStatus, Ipv6Addr, "Grp13 IPv6 Address", "" ) \
DPOINT_DEFN( G13_LanPrefixLengthStatus, UI8, "Grp13 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G13_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp13 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G13_IpVersionStatus, IpVersion, "Grp13 LAN IP version", "" ) \
DPOINT_DEFN( G12_SerialPortTestCmd, Signal, "Grp12 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G12_SerialPortHangupCmd, Signal, "Grp12 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G12_BytesReceivedResetCmd, Signal, "Grp12 reset bytes Received", "" ) \
DPOINT_DEFN( G12_BytesTransmittedResetCmd, Signal, "Grp12 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G13_SerialPortTestCmd, Signal, "Grp13 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G13_SerialPortHangupCmd, Signal, "Grp13 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G13_BytesReceivedResetCmd, Signal, "Grp13 reset bytes Received", "" ) \
DPOINT_DEFN( G13_BytesTransmittedResetCmd, Signal, "Grp13 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G13_SerialBaudRate, CommsSerialBaudRate, "Grp13 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G13_SerialDuplexType, CommsSerialDuplex, "Grp13 Serial Duplex Type", "" ) \
DPOINT_DEFN( G13_SerialRTSMode, CommsSerialRTSMode, "Grp13 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G13_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp13 Serial RTS On Level", "" ) \
DPOINT_DEFN( G13_SerialDTRMode, CommsSerialDTRMode, "Grp13 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G13_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp13 Serial DTR On Level", "" ) \
DPOINT_DEFN( G13_SerialParity, CommsSerialParity, "Grp13 Serial Parity", "" ) \
DPOINT_DEFN( G13_SerialCTSMode, CommsSerialCTSMode, "Grp13 Clear To Send setting.", "" ) \
DPOINT_DEFN( G13_SerialDSRMode, CommsSerialDSRMode, "Grp13 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G13_SerialDTRLowTime, UI32, "Grp13 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G13_SerialTxDelay, UI32, "Grp13 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G13_SerialPreTxTime, UI32, "Grp13 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G13_SerialDCDFallTime, UI32, "Grp13 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G13_SerialCharTimeout, UI32, "Grp13 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G13_SerialPostTxTime, UI32, "Grp13 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G13_SerialInactivityTime, UI32, "Grp13 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G13_SerialCollisionAvoidance, Bool, "Grp13 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G13_SerialMinIdleTime, UI32, "Grp13 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G13_SerialMaxRandomDelay, UI32, "Grp13 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G13_ModemPoweredFromExtLoad, Bool, "Grp13 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G13_ModemUsedWithLeasedLine, Bool, "Grp13 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G13_ModemInitString, Str, "Grp13 Modem Init String", "" ) \
DPOINT_DEFN( G13_ModemDialOut, Bool, "Grp13 Modem Dial Out", "" ) \
DPOINT_DEFN( G13_ModemPreDialString, Str, "Grp13 Modem Pre Dial String", "" ) \
DPOINT_DEFN( G13_ModemDialNumber1, Str, "Grp13 Modem Dial Number1", "" ) \
DPOINT_DEFN( G13_ModemDialNumber2, Str, "Grp13 Modem Dial Number2", "" ) \
DPOINT_DEFN( G13_ModemDialNumber3, Str, "Grp13 Modem Dial Number3", "" ) \
DPOINT_DEFN( G13_ModemDialNumber4, Str, "Grp13 Modem Dial Number4", "" ) \
DPOINT_DEFN( G13_ModemDialNumber5, Str, "Grp13 Modem Dial Number5", "" ) \
DPOINT_DEFN( G13_ModemAutoDialInterval, UI32, "Grp13 Modem Auto Dial Interval time between failure to connect to one number in seconds. ", "" ) \
DPOINT_DEFN( G13_ModemConnectionTimeout, UI32, "Grp13 Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G13_ModemMaxCallDuration, UI32, "Grp13 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G13_ModemResponseTime, UI32, "Grp13 Modem Response Time", "" ) \
DPOINT_DEFN( G13_ModemHangUpCommand, Str, "Grp13 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G13_ModemOffHookCommand, Str, "Grp13 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G13_ModemAutoAnswerOn, Str, "Grp13 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G13_ModemAutoAnswerOff, Str, "Grp13 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G13_RadioPreamble, Bool, "Grp13 Radio Preamble", "" ) \
DPOINT_DEFN( G13_RadioPreambleChar, UI8, "Grp13 Radio Preamble Char", "" ) \
DPOINT_DEFN( G13_RadioPreambleRepeat, UI32, "Grp13 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G13_RadioPreambleLastChar, UI8, "Grp13 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G13_LanSpecifyIP, YesNo, "Grp13 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G13_LanIPAddr, IpAddr, "Grp13 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G13_LanSubnetMask, IpAddr, "Grp13 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G13_LanDefaultGateway, IpAddr, "Grp13 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G13_WlanNetworkSSID, Str, "Grp13 Wlan Network SSID", "" ) \
DPOINT_DEFN( G13_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp13 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G13_WlanDataEncryption, CommsWlanDataEncryption, "Grp13 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G13_WlanNetworkKey, Str, "Grp13 Wlan Network Key", "" ) \
DPOINT_DEFN( G13_WlanKeyIndex, UI32, "Grp13 Wlan Key Index", "" ) \
DPOINT_DEFN( G13_PortLocalRemoteMode, LocalRemote, "Grp13 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G13_GPRSServiceProvider, Str, "Grp13 GPRS service provider name", "" ) \
DPOINT_DEFN( G13_GPRSUserName, Str, "Grp13 GPRS user name", "" ) \
DPOINT_DEFN( G13_GPRSPassWord, Str, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_SerialDebugMode, YesNo, "Grp13 serial debug mode selection", "" ) \
DPOINT_DEFN( G13_SerialDebugFileName, Str, "Grp13 No description", "" ) \
DPOINT_DEFN( G13_GPRSBaudRate, CommsSerialBaudRate, "Grp13 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G13_GPRSConnectionTimeout, UI32, "Grp13 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G13_DNP3InputPipe, Str, "Grp13 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G13_DNP3OutputPipe, Str, "Grp13 DNP3 output pipe", "" ) \
DPOINT_DEFN( G13_CMSInputPipe, Str, "Grp13 CMS Input Pipe", "" ) \
DPOINT_DEFN( G13_CMSOutputPipe, Str, "Grp13 CMS Output Pipe", "" ) \
DPOINT_DEFN( G13_HMIInputPipe, Str, "Grp13 HMI Input Pipe", "" ) \
DPOINT_DEFN( G13_HMIOutputPipe, Str, "Grp13 HMI Output Pipe", "" ) \
DPOINT_DEFN( G13_DNP3ChannelRequest, Str, "Grp13 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G13_DNP3ChannelOpen, Str, "Grp13 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G13_CMSChannelRequest, Str, "Grp13 CMS Channel Request", "" ) \
DPOINT_DEFN( G13_CMSChannelOpen, Str, "Grp13 CMS Channel Open", "" ) \
DPOINT_DEFN( G13_HMIChannelRequest, Str, "Grp13 HMI Channel Request", "" ) \
DPOINT_DEFN( G13_HMIChannelOpen, Str, "Grp13 HMI Channel Open", "" ) \
DPOINT_DEFN( G13_GPRSUseModemSetting, YesNo, "Grp13 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G13_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp13 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G13_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp13 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G13_T10BInputPipe, Str, "Grp13 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G13_T10BOutputPipe, Str, "Grp13 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G13_T10BChannelRequest, Str, "Grp13 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G13_T10BChannelOpen, Str, "Grp13 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G13_P2PInputPipe, Str, "Grp13 P2P input pipe ", "" ) \
DPOINT_DEFN( G13_P2POutputPipe, Str, "Grp13 P2P output pipe ", "" ) \
DPOINT_DEFN( G13_P2PChannelRequest, Str, "Grp13 P2P Channel Request", "" ) \
DPOINT_DEFN( G13_P2PChannelOpen, Str, "Grp13 P2P Channel Open", "" ) \
DPOINT_DEFN( G13_PGEInputPipe, Str, "Grp13 PGE Input Pipe", "" ) \
DPOINT_DEFN( G13_PGEOutputPipe, Str, "Grp13 PGE output pipe ", "" ) \
DPOINT_DEFN( G13_PGEChannelRequest, Str, "Grp13 PGE Channel Request", "" ) \
DPOINT_DEFN( G13_PGEChannelOpen, Str, "Grp13 PGE Channel Open", "" ) \
DPOINT_DEFN( G13_LanProvideIP, YesNo, "Grp13 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G13_LanSpecifyIPv6, YesNo, "Grp13 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G13_LanIPv6Addr, Ipv6Addr, "Grp13 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G13_LanPrefixLength, UI8, "Grp13 LAN Prefix Length", "" ) \
DPOINT_DEFN( G13_LanIPv6DefaultGateway, Ipv6Addr, "Grp13 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G13_LanIpVersion, IpVersion, "Grp13 LAN IP version", "" ) \
DPOINT_DEFN( SigMalfRel03, Signal, "Part code is REL-03, but REL-15 comms board is connected.", "" ) \
DPOINT_DEFN( SigMalfRel15, Signal, "Part code is REL-15 but comms board is not connected, or 4G modem is connected.", "" ) \
DPOINT_DEFN( SigMalfRel15_4G, Signal, "Part code is REL-15-4G but comms board is not connected or 4G modem is not connected.", "" ) \
DPOINT_DEFN( SyncEnabled, EnDis, "Enable or disable synchronisation.", "" ) \
DPOINT_DEFN( SigWarningSyncSingleTriple, Signal, "Synchronisation has been activated on a single-triple system that is not in 3-phase trip / 3-phase lockout mode.", "" ) \
DPOINT_DEFN( SyncPhaseToSelection, PhaseToSelection, "Selects phase-to-ground or phase-to-phase mode for synchronisation.", "" ) \
DPOINT_DEFN( SyncBusAndLine, BusAndLine, "Selects which side is the \"Bus\" and which side is the \"Line\" in synchronisation.", "" ) \
DPOINT_DEFN( SyncLiveDeadAR, SyncLiveDeadMode, "Auto-reclose mode when energising a dead section of the network during synchronisation.", "" ) \
DPOINT_DEFN( SyncLiveDeadManual, SyncLiveDeadMode, "Manual close mode when energising a dead section of the network during synchronisation.", "" ) \
DPOINT_DEFN( SyncDLDBAR, EnDis, "Auto-reclose mode in case of reconnection of two dead sections during synchronisation.", "" ) \
DPOINT_DEFN( SyncDLDBManual, EnDis, "Manual close mode in case of reconnection of two dead sections during synchronisation.", "" ) \
DPOINT_DEFN( SyncLiveBusMultiplier, UI16, "Live bus minimum voltage limit for synchronisation.", "" ) \
DPOINT_DEFN( SyncLiveLineMultiplier, UI16, "Live line minimum voltage limit for synchronisation.", "" ) \
DPOINT_DEFN( SyncMaxBusMultiplier, UI16, "Bus maximum allowed voltage during synchronisation.", "" ) \
DPOINT_DEFN( SyncMaxLineMultiplier, UI16, "Line maximum allowed voltage during synchronisation.", "" ) \
DPOINT_DEFN( SyncCheckEnabled, EnDis, "Enable or disable synchronism check.", "" ) \
DPOINT_DEFN( SyncVoltageDiffMultiplier, UI16, "Multiplier for setting the maximum allowable voltage difference for synchronisation.", "" ) \
DPOINT_DEFN( SyncMaxSyncSlipFreq, UI16, "Maximum slip frequency to detect synchronous conditions.", "" ) \
DPOINT_DEFN( SyncMaxPhaseAngleDiff, UI16, "Maximum allowable phase angle difference for synchronisation.", "" ) \
DPOINT_DEFN( SyncManualPreSyncTime, UI16, "Time to check the synchronism prior to allowing a manual close.", "" ) \
DPOINT_DEFN( SyncMaxFreqDeviation, UI16, "Maximum allowable frequency deviation from the fundamental frequency for synchronisation.", "" ) \
DPOINT_DEFN( SyncMaxAutoSlipFreq, UI16, "Maximum allowable slip frequency for auto-synchronisation to operate.", "" ) \
DPOINT_DEFN( SyncMaxROCSlipFreq, UI16, "Maximum rate of change of slip frequency for auto-synchronisation.", "" ) \
DPOINT_DEFN( SyncAutoWaitingTime, UI32, "Waiting time for auto-synchroniser.", "" ) \
DPOINT_DEFN( SyncAntiMotoringEnabled, EnDis, "Enable or disable anti-motoring protection for synchronisation.", "" ) \
DPOINT_DEFN( SynchroniserStatus, SynchroniserStatus, "Status of the auto-synchroniser.", "" ) \
DPOINT_DEFN( SyncDeltaVStatus, OkFail, "Voltage status for auto-synchronisation.", "" ) \
DPOINT_DEFN( SyncSlipFreqStatus, OkFail, "Slip frequency status for auto-synchronisation.", "" ) \
DPOINT_DEFN( SyncAdvanceAngleStatus, OkFail, "Status of the advance angle for auto-synchronisation.", "" ) \
DPOINT_DEFN( SyncDeltaPhaseStatus, OkFail, "Status of the phase angle difference for auto-synchronisation.", "" ) \
DPOINT_DEFN( SigAutoSynchroniserInitiate, Signal, "Initiate auto-synchroniser.", "" ) \
DPOINT_DEFN( SigAutoSynchroniserInitiated, Signal, "Auto-synchronisation has been initiated.", "" ) \
DPOINT_DEFN( SigAutoSynchroniserRelease, Signal, "Auto-synchronisation has released to close the switch.", "" ) \
DPOINT_DEFN( SigSyncHealthCheck, Signal, "All values are within the configured range for auto-synchronisation.", "" ) \
DPOINT_DEFN( SigSyncTimedHealthCheck, Signal, "All values are within the configured ranges for the duration of pre-sync time for auto-synchronisation.", "" ) \
DPOINT_DEFN( SigSyncPhaseSeqMatch, Signal, "The phase sequence between Line and Bus matches for synchronisation.", "" ) \
DPOINT_DEFN( SyncAdvanceAngle, I32, "Calculated advance angle for synchronisation.", "" ) \
DPOINT_DEFN( MobileNetwork_DebugPortName, Str, "MobileNetwork debug port detected name", "" ) \
DPOINT_DEFN( SyncSlipFreq, I32, "Measured slip frequency for synchronisation.", "" ) \
DPOINT_DEFN( SyncMaxDeltaV, I32, "Maximum measured voltage difference between line and bus phases.", "" ) \
DPOINT_DEFN( SyncMaxDeltaPhase, I32, "Maximum measured phase angle difference between line and bus phases for synchronisation.", "" ) \
DPOINT_DEFN( CommsChEvGrp12, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 12 settings.", "" ) \
DPOINT_DEFN( CommsChEvGrp13, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 13 settings.", "" ) \
DPOINT_DEFN( SigPickupNps, Signal, "Pickup output of any NPS element activated", "" ) \
DPOINT_DEFN( FaultProfileDataAddrB, UI32, "This value provides the address of the Ph B FaultProfileData structure maintained by the protection process", "" ) \
DPOINT_DEFN( FaultProfileDataAddrC, UI32, "This value provides the address of the Ph C FaultProfileData structure maintained by the protection process", "" ) \
DPOINT_DEFN( SyncStateFlags, UI32, "Internal state flags that communicate the current state of the Synchronism engine from protection to other modules.", "" ) \
DPOINT_DEFN( DEPRECATED_PowerFlowDirection, Signal, "This datapoint is deprecated.  Use CfgPowerFlowDirection (10600) instead.", "" ) \
DPOINT_DEFN( SigCtrlRestrictTripMode, Signal, "When “Restrict Trip Mode” is enabled:\r\n1.) The local Trip commands shall be blocked when the device is in remote mode.\r\n2.) Remote trip commands shall be blocked when the device is in local mode.", "" ) \
DPOINT_DEFN( s61850GseSubscr11, s61850GseSubscDefn, "IEC 61850: Goose Subscription 11 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr12, s61850GseSubscDefn, "IEC 61850: Goose Subscription 12 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr13, s61850GseSubscDefn, "IEC 61850: Goose Subscription 13 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr14, s61850GseSubscDefn, "IEC 61850: Goose Subscription 14 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr15, s61850GseSubscDefn, "IEC 61850: Goose Subscription 15 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr16, s61850GseSubscDefn, "IEC 61850: Goose Subscription 16 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr17, s61850GseSubscDefn, "IEC 61850: Goose Subscription 17 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr18, s61850GseSubscDefn, "IEC 61850: Goose Subscription 18 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr19, s61850GseSubscDefn, "IEC 61850: Goose Subscription 19 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850GseSubscr20, s61850GseSubscDefn, "IEC 61850: Goose Subscription 20 - Define Goose Control Block and DataSet", "" ) \
DPOINT_DEFN( s61850CIDFileCheck, UI32, "IEC 61850: CID File Change Check value (CRC)", "" ) \
DPOINT_DEFN( SyncFundFreq, UI32, "Fundamental frequency for Synchronism to determine the deviation from \"normal\".", "" ) \
DPOINT_DEFN( MobileNetworkPortName, Str, "Port name for mobile network (ttyUSBx).", "" ) \
DPOINT_DEFN( WlanAPSubnetMask, IpAddr, "subnet mask for wlan AP mode.", "" ) \
DPOINT_DEFN( WlanAPNetworkAuthentication, CommsWlanNetworkAuthentication, "Network authentication mode for wlan AP mode. ", "" ) \
DPOINT_DEFN( WlanAPDataEncryption, CommsWlanDataEncryption, "Data encryption mode for wlan AP mode.", "" ) \
DPOINT_DEFN( WlanAPNetworkKey, Str, "password for wlan AP mode. ", "" ) \
DPOINT_DEFN( ProtConfigCount, UI16, "Count number of times the protection configuration has been changed by the protCfg process.", "" ) \
DPOINT_DEFN( OpenReqA, CoReq, "Open request for phase A in single-triple configurations, or all phases for 3 phase recloser.", "" ) \
DPOINT_DEFN( OpenReqB, CoReq, "Open request for phase B in single-triple configurations", "" ) \
DPOINT_DEFN( OpenReqC, CoReq, "Open request for phase C in single-triple configurations", "" ) \
DPOINT_DEFN( CoLogOpen, CoReq, "Contains data to log open operation", "" ) \
DPOINT_DEFN( MobileNetworkSignalStrength, I8, "Mobile network signal strength reading", "" ) \
DPOINT_DEFN( WlanFWVersion, Str, "Wlan loaded FW version", "" ) \
DPOINT_DEFN( CmsSecurity, CmsSecurityLevel, "Defines the level of security to apply to CMS communications: Disabled, Authenticated, or Authenticated & Encrypted.", "" ) \
DPOINT_DEFN( SigAutoSynchroniserCancel, Signal, "Cancel auto-synchroniser.", "" ) \
DPOINT_DEFN( IEC61499CtrlStartStop, UI8, "Send WARM or STOP event", "" ) \
DPOINT_DEFN( SyncAutoAction, UI32, "Internal datapoint that is used to communicate between prot_config and prot whenever requests arrive to initiate or cancel auto-sync.  Low bits are the event source, high bits are the action to take (initiate or cancel).", "" ) \
DPOINT_DEFN( FreqabcROC, I32, "Rate of change of F ABC in Hz/sec", "" ) \
DPOINT_DEFN( WT1, UI16, "Windowing 1 time for averaging In for high-precision SEF calculations.  Number of cycles for the window.", "" ) \
DPOINT_DEFN( WT2, UI16, "Windowing 2 time for averaging In for high-precision SEF calculations.  Number of inner windows as defined by WT1.", "" ) \
DPOINT_DEFN( A_WT1, UI32, "In value averaged over windowing time 1 (WT1) for high-precision SEF calculations.", "" ) \
DPOINT_DEFN( A_WT2, UI32, "In value averaged over windowing time 2 (WT2) for high-precision SEF calculations.", "" ) \
DPOINT_DEFN( AutoRecloseStatus, AutoRecloseStatus, "Auto Reclose Status. At time of writing (11/1/2016) this is for use by S61850. Refer to spec NOJA-191-0015.", "" ) \
DPOINT_DEFN( CloseReqAR, Signal, "Close request by AR. Originally created for use by IEC 61850 protocol. Refer to spec NOJA-191-0015.", "" ) \
DPOINT_DEFN( SigCtrlOV3On, Signal, "OV3 element is switched on", "" ) \
DPOINT_DEFN( s61850EnableCommslog, EnDis, "s61850 enable commslog", "" ) \
DPOINT_DEFN( PanelButtLogicVAR1, EnDis, "HMI VAR1 fast key control", "" ) \
DPOINT_DEFN( PanelButtLogicVAR2, EnDis, "HMI VAR2 fast key control", "" ) \
DPOINT_DEFN( SigHighPrecisionSEF, Signal, "When set, this signal indicates that the OSM type has CT's capable of high-precision SEF reporting.", "" ) \
DPOINT_DEFN( MeasVoltU0RST, UI32, "Measurement Voltage: U0 RST", "" ) \
DPOINT_DEFN( MeasVoltUnRST, UI32, "Measurement Voltage: Un RST", "" ) \
DPOINT_DEFN( MeasVoltU1RST, UI32, "Measurement Voltage: U1 RST", "" ) \
DPOINT_DEFN( MeasVoltU2RST, UI32, "Measurement Voltage: U2 RST", "" ) \
DPOINT_DEFN( G1_Yn_TDtMin, UI32, "Grp1 Admittance protection (Yn) DT min tripping time in ms", "" ) \
DPOINT_DEFN( G1_Yn_OperationalMode, YnOperationalMode, "Grp1 Admittance protection (Yn) operational mode", "" ) \
DPOINT_DEFN( G1_Yn_DirectionalMode, YnDirectionalMode, "Grp1 Admittance protection (Yn) directional mode", "" ) \
DPOINT_DEFN( G1_Yn_Um, UI32, "Grp1 Admittance protection (Yn) voltage multiplier for Un", "" ) \
DPOINT_DEFN( G1_Yn_Ioper, UI32, "Grp1 Admittance protection (Yn) minimum In for operation", "" ) \
DPOINT_DEFN( G1_Yn_TDtRes, UI32, "Grp1 Admittance protection (Yn) fault reset time", "" ) \
DPOINT_DEFN( G1_Yn_FwdSusceptance, I32, "Grp1 Admittance protection (Yn) forward susceptance pickup level", "" ) \
DPOINT_DEFN( G1_Yn_RevSusceptance, I32, "Grp1 Admittance protection (Yn) reverse susceptance pickup level", "" ) \
DPOINT_DEFN( G1_Yn_FwdConductance, I32, "Grp1 Admittance protection (Yn) forward conductance pickup level", "" ) \
DPOINT_DEFN( G1_Yn_RevConductance, I32, "Grp1 Admittance protection (Yn) reverse conductance pickup level", "" ) \
DPOINT_DEFN( G1_Yn_Tr1, TripMode, "Grp1 Admittance protection (Yn) mode for trip 1", "" ) \
DPOINT_DEFN( G1_Yn_Tr2, TripMode, "Grp1 Admittance protection (Yn) mode for trip 2", "" ) \
DPOINT_DEFN( G1_Yn_Tr3, TripMode, "Grp1 Admittance protection (Yn) mode for trip 3", "" ) \
DPOINT_DEFN( G1_Yn_Tr4, TripMode, "Grp1 Admittance protection (Yn) mode for trip 4", "" ) \
DPOINT_DEFN( G1_OC1F_TccName, Str, "Grp1 Name of OC1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_OC2F_TccName, Str, "Grp1 Name of OC2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_OC1R_TccName, Str, "Grp1 Name of OC1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_OC2R_TccName, Str, "Grp1 Name of OC2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPS1F_TccName, Str, "Grp1 Name of NPS1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPS2F_TccName, Str, "Grp1 Name of NPS2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPS1R_TccName, Str, "Grp1 Name of NPS1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPS2R_TccName, Str, "Grp1 Name of NPS2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EF1F_TccName, Str, "Grp1 Name of EF1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EF2F_TccName, Str, "Grp1 Name of EF2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EF1R_TccName, Str, "Grp1 Name of EF1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EF2R_TccName, Str, "Grp1 Name of EF2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_OCLL1_TccName, Str, "Grp1 Name of OCLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_OCLL2_TccName, Str, "Grp1 Name of OCLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPSLL1_TccName, Str, "Grp1 Name of NPSLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_NPSLL2_TccName, Str, "Grp1 Name of NPSLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EFLL1_TccName, Str, "Grp1 Name of EFLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_EFLL2_TccName, Str, "Grp1 Name of EFLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G1_DE_EF_AdvPolarDet, EnDis, "Grp1 Enable/disable advanced polar detection for EF neutral direction.", "" ) \
DPOINT_DEFN( G1_DE_EF_MinNVD, UI32, "Grp1 Minimum voltage level for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_EF_MaxFwdAngle, I32, "Grp1 Maximum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_EF_MinFwdAngle, I32, "Grp1 Minimum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_EF_MaxRevAngle, I32, "Grp1 Maximum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_EF_MinRevAngle, I32, "Grp1 Minimum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_AdvPolarDet, EnDis, "Grp1 Enable/disable advanced polar detection for SEF neutral direction.", "" ) \
DPOINT_DEFN( G1_DE_SEF_MinNVD, UI32, "Grp1 Minimum voltage level for SEF neutral advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_MaxFwdAngle, I32, "Grp1 Maximum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_MinFwdAngle, I32, "Grp1 Minimum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_MaxRevAngle, I32, "Grp1 Maximum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_MinRevAngle, I32, "Grp1 Minimum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_DE_SEF_Polarisation, NeutralPolarisation, "Grp1 Polarisation type for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G1_Hrm_IndA_NameExt, HrmIndividualExt, "Grp1 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G1_Hrm_IndB_NameExt, HrmIndividualExt, "Grp1 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G1_Hrm_IndC_NameExt, HrmIndividualExt, "Grp1 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G1_Hrm_IndD_NameExt, HrmIndividualExt, "Grp1 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G1_Hrm_IndE_NameExt, HrmIndividualExt, "Grp1 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G1_ROCOF_Trm, TripModeDLA, "Grp1 ROCOF trip mode", "" ) \
DPOINT_DEFN( G1_ROCOF_Pickup, UI32, "Grp1 ROCOF pickup value in Hz/s", "" ) \
DPOINT_DEFN( G1_ROCOF_TDtMin, UI32, "Grp1 ROCOF tripping time", "" ) \
DPOINT_DEFN( G1_ROCOF_TDtRes, UI32, "Grp1 ROCOF DT reset time", "" ) \
DPOINT_DEFN( G1_VVS_Trm, TripModeDLA, "Grp1 VVS trip mode", "" ) \
DPOINT_DEFN( G1_VVS_Pickup, UI32, "Grp1 VVS pickup angle", "" ) \
DPOINT_DEFN( G1_VVS_TDtMin, UI32, "Grp1 VVS DT tripping time", "" ) \
DPOINT_DEFN( G1_VVS_TDtRes, UI32, "Grp1 VVS DT reset time", "" ) \
DPOINT_DEFN( G1_PDOP_Trm, TripModeDLA, "Grp1 PDOP trip mode", "" ) \
DPOINT_DEFN( G1_PDOP_Pickup, UI32, "Grp1 Pickup value for directional overpower protection (kVA).", "" ) \
DPOINT_DEFN( G1_PDOP_Angle, I32, "Grp1 Pickup angle for directional overpower protection.", "" ) \
DPOINT_DEFN( G1_PDOP_TDtMin, UI32, "Grp1 PDOP tripping time", "" ) \
DPOINT_DEFN( G1_PDOP_TDtRes, UI32, "Grp1 PDOP reset time", "" ) \
DPOINT_DEFN( G1_PDUP_Trm, TripModeDLA, "Grp1 PDUP trip mode", "" ) \
DPOINT_DEFN( G1_PDUP_Pickup, UI32, "Grp1 PDUP pickup value in kVA", "" ) \
DPOINT_DEFN( G1_PDUP_Angle, I32, "Grp1 PDUP pickup angle", "" ) \
DPOINT_DEFN( G1_PDUP_TDtMin, UI32, "Grp1 PDUP tripping time", "" ) \
DPOINT_DEFN( G1_PDUP_TDtRes, UI32, "Grp1 PDUP reset time", "" ) \
DPOINT_DEFN( G1_PDUP_TDtDis, UI32, "Grp1 PDUP disable time", "" ) \
DPOINT_DEFN( G2_Yn_TDtMin, UI32, "Grp2 Admittance protection (Yn) DT min tripping time in ms", "" ) \
DPOINT_DEFN( G2_Yn_OperationalMode, YnOperationalMode, "Grp2 Admittance protection (Yn) operational mode", "" ) \
DPOINT_DEFN( G2_Yn_DirectionalMode, YnDirectionalMode, "Grp2 Admittance protection (Yn) directional mode", "" ) \
DPOINT_DEFN( G2_Yn_Um, UI32, "Grp2 Admittance protection (Yn) voltage multiplier for Un", "" ) \
DPOINT_DEFN( G2_Yn_Ioper, UI32, "Grp2 Admittance protection (Yn) minimum In for operation", "" ) \
DPOINT_DEFN( G2_Yn_TDtRes, UI32, "Grp2 Admittance protection (Yn) fault reset time", "" ) \
DPOINT_DEFN( G2_Yn_FwdSusceptance, I32, "Grp2 Admittance protection (Yn) forward susceptance pickup level", "" ) \
DPOINT_DEFN( G2_Yn_RevSusceptance, I32, "Grp2 Admittance protection (Yn) reverse susceptance pickup level", "" ) \
DPOINT_DEFN( G2_Yn_FwdConductance, I32, "Grp2 Admittance protection (Yn) forward conductance pickup level", "" ) \
DPOINT_DEFN( G2_Yn_RevConductance, I32, "Grp2 Admittance protection (Yn) reverse conductance pickup level", "" ) \
DPOINT_DEFN( G2_Yn_Tr1, TripMode, "Grp2 Admittance protection (Yn) mode for trip 1", "" ) \
DPOINT_DEFN( G2_Yn_Tr2, TripMode, "Grp2 Admittance protection (Yn) mode for trip 2", "" ) \
DPOINT_DEFN( G2_Yn_Tr3, TripMode, "Grp2 Admittance protection (Yn) mode for trip 3", "" ) \
DPOINT_DEFN( G2_Yn_Tr4, TripMode, "Grp2 Admittance protection (Yn) mode for trip 4", "" ) \
DPOINT_DEFN( G2_OC1F_TccName, Str, "Grp2 Name of OC1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_OC2F_TccName, Str, "Grp2 Name of OC2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_OC1R_TccName, Str, "Grp2 Name of OC1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_OC2R_TccName, Str, "Grp2 Name of OC2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPS1F_TccName, Str, "Grp2 Name of NPS1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPS2F_TccName, Str, "Grp2 Name of NPS2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPS1R_TccName, Str, "Grp2 Name of NPS1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPS2R_TccName, Str, "Grp2 Name of NPS2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EF1F_TccName, Str, "Grp2 Name of EF1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EF2F_TccName, Str, "Grp2 Name of EF2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EF1R_TccName, Str, "Grp2 Name of EF1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EF2R_TccName, Str, "Grp2 Name of EF2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_OCLL1_TccName, Str, "Grp2 Name of OCLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_OCLL2_TccName, Str, "Grp2 Name of OCLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPSLL1_TccName, Str, "Grp2 Name of NPSLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_NPSLL2_TccName, Str, "Grp2 Name of NPSLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EFLL1_TccName, Str, "Grp2 Name of EFLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_EFLL2_TccName, Str, "Grp2 Name of EFLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G2_DE_EF_AdvPolarDet, EnDis, "Grp2 Enable/disable advanced polar detection for EF neutral direction.", "" ) \
DPOINT_DEFN( G2_DE_EF_MinNVD, UI32, "Grp2 Minimum voltage level for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_EF_MaxFwdAngle, I32, "Grp2 Maximum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_EF_MinFwdAngle, I32, "Grp2 Minimum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_EF_MaxRevAngle, I32, "Grp2 Maximum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_EF_MinRevAngle, I32, "Grp2 Minimum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_AdvPolarDet, EnDis, "Grp2 Enable/disable advanced polar detection for SEF neutral direction.", "" ) \
DPOINT_DEFN( G2_DE_SEF_MinNVD, UI32, "Grp2 Minimum voltage level for SEF neutral advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_MaxFwdAngle, I32, "Grp2 Maximum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_MinFwdAngle, I32, "Grp2 Minimum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_MaxRevAngle, I32, "Grp2 Maximum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_MinRevAngle, I32, "Grp2 Minimum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_DE_SEF_Polarisation, NeutralPolarisation, "Grp2 Polarisation type for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G2_Hrm_IndA_NameExt, HrmIndividualExt, "Grp2 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G2_Hrm_IndB_NameExt, HrmIndividualExt, "Grp2 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G2_Hrm_IndC_NameExt, HrmIndividualExt, "Grp2 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G2_Hrm_IndD_NameExt, HrmIndividualExt, "Grp2 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G2_Hrm_IndE_NameExt, HrmIndividualExt, "Grp2 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G2_ROCOF_Trm, TripModeDLA, "Grp2 ROCOF trip mode", "" ) \
DPOINT_DEFN( G2_ROCOF_Pickup, UI32, "Grp2 ROCOF pickup value in Hz/s", "" ) \
DPOINT_DEFN( G2_ROCOF_TDtMin, UI32, "Grp2 ROCOF tripping time", "" ) \
DPOINT_DEFN( G2_ROCOF_TDtRes, UI32, "Grp2 ROCOF DT reset time", "" ) \
DPOINT_DEFN( G2_VVS_Trm, TripModeDLA, "Grp2 VVS trip mode", "" ) \
DPOINT_DEFN( G2_VVS_Pickup, UI32, "Grp2 VVS pickup angle", "" ) \
DPOINT_DEFN( G2_VVS_TDtMin, UI32, "Grp2 VVS DT tripping time", "" ) \
DPOINT_DEFN( G2_VVS_TDtRes, UI32, "Grp2 VVS DT reset time", "" ) \
DPOINT_DEFN( G2_PDOP_Trm, TripModeDLA, "Grp2 PDOP trip mode", "" ) \
DPOINT_DEFN( G2_PDOP_Pickup, UI32, "Grp2 Pickup value for directional overpower protection (kVA).", "" ) \
DPOINT_DEFN( G2_PDOP_Angle, I32, "Grp2 Pickup angle for directional overpower protection.", "" ) \
DPOINT_DEFN( G2_PDOP_TDtMin, UI32, "Grp2 PDOP tripping time", "" ) \
DPOINT_DEFN( G2_PDOP_TDtRes, UI32, "Grp2 PDOP reset time", "" ) \
DPOINT_DEFN( G2_PDUP_Trm, TripModeDLA, "Grp2 PDUP trip mode", "" ) \
DPOINT_DEFN( G2_PDUP_Pickup, UI32, "Grp2 PDUP pickup value in kVA", "" ) \
DPOINT_DEFN( G2_PDUP_Angle, I32, "Grp2 PDUP pickup angle", "" ) \
DPOINT_DEFN( G2_PDUP_TDtMin, UI32, "Grp2 PDUP tripping time", "" ) \
DPOINT_DEFN( G2_PDUP_TDtRes, UI32, "Grp2 PDUP reset time", "" ) \
DPOINT_DEFN( G2_PDUP_TDtDis, UI32, "Grp2 PDUP disable time", "" ) \
DPOINT_DEFN( G3_Yn_TDtMin, UI32, "Grp3 Admittance protection (Yn) DT min tripping time in ms", "" ) \
DPOINT_DEFN( G3_Yn_OperationalMode, YnOperationalMode, "Grp3 Admittance protection (Yn) operational mode", "" ) \
DPOINT_DEFN( G3_Yn_DirectionalMode, YnDirectionalMode, "Grp3 Admittance protection (Yn) directional mode", "" ) \
DPOINT_DEFN( G3_Yn_Um, UI32, "Grp3 Admittance protection (Yn) voltage multiplier for Un", "" ) \
DPOINT_DEFN( G3_Yn_Ioper, UI32, "Grp3 Admittance protection (Yn) minimum In for operation", "" ) \
DPOINT_DEFN( G3_Yn_TDtRes, UI32, "Grp3 Admittance protection (Yn) fault reset time", "" ) \
DPOINT_DEFN( G3_Yn_FwdSusceptance, I32, "Grp3 Admittance protection (Yn) forward susceptance pickup level", "" ) \
DPOINT_DEFN( G3_Yn_RevSusceptance, I32, "Grp3 Admittance protection (Yn) reverse susceptance pickup level", "" ) \
DPOINT_DEFN( G3_Yn_FwdConductance, I32, "Grp3 Admittance protection (Yn) forward conductance pickup level", "" ) \
DPOINT_DEFN( G3_Yn_RevConductance, I32, "Grp3 Admittance protection (Yn) reverse conductance pickup level", "" ) \
DPOINT_DEFN( G3_Yn_Tr1, TripMode, "Grp3 Admittance protection (Yn) mode for trip 1", "" ) \
DPOINT_DEFN( G3_Yn_Tr2, TripMode, "Grp3 Admittance protection (Yn) mode for trip 2", "" ) \
DPOINT_DEFN( G3_Yn_Tr3, TripMode, "Grp3 Admittance protection (Yn) mode for trip 3", "" ) \
DPOINT_DEFN( G3_Yn_Tr4, TripMode, "Grp3 Admittance protection (Yn) mode for trip 4", "" ) \
DPOINT_DEFN( G3_OC1F_TccName, Str, "Grp3 Name of OC1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_OC2F_TccName, Str, "Grp3 Name of OC2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_OC1R_TccName, Str, "Grp3 Name of OC1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_OC2R_TccName, Str, "Grp3 Name of OC2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPS1F_TccName, Str, "Grp3 Name of NPS1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPS2F_TccName, Str, "Grp3 Name of NPS2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPS1R_TccName, Str, "Grp3 Name of NPS1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPS2R_TccName, Str, "Grp3 Name of NPS2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EF1F_TccName, Str, "Grp3 Name of EF1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EF2F_TccName, Str, "Grp3 Name of EF2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EF1R_TccName, Str, "Grp3 Name of EF1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EF2R_TccName, Str, "Grp3 Name of EF2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_OCLL1_TccName, Str, "Grp3 Name of OCLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_OCLL2_TccName, Str, "Grp3 Name of OCLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPSLL1_TccName, Str, "Grp3 Name of NPSLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_NPSLL2_TccName, Str, "Grp3 Name of NPSLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EFLL1_TccName, Str, "Grp3 Name of EFLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_EFLL2_TccName, Str, "Grp3 Name of EFLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G3_DE_EF_AdvPolarDet, EnDis, "Grp3 Enable/disable advanced polar detection for EF neutral direction.", "" ) \
DPOINT_DEFN( G3_DE_EF_MinNVD, UI32, "Grp3 Minimum voltage level for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_EF_MaxFwdAngle, I32, "Grp3 Maximum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_EF_MinFwdAngle, I32, "Grp3 Minimum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_EF_MaxRevAngle, I32, "Grp3 Maximum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_EF_MinRevAngle, I32, "Grp3 Minimum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_AdvPolarDet, EnDis, "Grp3 Enable/disable advanced polar detection for SEF neutral direction.", "" ) \
DPOINT_DEFN( G3_DE_SEF_MinNVD, UI32, "Grp3 Minimum voltage level for SEF neutral advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_MaxFwdAngle, I32, "Grp3 Maximum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_MinFwdAngle, I32, "Grp3 Minimum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_MaxRevAngle, I32, "Grp3 Maximum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_MinRevAngle, I32, "Grp3 Minimum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_DE_SEF_Polarisation, NeutralPolarisation, "Grp3 Polarisation type for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G3_Hrm_IndA_NameExt, HrmIndividualExt, "Grp3 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G3_Hrm_IndB_NameExt, HrmIndividualExt, "Grp3 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G3_Hrm_IndC_NameExt, HrmIndividualExt, "Grp3 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G3_Hrm_IndD_NameExt, HrmIndividualExt, "Grp3 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G3_Hrm_IndE_NameExt, HrmIndividualExt, "Grp3 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G3_ROCOF_Trm, TripModeDLA, "Grp3 ROCOF trip mode", "" ) \
DPOINT_DEFN( G3_ROCOF_Pickup, UI32, "Grp3 ROCOF pickup value in Hz/s", "" ) \
DPOINT_DEFN( G3_ROCOF_TDtMin, UI32, "Grp3 ROCOF tripping time", "" ) \
DPOINT_DEFN( G3_ROCOF_TDtRes, UI32, "Grp3 ROCOF DT reset time", "" ) \
DPOINT_DEFN( G3_VVS_Trm, TripModeDLA, "Grp3 VVS trip mode", "" ) \
DPOINT_DEFN( G3_VVS_Pickup, UI32, "Grp3 VVS pickup angle", "" ) \
DPOINT_DEFN( G3_VVS_TDtMin, UI32, "Grp3 VVS DT tripping time", "" ) \
DPOINT_DEFN( G3_VVS_TDtRes, UI32, "Grp3 VVS DT reset time", "" ) \
DPOINT_DEFN( G3_PDOP_Trm, TripModeDLA, "Grp3 PDOP trip mode", "" ) \
DPOINT_DEFN( G3_PDOP_Pickup, UI32, "Grp3 Pickup value for directional overpower protection (kVA).", "" ) \
DPOINT_DEFN( G3_PDOP_Angle, I32, "Grp3 Pickup angle for directional overpower protection.", "" ) \
DPOINT_DEFN( G3_PDOP_TDtMin, UI32, "Grp3 PDOP tripping time", "" ) \
DPOINT_DEFN( G3_PDOP_TDtRes, UI32, "Grp3 PDOP reset time", "" ) \
DPOINT_DEFN( G3_PDUP_Trm, TripModeDLA, "Grp3 PDUP trip mode", "" ) \
DPOINT_DEFN( G3_PDUP_Pickup, UI32, "Grp3 PDUP pickup value in kVA", "" ) \
DPOINT_DEFN( G3_PDUP_Angle, I32, "Grp3 PDUP pickup angle", "" ) \
DPOINT_DEFN( G3_PDUP_TDtMin, UI32, "Grp3 PDUP tripping time", "" ) \
DPOINT_DEFN( G3_PDUP_TDtRes, UI32, "Grp3 PDUP reset time", "" ) \
DPOINT_DEFN( G3_PDUP_TDtDis, UI32, "Grp3 PDUP disable time", "" ) \
DPOINT_DEFN( G4_Yn_TDtMin, UI32, "Grp4 Admittance protection (Yn) DT min tripping time in ms", "" ) \
DPOINT_DEFN( G4_Yn_OperationalMode, YnOperationalMode, "Grp4 Admittance protection (Yn) operational mode", "" ) \
DPOINT_DEFN( G4_Yn_DirectionalMode, YnDirectionalMode, "Grp4 Admittance protection (Yn) directional mode", "" ) \
DPOINT_DEFN( G4_Yn_Um, UI32, "Grp4 Admittance protection (Yn) voltage multiplier for Un", "" ) \
DPOINT_DEFN( G4_Yn_Ioper, UI32, "Grp4 Admittance protection (Yn) minimum In for operation", "" ) \
DPOINT_DEFN( G4_Yn_TDtRes, UI32, "Grp4 Admittance protection (Yn) fault reset time", "" ) \
DPOINT_DEFN( G4_Yn_FwdSusceptance, I32, "Grp4 Admittance protection (Yn) forward susceptance pickup level", "" ) \
DPOINT_DEFN( G4_Yn_RevSusceptance, I32, "Grp4 Admittance protection (Yn) reverse susceptance pickup level", "" ) \
DPOINT_DEFN( G4_Yn_FwdConductance, I32, "Grp4 Admittance protection (Yn) forward conductance pickup level", "" ) \
DPOINT_DEFN( G4_Yn_RevConductance, I32, "Grp4 Admittance protection (Yn) reverse conductance pickup level", "" ) \
DPOINT_DEFN( G4_Yn_Tr1, TripMode, "Grp4 Admittance protection (Yn) mode for trip 1", "" ) \
DPOINT_DEFN( G4_Yn_Tr2, TripMode, "Grp4 Admittance protection (Yn) mode for trip 2", "" ) \
DPOINT_DEFN( G4_Yn_Tr3, TripMode, "Grp4 Admittance protection (Yn) mode for trip 3", "" ) \
DPOINT_DEFN( G4_Yn_Tr4, TripMode, "Grp4 Admittance protection (Yn) mode for trip 4", "" ) \
DPOINT_DEFN( G4_OC1F_TccName, Str, "Grp4 Name of OC1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_OC2F_TccName, Str, "Grp4 Name of OC2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_OC1R_TccName, Str, "Grp4 Name of OC1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_OC2R_TccName, Str, "Grp4 Name of OC2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPS1F_TccName, Str, "Grp4 Name of NPS1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPS2F_TccName, Str, "Grp4 Name of NPS2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPS1R_TccName, Str, "Grp4 Name of NPS1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPS2R_TccName, Str, "Grp4 Name of NPS2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EF1F_TccName, Str, "Grp4 Name of EF1+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EF2F_TccName, Str, "Grp4 Name of EF2+ TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EF1R_TccName, Str, "Grp4 Name of EF1- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EF2R_TccName, Str, "Grp4 Name of EF2- TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_OCLL1_TccName, Str, "Grp4 Name of OCLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_OCLL2_TccName, Str, "Grp4 Name of OCLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPSLL1_TccName, Str, "Grp4 Name of NPSLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_NPSLL2_TccName, Str, "Grp4 Name of NPSLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EFLL1_TccName, Str, "Grp4 Name of EFLL1 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_EFLL2_TccName, Str, "Grp4 Name of EFLL2 TCC type.  Volatile point populated at runtime, appears in change log as a fake entry.", "" ) \
DPOINT_DEFN( G4_DE_EF_AdvPolarDet, EnDis, "Grp4 Enable/disable advanced polar detection for EF neutral direction.", "" ) \
DPOINT_DEFN( G4_DE_EF_MinNVD, UI32, "Grp4 Minimum voltage level for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_EF_MaxFwdAngle, I32, "Grp4 Maximum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_EF_MinFwdAngle, I32, "Grp4 Minimum forward angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_EF_MaxRevAngle, I32, "Grp4 Maximum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_EF_MinRevAngle, I32, "Grp4 Minimum reverse angle for neutral EF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_AdvPolarDet, EnDis, "Grp4 Enable/disable advanced polar detection for SEF neutral direction.", "" ) \
DPOINT_DEFN( G4_DE_SEF_MinNVD, UI32, "Grp4 Minimum voltage level for SEF neutral advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_MaxFwdAngle, I32, "Grp4 Maximum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_MinFwdAngle, I32, "Grp4 Minimum forward angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_MaxRevAngle, I32, "Grp4 Maximum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_MinRevAngle, I32, "Grp4 Minimum reverse angle for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_DE_SEF_Polarisation, NeutralPolarisation, "Grp4 Polarisation type for neutral SEF advanced polar direction detection.", "" ) \
DPOINT_DEFN( G4_Hrm_IndA_NameExt, HrmIndividualExt, "Grp4 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G4_Hrm_IndB_NameExt, HrmIndividualExt, "Grp4 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G4_Hrm_IndC_NameExt, HrmIndividualExt, "Grp4 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G4_Hrm_IndD_NameExt, HrmIndividualExt, "Grp4 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G4_Hrm_IndE_NameExt, HrmIndividualExt, "Grp4 Name of the harmonic to select for this protection element (RC20)", "" ) \
DPOINT_DEFN( G4_ROCOF_Trm, TripModeDLA, "Grp4 ROCOF trip mode", "" ) \
DPOINT_DEFN( G4_ROCOF_Pickup, UI32, "Grp4 ROCOF pickup value in Hz/s", "" ) \
DPOINT_DEFN( G4_ROCOF_TDtMin, UI32, "Grp4 ROCOF tripping time", "" ) \
DPOINT_DEFN( G4_ROCOF_TDtRes, UI32, "Grp4 ROCOF DT reset time", "" ) \
DPOINT_DEFN( G4_VVS_Trm, TripModeDLA, "Grp4 VVS trip mode", "" ) \
DPOINT_DEFN( G4_VVS_Pickup, UI32, "Grp4 VVS pickup angle", "" ) \
DPOINT_DEFN( G4_VVS_TDtMin, UI32, "Grp4 VVS DT tripping time", "" ) \
DPOINT_DEFN( G4_VVS_TDtRes, UI32, "Grp4 VVS DT reset time", "" ) \
DPOINT_DEFN( G4_PDOP_Trm, TripModeDLA, "Grp4 PDOP trip mode", "" ) \
DPOINT_DEFN( G4_PDOP_Pickup, UI32, "Grp4 Pickup value for directional overpower protection (kVA).", "" ) \
DPOINT_DEFN( G4_PDOP_Angle, I32, "Grp4 Pickup angle for directional overpower protection.", "" ) \
DPOINT_DEFN( G4_PDOP_TDtMin, UI32, "Grp4 PDOP tripping time", "" ) \
DPOINT_DEFN( G4_PDOP_TDtRes, UI32, "Grp4 PDOP reset time", "" ) \
DPOINT_DEFN( G4_PDUP_Trm, TripModeDLA, "Grp4 PDUP trip mode", "" ) \
DPOINT_DEFN( G4_PDUP_Pickup, UI32, "Grp4 PDUP pickup value in kVA", "" ) \
DPOINT_DEFN( G4_PDUP_Angle, I32, "Grp4 PDUP pickup angle", "" ) \
DPOINT_DEFN( G4_PDUP_TDtMin, UI32, "Grp4 PDUP tripping time", "" ) \
DPOINT_DEFN( G4_PDUP_TDtRes, UI32, "Grp4 PDUP reset time", "" ) \
DPOINT_DEFN( G4_PDUP_TDtDis, UI32, "Grp4 PDUP disable time", "" ) \
DPOINT_DEFN( SigCtrlYnOn, Signal, "Admittance protection (Yn) is turned on", "" ) \
DPOINT_DEFN( SigAlarmYn, Signal, "Alarm ouput of the Yn element activated", "" ) \
DPOINT_DEFN( SigPickupYn, Signal, "Pickup output of admittance protection (Yn)", "" ) \
DPOINT_DEFN( SigOpenYn, Signal, "Open due to admittance protection (Yn)", "" ) \
DPOINT_DEFN( CntrYnTrips, I32, "Fault counter for Yn trips", "" ) \
DPOINT_DEFN( TripMaxGn, I32, "Maximum Gn (conductance) at the time of the most recent trip.", "" ) \
DPOINT_DEFN( TripMaxBn, I32, "Maximum Bn (susceptance) at the time of the most recent trip.", "" ) \
DPOINT_DEFN( TripMinGn, I32, "Minimum Gn (conductance) at the time of the most recent trip.", "" ) \
DPOINT_DEFN( TripMinBn, I32, "Minimum Bn (susceptance) at the time of the most recent trip.", "" ) \
DPOINT_DEFN( MeasGn, I32, "Measured value of Gn (conductance) for admittance protection (Yn)", "" ) \
DPOINT_DEFN( MeasBn, I32, "Measured value of Bn (susceptance) for admittance protection (Yn)", "" ) \
DPOINT_DEFN( s61850GooseOpMode, LocalRemote, "This is separate to the ScadaOpMode because GOOSE can co-exist with another protocol on a different port", "" ) \
DPOINT_DEFN( UsbDiscUpdateDirFiles1024, StrArray1024, "Holds the list of files found in the USB updates directory, whether valid or not. Created to replace the usage of UsbDiscUpdateDirFiles in order to allow more files in the list", "" ) \
DPOINT_DEFN( UsbDiscUpdateVersions1024, StrArray1024, "Version strings for all updates found on the USB disc. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( UsbDiscInstallVersions1024, StrArray1024, "Version strings for all installation files found on the USB disc. Includes those that are downgrades or same as installed versions. Set by usbcopy when a disc is inserted.", "" ) \
DPOINT_DEFN( s61850CommsLogMaxSize, UI8, "s61850 comms log maximum file size", "" ) \
DPOINT_DEFN( RelayModelDisplayName, RelayModelName, "Relay model names for display : RC10, RC15 ...", "" ) \
DPOINT_DEFN( SwitchStateOwner, DbClientId, "Identifies which process currently owns the state of the switch state in signal trees like SigOpen, SigClosed, etc.", "" ) \
DPOINT_DEFN( SwitchStateOwnerPtr, UI32, "Points to the signal list that was last set on the SigOpen/SigClose trees by the SwitchStateOwner.  This is a pointer into shared memory.", "" ) \
DPOINT_DEFN( ModemConnectState, ModemConnectStatus, "Modem Connection state", "" ) \
DPOINT_DEFN( ModemRetryWaitTime, UI32, "Waiting time for next modem retry", "" ) \
DPOINT_DEFN( s61850RqstEnableMMS, UI8, "The 61850 MMS should be enabled when the process is able.", "" ) \
DPOINT_DEFN( s61850RqstEnableGoosePub, UI8, "The 61850 GOOSE publisher should be enabled when the process is able.", "" ) \
DPOINT_DEFN( s61850CIDFileUpdateStatus, UI8, "Indicator of state/status for CID file update", "" ) \
DPOINT_DEFN( SigAlarmI2I1, Signal, "Alarm output of I2/I1 activated", "" ) \
DPOINT_DEFN( SigPickupI2I1, Signal, "Pickup output of I2/I1 activated", "" ) \
DPOINT_DEFN( SigOpenI2I1, Signal, "Open due to I2/I1 tripping", "" ) \
DPOINT_DEFN( CntrI2I1Trips, I32, "Fault Counter of I2/I1 Trips", "" ) \
DPOINT_DEFN( TripMaxI2I1, UI32, "Maximum I2/I1 between the Open and Trip", "" ) \
DPOINT_DEFN( MeasI2I1, UI32, "Measurement: I2/I1", "" ) \
DPOINT_DEFN( MobileNetworkModemFWNumber, Str, "MobileNetwork Modem Firmware Number", "" ) \
DPOINT_DEFN( WlanMACAddr, Str, "Wlan port MAC address", "" ) \
DPOINT_DEFN( Diagnostic1, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( Diagnostic2, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( Diagnostic3, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( Diagnostic4, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( MeasCurrIn_mA, UI32, "Measurement Current: In High Precision SEF", "" ) \
DPOINT_DEFN( InTrip_mA, UI32, "Trip current - Neutral High Precision SEF", "" ) \
DPOINT_DEFN( TripMaxCurrIn_mA, UI32, "Max neutral current at the time of the most recent trip (high precision SEF)", "" ) \
DPOINT_DEFN( UPSMobileNetworkTime, UI16, "UPS mobile network time", "" ) \
DPOINT_DEFN( UPSWlanTime, UI16, "UPS Wlan time", "" ) \
DPOINT_DEFN( UPSMobileNetworkResetTime, UI16, "UPS mobile network reset time", "" ) \
DPOINT_DEFN( UPSWlanResetTime, UI16, "UPS wlan reset time", "" ) \
DPOINT_DEFN( CmdResetFaultTargets, Bool, "Internal point used to communicate the reset fault targets state between Relay processes.  CMS should use the ResetBinaryFaultTargets signal instead.", "" ) \
DPOINT_DEFN( CfgPowerFlowDirection, PowerFlowDirection, "Power Flow Direction, RST to ABC or ABC to RST", "" ) \
DPOINT_DEFN( LLBlocksClose, OnOff, "Live line blocks all close operations when this setting is enabled.", "" ) \
DPOINT_DEFN( SyncDiagnostics, EnDis, "Internal datapoint that enables extra diagnostics for the Synchronism feature.", "" ) \
DPOINT_DEFN( CanPscHeatsinkTemp, I16, "Temperature on the main PSC heatsink in Celcius.", "" ) \
DPOINT_DEFN( CanPscModuleVoltage, UI16, "Input voltage to the PSC", "" ) \
DPOINT_DEFN( WlanTxPower, WLanTxPower, "Wlan Tx power selection: 0-low, 1-medium, 2-high.", "" ) \
DPOINT_DEFN( SigClosedAutoSync, Signal, "Closed due to auto-synchroniser", "" ) \
DPOINT_DEFN( LLAllowClose, OnOff, "Live line blocks all close operations when this setting is off.", "" ) \
DPOINT_DEFN( WlanConnectState, WlanConnectStatus, "wlan connect state during bringing up", "" ) \
DPOINT_DEFN( SigSyncDeltaVStatus, Signal, "Voltage is synchronised for Synchronism", "" ) \
DPOINT_DEFN( SigSyncSlipFreqStatus, Signal, "Frequency is synchronised for Sync-Check", "" ) \
DPOINT_DEFN( SigSyncDeltaPhaseStatus, Signal, "Phase angle is synchronised for Sync-Check", "" ) \
DPOINT_DEFN( CmsAuxConfigMaxFrameSizeTx, UI32, "Configuration option that specifies the maximum size of all frames sent by the CMS protocol over the AUX (2nd) port. The size is the total size of the frame and includes the CMS header (prefix) and CMS CRC (footer). ", "" ) \
DPOINT_DEFN( CmsConfigMaxFrameSizeTx, UI32, "Configuration option that specifies the maximum size of all frames sent by the CMS protocol over the 1ary port. The size is the total size of the frame and includes the CMS header (prefix) and CMS CRC (footer). ", "" ) \
DPOINT_DEFN( IdRelayFwModelNo, UI8, "The Firmware Image type associated with a Relay Model Number : RLM-01 (REL01), RLM-02 (REL02), RLM-03 (REL03),RLM-15 (REL15), RLM-15 (REL15-4G)", "" ) \
DPOINT_DEFN( SigMalfWLAN, Signal, "WLAN has hardware failure", "" ) \
DPOINT_DEFN( UpdateLock, UI16, "For interlock to prevent concurrent updates (0 = unlocked, 1 = locked by CMS, 2 = locked by HMI)", "" ) \
DPOINT_DEFN( WlanSignalQualityLoadProfile, UI8, "WLAN Signal Quality, only used for load profile", "" ) \
DPOINT_DEFN( MobileNetworkSignalQualityLoadProfile, UI8, "Mobile Network Signal Quality, only used for load profile", "" ) \
DPOINT_DEFN( Gps_SignalQualityLoadProfile, UI8, "GPS Signal Quality, only used for load profile", "" ) \
DPOINT_DEFN( Gps_Latitude_Field1, I16, "Gps Latitude value Field1, first 3 digits", "" ) \
DPOINT_DEFN( Gps_Latitude_Field2, I16, "Gps Latitude value Field2, middle 3 digits", "" ) \
DPOINT_DEFN( Gps_Latitude_Field3, I16, "Gps Latitude value Field3, last 3 digits", "" ) \
DPOINT_DEFN( Gps_Longitude_Field1, I16, "Gps Longitude value Field1, first 3 digits", "" ) \
DPOINT_DEFN( Gps_Longitude_Field2, I16, "Gps Longitude value Field2, middle 3 digits", "" ) \
DPOINT_DEFN( Gps_Longitude_Field3, I16, "Gps Longitude value Field3, last 3 digits", "" ) \
DPOINT_DEFN( AlertFlagsDisplayed, EnDis, "Enable or disable display of the fault flags on the home screen.", "" ) \
DPOINT_DEFN( AlertName1, Str, "Name of the 1st alert to display on the ALERTS page if enabled and active.", "" ) \
DPOINT_DEFN( AlertName2, Str, "Name of the 2nd alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName3, Str, "Name of the 3rd alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName4, Str, "Name of the 4th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName5, Str, "Name of the 5th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName6, Str, "Name of the 6th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName7, Str, "Name of the 7th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName8, Str, "Name of the 8th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName9, Str, "Name of the 9th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName10, Str, "Name of the 10th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName11, Str, "Name of the 11th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName12, Str, "Name of the 12th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName13, Str, "Name of the 13th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName14, Str, "Name of the 14th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName15, Str, "Name of the 15th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName16, Str, "Name of the 16th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName17, Str, "Name of the 17th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName18, Str, "Name of the 18th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName19, Str, "Name of the 19th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertName20, Str, "Name of the 20th alert to display on the ALERTS page if enabled and active", "" ) \
DPOINT_DEFN( AlertMode1, EnDis, "Enables or disables the 1st alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode2, EnDis, "Enables or disables the 2nd alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode3, EnDis, "Enables or disables the 3rd alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode4, EnDis, "Enables or disables the 4th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode5, EnDis, "Enables or disables the 5th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode6, EnDis, "Enables or disables the 6th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode7, EnDis, "Enables or disables the 7th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode8, EnDis, "Enables or disables the 8th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode9, EnDis, "Enables or disables the 9th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode10, EnDis, "Enables or disables the 10th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode11, EnDis, "Enables or disables the 11th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode12, EnDis, "Enables or disables the 12th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode13, EnDis, "Enables or disables the 13th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode14, EnDis, "Enables or disables the 14th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode15, EnDis, "Enables or disables the 15th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode16, EnDis, "Enables or disables the 16th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode17, EnDis, "Enables or disables the 17th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode18, EnDis, "Enables or disables the 18th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode19, EnDis, "Enables or disables the 19th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertMode20, EnDis, "Enables or disables the 20th alert to display on the ALERTS page", "" ) \
DPOINT_DEFN( AlertExpr1, UI16, "The expression for the 1st alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr2, UI16, "The expression for the 2nd alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr3, UI16, "The expression for the 3rd alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr4, UI16, "The expression for the 4th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr5, UI16, "The expression for the 5th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr6, UI16, "The expression for the 6th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr7, UI16, "The expression for the 7th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr8, UI16, "The expression for the 8th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr9, UI16, "The expression for the 9th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr10, UI16, "The expression for the 10th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr11, UI16, "The expression for the 11th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr12, UI16, "The expression for the 12th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr13, UI16, "The expression for the 13th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr14, UI16, "The expression for the 14th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr15, UI16, "The expression for the 15th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr16, UI16, "The expression for the 16th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr17, UI16, "The expression for the 17th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr18, UI16, "The expression for the 18th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr19, UI16, "The expression for the 19th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertExpr20, UI16, "The expression for the 20th alert to display on the ALERTS page.  This is a datapoint identifier and must refer to a signal datapoint.", "" ) \
DPOINT_DEFN( AlertDisplayNames, StrArray1024, "List of alert names to display on the ALERTS page.  The companion datapoint AlertDisplayNamesChanged will also be incremented every time this datapoint is modified.", "" ) \
DPOINT_DEFN( AlertDefaultsPopulated, Bool, "Set to TRUE by the Relay after it populates the default alert settings after a database reset.", "" ) \
DPOINT_DEFN( AlertGroup, ChangeEvent, "This datapoint is intended for use in bulk set operations for the alert settings.", "" ) \
DPOINT_DEFN( AlertDisplayNamesChanged, UI32, "Volatile 32-bit counter that is incremented every time the AlertDisplayNames datapoint is changed.  This can be used as a quick \"has it been modified?\" check.", "" ) \
DPOINT_DEFN( WlanClientMACAddr1, Str, "wlan client 1 MAC ", "" ) \
DPOINT_DEFN( WlanClientMACAddr2, Str, "wlan client 2 MAC", "" ) \
DPOINT_DEFN( WlanClientMACAddr3, Str, "wlan client 3 MAC", "" ) \
DPOINT_DEFN( WlanClientMACAddr4, Str, "wlan client 4 MAC", "" ) \
DPOINT_DEFN( WlanClientMACAddr5, Str, "wlan client 5 MAC", "" ) \
DPOINT_DEFN( UpdateError, UpdateError, "Error code for update/install operation result", "" ) \
DPOINT_DEFN( GPS_Status, GPSStatus, "GPS status", "" ) \
DPOINT_DEFN( SigGPSUnplugged, Signal, "GPS unplugged", "" ) \
DPOINT_DEFN( SigGPSMalfunction, Signal, "GPS malfunction", "" ) \
DPOINT_DEFN( Gps_SetTime, UI32, "to indicate GPS has set system time.", "" ) \
DPOINT_DEFN( CmdResetBinaryFaultTargets, ResetCommand, "Request Reset Binary Fault Targets", "" ) \
DPOINT_DEFN( CmdResetTripCurrents, ResetCommand, "Request to reset trip currents", "" ) \
DPOINT_DEFN( SigSimAndOsmModelMismatch, Signal, "Connected SIM's supported OSM models does not include the configured OSM model.", "" ) \
DPOINT_DEFN( SigBlockPickupEff, Signal, "Pickup blocked on EF+ engines", "" ) \
DPOINT_DEFN( SigBlockPickupEfr, Signal, "Pickup blocked on EF- engines", "" ) \
DPOINT_DEFN( SigBlockPickupSeff, Signal, "Pickup blocked on SEF+ engines", "" ) \
DPOINT_DEFN( SigBlockPickupSefr, Signal, "Pickup blocked on SEF- engines", "" ) \
DPOINT_DEFN( SigBlockPickupOv3, Signal, "Pickup blocked on OV3 engines", "" ) \
DPOINT_DEFN( SigFaultLocatorStatus, Signal, "Set when the fault location data is valid.  Clear when fault location is being calculated or fault location is not enabled.", "" ) \
DPOINT_DEFN( FaultLocFaultType, FaultLocFaultType, "Type of fault that occurred, to aid in determining the fault location.", "" ) \
DPOINT_DEFN( FaultLocM, I32, "Distance to Fault (km)", "" ) \
DPOINT_DEFN( FaultLocZf, I32, "Magnitude of fault impedance", "" ) \
DPOINT_DEFN( FaultLocThetaF, I32, "Phase angle of fault impedance (degree)", "" ) \
DPOINT_DEFN( FaultLocZLoop, I32, "Magnitude of faulted loop impedance", "" ) \
DPOINT_DEFN( FaultLocThetaLoop, I32, "Phase angle of faulted loop impedance (degree)", "" ) \
DPOINT_DEFN( FaultLocIa, UI32, "Ia value at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocIb, UI32, "Ib value at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocIc, UI32, "Ic value at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocAIa, I16, "Ia angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocAIb, I16, "Ib angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocAIc, I16, "Ic angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocUa, UI32, "Ua value at time of fault, direct from the FPGA", "" ) \
DPOINT_DEFN( FaultLocUb, UI32, "Ub value at time of fault, direct from the FPGA", "" ) \
DPOINT_DEFN( FaultLocUc, UI32, "Uc value at time of fault, direct from the FPGA", "" ) \
DPOINT_DEFN( FaultLocAUa, I16, "Ua angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocAUb, I16, "Ub angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocAUc, I16, "Uc angle at time of fault, direct from FPGA", "" ) \
DPOINT_DEFN( FaultLocDetectedType, FaultLocFaultType, "Detected type for fault location.  Set by protection prior to the fault location algorithm starting to run.", "" ) \
DPOINT_DEFN( FaultLocTrigger, UI32, "Incremented by protection each time the fault location algorithm should be run.", "" ) \
DPOINT_DEFN( FaultLocEnable, EnDis, "Fault locator enable/disable setting.", "" ) \
DPOINT_DEFN( FaultLocR0, UI32, "R0 setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocX0, UI32, "X0 setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocR1, UI32, "R1 setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocX1, UI32, "X1 setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocRA, UI32, "RA setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocXA, UI32, "XA setting for fault location.", "" ) \
DPOINT_DEFN( FaultLocLengthOfLine, UI32, "Length of the line for fault location.", "" ) \
DPOINT_DEFN( GPSEnableCommsLog, EnDis, "Enable GPS comms logging", "" ) \
DPOINT_DEFN( GPSCommsLogMaxSize, UI8, "GPS comms log maximum size(Mbytes)", "" ) \
DPOINT_DEFN( SigResetFaultLocation, Signal, "Resets the fault location information in the database.", "" ) \
DPOINT_DEFN( AlertDisplayDatapoints, Array16, "List of numeric/enum datapoint identifiers for alerts.  Each entry is a datapoint identifier, or zero for a name-only alert.", "" ) \
DPOINT_DEFN( AlertDisplayMode, AlertDisplayMode, "Internal datapoint that indicates the mode to display the alerts in.", "" ) \
DPOINT_DEFN( FtstCaptureNextPtr, UI32, "This is an internal datapoint for communication between the prot and ftst processes.", "" ) \
DPOINT_DEFN( FtstCaptureLastPtr, UI32, "This is an internal datapoint for communication between the prot and ftst processes.", "" ) \
DPOINT_DEFN( FaultLocXLoop, I32, "Reactance of faulted loop impedance", "" ) \
DPOINT_DEFN( SigArReset, Signal, "AR Sequence Active is active if the Auto Reclose Sequence is in progress", "" ) \
DPOINT_DEFN( SigArResetPhA, Signal, "AR Sequence Active is active if the Auto Reclose Sequence is in progress on phase A, for a single-triple configuration", "" ) \
DPOINT_DEFN( SigArResetPhB, Signal, "AR Sequence Active is active if the Auto Reclose Sequence is in progress on phase B, for a single-triple configuration", "" ) \
DPOINT_DEFN( SigArResetPhC, Signal, "AR Sequence Active is active if the Auto Reclose Sequence is in progress on phase C, for a single-triple configuration", "" ) \
DPOINT_DEFN( LogicSGAStopped, Signal, "Set when logic is stopped due to a loop in the logic, or if SGA is stopped due to an error.", "" ) \
DPOINT_DEFN( LogicSGAStoppedLogic, Signal, "Set when logic is stopped due to a loop in the logic.", "" ) \
DPOINT_DEFN( LogicSGAStoppedSGA, Signal, "Set when SGA is stopped due to an error.", "" ) \
DPOINT_DEFN( LogicSGAThrottling, Signal, "Set when logic or SGA is throttling.", "" ) \
DPOINT_DEFN( LogicSGAThrottlingLogic, Signal, "Set when logic is throttling.", "" ) \
DPOINT_DEFN( LogicSGAThrottlingSGA, Signal, "Set when SGA is throttling.", "" ) \
DPOINT_DEFN( SigUSBOCOnboard, Signal, "onboard usb device overcurrent", "" ) \
DPOINT_DEFN( SigUSBOCExternal, Signal, "external usb hub device overcurrent", "" ) \
DPOINT_DEFN( SigUSBOCModem, Signal, "4G Modem overcurrent ", "" ) \
DPOINT_DEFN( SigUSBOCWifi, Signal, "comms board wifi overcurrent", "" ) \
DPOINT_DEFN( SigUSBOCGPS, Signal, "comms board GPS overcurrent", "" ) \
DPOINT_DEFN( LoadedScadaProtocolDNP3, UI8, "Used to indicate that DNP3 has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( LoadedScadaRestartReqWarning, Signal, "Set when a SCADA protocol is set to be enabled but was not enabled at last startup", "" ) \
DPOINT_DEFN( IdPSCModelStr, Str, "Identification: PSC Model Number", "" ) \
DPOINT_DEFN( WlanConfigTypeNonUps, UsbPortConfigType, "WLAN port config type (not updated by UPS)", "" ) \
DPOINT_DEFN( MobileNetworkConfigTypeNonUps, UsbPortConfigType, "Mobile network port config type (not updated by UPS)", "" ) \
DPOINT_DEFN( CanPscFirmwareUpdateFeatures, UI32, "Internal datapoint that lists the set of CAN firmware update features that are supported by the PSC.", "" ) \
DPOINT_DEFN( CanSimFirmwareUpdateFeatures, UI32, "Internal datapoint that lists the set of CAN firmware update features that are supported by the SIM.", "" ) \
DPOINT_DEFN( CanGpioFirmwareUpdateFeatures, UI32, "Internal datapoint that lists the set of CAN firmware update features that are supported by the GPIO currently being updated.", "" ) \
DPOINT_DEFN( CanPscTransferStatus, UI8, "Internal datapoint that indicates the result of transferring bulk data to the PSC during a firmware update.", "" ) \
DPOINT_DEFN( CanSimTransferStatus, UI8, "Internal datapoint that indicates the result of transferring bulk data to the SIM during a firmware update.", "" ) \
DPOINT_DEFN( CanGpioTransferStatus, UI8, "Internal datapoint that indicates the result of transferring bulk data to the GPIO during a firmware update.", "" ) \
DPOINT_DEFN( CanPscActiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is active in the PSC.", "" ) \
DPOINT_DEFN( CanSimActiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is active in the SIM.", "" ) \
DPOINT_DEFN( CanGpioActiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is active in the GPIO.", "" ) \
DPOINT_DEFN( CanPscInactiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is inactive in the PSC.", "" ) \
DPOINT_DEFN( CanSimInactiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is inactive in the SIM.", "" ) \
DPOINT_DEFN( CanGpioInactiveApplicationDetails, SimWriteAddr, "Internal datapoint that indicates which application is inactive in the GPIO.", "" ) \
DPOINT_DEFN( CanPscPWR1Status, UI8, "Internal datapoint that indicates the status of PSC power output 1.", "" ) \
DPOINT_DEFN( CanPscSimPresent, UI8, "Internal datapoint that indicates if the SIM is present on the CAN bus according to the PSC.", "" ) \
DPOINT_DEFN( sigFirmwareHardwareMismatch, Signal, "signal for the \"Firmware/Hardware Mismatch\" warning indication", "" ) \
DPOINT_DEFN( FirmwareHardwareVersion, UI8, "Tracks the intended hardware version of the currently installed firmware", "" ) \
DPOINT_DEFN( UnitOfTime, TimeUnit, "unit of time", "" ) \
DPOINT_DEFN( LoadedScadaProtocol60870, UI8, "Used to indicate that IEC 60870 has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( LoadedScadaProtocol61850MMS, UI8, "Used to indicate that IEC 61850 MMS Server has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( LoadedScadaProtocol2179, UI8, "Used to indicate that 2179 has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( LoadedScadaProtocol61850GoosePub, UI8, "Used to indicate that IEC 61850 Goose Publisher has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( LoadedScadaProtocol61850GooseSub, UI8, "Used to indicate that IEC 61850 Goose Subscriber has been loaded at startup and can be enabled/disabled without a restart", "" ) \
DPOINT_DEFN( DiagCounter1, diagDataGeneral1, "Variable length database point to hold array of counters for diagnostic purposes. For developer use only. ", "" ) \
DPOINT_DEFN( DiagCounterCtrl1, UI32, "UI32 to control for Diagnostic counters (1) for diagnostic purposes. For developer use only.", "" ) \
DPOINT_DEFN( SigProtOcDirF, Signal, "OC direction is forward", "" ) \
DPOINT_DEFN( SigProtOcDirR, Signal, "OC direction is reverse", "" ) \
DPOINT_DEFN( SNTPEnable, EnDis, "Control point for enabling/disabling SNTP", "" ) \
DPOINT_DEFN( SNTPServIpAddr1, IpAddr, "IP address of the primary IPv4 SNTP server", "" ) \
DPOINT_DEFN( SNTPServIpAddr2, IpAddr, "IP address of the secondary IPv4 SNTP server", "" ) \
DPOINT_DEFN( SNTPUpdateInterval, UI16, "Update interval for SNTP (minutes)", "" ) \
DPOINT_DEFN( SNTPRetryInterval, UI16, "Retry interval for SNTP (seconds)", "" ) \
DPOINT_DEFN( SNTPRetryAttempts, UI8, "Number of SNTP retry attempts", "" ) \
DPOINT_DEFN( TmSrc, TimeSyncStatus, "Time Sync Source displayed on the RTC Settings page", "" ) \
DPOINT_DEFN( Diagnostic5, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( Diagnostic6, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( Diagnostic7, UI32, "General use point for diagnostics in internal developer test builds.  Should not be used in production code.", "" ) \
DPOINT_DEFN( SNTPSetTime, UI32, "Used to indicate that SNTP has set system time", "" ) \
DPOINT_DEFN( SNTPServerResponse, UI8, "Used by msntp utility to indicate whether or not the server has acknowledged the time sync attempt", "" ) \
DPOINT_DEFN( SNTPSyncStatus, Signal, "This signal is used to track the current syncing status of SNTP", "" ) \
DPOINT_DEFN( SNTP1Error, Signal, "IO/Logic point used to indicate that the relay failed to synchronise with SNTP Server 1", "" ) \
DPOINT_DEFN( SNTP2Error, Signal, "IO/Logic point used to indicate that the relay failed to synchronise with SNTP Server 2", "" ) \
DPOINT_DEFN( SNTPUnableToSync, Signal, "Warning for SNTP failure to sync", "" ) \
DPOINT_DEFN( SigUSBOCReset, Signal, "Reset USB Overcurrent will reset USB ports that have had an over current fault.", "" ) \
DPOINT_DEFN( SigUSBOCMalfunction, Signal, "This is the parent signal for all USB overcurrent signals", "" ) \
DPOINT_DEFN( CmdResetFaultLocation, ResetCommand, "Resets the fault location information in the database.", "" ) \
DPOINT_DEFN( SigMalfRel20, Signal, "Part code is REL-20 but comms board is not connected, or 4G modem is not connected.", "" ) \
DPOINT_DEFN( CurrentLanguage, Str, "English name of the current language that is configured for displaying the HMI.", "" ) \
DPOINT_DEFN( SNTPServIpv6Addr1, Ipv6Addr, "IP address of the primary IPv6 SNTP server", "" ) \
DPOINT_DEFN( SNTPServIpv6Addr2, Ipv6Addr, "IP address of the secondary IPv6 SNTP server", "" ) \
DPOINT_DEFN( SNTPServIpVersion, IpVersion, "SNTP IP Version for the servers", "" ) \
DPOINT_DEFN( ScadaDnp3Ipv6MasterAddr, Ipv6Addr, "The Master's IPv6 address. This is used for authorizing, if “Check Master IP Address” is ON, and for sending unsolicited messages.", "" ) \
DPOINT_DEFN( ScadaDnp3Ipv6UnathIpAddr, Ipv6Addr, "The IPv6 address of the most recent unauthorised attempt to establish a TCP / UDP connection.", "" ) \
DPOINT_DEFN( ScadaDnp3IpVersion, IpVersion, "IP version for the DNP3 Protocol", "" ) \
DPOINT_DEFN( ScadaT10BIpv6MasterAddr, Ipv6Addr, "The Master's IPv6 address. This is used for authorizing, if \"Check Master IP Address\" is ON, and for sending unsolicited messages.", "" ) \
DPOINT_DEFN( ScadaT10BIpVersion, IpVersion, "IP Version for the Protocol IEC60870", "" ) \
DPOINT_DEFN( s61850ClientIpVersion, IpVersion, "IP Version of the MMS server Protocol IEC61850: ", "" ) \
DPOINT_DEFN( s61850ClientIpv6Addr1, Ipv6Addr, "IPv6 Address of IEC 61850 Client (1) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ClientIpv6Addr2, Ipv6Addr, "IPv6 Address of IEC 61850 Client (2) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ClientIpv6Addr3, Ipv6Addr, "IPv6 Address of IEC 61850 Client (3) connected to RC10 Server", "" ) \
DPOINT_DEFN( s61850ClientIpv6Addr4, Ipv6Addr, "IPv6 Address of IEC 61850 Client (4) connected to RC10 Server", "" ) \
DPOINT_DEFN( ScadaCMSIpVersion, IpVersion, "Ip Version for Protocol CMS: Port 2 ", "" ) \
DPOINT_DEFN( p2pRemoteIpVersion, IpVersion, "p2p comm IP Version", "" ) \
DPOINT_DEFN( p2pRemoteLanIpv6Addr, Ipv6Addr, "p2p comm remote LAN IPv6 address", "" ) \
DPOINT_DEFN( s61850GseSubsSts, UI32, "IEC 61850: Goose Subscriber Status.\r\nThis is a bit field (UI32) in which the MS 20 bits represent the status of configured Goose subscriptions 1-20. 1 = Active 0 = Timed out.", "" ) \
DPOINT_DEFN( WlanAccessPointIPv6, Ipv6Addr, "IPv6 address to use when the WLAN is configured as an Access Point.  Not used in Client mode.", "" ) \
DPOINT_DEFN( WlanAPSubnetPrefixLength, UI8, "WLAN AP Subnet Prefix Length", "" ) \
DPOINT_DEFN( ftpEnable, EnDis, "Enable File transfer Protocol (ftp). For readonly (download) reading of files for Oscillography or as required.", "" ) \
DPOINT_DEFN( WlanClientIPv6Addr1, Ipv6Addr, "WLAN Client IPv6 Address 1", "" ) \
DPOINT_DEFN( WlanClientIPv6Addr2, Ipv6Addr, "WLAN Client IPv6 Address 2", "" ) \
DPOINT_DEFN( WlanClientIPv6Addr3, Ipv6Addr, "WLAN Client IPv6 Address 3", "" ) \
DPOINT_DEFN( WlanClientIPv6Addr4, Ipv6Addr, "WLAN Client IPv6 Address 4", "" ) \
DPOINT_DEFN( WlanClientIPv6Addr5, Ipv6Addr, "WLAN Client IPv6 Address 5", "" ) \
DPOINT_DEFN( SNTP1v6Error, Signal, "IO/Logic point used to indicate that the relay failed to synchronize with SNTP IPv6 Server 1", "" ) \
DPOINT_DEFN( SNTP2v6Error, Signal, "IO/Logic point used to indicate that the relay failed to synchronize with SNTP IPv6 Server 2", "" ) \
DPOINT_DEFN( SigACOOpModeEqualOn, Signal, "Set true to select ACO Operation Mode Equal On", "" ) \
DPOINT_DEFN( SigACOOpModeMainOn, Signal, "Set true to select ACO Operation Mode Main On", "" ) \
DPOINT_DEFN( SigACOOpModeAltOn, Signal, "Set true to select ACO Operation Mode Alt On", "" ) \
DPOINT_DEFN( SigCtrlPanelOn, Signal, "Upon a 0 -> 1 transition, force the Panel's screen on and disable the 5 minute auto-suspend timer.  Upon a 1 -> 0 transition, force the Panel's screen off.", "" ) \
DPOINT_DEFN( SigMalRel20Dummy, Signal, "It is a redundant data point of #10838. Should  be removed.", "" ) \
DPOINT_DEFN( RC20SIMIaCalCoef, F32, "calibration coefficients of Ia in SIM20", "" ) \
DPOINT_DEFN( RC20SIMIbCalCoef, F32, "it is the temp settings for calibration (Ib) in Relay20", "" ) \
DPOINT_DEFN( RC20SIMIcCalCoef, F32, "it is the temp settings for calibration in Relay20 (Ic)", "" ) \
DPOINT_DEFN( RC20SIMInCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, In)", "" ) \
DPOINT_DEFN( RC20SIMIaCalCoefHi, F32, "it is the temp settings for calibration in Relay20 (Ia)", "" ) \
DPOINT_DEFN( RC20SIMIbCalCoefHi, F32, "it is the temp settings for calibration in Relay20.", "" ) \
DPOINT_DEFN( RC20SIMIcCalCoefHi, F32, "It is the temp settings for calibration in Relay20", "" ) \
DPOINT_DEFN( RC20SIMUaCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Ua)", "" ) \
DPOINT_DEFN( RC20SIMUbCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Ub)", "" ) \
DPOINT_DEFN( RC20SIMUcCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Ub)", "" ) \
DPOINT_DEFN( RC20SIMUrCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Ur)", "" ) \
DPOINT_DEFN( RC20SIMUsCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Us)", "" ) \
DPOINT_DEFN( RC20SIMUtCalCoef, F32, "It is temp setting for cailbration in Relay20 (SIM20, Ut)", "" ) \
DPOINT_DEFN( RC20SwitchIaCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ia)", "" ) \
DPOINT_DEFN( RC20SwitchIbCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ib)", "" ) \
DPOINT_DEFN( RC20SwitchIcCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ic)", "" ) \
DPOINT_DEFN( RC20SwitchInCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, In)", "" ) \
DPOINT_DEFN( RC20SwitchUaCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ua)", "" ) \
DPOINT_DEFN( RC20SwitchUbCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ub)", "" ) \
DPOINT_DEFN( RC20SwitchUcCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Uc)", "" ) \
DPOINT_DEFN( RC20SwitchUrCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ur)", "" ) \
DPOINT_DEFN( RC20SwitchUsCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Us)", "" ) \
DPOINT_DEFN( RC20SwitchUtCalCoef, F32, "It is temp setting for cailbration in Relay20 (Switchgear, Ut)", "" ) \
DPOINT_DEFN( RC20RelayIaCalCoef, F32, "It is setting for cailbration in Relay20 (Relay, Ia)", "" ) \
DPOINT_DEFN( RC20RelayIbCalCoef, F32, "It is temp setting for cailbration in Relay20 (Relay, Ib)", "" ) \
DPOINT_DEFN( RC20RelayIcCalCoef, F32, "It is temp setting for cailbration in Relay20 (Relay, Ic)", "" ) \
DPOINT_DEFN( RC20RelayInCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, In)", "" ) \
DPOINT_DEFN( RC20RelayUaCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Ua)", "" ) \
DPOINT_DEFN( RC20RelayUbCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Ub)", "" ) \
DPOINT_DEFN( RC20RelayUcCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Uc)", "" ) \
DPOINT_DEFN( RC20RelayUrCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Ur)", "" ) \
DPOINT_DEFN( RC20RelayUsCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Us)", "" ) \
DPOINT_DEFN( RC20RelayUtCalCoef, F32, "It is temp setting for calibration in Relay20 (Relay, Ut)", "" ) \
DPOINT_DEFN( RC20RelayIaCalCoefHi, F32, "It is temp setting for calibration in Relay20 (Relay, Ia_hi)", "" ) \
DPOINT_DEFN( RC20RelayIbCalCoefHi, F32, "It is temp setting for calibration in Relay20 (Relay, Ib_hi)", "" ) \
DPOINT_DEFN( RC20RelayIcCalCoefHi, F32, "It is temp setting for calibration in Relay20 (Relay, Ic_hi)", "" ) \
DPOINT_DEFN( RC20SwitchDefaultGainI, F32, "It is temp setting for calibration in Relay20 (Switch, default current)", "" ) \
DPOINT_DEFN( RC20SwitchDefaultGainU, F32, "It is temp setting for calibration in Relay20 (Switch, default voltage)", "" ) \
DPOINT_DEFN( RC20SIMDefaultGainILow, F32, "It is temp setting for calibration in Relay20 (SIM, default low current)", "" ) \
DPOINT_DEFN( RC20SIMDefaultGainIHigh, F32, "It is temp setting for calibration in Relay20 (SIM, default high current)", "" ) \
DPOINT_DEFN( RC20SIMDefaultGainIn, F32, "It is temp setting for calibration in Relay20 (SIM, SEF current)", "" ) \
DPOINT_DEFN( RC20SIMDefaultGainU, F32, "It is temp setting for calibration in Relay20 (SIM, voltage)", "" ) \
DPOINT_DEFN( RC20RelayDefaultGainILow, F32, "It is temp setting for calibration in Relay20 (Relay, low current)", "" ) \
DPOINT_DEFN( RC20RelayDefaultGainIHigh, F32, "It is temp setting for calibration in Relay20 (Relay, high current)", "" ) \
DPOINT_DEFN( RC20RelayDefaultGainIn, F32, "It is temp setting for calibration in Relay20 (Relay, SEF current)", "" ) \
DPOINT_DEFN( RC20RelayDefaultGainU, F32, "It is temp setting for calibration in Relay20 (Relay, Voltage)", "" ) \
DPOINT_DEFN( RC20FPGADefaultGainILow, UI32, "It is temp setting for calibration in Relay20 (FPGA,  low current)", "" ) \
DPOINT_DEFN( RC20FPGADefaultGainIHigh, UI32, "It is temp setting for calibration in Relay20 (FPGA, high current)", "" ) \
DPOINT_DEFN( RC20FPGADefaultGainIn, UI32, "It is temp setting for calibration in Relay20 (FPGA, sef current)", "" ) \
DPOINT_DEFN( RC20FPGADefaultGainU, UI32, "It is temp setting for calibration in Relay20 (FPGA, Voltage)", "" ) \
DPOINT_DEFN( RC20ConstCalCoefILow, F32, "It is constant coefficient for calibration in RC20 (low current).", "" ) \
DPOINT_DEFN( RC20ConstCalCoefIHigh, F32, "It is constant coefficient for calibration in RC20 (high current).", "" ) \
DPOINT_DEFN( RC20ConstCalCoefIn, F32, "It is constant coefficient for calibration in RC20 (SEF current).", "" ) \
DPOINT_DEFN( RC20ConstCalCoefU, F32, "It is constant coefficient for calibration in RC20 (SEF current).", "" ) \
DPOINT_DEFN( ScadaDNP3GenAppFragMaxSize, UI32, "Maximum Application Fragment Size in DNP3 General Settings.", "" ) \
DPOINT_DEFN( LineSupplyVoltage, UI16, "Line supply voltage input to the cubicle; e.g. 240V, 110V, etc.", "" ) \
DPOINT_DEFN( SaveRelayCalibration, UI8, "when relay get notification of this DBpoint, it will save the calibration to the Relay Nor Flash. \r\nCMS or panel process set this value to 1 after the download the calibration into Relay in whole. Then Calibration process save this value to 2 once it calculate the calibration value for Relay and save them in the database in RAM. \r\nOnce SMP get notifcation of this DB updated to 2, the calibration  process should save the Relay coefficients to Nor Flash.", "" ) \
DPOINT_DEFN( SaveSwgCalibration, UI8, "when relay get notification of this DBpoint, it will save the  Switchgear  coefficients to CID file in nand flash. \r\nCMS or panel process set this value to 1 after the download the Switchgear coiefficients into Relay in whole. Then Calibration process save this value to 2 once it calculate the calibration value for Switchgear and save them in the CID file in RAM. \r\nOnce SMP get notifcation of this DB updated to 2, the calibration  process should save the Switchgear coefficients into the CID file to Nand Flash. ", "" ) \
DPOINT_DEFN( SDCardStatus, SDCardStatus, "Status of the SD card: no card, unformatted, ready, ...", "" ) \
DPOINT_DEFN( RC20FPGAIa, UI32, "It is RC20 FPGA Ia value", "" ) \
DPOINT_DEFN( RC20FPGAIb, UI32, "It is RC20 FPGA Ib value", "" ) \
DPOINT_DEFN( RC20FPGAIc, UI32, "It is RC20 FPGA Ic value", "" ) \
DPOINT_DEFN( RC20FPGAIaHi, UI32, "It is RC20 FPGA Ia High value", "" ) \
DPOINT_DEFN( RC20FPGAIbHi, UI32, "It is RC20 FPGA Ib High value", "" ) \
DPOINT_DEFN( RC20FPGAIcHi, UI32, "It is RC20 FPGA Ic High value", "" ) \
DPOINT_DEFN( RC20FPGAIn, UI32, "It is RC20 FPGA In  value", "" ) \
DPOINT_DEFN( RC20FPGAUa, UI32, "It is RC20 FPGA Ua  value", "" ) \
DPOINT_DEFN( RC20FPGAUb, UI32, "It is RC20 FPGA Ub value", "" ) \
DPOINT_DEFN( RC20FPGAUc, UI32, "It is RC20 FPGA Uc value", "" ) \
DPOINT_DEFN( RC20FPGAUr, UI32, "It is RC20 FPGA Ur value", "" ) \
DPOINT_DEFN( RC20FPGAUs, UI32, "It is RC20 FPGA Us value", "" ) \
DPOINT_DEFN( RC20FPGAUt, UI32, "It is RC20 FPGA Ut value", "" ) \
DPOINT_DEFN( RC20SwitchIaCalCoefHi, F32, "Ia High coeff for RC20Switchgear", "" ) \
DPOINT_DEFN( RC20SwitchIbCalCoefHi, F32, "Ib High coeff for RC20Switchgear", "" ) \
DPOINT_DEFN( RC20SwitchIcCalCoefHi, F32, "Ic High coeff for RC20Switchgear", "" ) \
DPOINT_DEFN( PQSaveToSDCard, EnDis, "Enables or disables logging of power quality data to the SD card if one is inserted.", "" ) \
DPOINT_DEFN( OscSamplesPerCycle, OscSamplesPerCycle, "Number of samples per cycle for oscillography captures", "" ) \
DPOINT_DEFN( OscLogCountSD, UI32, "Number of oscillography captures that are currently stored on the SD card.", "" ) \
DPOINT_DEFN( OscCaptureTimeExt, OscCaptureTimeExt, "Length of an oscillography capture in seconds.", "" ) \
DPOINT_DEFN( PscTransformerCalib110V, UI32, "Calibration coefficient for the 110V transformer tap on the PSC.", "" ) \
DPOINT_DEFN( PscTransformerCalib220V, UI32, "Calibration coefficient for the 220V transformer tap on the PSC", "" ) \
DPOINT_DEFN( G14_SerialDTRStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialDSRStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialCDStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialRTSStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialCTSStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialRIStatus, CommsSerialPinStatus, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_ConnectionStatus, CommsConnectionStatus, "Grp14 Connection status: disconnected, connected, connecting.", "" ) \
DPOINT_DEFN( G14_BytesReceivedStatus, UI32, "Grp14 Bytes received on a port.", "" ) \
DPOINT_DEFN( G14_BytesTransmittedStatus, UI32, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_PacketsReceivedStatus, UI32, "Grp14 Packets received on a port.", "" ) \
DPOINT_DEFN( G14_PacketsTransmittedStatus, UI32, "Grp14 Packets Transmitted", "" ) \
DPOINT_DEFN( G14_ErrorPacketsReceivedStatus, UI32, "Grp14 Error Packets received on a port.", "" ) \
DPOINT_DEFN( G14_ErrorPacketsTransmittedStatus, UI32, "Grp14 Error Packets Transmitted", "" ) \
DPOINT_DEFN( G14_IpAddrStatus, IpAddr, "Grp14 IPv4 Address", "" ) \
DPOINT_DEFN( G14_SubnetMaskStatus, IpAddr, "Grp14 IPv4 Subnet Mask Status", "" ) \
DPOINT_DEFN( G14_DefaultGatewayStatus, IpAddr, "Grp14 IPv4 Default Gateway Status", "" ) \
DPOINT_DEFN( G14_PortDetectedType, CommsPortDetectedType, "Grp14 Each port can report it's detected type. RS232DTE always report as serial type.", "" ) \
DPOINT_DEFN( G14_PortDetectedName, Str, "Grp14 USB Port detected device name", "" ) \
DPOINT_DEFN( G14_SerialTxTestStatus, OnOff, "Grp14 serial port TX testing status", "" ) \
DPOINT_DEFN( G14_PacketsReceivedStatusIPv6, UI32, "Grp14 Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G14_PacketsTransmittedStatusIPv6, UI32, "Grp14 Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G14_ErrorPacketsReceivedStatusIPv6, UI32, "Grp14 Error Packets received on a port.(IPv6)", "" ) \
DPOINT_DEFN( G14_ErrorPacketsTransmittedStatusIPv6, UI32, "Grp14 Error Packets Transmitted (IPv6)", "" ) \
DPOINT_DEFN( G14_Ipv6AddrStatus, Ipv6Addr, "Grp14 IPv6 Address", "" ) \
DPOINT_DEFN( G14_LanPrefixLengthStatus, UI8, "Grp14 Prefix Length for the IPv6 Address", "" ) \
DPOINT_DEFN( G14_Ipv6DefaultGatewayStatus, Ipv6Addr, "Grp14 IPv6 Default Gateway Status", "" ) \
DPOINT_DEFN( G14_IpVersionStatus, IpVersion, "Grp14 LAN IP version", "" ) \
DPOINT_DEFN( G14_SerialPortTestCmd, Signal, "Grp14 If is set, the serial port is into the test mode. It will print \"Noja \" continuously on serial port until this db point is OFF or a 30seconds timer passed.", "" ) \
DPOINT_DEFN( G14_SerialPortHangupCmd, Signal, "Grp14 Whenever this db point is set, comms process (library) will hang up the phone (Using DTR or \"+++\" sequence).", "" ) \
DPOINT_DEFN( G14_BytesReceivedResetCmd, Signal, "Grp14 reset bytes Received", "" ) \
DPOINT_DEFN( G14_BytesTransmittedResetCmd, Signal, "Grp14 reset bytes Transmitted", "" ) \
DPOINT_DEFN( G14_SerialBaudRate, CommsSerialBaudRate, "Grp14 Serial Baud Rate (default value is 19200)", "" ) \
DPOINT_DEFN( G14_SerialDuplexType, CommsSerialDuplex, "Grp14 Serial Duplex Type", "" ) \
DPOINT_DEFN( G14_SerialRTSMode, CommsSerialRTSMode, "Grp14 Request To end signal. Used for flow control / transmitter control. In Flow control mode the RC10 asserts this signal to indicate it is ready to receive data. If RC10 is not ready to receive data, it drops this signal. In PTT mode RTS is used to control the transmitter.", "" ) \
DPOINT_DEFN( G14_SerialRTSOnLevel, CommsSerialRTSOnLevel, "Grp14 Serial RTS On Level", "" ) \
DPOINT_DEFN( G14_SerialDTRMode, CommsSerialDTRMode, "Grp14 Data Terminal Ready signal. RC10 asserts DTR when ready to begin communication. DTR Off causes the modem to hang Up.", "" ) \
DPOINT_DEFN( G14_SerialDTROnLevel, CommsSerialDTROnLevel, "Grp14 Serial DTR On Level", "" ) \
DPOINT_DEFN( G14_SerialParity, CommsSerialParity, "Grp14 Serial Parity", "" ) \
DPOINT_DEFN( G14_SerialCTSMode, CommsSerialCTSMode, "Grp14 Clear To Send setting.", "" ) \
DPOINT_DEFN( G14_SerialDSRMode, CommsSerialDSRMode, "Grp14 Data Set Ready setting.", "" ) \
DPOINT_DEFN( G14_SerialDCDMode, CommsSerialDCDMode, "Grp14 Serial DCD Mode", "" ) \
DPOINT_DEFN( G14_SerialDTRLowTime, UI32, "Grp14 Minimum period of time the DTR", "" ) \
DPOINT_DEFN( G14_SerialTxDelay, UI32, "Grp14 Minimum time, in ms, after receiving a character through the physical communication port, before transmitting a character in response. This has particular use in multi-drop RS485 or radio-modem communication environments where the master must be given time to disable its transmitting hardware before it can be ready to receive a message from the slave device.", "" ) \
DPOINT_DEFN( G14_SerialPreTxTime, UI32, "Grp14 Pre transmission interval between interval between assertion of RTS and starting to  send data.", "" ) \
DPOINT_DEFN( G14_SerialDCDFallTime, UI32, "Grp14 Set duration the RC10 will wait after loss of carrier before sending a hang up command or assuming the session has ended.", "" ) \
DPOINT_DEFN( G14_SerialCharTimeout, UI32, "Grp14 Maximum time, in chars length, between received bytes in a data link frame. After any byte is received in a data link frame, if this time is exceeded before another byte is received, then the current frame is rejected, and scanning for the beginning of another frame is immediately started.", "" ) \
DPOINT_DEFN( G14_SerialPostTxTime, UI32, "Grp14 Post Transmission interval between sending last character of data and negating RTS.", "" ) \
DPOINT_DEFN( G14_SerialInactivityTime, UI32, "Grp14 The number of seconds the RC10 will wait without any activity in transmission line before showing the SCADA Port Status as disconnected.", "" ) \
DPOINT_DEFN( G14_SerialCollisionAvoidance, Bool, "Grp14 Collision avoidance is required for point to multi-point communication channels.", "" ) \
DPOINT_DEFN( G14_SerialMinIdleTime, UI32, "Grp14 This parameter provides a minimum time between retries to connect to master, and allows grading of groups of slaves (e.g. on a per feeder basis) communicating with the same master.", "" ) \
DPOINT_DEFN( G14_SerialMaxRandomDelay, UI32, "Grp14 This parameter provides a maximum delay in addition to the Min Idle Time.", "" ) \
DPOINT_DEFN( G14_ModemPoweredFromExtLoad, Bool, "Grp14 Modem Powered From Ext Load", "" ) \
DPOINT_DEFN( G14_ModemUsedWithLeasedLine, Bool, "Grp14 Modem Used With Leased Line", "" ) \
DPOINT_DEFN( G14_ModemInitString, Str, "Grp14 Modem Init String", "" ) \
DPOINT_DEFN( G14_ModemDialOut, Bool, "Grp14 Modem Dial Out", "" ) \
DPOINT_DEFN( G14_ModemPreDialString, Str, "Grp14 Modem Pre Dial String", "" ) \
DPOINT_DEFN( G14_ModemDialNumber1, Str, "Grp14 Modem Dial Number1", "" ) \
DPOINT_DEFN( G14_ModemDialNumber2, Str, "Grp14 Modem Dial Number2", "" ) \
DPOINT_DEFN( G14_ModemDialNumber3, Str, "Grp14 Modem Dial Number3", "" ) \
DPOINT_DEFN( G14_ModemDialNumber4, Str, "Grp14 Modem Dial Number4", "" ) \
DPOINT_DEFN( G14_ModemDialNumber5, Str, "Grp14 Modem Dial Number5", "" ) \
DPOINT_DEFN( G14_ModemAutoDialInterval, UI32, "Grp14 Modem Auto Dial Interval time between failure to connect to one number in seconds. ", "" ) \
DPOINT_DEFN( G14_ModemConnectionTimeout, UI32, "Grp14 Modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G14_ModemMaxCallDuration, UI32, "Grp14 Modem Max Call Duration in minutes. If set to zero, then the timer is disabled. ", "" ) \
DPOINT_DEFN( G14_ModemResponseTime, UI32, "Grp14 Modem Response Time", "" ) \
DPOINT_DEFN( G14_ModemHangUpCommand, Str, "Grp14 Modem Hang Up Command", "" ) \
DPOINT_DEFN( G14_ModemOffHookCommand, Str, "Grp14 Modem Off Hook Command", "" ) \
DPOINT_DEFN( G14_ModemAutoAnswerOn, Str, "Grp14 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G14_ModemAutoAnswerOff, Str, "Grp14 Modem Auto Answer On", "" ) \
DPOINT_DEFN( G14_RadioPreamble, Bool, "Grp14 Radio Preamble", "" ) \
DPOINT_DEFN( G14_RadioPreambleChar, UI8, "Grp14 Radio Preamble Char", "" ) \
DPOINT_DEFN( G14_RadioPreambleRepeat, UI32, "Grp14 Radio Preamble Repeat", "" ) \
DPOINT_DEFN( G14_RadioPreambleLastChar, UI8, "Grp14 Radio Preamble Last Char", "" ) \
DPOINT_DEFN( G14_LanSpecifyIP, YesNo, "Grp14 Lan Specify IPv4", "" ) \
DPOINT_DEFN( G14_LanIPAddr, IpAddr, "Grp14 Lan IPv4 Addr", "" ) \
DPOINT_DEFN( G14_LanSubnetMask, IpAddr, "Grp14 Lan IPv4 Subnet Mask", "" ) \
DPOINT_DEFN( G14_LanDefaultGateway, IpAddr, "Grp14 Lan IPv4 Default Gateway", "" ) \
DPOINT_DEFN( G14_WlanNetworkSSID, Str, "Grp14 Wlan Network SSID", "" ) \
DPOINT_DEFN( G14_WlanNetworkAuthentication, CommsWlanNetworkAuthentication, "Grp14 Wlan Network Authentication", "" ) \
DPOINT_DEFN( G14_WlanDataEncryption, CommsWlanDataEncryption, "Grp14 Wlan Data Encryption", "" ) \
DPOINT_DEFN( G14_WlanNetworkKey, Str, "Grp14 Wlan Network Key", "" ) \
DPOINT_DEFN( G14_WlanKeyIndex, UI32, "Grp14 Wlan Key Index", "" ) \
DPOINT_DEFN( G14_PortLocalRemoteMode, LocalRemote, "Grp14 Each port has a local/remote mode. Note: it is possible CMS and DNP3 both use same physical port, they must sharing same local remote mode.", "" ) \
DPOINT_DEFN( G14_GPRSServiceProvider, Str, "Grp14 GPRS service provider name", "" ) \
DPOINT_DEFN( G14_GPRSUserName, Str, "Grp14 GPRS user name", "" ) \
DPOINT_DEFN( G14_GPRSPassWord, Str, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_SerialDebugMode, YesNo, "Grp14 serial debug mode selection", "" ) \
DPOINT_DEFN( G14_SerialDebugFileName, Str, "Grp14 No description", "" ) \
DPOINT_DEFN( G14_GPRSBaudRate, CommsSerialBaudRate, "Grp14 GPRS Baud Rate (default value is 115200)", "" ) \
DPOINT_DEFN( G14_GPRSConnectionTimeout, UI32, "Grp14 GPRS modem Connection Timeout: the length of time of cubicle will wait after dialing a number of a connection to be established", "" ) \
DPOINT_DEFN( G14_DNP3InputPipe, Str, "Grp14 DNP3 input pipe ", "" ) \
DPOINT_DEFN( G14_DNP3OutputPipe, Str, "Grp14 DNP3 output pipe", "" ) \
DPOINT_DEFN( G14_CMSInputPipe, Str, "Grp14 CMS Input Pipe", "" ) \
DPOINT_DEFN( G14_CMSOutputPipe, Str, "Grp14 CMS Output Pipe", "" ) \
DPOINT_DEFN( G14_HMIInputPipe, Str, "Grp14 HMI Input Pipe", "" ) \
DPOINT_DEFN( G14_HMIOutputPipe, Str, "Grp14 HMI Output Pipe", "" ) \
DPOINT_DEFN( G14_DNP3ChannelRequest, Str, "Grp14 DNP3 Channel Request", "" ) \
DPOINT_DEFN( G14_DNP3ChannelOpen, Str, "Grp14 DNP3 Channel Open", "" ) \
DPOINT_DEFN( G14_CMSChannelRequest, Str, "Grp14 CMS Channel Request", "" ) \
DPOINT_DEFN( G14_CMSChannelOpen, Str, "Grp14 CMS Channel Open", "" ) \
DPOINT_DEFN( G14_HMIChannelRequest, Str, "Grp14 HMI Channel Request", "" ) \
DPOINT_DEFN( G14_HMIChannelOpen, Str, "Grp14 HMI Channel Open", "" ) \
DPOINT_DEFN( G14_GPRSUseModemSetting, YesNo, "Grp14 GPRS Use Modem Setting, instead of saved RC10 settings. ", "" ) \
DPOINT_DEFN( G14_SerialFlowControlMode, CommsSerialFlowControlMode, "Grp14 Replaced SerialRTSMode element for DB v5+.\r\nWe don't choice RTS mode any more. Use flow control instead of it.", "" ) \
DPOINT_DEFN( G14_SerialDCDControlMode, CommsSerialDCDControlMode, "Grp14 Whether DCD blocks TX.  This point replaces SerialDCDMode.", "" ) \
DPOINT_DEFN( G14_T10BInputPipe, Str, "Grp14 IEC 60870-5-101 / -104 Input Pipe", "" ) \
DPOINT_DEFN( G14_T10BOutputPipe, Str, "Grp14 IEC 60870-5-101 / -104 Output Pipe", "" ) \
DPOINT_DEFN( G14_T10BChannelRequest, Str, "Grp14 IEC 60870-5-101 -104 Channel Request", "" ) \
DPOINT_DEFN( G14_T10BChannelOpen, Str, "Grp14 IEC 60870-5-101 / -104 Channel Open", "" ) \
DPOINT_DEFN( G14_P2PInputPipe, Str, "Grp14 P2P input pipe ", "" ) \
DPOINT_DEFN( G14_P2POutputPipe, Str, "Grp14 P2P output pipe ", "" ) \
DPOINT_DEFN( G14_P2PChannelRequest, Str, "Grp14 P2P Channel Request", "" ) \
DPOINT_DEFN( G14_P2PChannelOpen, Str, "Grp14 P2P Channel Open", "" ) \
DPOINT_DEFN( G14_PGEInputPipe, Str, "Grp14 PGE Input Pipe", "" ) \
DPOINT_DEFN( G14_PGEOutputPipe, Str, "Grp14 PGE output pipe ", "" ) \
DPOINT_DEFN( G14_PGEChannelRequest, Str, "Grp14 PGE Channel Request", "" ) \
DPOINT_DEFN( G14_PGEChannelOpen, Str, "Grp14 PGE Channel Open", "" ) \
DPOINT_DEFN( G14_LanProvideIP, YesNo, "Grp14 When operating in access point mode, provide IP addresses automatically via DHCP.", "" ) \
DPOINT_DEFN( G14_LanSpecifyIPv6, YesNo, "Grp14 Lan Specify IPv6", "" ) \
DPOINT_DEFN( G14_LanIPv6Addr, Ipv6Addr, "Grp14 LAN IPv6 Address", "" ) \
DPOINT_DEFN( G14_LanPrefixLength, UI8, "Grp14 LAN Prefix Length", "" ) \
DPOINT_DEFN( G14_LanIPv6DefaultGateway, Ipv6Addr, "Grp14 LAN IPv6 Default Gateway", "" ) \
DPOINT_DEFN( G14_LanIpVersion, IpVersion, "Grp14 LAN IP version", "" ) \
DPOINT_DEFN( LanBConfigType, UsbPortConfigType, "LAN2 port config type", "" ) \
DPOINT_DEFN( CommsChEvGrp14, ChangeEvent, "This datapoint is used to log 'batch' changes to comms group 14 settings.", "" ) \
DPOINT_DEFN( LogHrm64, LogHrm64, "Internal datapoint for passing abbreviated PQDIF events to the logging process for harmonic disturbances with up to 64 harmonics.", "" ) \
DPOINT_DEFN( TripHrmComponentExt, UI32, "Harmonic component that caused the trip (RC20)\r\n\r\n0:No harmonic trip, or switch has been closed again.\r\n1..3:THD(a, b, c)\r\n4..7:TDD(a, b, c, n)\r\n8..64:I(a, b, c, n) I2, I3, I4, I5, I6, I7, I8, I9, I10, I11, I12, I13, I14, I15\r\n65..106:V(a, b, c)  V2, V3, V4, V5, V6, V7, V8, V9, V10, V11, V12, V13, V14, V15\r\n107..298:I(a, b, c, n) I16, I17, I18, ..., I63\r\n299..442:V(a, b, c)  V16, V17, V18, ..., V63\r\n\r\n", "" ) \
DPOINT_DEFN( TripHrmComponentAExt, UI32, "Harmonic component that caused the trip on phase A in a single-triple configuration (RC20)", "" ) \
DPOINT_DEFN( TripHrmComponentBExt, UI32, "Harmonic component that caused the trip on phase B in a single-triple configuration (RC20)", "" ) \
DPOINT_DEFN( TripHrmComponentCExt, UI32, "Harmonic component that caused the trip on phase C in a single-triple configuration (RC20)", "" ) \
DPOINT_DEFN( SwgUseCalibratedValue, EnDis, "If it is set to 0, it will use the Switch gear default  calibration coefficient. \r\nif it is set to 1, it will use the  Switch gear current  calibration coefficient. ", "" ) \
DPOINT_DEFN( SimUseCalibratedValue, EnDis, "If it is set to 0, it will use the Sim default  calibration coefficient. \r\nif it is set to 1, it will use the  Sim current  calibration coefficient. ", "" ) \
DPOINT_DEFN( RelayUseCalibratedValue, EnDis, "If it is set to 0, it will use the Relay default  calibration coefficient. \r\nif it is set to 1, it will use the  Relay current  calibration coefficient. ", "" ) \
DPOINT_DEFN( LanB_MAC, Str, "MAC address of LAN2 port", "" ) \
DPOINT_DEFN( EnableCalibration, EnDis, "It is the data point to enable/disable the calibration", "" ) \
DPOINT_DEFN( UpdateFPGACalib, EnDis, "Update FPGA Calibration Value", "" ) \
DPOINT_DEFN( SigCtrlROCOFOn, Signal, "ROCOF protection element is switched on", "" ) \
DPOINT_DEFN( SigSEFProtMode, Signal, "Set TRUE by Prot config when SEF elements are being used for Protection. Map shows any of R, L, C or S.\r\nSet FALSE by Prot config when SEF elements are NOT being used for Protection. Map shows other than R, L, C or S.\r\n", "" ) \
DPOINT_DEFN( SigCtrlVVSOn, Signal, "Voltage vector shift protection element is on", "" ) \
DPOINT_DEFN( SigPickupROCOF, Signal, "Pickup output of ROCOF activated", "" ) \
DPOINT_DEFN( SigPickupVVS, Signal, "Pickup output of VVS activated", "" ) \
DPOINT_DEFN( SigOpenROCOF, Signal, "Open due to ROCOF tripping", "" ) \
DPOINT_DEFN( SigOpenVVS, Signal, "Open due to VVS tripping", "" ) \
DPOINT_DEFN( SigAlarmROCOF, Signal, "Alarm output of ROCOF activated", "" ) \
DPOINT_DEFN( SigAlarmVVS, Signal, "Alarm output of VVS activated", "" ) \
DPOINT_DEFN( CntrROCOFTrips, I32, "Fault counter of ROCOF trips", "" ) \
DPOINT_DEFN( CntrVVSTrips, I32, "Fault counter of VVS trips", "" ) \
DPOINT_DEFN( TripMaxROCOF, UI32, "Maximum ROCOF value for the most recent ROCOF protection event", "" ) \
DPOINT_DEFN( TripMaxVVS, UI32, "Maximum VVS value for the most recent VVS protection event", "" ) \
DPOINT_DEFN( PeakPower, UI16, "Peak power consumed by the cubicle's power supply", "" ) \
DPOINT_DEFN( ExternalSupplyPower, UI16, "Average amount of power consumed by the external supply", "" ) \
DPOINT_DEFN( BatteryCapacityConfidence, BatteryCapacityConfidence, "Describes how confident the PSC is in the battery's confidence: unknown, not confident, or confident.", "" ) \
DPOINT_DEFN( CanBusHighPower, Signal, "The power on the CAN bus has exceeded 100W.", "" ) \
DPOINT_DEFN( IdPSCNumModel, UI32, "First component of the PSC serial number for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCNumPlant, UI32, "Second field of the PSC serial number for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCNumDate, UI32, "Third file for the PSC serial number for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCNumSeq, UI32, "Fourth field for the PSC serial number for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCSwVer1, UI32, "First field of the PSC firmware version for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCSwVer2, UI32, "Second field of the PSC firmware version for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCSwVer3, UI32, "Third field of the PSC firmware version for IEC104 reporting.", "" ) \
DPOINT_DEFN( IdPSCSwVer4, UI32, "Fourth field of the PSC firmware version for IEC104 reporting.", "" ) \
DPOINT_DEFN( SigCtrlPMUOn, Signal, "PMU function is switched on. When disabled PMU application will only monitor for configuration datapoint changes.", "" ) \
DPOINT_DEFN( SigCtrlPMUProcessingOn, Signal, "PMU processing is switched on. When disabled the PMU module is enabled but data processing and transmission does not occur. This flag is not persistent and resets when the SigCtrlPMUOn is changed.", "" ) \
DPOINT_DEFN( PMUStationName, Str, "PMU station name (from CID file, \"1-Station A\" - \"Station A\" would be station name)", "" ) \
DPOINT_DEFN( PMUStationIDCode, UI16, "PMU ID number: 1-65534 (from CID file, \"1-Station A\" - \"1\" would be station id code)", "" ) \
DPOINT_DEFN( PMUNominalFrequency, UI8, "Fundamental frequency (50Hz or 60Hz)", "" ) \
DPOINT_DEFN( PMUMessageRate, UI8, "Selects the message rate in frames per second for synchrophasor data streaming. For 50Hz, 10,25,50. For 60Hz, 10,12,15,20,30,60", "" ) \
DPOINT_DEFN( PMUPerfClass, PMUPerfClass, "The M (Narrow Bandwidth setting) represents filters with a cut off frequency approximately 1/4 of message rate. The P (Fast Response setting) represents filters with a higher cut off frequency.", "" ) \
DPOINT_DEFN( PMUDataSetDef, NamedVariableListDef, "Defines the PMU DataSet in the form of an IEC 61850 Named Variable List. This datapoint is typically populated from the 61850 CID file.", "" ) \
DPOINT_DEFN( PMURequireCIDConfig, EnDis, "Selects if the PMU is must be configured by the 61850 CID file. If Disabled then the PMU will start using the existing datapoint values if they are available. The PMU will still be configured from the CID file if the loaded CID contains a PMU configuration, however the PMU will not wait for the CID file to be loaded if the datapoints contain valid configuration.", "" ) \
DPOINT_DEFN( PMUCommsPort, CommsPort, "Communication port to for PMU communications. Only Ethernet based port can be selected.", "" ) \
DPOINT_DEFN( PMUIPVersion, IpVersion, "IPv4 or IPv6, TMW only support IPv4 currently. Disabled will use MAC address for non-routed SV", "" ) \
DPOINT_DEFN( PMUIPAddrPDC, IpAddr, "IPv4 Address of PDC used when PMUIPVersion=IPv4", "" ) \
DPOINT_DEFN( PMUIP6AddrPDC, Ipv6Addr, "IPv6 Address of PDC used when PMUIPVersion=IPv6", "" ) \
DPOINT_DEFN( PMUMACAddrPDC, Str, "MAC Address of PDC used when PMUIPVersion=Disabled", "" ) \
DPOINT_DEFN( PMUOutputPort, UI16, "PMU UDP Port number (for 90-5 SAV Data)", "" ) \
DPOINT_DEFN( PMUControlPort, UI16, "PMU TCP Port number (for IEEE C37.118.2)", "" ) \
DPOINT_DEFN( PMUConfigVersion, UI16, "Configuration change counter. IEEE C37.118.2 requires that the value must update for each changed configuration packet sent to a PDC", "" ) \
DPOINT_DEFN( PMUVLANAppId, UI16, "PMU 90-5 VLAN AppId (from CID file)", "" ) \
DPOINT_DEFN( PMUVLANVID, UI16, "PMU 90-5 VLAN VID (from CID file)", "" ) \
DPOINT_DEFN( PMUVLANPriority, UI8, "PMU 90-5 VLAN Priority (from CID file)", "" ) \
DPOINT_DEFN( PMUSmvOpts, UI16, "Contains the value of the 'SmvOpts' attribute from the PMU SampledValue Control Block", "" ) \
DPOINT_DEFN( PMUConfRev, UI32, "Contains the value of the 'confRev' attribute from the PMU SampledValue Control Block", "" ) \
DPOINT_DEFN( PMUNumberOfASDU, UI8, "Number of ASDU to be transmitted in 90-5 frames. Additional ASDU will contain the previous sample set values.", "" ) \
DPOINT_DEFN( PMUQuality, PMUQuality, "PMU data quality", "" ) \
DPOINT_DEFN( PMUStatus, PMUStatus, "Status of the PMU module", "" ) \
DPOINT_DEFN( PMU_Ua, UI32, "Synchrophasor Voltages: Ua", "" ) \
DPOINT_DEFN( PMU_Ub, UI32, "Synchrophasor Voltages: Ub", "" ) \
DPOINT_DEFN( PMU_Uc, UI32, "Synchrophasor Voltages: Uc", "" ) \
DPOINT_DEFN( PMU_Ur, UI32, "Synchrophasor Voltages: Ur", "" ) \
DPOINT_DEFN( PMU_Us, UI32, "Synchrophasor Voltages: Us", "" ) \
DPOINT_DEFN( PMU_Ut, UI32, "Synchrophasor Voltages: Ut", "" ) \
DPOINT_DEFN( PMU_Ia, UI32, "Synchrophasor Currents: Ia", "" ) \
DPOINT_DEFN( PMU_Ib, UI32, "Synchrophasor Currents: Ib", "" ) \
DPOINT_DEFN( PMU_Ic, UI32, "Synchrophasor Currents: Ic", "" ) \
DPOINT_DEFN( PMU_A_Ua, I32, "Synchrophasor Angles: Ua", "" ) \
DPOINT_DEFN( PMU_A_Ub, I32, "Synchrophasor Angles: Ub", "" ) \
DPOINT_DEFN( PMU_A_Uc, I32, "Synchrophasor Angles: Uc", "" ) \
DPOINT_DEFN( PMU_A_Ur, I32, "Synchrophasor Angles: Ur", "" ) \
DPOINT_DEFN( PMU_A_Us, I32, "Synchrophasor Angles: Us", "" ) \
DPOINT_DEFN( PMU_A_Ut, I32, "Synchrophasor Angles: Ut", "" ) \
DPOINT_DEFN( PMU_A_Ia, I32, "Synchrophasor Angles: Ia", "" ) \
DPOINT_DEFN( PMU_A_Ib, I32, "Synchrophasor Angles: Ib", "" ) \
DPOINT_DEFN( PMU_A_Ic, I32, "Synchrophasor Angles: Ic", "" ) \
DPOINT_DEFN( PMU_F_ABC, UI32, "Synchrophasor Freq: ABC", "" ) \
DPOINT_DEFN( PMU_F_RST, UI32, "Synchrophasor Freq: RST", "" ) \
DPOINT_DEFN( PMU_ROCOF_ABC, I32, "Synchrophasor ROCOF: ABC", "" ) \
DPOINT_DEFN( PMU_ROCOF_RST, I32, "Synchrophasor ROCOF: RST", "" ) \
DPOINT_DEFN( PMULoadCIDConfigStatus, PMUConfigStatus, "Indicates to the PMU process the current configuration status of the PMU related datapoints from the 61850 CID file. This is set by s61850App after configuring the PMU related datapoints from the CID file. The PMU process will not try to begin operating until the value of this point is 1. Handled values are -1 = configuration failed, 0 = unconfigured, 1 = configured.", "" ) \
DPOINT_DEFN( PMU_Timestamp, TimeStamp, "Timestamp for the Synchrophasor Voltage, Current, and Frequency datapoint values", "" ) \
DPOINT_DEFN( USBL_IPAddr, IpAddr, "It is the USB local port IP address when USBL Ethernet driver is used. ", "" ) \
DPOINT_DEFN( USBL_PortNumber, UI16, "TCP Port Number for USB Local port when used as ethernet. ", "" ) \
DPOINT_DEFN( SigRTCTimeNotSync, Signal, "RTC is not synchronized. The time is in 1970 by default. It is set to 1 when RTC is found to have 1970 as the system time.", "" ) \
DPOINT_DEFN( PMU_IEEE_Stat, UI16, "Holds the IEEE C37.118.2 format stat value for the last synchrophasor values stored to the database.", "" ) \
DPOINT_DEFN( USBL_IPAddrV6, Ipv6Addr, "USB local port IPv6 address.", "" ) \
DPOINT_DEFN( HTTPServerPort, UI16, "It is the HTTp server port to be opened for user connection.", "" ) \
DPOINT_DEFN( USBL_IpVersion, IpVersion, "USB local port IP version: V4 or V6", "" ) \
DPOINT_DEFN( SigCorruptedPartition, Signal, "Warning to signal that the main RLM-20 partition has been corrupted and that the RLM is currently booted from partition 2", "" ) \
DPOINT_DEFN( SigRLM20UpgradeFailure, Signal, "Warning displayed when relay fails to boot from the main partition after an update", "" ) \
DPOINT_DEFN( SigUbootConsoleActive, Signal, "Signal used to determine whether or not the RS232 console is enabled in U-BOOT", "" ) \
DPOINT_DEFN( SigRlm20nor2backupReqd, Signal, "An update has recently been completed on the RLM-20 and a backup of nor1 to nor2 is still required", "" ) \
DPOINT_DEFN( LineSupplyRange, LineSupplyRange, "Input range that the power supply is currently operating off: 110V, 220V, DC, Detecting, or Off.", "" ) \
DPOINT_DEFN( PscDcCalibCoef, UI32, "Calibration coefficient for the DC input selection on the PSC", "" ) \
DPOINT_DEFN( SigMalfAnalogBoard, Signal, "Analog board is missing or throws communication error", "" ) \
DPOINT_DEFN( TmLok, TimeSyncUnlockedTime, "Indicates a range of seconds since loss of time source sync was detected. Starting from offset 'UnlockedLessThan10s' the sequence of values matches the IEEE C37.118.2 unlocked time field.", "" ) \
DPOINT_DEFN( SigACOMakeBeforeBreak, Signal, "Signal version of the ACOMakeBeforeBreak data point, for use with Io and Logic.", "" ) \
DPOINT_DEFN( SigGpsEnable, Signal, "Signal to enable GPS", "" ) \
DPOINT_DEFN( SigWlanEnable, Signal, "Signal to enable WLAN", "" ) \
DPOINT_DEFN( SigMobileNetworkEnable, Signal, "Signal to enable Mobile Network", "" ) \
DPOINT_DEFN( MobileNetwork_SerialPort1, Str, "MobileNetwork SerialPort1", "" ) \
DPOINT_DEFN( MobileNetwork_SerialPort2, Str, "MobileNetwork SerialPort2", "" ) \
DPOINT_DEFN( MobileNetwork_SerialPort3, Str, "MobileNetwork SerialPort3", "" ) \
DPOINT_DEFN( CanSimSetTimeStamp, TimeStamp, "It is the timestamp version of CanSimSetTimeDate", "" ) \
DPOINT_DEFN( PMU_In, UI32, "Synchrophasor Currents: In", "" ) \
DPOINT_DEFN( PMU_A_In, I32, "Synchrophasor Angles: In", "" ) \
DPOINT_DEFN( FpgaSyncControllerDelay, UI32, "Delay that is added as an offset to the PPS time in the FPGA. Configured in FPGA register 10.", "" ) \
DPOINT_DEFN( FpgaSyncSensorDelay, UI32, "Delay that is added as an offset to the PPS time in the FPGA. Configured in FPGA register 10.", "" ) \
DPOINT_DEFN( CbfBackupTripMode, OnOff, "Enables or disables CBF backup trip mode", "" ) \
DPOINT_DEFN( CbfPhaseCurrent, UI32, "the pickup current threshold for phase currents in CBF (Ia/b/c Backup Pickup, A)", "" ) \
DPOINT_DEFN( CbfEfCurrent, UI32, "the pickup current threshold for earth fault currents in CBF (In Backup Pickup, A)", "" ) \
DPOINT_DEFN( CbfCurrentCheckMode, CbfCurrentMode, "Current mode checks if any of the enabled phase currents (OC) or residual currents (EF) exceed the user set threshold", "" ) \
DPOINT_DEFN( CbfFailBackupTrip, CBF_backup_trip, "Selection of the type of mode that the CBF will be set on for backup trip (CBF malfunction, CBF malf/current and Current)", "" ) \
DPOINT_DEFN( CbfBackupTripTime, UI32, "The time before the CBF backup time is triggered ", "" ) \
DPOINT_DEFN( SigCbfBackupTripBlocked, Signal, "Block backup trip for logic that blocks the CBF backup trip mode signal", "" ) \
DPOINT_DEFN( SigPickupCbfDefault, Signal, "CBF Default Pickup", "" ) \
DPOINT_DEFN( SigPickupCbfBackupTrip, Signal, "Backup trip Pickup signal", "" ) \
DPOINT_DEFN( SigCBFMalfunction, Signal, "CBF malfunction has occured. CBF malfunction occurs when the SIM retries 3 times and the recloser does not indicate open or there is current when the re-closer is open", "" ) \
DPOINT_DEFN( SigCBFMalfCurrent, Signal, "CBF Malfunction due to current. Fault due to Current -- Re-purpose this point", "" ) \
DPOINT_DEFN( SigCBFBackupTrip, Signal, "CBF Backup Trip has occurred", "" ) \
DPOINT_DEFN( SigCBFMalf, Signal, "parent signal for CBF Malfunctions", "" ) \
DPOINT_DEFN( DefGWPriority0, CommsPort, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWPriority1, CommsPort, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWPriority2, CommsPort, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWPriority3, CommsPort, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWStatus0, ActiveInactive, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWStatus1, ActiveInactive, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWStatus2, ActiveInactive, "System Default Gateway", "" ) \
DPOINT_DEFN( DefGWStatus3, ActiveInactive, "System Default Gateway", "" ) \
DPOINT_DEFN( SigCbfBackupTripMode, Signal, "Signal to enable CBF Backup Trip mode On (works with CbfBackupTripMode #11403) takes care of logic and I/O", "" ) \
DPOINT_DEFN( UseCentralCredentialServer, EnDis, "It is the data point to enable/disable the centralized LDAP user credential server", "" ) \
DPOINT_DEFN( UserCredentialOperMode, CredentialOperationMode, "It is the user credential mode", "" ) \
DPOINT_DEFN( CredentialOperName, Str, "it is a temporary holder for user name in credential operation. It should be set to   NULL string when the credential operation mode is in standby mode.", "" ) \
DPOINT_DEFN( CredentialOperFirstPassword, Str, "It is the first password used in credential operation", "" ) \
DPOINT_DEFN( CredentialOperSecondPassword, Str, "It is the second password used in credential operations. it is available for \"add new user\" and \"change password\"", "" ) \
DPOINT_DEFN( CredentialOperRoleBitMap, RoleBitMap, "Its stores the user credential update on role assignment bitmap. ", "" ) \
DPOINT_DEFN( SaveUserCredentialOper, UI8, "It is a toggle point to save the user credential change", "" ) \
DPOINT_DEFN( UserAccessState, UserCredentialResultStatus, "It is the user access state for the user credential operations", "" ) \
DPOINT_DEFN( SigUSBOCOnboardA, Signal, "USB A Overcurrent in RC20", "" ) \
DPOINT_DEFN( SigUSBOCOnboardB, Signal, "USB B Overcurrent in RC20", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGConnectionEnable, EnDis, "Grp1 IEC 60870-5-104 SCADA Redundancy Group enable or disable this connection", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGAllowControls, EnDis, "Grp1 IEC 60870-5-104 SCADA Redundancy Group allow or disable controls for this connection", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGConnectionName, Str, "Grp1 IEC 60870-5-104 SCADA Redundancy Group connection name", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGChannelPort, CommsPort, "Grp1 IEC 60870-5-104 SCADA Redundancy Group physical port selected for communications (eg USBA, LAN)", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGIpVersion, IpVersion, "Grp1 IEC 60870-5-104 SCADA Redundancy Group IP Version: IPv4 | IPv6", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGSlaveTCPPort, UI16, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Slave TCP Port Number (1024 - 65535)", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGConstraints, ConstraintT10BRG, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Constraints", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGOriginatorAddress, UI8, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Originator Address", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGMasterTCPPort, UI16, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Master TCP Port Number", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGMasterIPv4Addr, IpAddr, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Master IPv4 Address", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGMasterIPv6Addr, Ipv6Addr, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Master IPv6 Address", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGStatusConnectionState, ConnectionStateT10BRG, "Grp1 IEC 60870-5-104 SCADA Redundancy Group network connection state. Can be:\r\n * Closed - Not in Testing or Started state\r\n * Testing - Connected and servicing keep alive, no data or controls\r\n * Started - Connected and exchanging data and controls", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGStatusOriginatorAddress, UI8, "Grp1 IEC 60870-5-104 SCADA Redundancy Group Originator Address of last connected Master", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGStatusMasterTCPPort, UI16, "Grp1 IEC 60870-5-104 SCADA Redundancy Group TCP Port of last connected Master", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGStatusMasterIPv4Addr, IpAddr, "Grp1 IEC 60870-5-104 SCADA Redundancy Group IPv4 address of last connected Master", "" ) \
DPOINT_DEFN( G1_ScadaT10BRGStatusMasterIPv6Addr, Ipv6Addr, "Grp1 IEC 60870-5-104 SCADA Redundancy Group IPv6 address of last connected master", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGConnectionEnable, EnDis, "Grp2 IEC 60870-5-104 SCADA Redundancy Group enable or disable this connection", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGAllowControls, EnDis, "Grp2 IEC 60870-5-104 SCADA Redundancy Group allow or disable controls for this connection", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGConnectionName, Str, "Grp2 IEC 60870-5-104 SCADA Redundancy Group connection name", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGChannelPort, CommsPort, "Grp2 IEC 60870-5-104 SCADA Redundancy Group physical port selected for communications (eg USBA, LAN)", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGIpVersion, IpVersion, "Grp2 IEC 60870-5-104 SCADA Redundancy Group IP Version: IPv4 | IPv6", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGSlaveTCPPort, UI16, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Slave TCP Port Number (1024 - 65535)", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGConstraints, ConstraintT10BRG, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Constraints", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGOriginatorAddress, UI8, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Originator Address", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGMasterTCPPort, UI16, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Master TCP Port Number", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGMasterIPv4Addr, IpAddr, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Master IPv4 Address", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGMasterIPv6Addr, Ipv6Addr, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Master IPv6 Address", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGStatusConnectionState, ConnectionStateT10BRG, "Grp2 IEC 60870-5-104 SCADA Redundancy Group network connection state. Can be:\r\n * Closed - Not in Testing or Started state\r\n * Testing - Connected and servicing keep alive, no data or controls\r\n * Started - Connected and exchanging data and controls", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGStatusOriginatorAddress, UI8, "Grp2 IEC 60870-5-104 SCADA Redundancy Group Originator Address of last connected Master", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGStatusMasterTCPPort, UI16, "Grp2 IEC 60870-5-104 SCADA Redundancy Group TCP Port of last connected Master", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGStatusMasterIPv4Addr, IpAddr, "Grp2 IEC 60870-5-104 SCADA Redundancy Group IPv4 address of last connected Master", "" ) \
DPOINT_DEFN( G2_ScadaT10BRGStatusMasterIPv6Addr, Ipv6Addr, "Grp2 IEC 60870-5-104 SCADA Redundancy Group IPv6 address of last connected master", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGConnectionEnable, EnDis, "Grp3 IEC 60870-5-104 SCADA Redundancy Group enable or disable this connection", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGAllowControls, EnDis, "Grp3 IEC 60870-5-104 SCADA Redundancy Group allow or disable controls for this connection", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGConnectionName, Str, "Grp3 IEC 60870-5-104 SCADA Redundancy Group connection name", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGChannelPort, CommsPort, "Grp3 IEC 60870-5-104 SCADA Redundancy Group physical port selected for communications (eg USBA, LAN)", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGIpVersion, IpVersion, "Grp3 IEC 60870-5-104 SCADA Redundancy Group IP Version: IPv4 | IPv6", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGSlaveTCPPort, UI16, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Slave TCP Port Number (1024 - 65535)", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGConstraints, ConstraintT10BRG, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Constraints", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGOriginatorAddress, UI8, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Originator Address", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGMasterTCPPort, UI16, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Master TCP Port Number", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGMasterIPv4Addr, IpAddr, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Master IPv4 Address", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGMasterIPv6Addr, Ipv6Addr, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Master IPv6 Address", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGStatusConnectionState, ConnectionStateT10BRG, "Grp3 IEC 60870-5-104 SCADA Redundancy Group network connection state. Can be:\r\n * Closed - Not in Testing or Started state\r\n * Testing - Connected and servicing keep alive, no data or controls\r\n * Started - Connected and exchanging data and controls", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGStatusOriginatorAddress, UI8, "Grp3 IEC 60870-5-104 SCADA Redundancy Group Originator Address of last connected Master", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGStatusMasterTCPPort, UI16, "Grp3 IEC 60870-5-104 SCADA Redundancy Group TCP Port of last connected Master", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGStatusMasterIPv4Addr, IpAddr, "Grp3 IEC 60870-5-104 SCADA Redundancy Group IPv4 address of last connected Master", "" ) \
DPOINT_DEFN( G3_ScadaT10BRGStatusMasterIPv6Addr, Ipv6Addr, "Grp3 IEC 60870-5-104 SCADA Redundancy Group IPv6 address of last connected master", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGConnectionEnable, EnDis, "Grp4 IEC 60870-5-104 SCADA Redundancy Group enable or disable this connection", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGAllowControls, EnDis, "Grp4 IEC 60870-5-104 SCADA Redundancy Group allow or disable controls for this connection", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGConnectionName, Str, "Grp4 IEC 60870-5-104 SCADA Redundancy Group connection name", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGChannelPort, CommsPort, "Grp4 IEC 60870-5-104 SCADA Redundancy Group physical port selected for communications (eg USBA, LAN)", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGIpVersion, IpVersion, "Grp4 IEC 60870-5-104 SCADA Redundancy Group IP Version: IPv4 | IPv6", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGSlaveTCPPort, UI16, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Slave TCP Port Number (1024 - 65535)", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGConstraints, ConstraintT10BRG, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Constraints", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGOriginatorAddress, UI8, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Originator Address", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGMasterTCPPort, UI16, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Master TCP Port Number", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGMasterIPv4Addr, IpAddr, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Master IPv4 Address", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGMasterIPv6Addr, Ipv6Addr, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Master IPv6 Address", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGStatusConnectionState, ConnectionStateT10BRG, "Grp4 IEC 60870-5-104 SCADA Redundancy Group network connection state. Can be:\r\n * Closed - Not in Testing or Started state\r\n * Testing - Connected and servicing keep alive, no data or controls\r\n * Started - Connected and exchanging data and controls", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGStatusOriginatorAddress, UI8, "Grp4 IEC 60870-5-104 SCADA Redundancy Group Originator Address of last connected Master", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGStatusMasterTCPPort, UI16, "Grp4 IEC 60870-5-104 SCADA Redundancy Group TCP Port of last connected Master", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGStatusMasterIPv4Addr, IpAddr, "Grp4 IEC 60870-5-104 SCADA Redundancy Group IPv4 address of last connected Master", "" ) \
DPOINT_DEFN( G4_ScadaT10BRGStatusMasterIPv6Addr, Ipv6Addr, "Grp4 IEC 60870-5-104 SCADA Redundancy Group IPv6 address of last connected master", "" ) \
DPOINT_DEFN( ScadaT10BEnableGroup1, EnDis, "IEC 60870-5-104 Redundancy Group 1 enabled for SCADA", "" ) \
DPOINT_DEFN( ScadaT10BEnableGroup2, EnDis, "IEC 60870-5-104 Redundancy Group 2 enabled for SCADA", "" ) \
DPOINT_DEFN( PinUpdateHMI1, Str, "Volatile datapoint to receive the PIN from HMI (1)", "" ) \
DPOINT_DEFN( PinUpdateHMI2, Str, "Volatile datapoint to receive the PIN from HMI (2)", "" ) \
DPOINT_DEFN( PukUpdateHMI1, Str, "Volatile datapoint to receive the PUK from HMI (1)", "" ) \
DPOINT_DEFN( PukUpdateHMI2, Str, "Volatile datapoint to receive the PUK from HMI (2)", "" ) \
DPOINT_DEFN( PinStore, Str, "Stores the confirmed value of PIN entered from HMI or CMS", "" ) \
DPOINT_DEFN( PukStore, Str, "Stores the confirmed value of PUK entered from HMI or CMS", "" ) \
DPOINT_DEFN( PinUpdateCMS, Str, "PIN updated from the CMS user interface. Non Vol so that CMS can upload it once set.", "" ) \
DPOINT_DEFN( PukUpdateCMS, Str, "PUK updated from the CMS user interface", "" ) \
DPOINT_DEFN( PinResultHMI, UI8, "Status of processing of the PIN entry from the HMI", "" ) \
DPOINT_DEFN( PukResultHMI, UI8, "Status of processing of the PUK entry from the HMI", "" ) \
DPOINT_DEFN( PinResultCMS, UI8, "Status of processing of the PIN entry from the CMS", "" ) \
DPOINT_DEFN( PukResultCMS, UI8, "Status of processing of the PUK entry from the CMS", "" ) \
DPOINT_DEFN( SigNmSimError, Signal, "Reports SIM error (0 or 1) for Network Modem interface.", "" ) \
DPOINT_DEFN( ScadaT10BConnectionMethodGroup1, ConnectionMethodT10BRG, "IEC 60870-5-104 Redundancy Group 1 connection method for SCADA\r\n", "" ) \
DPOINT_DEFN( ScadaT10BConnectionMethodGroup2, ConnectionMethodT10BRG, "IEC 60870-5-104 Redundancy Group 2 connection method for SCADA", "" ) \
DPOINT_DEFN( SigCtrlPDOPOn, Signal, "PDOP protection element is switched on", "" ) \
DPOINT_DEFN( SigCtrlPDUPOn, Signal, "PDUP protection element is switched on", "" ) \
DPOINT_DEFN( SigPickupPDOP, Signal, "Pickup output of PDOP activated", "" ) \
DPOINT_DEFN( SigPickupPDUP, Signal, "Pickup output of PDUP activated", "" ) \
DPOINT_DEFN( SigOpenPDOP, Signal, "Open due to PDOP tripping", "" ) \
DPOINT_DEFN( SigOpenPDUP, Signal, "Open due to PDUP tripping", "" ) \
DPOINT_DEFN( SigAlarmPDOP, Signal, "Alarm output of PDOP activated", "" ) \
DPOINT_DEFN( SigAlarmPDUP, Signal, "Alarm output of PDUP activated", "" ) \
DPOINT_DEFN( CntrPDOPTrips, I32, "Fault counter of PDOP trips", "" ) \
DPOINT_DEFN( CntrPDUPTrips, I32, "Fault counter of PDUP trips", "" ) \
DPOINT_DEFN( TripMaxPDOP, UI32, "Maximum PDOP value for the most recent PDOP protection event", "" ) \
DPOINT_DEFN( TripAnglePDOP, I32, "PDOP angle value for the most recent PDOP protection event", "" ) \
DPOINT_DEFN( TripMinPDUP, UI32, "Minimum PDUP value for the most recent PDUP protection event", "" ) \
DPOINT_DEFN( TripAnglePDUP, I32, "PDUP angle value for the most recent PDUP protection event", "" ) \
DPOINT_DEFN( MeasAngle3phase, I32, "3 phase angle measurement", "" ) \
DPOINT_DEFN( PinLastWriteStatus, UI8, "The last status result from a PIN write to the SIM. ", "" ) \
DPOINT_DEFN( PukLastWriteStatus, UI8, "The last status result from a PUK write to the SIM", "" ) \
DPOINT_DEFN( PinLastWriteString, Str, "The Last PIN value that was written to the SIM (as string)", "" ) \
DPOINT_DEFN( PukLastWriteString, Str, "The Last PUK value that was written to the SIM (as string)", "" ) \
DPOINT_DEFN( LinkStatusLAN, UI8, "Link status of LAN", "" ) \
DPOINT_DEFN( LinkStatusLAN2, UI8, "Link Status of LAN2", "" ) \
DPOINT_DEFN( SigSIMCardError, Signal, "Signal to represent a SIM Card Error. This is set for the SIM Card error states like Missing or Faulty, and also for the PIN and/or PUK required states.\r\nSignal is required for Warnings and for use by Logic and IO, also available for SGA.", "" ) \
DPOINT_DEFN( SigSIMCardPINReqd, Signal, "SIM Cards requires PIN entry to operate,", "" ) \
DPOINT_DEFN( SigSIMCardPINError, Signal, "SIM Card PIN entry failed", "" ) \
DPOINT_DEFN( SigSIMCardBlockedByPIN, Signal, "SIM Card is blocked by 3 PIN failed attempts. Requires PUK entry.", "" ) \
DPOINT_DEFN( SigSIMCardPUKError, Signal, "SIM card PUK Entry failed.", "" ) \
DPOINT_DEFN( SigSIMCardBlockedPerm, Signal, "The SIM card has had more than 10 failed PUK entry attempts and is permanently blocked, i.e. destroyed. A new SIM is needed.", "" ) \
DPOINT_DEFN( GPRSServiceProvider2, Str, "Mobile GPRS Service Provider 2", "" ) \
DPOINT_DEFN( GPRSServiceProvider3, Str, "Mobile GPRS Service Provider 3", "" ) \
DPOINT_DEFN( GPRSServiceProvider4, Str, "Mobile GPRS Service Provider 4", "" ) \
DPOINT_DEFN( GPRSServiceProvider5, Str, "Mobile GPRS Service Provider 5", "" ) \
DPOINT_DEFN( GPRSServiceProvider6, Str, "Mobile GPRS Service Provider 6", "" ) \
DPOINT_DEFN( GPRSServiceProvider7, Str, "Mobile GPRS Service Provider 7", "" ) \
DPOINT_DEFN( GPRSServiceProvider8, Str, "Mobile GPRS Service Provider 8", "" ) \
DPOINT_DEFN( GPRSUserName2, Str, "Mobile GPRS user name 2", "" ) \
DPOINT_DEFN( GPRSUserName3, Str, "Mobile GPRS user name 3", "" ) \
DPOINT_DEFN( GPRSUserName4, Str, "Mobile GPRS user name 4", "" ) \
DPOINT_DEFN( GPRSUserName5, Str, "Mobile GPRS user name 5", "" ) \
DPOINT_DEFN( GPRSUserName6, Str, "Mobile GPRS user name 6", "" ) \
DPOINT_DEFN( GPRSUserName7, Str, "Mobile GPRS user name 7", "" ) \
DPOINT_DEFN( GPRSUserName8, Str, "Mobile GPRS user name 8", "" ) \
DPOINT_DEFN( GPRSPassWord2, Str, "Mobile GPRS password 2", "" ) \
DPOINT_DEFN( GPRSPassWord3, Str, "Mobile GPRS password 3", "" ) \
DPOINT_DEFN( GPRSPassWord4, Str, "Mobile GPRS password 4", "" ) \
DPOINT_DEFN( GPRSPassWord5, Str, "Mobile GPRS password 5", "" ) \
DPOINT_DEFN( GPRSPassWord6, Str, "Mobile GPRS password 6", "" ) \
DPOINT_DEFN( GPRSPassWord7, Str, "Mobile GPRS password 7", "" ) \
DPOINT_DEFN( GPRSPassWord8, Str, "Mobile GPRS password 8", "" ) \
DPOINT_DEFN( GPRSDialingAPN, UI8, "GPRS Dialing APN number", "" ) \
DPOINT_DEFN( SmpTicks2, SmpTick, "Tick counts for all monitored processes (DBClientId's 64 to127).", "" ) \
DPOINT_DEFN( SigPMURetransmitEnable, Signal, "Enable PMU Retransmission feature", "" ) \
DPOINT_DEFN( SigPMURetransmitLogEnable, Signal, "Enable PMU Retransmission event logs", "" ) \
DPOINT_DEFN( MobileNetworkSIMCardID, Str, "Mobile Network SIM Card ID is the 20 digit SIM Card ID read by the AT command \"CCID\". Used to detect a changed SIM card.", "" ) \
DPOINT_DEFN( PinUpdated, ChangedLog, "Data point to be triggered by PinStore change to show \"Pin Updated\" as Parameter and \"Changed\" as new value in Settings logs. The data type ChangedLog has the enum value \"Changed\".", "" ) \
DPOINT_DEFN( PukUpdated, ChangedLog, "Data point to be triggered by PukStore change to show \"PUK Updated\" as Parameter and \"Changed\" as new value in Settings logs. The data type ChangedLog has the enum value \"Changed\".", "" )

/** @endcond DO_NOT_DOCUMENT   Doxygen documentation is not required. */
#endif // #ifndef _DBSCHEMA_INCLUDE/DBSCHEMA/DBDATAPOINTDEFS_H_
