/**
 * @file include/dbschema/dbEnumDefs.h
 * @brief This generated file contains the macro definition providing details of
 *        all dbconfig enumerated data type values.
 * 
 * This file is automatically generated and should not be edited manually.

 * Generated using the following input files:
 *   xslt/dbEnumDefs_h.xsl : 5056 bytes, CRC32 = 3685147892 
 *   relay-datatypes.xml : 3123717 bytes, CRC32 = 136298885
 * 
 * Generated from the following database extract:
 *   Db Version : 28.0
 *   Db Tags    : NEW_ARCH,RC20-Security,RC20_USBOC,GooseSqNum,SdCard,VerizonAPN,Large_DbClientId,DB28_OSM_PART_CODES,DIR_POWER,MultiMaster60870,PIN_PUK,CBF_NOTICE,PMU_Retransmission,WEBSERVER
 *   Db Model   : RC20
 * 
 * @cond DO_NOT_DOCUMENT   Doxygen documentation is not required.
 */
#ifndef _DBSCHEMA_INCLUDE_DBSCHEMA_DBENUMDEFS_H_
#define _DBSCHEMA_INCLUDE_DBSCHEMA_DBENUMDEFS_H_

/**The Enumeration definitions
 * Arguments: type, name, text
 * type        Enumeration type name
 * name        Enumeration value name
 * text        English display string for the enumeration value
 */

#define ENUM_DEFNS_TimeFormat \
\
ENUM_DEFN_TimeFormat( TimeFormat, 12, "12 Hour" ) \
ENUM_DEFN_TimeFormat( TimeFormat, 24, "24 Hour" )

#define ENUM_DEFNS_DateFormat \
\
ENUM_DEFN_DateFormat( DateFormat, dmy, "dd/mm/yyyy" ) \
ENUM_DEFN_DateFormat( DateFormat, mdy, "mm/dd/yyyy" )

#define ENUM_DEFNS_OkFail \
\
ENUM_DEFN_OkFail( OkFail, Fail, "Fail" ) \
ENUM_DEFN_OkFail( OkFail, OK, "OK" )

#define ENUM_DEFNS_BattTestState \
\
ENUM_DEFN_BattTestState( BattTestState, Fail, "Fail" ) \
ENUM_DEFN_BattTestState( BattTestState, OK, "OK" ) \
ENUM_DEFN_BattTestState( BattTestState, Apply, "Apply" ) \
ENUM_DEFN_BattTestState( BattTestState, Testing, "Testing" )

#define ENUM_DEFNS_EnDis \
\
ENUM_DEFN_EnDis( EnDis, Dis, "D" ) \
ENUM_DEFN_EnDis( EnDis, En, "E" )

#define ENUM_DEFNS_RelayState \
\
ENUM_DEFN_RelayState( RelayState, Ready, "Ready" ) \
ENUM_DEFN_RelayState( RelayState, Warn, "Warning" ) \
ENUM_DEFN_RelayState( RelayState, Pickup, "Pickup" ) \
ENUM_DEFN_RelayState( RelayState, Lockout, "Lockout" )

#define ENUM_DEFNS_OkSCct \
\
ENUM_DEFN_OkSCct( OkSCct, SCct, "Short Circuit" ) \
ENUM_DEFN_OkSCct( OkSCct, OK, "OK" )

#define ENUM_DEFNS_RdyNr \
\
ENUM_DEFN_RdyNr( RdyNr, NotRdy, "Not Ready" ) \
ENUM_DEFN_RdyNr( RdyNr, Rdy, "Ready" )

#define ENUM_DEFNS_OnOff \
\
ENUM_DEFN_OnOff( OnOff, Off, "Off" ) \
ENUM_DEFN_OnOff( OnOff, On, "On" )

#define ENUM_DEFNS_AvgPeriod \
\
ENUM_DEFN_AvgPeriod( AvgPeriod, 1m, "1 minute" ) \
ENUM_DEFN_AvgPeriod( AvgPeriod, 5m, "5 minutes" ) \
ENUM_DEFN_AvgPeriod( AvgPeriod, 10m, "10 minutes" ) \
ENUM_DEFN_AvgPeriod( AvgPeriod, 15m, "15 minutes" ) \
ENUM_DEFN_AvgPeriod( AvgPeriod, 30m, "30 minutes" ) \
ENUM_DEFN_AvgPeriod( AvgPeriod, 60m, "60 minutes" )

#define ENUM_DEFNS_SysFreq \
\
ENUM_DEFN_SysFreq( SysFreq, 50, "50 Hz" ) \
ENUM_DEFN_SysFreq( SysFreq, 60, "60 Hz" )

#define ENUM_DEFNS_USense \
\
ENUM_DEFN_USense( USense, 1ph, "Single phase" ) \
ENUM_DEFN_USense( USense, 3ph, "Three phase" )

#define ENUM_DEFNS_AuxConfig \
\
ENUM_DEFN_AuxConfig( AuxConfig, DC, "DC" ) \
ENUM_DEFN_AuxConfig( AuxConfig, Star, "AC HV Star" ) \
ENUM_DEFN_AuxConfig( AuxConfig, Delta, "AC HV Delta" )

#define ENUM_DEFNS_AlOp \
\
ENUM_DEFN_AlOp( AlOp, Alarm, "Alarm" ) \
ENUM_DEFN_AlOp( AlOp, Op, "Operate" )

#define ENUM_DEFNS_OpenClose \
\
ENUM_DEFN_OpenClose( OpenClose, NA, "NA" ) \
ENUM_DEFN_OpenClose( OpenClose, Open, "Open" ) \
ENUM_DEFN_OpenClose( OpenClose, Close, "Closed" )

#define ENUM_DEFNS_TripMode \
\
ENUM_DEFN_TripMode( TripMode, Disable, "Disabled" ) \
ENUM_DEFN_TripMode( TripMode, Reclose, "Reclose" ) \
ENUM_DEFN_TripMode( TripMode, Lockout, "Lockout" ) \
ENUM_DEFN_TripMode( TripMode, Alarm, "Alarm" ) \
ENUM_DEFN_TripMode( TripMode, Count, "Count" ) \
ENUM_DEFN_TripMode( TripMode, Sectionalise, "Sectionalise" )

#define ENUM_DEFNS_TtaMode \
\
ENUM_DEFN_TtaMode( TtaMode, Trans, "Transient" ) \
ENUM_DEFN_TtaMode( TtaMode, Cont, "Continuous" )

#define ENUM_DEFNS_DndMode \
\
ENUM_DEFN_DndMode( DndMode, Block, "Block" ) \
ENUM_DEFN_DndMode( DndMode, Trip, "Trip" )

#define ENUM_DEFNS_VrcMode \
\
ENUM_DEFN_VrcMode( VrcMode, ABC, "ABC" ) \
ENUM_DEFN_VrcMode( VrcMode, RST, "RST" ) \
ENUM_DEFN_VrcMode( VrcMode, Ring, "Ring" )

#define ENUM_DEFNS_RatedFreq \
\
ENUM_DEFN_RatedFreq( RatedFreq, 50, "50" ) \
ENUM_DEFN_RatedFreq( RatedFreq, 60, "60" ) \
ENUM_DEFN_RatedFreq( RatedFreq, Auto, "Auto" )

#define ENUM_DEFNS_ScadaTimeIsLocal \
\
ENUM_DEFN_ScadaTimeIsLocal( ScadaTimeIsLocal, Yes, "Local" ) \
ENUM_DEFN_ScadaTimeIsLocal( ScadaTimeIsLocal, No, "GMT/UTC" )

#define ENUM_DEFNS_EventDataID \
\
ENUM_DEFN_EventDataID( EventDataID, NAN, "NAN" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxIn, "Max(In), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxIa, "Max(Ia), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxIb, "Max(Ib), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxIc, "Max(Ic), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, Iop, "Iop, A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, Up, "Up, kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, OIRM, "OIRM={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, Tr, "Tr, s={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxU1, "Max(U1), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinU1, "Min(U1), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, FreezeI, "Imax, A={arg:0 *1/4}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUab, "Max(Uab), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUbc, "Max(Ubc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUca, "Max(Uca), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripIa, "Trip(Ia), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripIb, "Trip(Ib), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripIc, "Trip(Ic), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripIn, "Trip(In), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitOpenFailedClosed, "Open Limit Switch Failed Closed" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitOpenFailedOpen, "Open Limit Switch Failed Open" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitCloseFailedClosed, "Close Limit Switch Failed Closed" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitCloseFailedOpen, "Close Limit Switch Failed Open" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitCloseOpenFailedClosed, "Close & Open Limit Sw Failed Closed" ) \
ENUM_DEFN_EventDataID( EventDataID, OsmLimitCloseMechFailedClosed, "Close & M.Ilock Lim.Sw Failed Closed" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryHealthy, "Healthy" ) \
ENUM_DEFN_EventDataID( EventDataID, BatterySuspect, "Suspect" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryFaulty, "Faulty" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestFailed, "Test Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleFlashFault, "Flash" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleRamFault, "Ram" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleTempFault, "Temp Sensor" ) \
ENUM_DEFN_EventDataID( EventDataID, ModulePsFault, "Power Supply" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleFmFault, "Firmware CRC" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleBootloadFault, "Bootloader CRC" ) \
ENUM_DEFN_EventDataID( EventDataID, simStepCnt, "Simulation step {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibrated, "Calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibrated, "Not Calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibratedCorrupted, "Cal Values Corrupted" ) \
ENUM_DEFN_EventDataID( EventDataID, TripRequestFail0, "OSM Not Connected" ) \
ENUM_DEFN_EventDataID( EventDataID, TripRequestFail1, "Mechanically Locked" ) \
ENUM_DEFN_EventDataID( EventDataID, TripRequestFail2, "Operation Active" ) \
ENUM_DEFN_EventDataID( EventDataID, TripRequestFail3, "Faulty Actuator" ) \
ENUM_DEFN_EventDataID( EventDataID, TripRequestFail4, "Mechanism Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail0, "OSM Not Connected" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail1, "Mechanically Locked" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail2, "Command Pending" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail3, "Faulty Actuator" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail4, "Mechanism Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail5, "Duty Cycle Exceeded" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail6, "Close Cap Not Ok" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail7, "Trip Cap Not OK" ) \
ENUM_DEFN_EventDataID( EventDataID, OperationFault0, "Close Volt Drop Too High" ) \
ENUM_DEFN_EventDataID( EventDataID, OperationFault1, "Trip Volt Drop Too High" ) \
ENUM_DEFN_EventDataID( EventDataID, OperationFault2, "Trip Volt Drop On Close" ) \
ENUM_DEFN_EventDataID( EventDataID, FreqOp, "Freq Op, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, FreqMin, "Min Freq, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, FreqMax, "Max Freq, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, ProtStatus, "{arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, ActGroup, "Act. Group: {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUab, "Min(Uab), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUbc, "Min(Ubc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUca, "Min(Uca), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUa, "Max(Ua), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUb, "Max(Ub), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUc, "Max(Uc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUr, "Max(Ur), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUs, "Max(Us), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUt, "Max(Ut), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, AoTopen, "T(open), mins = {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, OCLM, "OCLM={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, LineSupplyStatusNormal, "Normal" ) \
ENUM_DEFN_EventDataID( EventDataID, LineSupplyStatusDisconnected, "Disconnected" ) \
ENUM_DEFN_EventDataID( EventDataID, LineSupplyStatusHigh, "High" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryNormal, "Normal" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryDisconnected, "Disconnected" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryLow, "Low" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryHigh, "High" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIa, "SIM Ia is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIb, "SIM Ib is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIc, "SIM Ic is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIn, "SIM In is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIaHi, "SIM Ia (High) is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIbHi, "SIM Ib (High) is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibIcHi, "SIM Ic (High) is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUa, "SIM Ua is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUb, "SIM Ub is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUc, "SIM Uc is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUr, "SIM Ur is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUs, "SIM Us is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibUt, "SIM Ut is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibIa, "Switchgear Ia is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibIb, "Switchgear Ib is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibIc, "Switchgear Ic is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibIn, "Switchgear In is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUa, "Switchgear Ua is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUb, "Switchgear Ub is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUc, "Switchgear Uc is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUr, "Switchgear Ur is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUs, "Switchgear Us is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibUt, "Switchgear Ut is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SimCalibAll, "All SIM coefficients are calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgCalibAll, "All sw. coefficients are calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, TtaTat, "Tat, s={arg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail8, "Already Closed" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseRequestFail9, "Excess Actuator Current Draw" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestNotPerformed, "Not Performed" ) \
ENUM_DEFN_EventDataID( EventDataID, LineSupplyStatusLo, "Low" ) \
ENUM_DEFN_EventDataID( EventDataID, SmpShutdownUser, "User Shutdown" ) \
ENUM_DEFN_EventDataID( EventDataID, SmpShutdownPower, "Power Supply" ) \
ENUM_DEFN_EventDataID( EventDataID, SmpShutdownError, "Internal Error" ) \
ENUM_DEFN_EventDataID( EventDataID, HangupDcd, "DCD" ) \
ENUM_DEFN_EventDataID( EventDataID, HangupInactive, "Inactive" ) \
ENUM_DEFN_EventDataID( EventDataID, HangupMaxDuration, "Max Call Duration" ) \
ENUM_DEFN_EventDataID( EventDataID, Unsol, "Unsolicited Dial Out" ) \
ENUM_DEFN_EventDataID( EventDataID, Remote, "Remote Dial In" ) \
ENUM_DEFN_EventDataID( EventDataID, ErrorMsgId, "ID {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, RecoveryLaunch, "Startup Error" ) \
ENUM_DEFN_EventDataID( EventDataID, RecoveryFs, "No File System" ) \
ENUM_DEFN_EventDataID( EventDataID, RecoveryUser, "User Request" ) \
ENUM_DEFN_EventDataID( EventDataID, RelayFirmware, "Relay Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, SimFirmware, "SIM Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, HmiResource, "Language" ) \
ENUM_DEFN_EventDataID( EventDataID, DbSchema, "DB Schema" ) \
ENUM_DEFN_EventDataID( EventDataID, ErrorMsgNumber, "Code {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MicrokernelFirmware, "Microkernel Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, UbootFirmware, "U-Boot Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, GpioFirmware, "GPIO Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, RelaySettings, "Relay Settings" ) \
ENUM_DEFN_EventDataID( EventDataID, RelayLog, "Relay Log" ) \
ENUM_DEFN_EventDataID( EventDataID, BackupRelaySettings, "Backup Relay Settings" ) \
ENUM_DEFN_EventDataID( EventDataID, BackupRelayLog, "Backup Relay Log" ) \
ENUM_DEFN_EventDataID( EventDataID, USBA, "USB A" ) \
ENUM_DEFN_EventDataID( EventDataID, USBB, "USB B" ) \
ENUM_DEFN_EventDataID( EventDataID, USBC, "USB C" ) \
ENUM_DEFN_EventDataID( EventDataID, USBCSP, "USB CSP" ) \
ENUM_DEFN_EventDataID( EventDataID, RS232, "RS232" ) \
ENUM_DEFN_EventDataID( EventDataID, RS232P, "RS232P" ) \
ENUM_DEFN_EventDataID( EventDataID, Success, "Success" ) \
ENUM_DEFN_EventDataID( EventDataID, Fail, "Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, Unknown, "Unknown" ) \
ENUM_DEFN_EventDataID( EventDataID, LoSeq2, "79-2 LO" ) \
ENUM_DEFN_EventDataID( EventDataID, LoSeq3, "79-3 LO" ) \
ENUM_DEFN_EventDataID( EventDataID, IO1, "IO1" ) \
ENUM_DEFN_EventDataID( EventDataID, IO2, "IO2" ) \
ENUM_DEFN_EventDataID( EventDataID, IO3, "IO3" ) \
ENUM_DEFN_EventDataID( EventDataID, IO4, "IO4" ) \
ENUM_DEFN_EventDataID( EventDataID, SmpShutdownSwitchgearType, "OSM Model Change" ) \
ENUM_DEFN_EventDataID( EventDataID, ACO, "{arg:0 @195}" ) \
ENUM_DEFN_EventDataID( EventDataID, SourceUnhealthy, "Source Not Healthy" ) \
ENUM_DEFN_EventDataID( EventDataID, Channel, "Channel" ) \
ENUM_DEFN_EventDataID( EventDataID, LogicState, "Logic State" ) \
ENUM_DEFN_EventDataID( EventDataID, SerialNumber, "Serial Number" ) \
ENUM_DEFN_EventDataID( EventDataID, Dnp3PollWatchDog, "DNP3 Poll Watchdog" ) \
ENUM_DEFN_EventDataID( EventDataID, Dnp3BinaryControlWatchDog, "DNP3 Binary Control Watchdog" ) \
ENUM_DEFN_EventDataID( EventDataID, T10BPollWatchDog, "T10B Poll Watchdog" ) \
ENUM_DEFN_EventDataID( EventDataID, T10BBinaryControlWatchDog, "T10B Binary Control Watchdog" ) \
ENUM_DEFN_EventDataID( EventDataID, OscTrip, "Trip(Osc)" ) \
ENUM_DEFN_EventDataID( EventDataID, OscPickup, "Osc Pickup" ) \
ENUM_DEFN_EventDataID( EventDataID, OscClose, "Osc Close" ) \
ENUM_DEFN_EventDataID( EventDataID, OscAlarm, "Osc Alarm" ) \
ENUM_DEFN_EventDataID( EventDataID, OscLogic, "Osc Logic" ) \
ENUM_DEFN_EventDataID( EventDataID, OscIOInputs, "Osc IO Inputs" ) \
ENUM_DEFN_EventDataID( EventDataID, CannotOverwrite, "Cannot Overwrite" ) \
ENUM_DEFN_EventDataID( EventDataID, DiscFull, "Disc Full" ) \
ENUM_DEFN_EventDataID( EventDataID, CommsError, "Comms Error" ) \
ENUM_DEFN_EventDataID( EventDataID, String, "{arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, On, "On" ) \
ENUM_DEFN_EventDataID( EventDataID, Off, "Off" ) \
ENUM_DEFN_EventDataID( EventDataID, Disabled, "Disabled" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmTHD, "Max(HRM), THD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmTDD, "Max(HRM), TDD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmIndA, "Max(HRM), A={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmIndB, "Max(HRM), B={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmIndC, "Max(HRM), C={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmIndD, "Max(HRM), D={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxHrmIndE, "Max(HRM), E={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, Overload, "Overload" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxI2, "Max(I2), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripI2, "Trip(I2), A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, WriteToSIM, "Write to SIM" ) \
ENUM_DEFN_EventDataID( EventDataID, DeviceNotReady, "Device Not Ready" ) \
ENUM_DEFN_EventDataID( EventDataID, AoTopenPF, "T(open), secs = {arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestPassed, "Battery Test Passed" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestCheckBattery, "Check Battery" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestFaulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestVoltageTooLow, "Voltage Too Low" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestACOff, "AC Off" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestBatteryOff, "Battery Off" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestResting, "Resting" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestNotCharging, "Battery Being Discharged" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestNotSupported, "Not Supported" ) \
ENUM_DEFN_EventDataID( EventDataID, BatteryTestTimeout, "Timeout" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleManufFault, "Invalid Manufacturing Details" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleIncorrectSWFault, "Incorrect Software" ) \
ENUM_DEFN_EventDataID( EventDataID, SystemCheck, "System Check" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUa, "Min(Ua), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUb, "Min(Ub), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUc, "Min(Uc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUr, "Min(Ur), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUs, "Min(Us), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinUt, "Min(Ut), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, LineSupplyStatusSurge, "Surge" ) \
ENUM_DEFN_EventDataID( EventDataID, OscProtOperation, "Protection Operation Oscillography" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxUn, "Max(Un), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxU2, "Max(U2), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, EventLog, "Event Log" ) \
ENUM_DEFN_EventDataID( EventDataID, CloseOpenLog, "Close/Open Log" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultLog, "Fault Log" ) \
ENUM_DEFN_EventDataID( EventDataID, LoadProfileLog, "Load Profile Log" ) \
ENUM_DEFN_EventDataID( EventDataID, SettingsLog, "Settings Log" ) \
ENUM_DEFN_EventDataID( EventDataID, InterruptionsLog, "Interruptions Log" ) \
ENUM_DEFN_EventDataID( EventDataID, SagSwellLog, "Sags/Swells Log" ) \
ENUM_DEFN_EventDataID( EventDataID, HarmonicsLog, "Harmonics Log" ) \
ENUM_DEFN_EventDataID( EventDataID, SysErrorLog, "System Error Log" ) \
ENUM_DEFN_EventDataID( EventDataID, WarningsLog, "Warnings Log" ) \
ENUM_DEFN_EventDataID( EventDataID, MalfunctionsLog, "Malfunctions Log" ) \
ENUM_DEFN_EventDataID( EventDataID, PscFirmware, "PSC firmware update" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61499AppMissingFBOOT, "Missing FBOOT" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61499AppFailedFBOOT, "Failed FBOOT" ) \
ENUM_DEFN_EventDataID( EventDataID, Invalid, "Invalid" ) \
ENUM_DEFN_EventDataID( EventDataID, Rel03ModuleFault, "REL-03 Module Fault" ) \
ENUM_DEFN_EventDataID( EventDataID, Rel15ModuleFault, "REL-15 Module Fault" ) \
ENUM_DEFN_EventDataID( EventDataID, Rel15_4G_ModuleFault, "REL-15-4G Module Fault" ) \
ENUM_DEFN_EventDataID( EventDataID, AutoSyncFailed, "Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, AutoSyncReleased, "Released" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncDeltaVFail, "∆V Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncDeltaFreqFail, "∆f Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncDeltaPhaseFail, "∆ϕ Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, AutoSync, "Auto-Sync" ) \
ENUM_DEFN_EventDataID( EventDataID, LangEnglish, "English" ) \
ENUM_DEFN_EventDataID( EventDataID, LangPortuguese, "Portuguese" ) \
ENUM_DEFN_EventDataID( EventDataID, LangSpanish, "Spanish" ) \
ENUM_DEFN_EventDataID( EventDataID, LangPolish, "Polish" ) \
ENUM_DEFN_EventDataID( EventDataID, LangEnglishUS, "US English" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncBlockingLLDB, "LLDB Blocking" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncBlockingDLLB, "DLLB Blocking" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncBlockingDLDB, "DLDB Blocking" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncCheckFail, "Sync-check Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, AutoSyncCancelled, "Cancelled" ) \
ENUM_DEFN_EventDataID( EventDataID, SyncLLLBFail, "LLLB Fail" ) \
ENUM_DEFN_EventDataID( EventDataID, Stop, "Stop" ) \
ENUM_DEFN_EventDataID( EventDataID, Warm, "Warm" ) \
ENUM_DEFN_EventDataID( EventDataID, IDE, "IDE" ) \
ENUM_DEFN_EventDataID( EventDataID, MissingDependency, "Incompatible Files" ) \
ENUM_DEFN_EventDataID( EventDataID, GnRev, "Gn REV, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, GnFwd, "Gn FWD, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, BnRev, "Bn REV, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, BnFwd, "Bn FWD, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinGnRev, "Min(Gn REV), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxGnFwd, "Max(Gn FWD), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinBnRev, "Min(Bn REV), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxBnFwd, "Max(Bn FWD), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN_EventDataID( EventDataID, OV3, "OV3" ) \
ENUM_DEFN_EventDataID( EventDataID, DNP3, "DNP3" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC60870, "IEC 60870" ) \
ENUM_DEFN_EventDataID( EventDataID, CMS, "CMS" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61850, "IEC 61850" ) \
ENUM_DEFN_EventDataID( EventDataID, P2PComms, "P2PComms" ) \
ENUM_DEFN_EventDataID( EventDataID, Panel, "Panel" ) \
ENUM_DEFN_EventDataID( EventDataID, 2179, "2179" ) \
ENUM_DEFN_EventDataID( EventDataID, ExceptionFPE, "Floating Point Exception" ) \
ENUM_DEFN_EventDataID( EventDataID, I2I1op, "Iop, I2/I1={arg:0 *1/1000}%" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxI2I1, "Max(I2/I1)={arg:0 *1/1000}%" ) \
ENUM_DEFN_EventDataID( EventDataID, OV3abc, "OV3(ABC)" ) \
ENUM_DEFN_EventDataID( EventDataID, OV3rst, "OV3(RST)" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxIn_mA, "Max(In), A={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, TripIn_mA, "Trip(In), A={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, Iop_mA, "Iop, A={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, Timeout, "Timeout" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidDbVersion, "Invalid Database Version" ) \
ENUM_DEFN_EventDataID( EventDataID, FileIoError, "Internal File System Error" ) \
ENUM_DEFN_EventDataID( EventDataID, UsbIoError, "USB Access Error" ) \
ENUM_DEFN_EventDataID( EventDataID, TooManyUpdateFiles, "Too Many Update Files" ) \
ENUM_DEFN_EventDataID( EventDataID, FileSysMismatch, "Incompatible File System" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidMicrokernel, "Invalid Microkernel" ) \
ENUM_DEFN_EventDataID( EventDataID, UnsupportedHardware, "Unsupported Hardware" ) \
ENUM_DEFN_EventDataID( EventDataID, BackupSettingsFailed, "Settings Backup Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, BackupLogsFailed, "Logs Backup Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, UnsupportedPartCode, "Unsupported Part Number" ) \
ENUM_DEFN_EventDataID( EventDataID, RemoveBackupFailed, "Remove Backup Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, NoSerialNum, "No Serial Number" ) \
ENUM_DEFN_EventDataID( EventDataID, DbAccessFail, "Database Access Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, FailedBooting, "Failed Booting" ) \
ENUM_DEFN_EventDataID( EventDataID, FailedLoadingFirmware, "Failed Loading Firmware" ) \
ENUM_DEFN_EventDataID( EventDataID, FailedInitialisation, "Failed Initialisation" ) \
ENUM_DEFN_EventDataID( EventDataID, APNotFound, "AP Not Found" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongAPPasswordLength, "Wrong AP Password Length" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongClientPassword, "Wrong Client Password" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongClientPasswordLength, "Wrong Client Password Length" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongPasswordLength, "Wrong Password Length" ) \
ENUM_DEFN_EventDataID( EventDataID, APConfigFailure, "AP Config Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidChannel, "Invalid Channel" ) \
ENUM_DEFN_EventDataID( EventDataID, QueryMACFailed, "Query MAC Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, APFailure, "AP Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, APScanFailure, "AP Scan Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, ChannelRegionFailed, "Channel Region Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, InitialisationFailed, "Initialisation Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidRFBand, "Invalid RF Band" ) \
ENUM_DEFN_EventDataID( EventDataID, JoiningAPFailure, "Joining AP Failure" ) \
ENUM_DEFN_EventDataID( EventDataID, PasswordMissing, "Password Missing" ) \
ENUM_DEFN_EventDataID( EventDataID, QueryFWVerFailed, "Query FW Ver Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, SetRFFrequencyFailed, "Set RF Frequency Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, SettingPasswordFailed, "Setting Password Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, SettingRFFailed, "Setting RF Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, SettingTXPowerFailed, "Setting TX Power Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, SSIDMismatch, "SSID Mismatch" ) \
ENUM_DEFN_EventDataID( EventDataID, UnsupportedRF, "Unsupported RF" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongJoinCommand, "Wrong Join Command" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongJoinParameter, "Wrong Join Parameter" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongOperationMode, "Wrong Operation Mode" ) \
ENUM_DEFN_EventDataID( EventDataID, WrongParameter, "Wrong Parameter" ) \
ENUM_DEFN_EventDataID( EventDataID, NoFiles, "No Files" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI2nd, "I2" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI3rd, "I3" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI4th, "I4" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI5th, "I5" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI6th, "I6" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI7th, "I7" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI8th, "I8" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI9th, "I9" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI10th, "I10" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI11th, "I11" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI12th, "I12" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI13th, "I13" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI14th, "I14" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI15th, "I15" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn2nd, "In2" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn3rd, "In3" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn4th, "In4" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn5th, "In5" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn6th, "In6" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn7th, "In7" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn8th, "In8" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn9th, "In9" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn10th, "In10" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn11th, "In11" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn12th, "In12" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn13th, "In13" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn14th, "In14" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn15th, "In15" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV2nd, "V2" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV3rd, "V3" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV4th, "V4" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV5th, "V5" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV6th, "V6" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV7th, "V7" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV8th, "V8" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV9th, "V9" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV10th, "V10" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV11th, "V11" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV12th, "V12" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV13th, "V13" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV14th, "V14" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV15th, "V15" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmTHD_op, "HRM, THD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmTDD_op, "HRM, TDD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIndA_op, "HRM, A={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIndB_op, "HRM, B={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIndC_op, "HRM, C={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIndD_op, "HRM, D={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIndE_op, "HRM, E={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61499ExternEvtLim, "SGA External Events Limit" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61499InternEvtLim, "SGA Internal Events Limit" ) \
ENUM_DEFN_EventDataID( EventDataID, SIM03, "SIM03" ) \
ENUM_DEFN_EventDataID( EventDataID, EFF, "EF+" ) \
ENUM_DEFN_EventDataID( EventDataID, EFR, "EF-" ) \
ENUM_DEFN_EventDataID( EventDataID, SEFF, "SEF+" ) \
ENUM_DEFN_EventDataID( EventDataID, SEFR, "SEF-" ) \
ENUM_DEFN_EventDataID( EventDataID, ABC, "ABC" ) \
ENUM_DEFN_EventDataID( EventDataID, RST, "RST" ) \
ENUM_DEFN_EventDataID( EventDataID, GPS, "GPS" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidUpdateFile, "Invalid Update File" ) \
ENUM_DEFN_EventDataID( EventDataID, Failed, "Failed" ) \
ENUM_DEFN_EventDataID( EventDataID, Distance, "FltDiskm, km={iarg:0 *1/10 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultImpedance, "Zf∡θf, Ω={iarg:0 *1/10 .1}∡{iarg:1 *" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultedLoopImpedance, "ZLoop∡θLoop, Ω={iarg:0 *1/10 .1}∡{ia" ) \
ENUM_DEFN_EventDataID( EventDataID, OutOfRange, "Out of Range" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61499ResourceLimit, "SGA Resource Limit" ) \
ENUM_DEFN_EventDataID( EventDataID, SIM01, "SIM01" ) \
ENUM_DEFN_EventDataID( EventDataID, SIM02, "SIM02" ) \
ENUM_DEFN_EventDataID( EventDataID, LangRussian, "Russian" ) \
ENUM_DEFN_EventDataID( EventDataID, SSTControl_Tst, "Tst, s={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, USBONBOARD, "Onboard Ports" ) \
ENUM_DEFN_EventDataID( EventDataID, USBEXTERNAL, "External Hub Ports" ) \
ENUM_DEFN_EventDataID( EventDataID, WIFI, "WiFi" ) \
ENUM_DEFN_EventDataID( EventDataID, MODEM, "Mobile Network Modem" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultImpedanceZ, "Zf Ω={iarg:0 *1/10 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultImpedanceTheta, "θf={iarg:0 *1/10 .1}°" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultedLoopImpedanceZ, "ZLoop Ω={iarg:0 *1/10 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, FaultedLoopImpedanceTheta, "θLoop={iarg:0 *1/10 .1}°" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61850GoosePub, "IEC 61850 GOOSE Publisher" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61850GooseSub, "IEC 61850 GOOSE Subscriber" ) \
ENUM_DEFN_EventDataID( EventDataID, IEC61850MMS, "IEC 61850 MMS" ) \
ENUM_DEFN_EventDataID( EventDataID, LangTurkish, "Turkish" ) \
ENUM_DEFN_EventDataID( EventDataID, LangRomanian, "Romanian" ) \
ENUM_DEFN_EventDataID( EventDataID, RelayCalibIa, "Relay Ia is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, RelayCalibIb, "Relay Ib is calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI16th, "I16" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI17th, "I17" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI18th, "I18" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI19th, "I19" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI20th, "I20" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI21st, "I21" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI22nd, "I22" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI23rd, "I23" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI24th, "I24" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI25th, "I25" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI26th, "I26" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI27th, "I27" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI28th, "I28" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI29th, "I29" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI30th, "I30" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI31st, "I31" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI32nd, "I32" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI33rd, "I33" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI34th, "I34" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI35th, "I35" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI36th, "I36" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI37th, "I37" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI38th, "I38" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI39th, "I39" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI40th, "I40" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI41st, "I41" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI42nd, "I42" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI43rd, "I43" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI44th, "I44" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI45th, "I45" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI46th, "I46" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI47th, "I47" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI48th, "I48" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI49th, "I49" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI50th, "I50" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI51st, "I51" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI52nd, "I52" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI53rd, "I53" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI54th, "I54" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI55th, "I55" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI56th, "I56" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI57th, "I57" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI58th, "I58" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI59th, "I59" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI60th, "I60" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI61st, "I61" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI62nd, "I62" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmI63rd, "I63" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn16th, "In16" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn17th, "In17" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn18th, "In18" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn19th, "In19" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn20th, "In20" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn21st, "In21" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn22nd, "In22" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn23rd, "In23" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn24th, "In24" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn25th, "In25" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn26th, "In26" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn27th, "In27" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn28th, "In28" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn29th, "In29" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn30th, "In30" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn31st, "In31" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn32nd, "In32" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn33rd, "In33" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn34th, "In34" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn35th, "In35" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn36th, "In36" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn37th, "In37" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn38th, "In38" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn39th, "In39" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn40th, "In40" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn41st, "In41" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn42nd, "In42" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn43rd, "In43" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn44th, "In44" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn45th, "In45" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn46th, "In46" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn47th, "In47" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn48th, "In48" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn49th, "In49" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn50th, "In50" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn51st, "In51" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn52nd, "In52" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn53rd, "In53" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn54th, "In54" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn55th, "In55" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn56th, "In56" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn57th, "In57" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn58th, "In58" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn59th, "In59" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn60th, "In60" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn61st, "In61" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn62nd, "In62" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmIn63rd, "In63" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV16th, "V16" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV17th, "V17" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV18th, "V18" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV19th, "V19" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV20th, "V20" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV21st, "V21" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV22nd, "V22" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV23rd, "V23" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV24th, "V24" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV25th, "V25" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV26th, "V26" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV27th, "V27" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV28th, "V28" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV29th, "V29" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV30th, "V30" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV31st, "V31" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV32nd, "V32" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV33rd, "V33" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV34th, "V34" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV35th, "V35" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV36th, "V36" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV37th, "V37" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV38th, "V38" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV39th, "V39" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV40th, "V40" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV41st, "V41" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV42nd, "V42" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV43rd, "V43" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV44th, "V44" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV45th, "V45" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV46th, "V46" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV47th, "V47" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV48th, "V48" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV49th, "V49" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV50th, "V50" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV51st, "V51" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV52nd, "V52" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV53rd, "V53" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV54th, "V54" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV55th, "V55" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV56th, "V56" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV57th, "V57" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV58th, "V58" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV59th, "V59" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV60th, "V60" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV61st, "V61" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV62nd, "V62" ) \
ENUM_DEFN_EventDataID( EventDataID, HrmV63rd, "V63" ) \
ENUM_DEFN_EventDataID( EventDataID, ROCOF_op, "ROCOF, Hz/s={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxROCOF, "Max(ROCOF), Hz/s={arg:0 *1/100 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, VVS_op, "VVS, °={arg:0 *1/1000}" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxVVS, "Max(VVS), °={arg:0 *1/1000}" ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIa, "Sim Ia is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIb, "Sim Ib is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIc, "Sim  Ic is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIaHigh, "Sim  Ia High is not  calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIbHigh, "Sim Ib  High is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIcHigh, "Sim Ic  High is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibIn, "Sim In  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVa, "Sim Va  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVb, "Sim Vb  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVc, "Sim Vc  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVr, "Sim Vr  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVs, "Sim Vs  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SimNotCalibVt, "Sim Vt  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIa, "Relay Ia  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIb, "Relay Ib  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIc, "Relay Ic  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIaHigh, "Relay Ia High  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIcHigh, "Relay Ic High  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIn, "Relay In  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVa, "Relay Va  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVb, "Relay Vb  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVc, "Relay Vc  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVr, "Relay Vr  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVs, "Relay Vs  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibVt, "Relay Vt  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIa, "Switchgear Ia  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIb, "Switchgear Ib  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIc, "Switchgear Ic  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIaHigh, "Switchgear Ia High  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIbHigh, "Switchgear Ib High  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIcHigh, "Switchgear Ic High  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVa, "Switchgear Va  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVb, "Switchgear Vb  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVc, "Switchgear Vc  is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVr, "Switchgear Vr  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVs, "Switchgear Vs  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibVt, "Switchgear Vt  is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, SwgNotCalibIn, "SwitchGEAR In is not calibrated" ) \
ENUM_DEFN_EventDataID( EventDataID, RelayNotCalibIbHigh, "Relay Ib High is not calibrated." ) \
ENUM_DEFN_EventDataID( EventDataID, WriteToRelay, "Save Relay Calibration" ) \
ENUM_DEFN_EventDataID( EventDataID, WriteToSwg, "Save Switchgear Calibration" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleFaultUpdate, "Update" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleFaultBatteryCharger, "Battery Charger" ) \
ENUM_DEFN_EventDataID( EventDataID, ModuleFaultPowerOutputs, "Power Outputs" ) \
ENUM_DEFN_EventDataID( EventDataID, RTCFaulty, "RTC is faulty." ) \
ENUM_DEFN_EventDataID( EventDataID, RTCNotSync, "RTC is not synchronized" ) \
ENUM_DEFN_EventDataID( EventDataID, SIM20, "SIM20" ) \
ENUM_DEFN_EventDataID( EventDataID, CBFIa, "Ia,A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, CBFIb, "Ib,A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, CBFIc, "Ic,A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, CBFIn, "In,A={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, InvalidUser, "Invalid User name or Password" ) \
ENUM_DEFN_EventDataID( EventDataID, UserAuthenticated, "User Credential Operation Successful" ) \
ENUM_DEFN_EventDataID( EventDataID, USBONBOARDA, "USB A" ) \
ENUM_DEFN_EventDataID( EventDataID, USBONBOARDB, "USB B" ) \
ENUM_DEFN_EventDataID( EventDataID, MaxPDOP, "Max(PDOP), kVA={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, MinPDUP, "Min(PDUP), kVA={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, PDOP_op, "PDOP, kVA={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, PDUP_op, "PDUP, kVA={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, PDOPAngle, "θPDOP, °={iarg:0 *1/10 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, PDUPAngle, "θPDUP, °={iarg:0 *1/10 .1}" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMPINRequired, "SIM PIN Required" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMPINError, "SIM PIN Error" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMBlocked, "SIM Blocked" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMPUKRequired, "SIM PUK Required" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMCardPUKError, "SIM Card PUK Error" ) \
ENUM_DEFN_EventDataID( EventDataID, SIMCardBlockedPerm, "SIM Card Blocked permanently" ) \
ENUM_DEFN_EventDataID( EventDataID, PDCAddr, "PDC, addr={arg:0}" ) \
ENUM_DEFN_EventDataID( EventDataID, PDCPort, "port={arg:0}" )

#define ENUM_DEFNS_DbClientId \
\
ENUM_DEFN_DbClientId( DbClientId, NAN, "Non client ID" ) \
ENUM_DEFN_DbClientId( DbClientId, CMS, "PC" ) \
ENUM_DEFN_DbClientId( DbClientId, HMI, "HMI" ) \
ENUM_DEFN_DbClientId( DbClientId, Scada, "SCADA" ) \
ENUM_DEFN_DbClientId( DbClientId, IO, "IO" ) \
ENUM_DEFN_DbClientId( DbClientId, Prot, "Protection" ) \
ENUM_DEFN_DbClientId( DbClientId, ProtUTest, "Protection Unit Test" ) \
ENUM_DEFN_DbClientId( DbClientId, ProtCfg, "Protection Config" ) \
ENUM_DEFN_DbClientId( DbClientId, DbClientTest, "DB Test Client" ) \
ENUM_DEFN_DbClientId( DbClientId, CAN, "CAN process Client ID" ) \
ENUM_DEFN_DbClientId( DbClientId, LOG, "Log Process Client ID" ) \
ENUM_DEFN_DbClientId( DbClientId, SIM, "SIM" ) \
ENUM_DEFN_DbClientId( DbClientId, CAN_TEST, "CAN TEST process ID" ) \
ENUM_DEFN_DbClientId( DbClientId, SimOpTest, "SIM Sw Test" ) \
ENUM_DEFN_DbClientId( DbClientId, Panel, "Panel" ) \
ENUM_DEFN_DbClientId( DbClientId, DbClientTestListener, "DB Test Listener" ) \
ENUM_DEFN_DbClientId( DbClientId, Simulator, "Simulator" ) \
ENUM_DEFN_DbClientId( DbClientId, Meter, "Meter" ) \
ENUM_DEFN_DbClientId( DbClientId, DbServer, "DbServer" ) \
ENUM_DEFN_DbClientId( DbClientId, SMP, "System Management Process" ) \
ENUM_DEFN_DbClientId( DbClientId, CMS2, "CMS AUX" ) \
ENUM_DEFN_DbClientId( DbClientId, CMS3, "CMS AUX 2" ) \
ENUM_DEFN_DbClientId( DbClientId, COMMS, "communication" ) \
ENUM_DEFN_DbClientId( DbClientId, CALIB, "calibration process" ) \
ENUM_DEFN_DbClientId( DbClientId, SmpTest, "SMP Test" ) \
ENUM_DEFN_DbClientId( DbClientId, UPS, "UPS process" ) \
ENUM_DEFN_DbClientId( DbClientId, UsbCopy, "USB Copy" ) \
ENUM_DEFN_DbClientId( DbClientId, Update, "Update" ) \
ENUM_DEFN_DbClientId( DbClientId, UsbGadget, "USB Gadget" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA0, "SMA0" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA1, "SMA1" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA2, "SMA2" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA3, "SMA3" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA4, "SMA4" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA5, "SMA5" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA6, "SMA6" ) \
ENUM_DEFN_DbClientId( DbClientId, SMA7, "SMA7" ) \
ENUM_DEFN_DbClientId( DbClientId, T10B, "SCADA IEC 60870" ) \
ENUM_DEFN_DbClientId( DbClientId, p2pComm, "p2p Communication" ) \
ENUM_DEFN_DbClientId( DbClientId, ProgGPIO, "GPIO programmer" ) \
ENUM_DEFN_DbClientId( DbClientId, Logic, "Logic" ) \
ENUM_DEFN_DbClientId( DbClientId, LogComms, "LogComms" ) \
ENUM_DEFN_DbClientId( DbClientId, RelayInput, "Relay Input" ) \
ENUM_DEFN_DbClientId( DbClientId, IO1, "I/O 1" ) \
ENUM_DEFN_DbClientId( DbClientId, IO2, "I/O 2" ) \
ENUM_DEFN_DbClientId( DbClientId, IO3, "I/O 3" ) \
ENUM_DEFN_DbClientId( DbClientId, IO4, "I/O 4" ) \
ENUM_DEFN_DbClientId( DbClientId, Oscillography, "Oscillography" ) \
ENUM_DEFN_DbClientId( DbClientId, PGE, "SCADA 2179" ) \
ENUM_DEFN_DbClientId( DbClientId, s61850, "SCADA IEC 61850 MMS" ) \
ENUM_DEFN_DbClientId( DbClientId, System, "System" ) \
ENUM_DEFN_DbClientId( DbClientId, ProgPSC, "PSC Programmer" ) \
ENUM_DEFN_DbClientId( DbClientId, PSC, "PSC" ) \
ENUM_DEFN_DbClientId( DbClientId, SmartGridAutomation, "Smart Grid Automation" ) \
ENUM_DEFN_DbClientId( DbClientId, GPS, "GPS" ) \
ENUM_DEFN_DbClientId( DbClientId, Hotplug, "Hotplug" ) \
ENUM_DEFN_DbClientId( DbClientId, s61850_GOOSE, "IEC 61850 GOOSE" ) \
ENUM_DEFN_DbClientId( DbClientId, WLAN, "WLAN" ) \
ENUM_DEFN_DbClientId( DbClientId, FaultLocator, "Fault Locator" ) \
ENUM_DEFN_DbClientId( DbClientId, SNTP, "SNTP" ) \
ENUM_DEFN_DbClientId( DbClientId, PMU, "PMU" ) \
ENUM_DEFN_DbClientId( DbClientId, OPCUASERVER, "OPCUA Server" ) \
ENUM_DEFN_DbClientId( DbClientId, UserCredential, "User Credential management" ) \
ENUM_DEFN_DbClientId( DbClientId, Webserver, "Webserver" )

#define ENUM_DEFNS_BaudRateType \
\
ENUM_DEFN_BaudRateType( BaudRateType, B19200, "19200bps" ) \
ENUM_DEFN_BaudRateType( BaudRateType, B115200, "115200bps" )

#define ENUM_DEFNS_ChangeEvent \
\
ENUM_DEFN_ChangeEvent( ChangeEvent, ChNoDisp, "" ) \
ENUM_DEFN_ChangeEvent( ChangeEvent, ChChanged, "Changed" ) \
ENUM_DEFN_ChangeEvent( ChangeEvent, ChErased, "Erased" )

#define ENUM_DEFNS_Co \
\
ENUM_DEFN_Co( Co, Close, "Close" ) \
ENUM_DEFN_Co( Co, Open, "Open" ) \
ENUM_DEFN_Co( Co, ClosePhA, "Close A" ) \
ENUM_DEFN_Co( Co, ClosePhB, "Close B" ) \
ENUM_DEFN_Co( Co, ClosePhC, "Close C" ) \
ENUM_DEFN_Co( Co, OpenPhA, "Open A" ) \
ENUM_DEFN_Co( Co, OpenPhB, "Open B" ) \
ENUM_DEFN_Co( Co, OpenPhC, "Open C" )

#define ENUM_DEFNS_CoSrc \
\
ENUM_DEFN_CoSrc( CoSrc, Oc1f, "OC1+" ) \
ENUM_DEFN_CoSrc( CoSrc, Oc2f, "OC2+" ) \
ENUM_DEFN_CoSrc( CoSrc, Oc3f, "OC3+" ) \
ENUM_DEFN_CoSrc( CoSrc, Oc1r, "OC1-" ) \
ENUM_DEFN_CoSrc( CoSrc, Oc2r, "OC2-" ) \
ENUM_DEFN_CoSrc( CoSrc, Oc3r, "OC3-" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef1f, "EF1+" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef2f, "EF2+" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef3f, "EF3+" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef1r, "EF1-" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef2r, "EF2-" ) \
ENUM_DEFN_CoSrc( CoSrc, Ef3r, "EF3-" ) \
ENUM_DEFN_CoSrc( CoSrc, Seff, "SEF+" ) \
ENUM_DEFN_CoSrc( CoSrc, Sefr, "SEF-" ) \
ENUM_DEFN_CoSrc( CoSrc, Efll, "EFLL3" ) \
ENUM_DEFN_CoSrc( CoSrc, Ocll, "OCLL3" ) \
ENUM_DEFN_CoSrc( CoSrc, Uf, "UF" ) \
ENUM_DEFN_CoSrc( CoSrc, Of, "OF" ) \
ENUM_DEFN_CoSrc( CoSrc, Uv1, "UV1" ) \
ENUM_DEFN_CoSrc( CoSrc, Uv2, "UV2" ) \
ENUM_DEFN_CoSrc( CoSrc, Uv3, "UV3" ) \
ENUM_DEFN_CoSrc( CoSrc, Ov1, "OV1" ) \
ENUM_DEFN_CoSrc( CoSrc, Ov2, "OV2" ) \
ENUM_DEFN_CoSrc( CoSrc, Hlt, "HLT" ) \
ENUM_DEFN_CoSrc( CoSrc, ArOcef, "AR OC/EF/SEF" ) \
ENUM_DEFN_CoSrc( CoSrc, ArSef, "AR OC/EF/SEF" ) \
ENUM_DEFN_CoSrc( CoSrc, ArUv, "AR OV/UV" ) \
ENUM_DEFN_CoSrc( CoSrc, ArOv, "AR OV/UV" ) \
ENUM_DEFN_CoSrc( CoSrc, Abr, "ABR" ) \
ENUM_DEFN_CoSrc( CoSrc, Scada, "SCADA" ) \
ENUM_DEFN_CoSrc( CoSrc, Io, "IO" ) \
ENUM_DEFN_CoSrc( CoSrc, Hmi, "HMI" ) \
ENUM_DEFN_CoSrc( CoSrc, Pc, "PC" ) \
ENUM_DEFN_CoSrc( CoSrc, AoTimer, "AutoOpen Timer" ) \
ENUM_DEFN_CoSrc( CoSrc, Manual, "Manual" ) \
ENUM_DEFN_CoSrc( CoSrc, T10B, "SCADA" ) \
ENUM_DEFN_CoSrc( CoSrc, Aco, "ACO" ) \
ENUM_DEFN_CoSrc( CoSrc, Ar, "AR" ) \
ENUM_DEFN_CoSrc( CoSrc, Logic, "Logic" ) \
ENUM_DEFN_CoSrc( CoSrc, Undef, "Undefined" ) \
ENUM_DEFN_CoSrc( CoSrc, Hrm, "HRM" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps1f, "NPS1+" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps2f, "NPS2+" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps3f, "NPS3+" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps1r, "NPS1-" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps2r, "NPS2-" ) \
ENUM_DEFN_CoSrc( CoSrc, Nps3r, "NPS3-" ) \
ENUM_DEFN_CoSrc( CoSrc, Npsll1, "NPSLL1" ) \
ENUM_DEFN_CoSrc( CoSrc, Npsll2, "NPSLL2" ) \
ENUM_DEFN_CoSrc( CoSrc, Npsll3, "NPSLL3" ) \
ENUM_DEFN_CoSrc( CoSrc, Ocll1, "OCLL1" ) \
ENUM_DEFN_CoSrc( CoSrc, Ocll2, "OCLL2" ) \
ENUM_DEFN_CoSrc( CoSrc, Efll1, "EFLL1" ) \
ENUM_DEFN_CoSrc( CoSrc, Efll2, "EFLL2" ) \
ENUM_DEFN_CoSrc( CoSrc, Sefll, "SEFLL" ) \
ENUM_DEFN_CoSrc( CoSrc, Ac, "UV3 AutoClose" ) \
ENUM_DEFN_CoSrc( CoSrc, AoPowerFlowDirChanged, "AutoOpen Power Flow Dir Changed" ) \
ENUM_DEFN_CoSrc( CoSrc, AoPowerFlowReduced, "AutoOpen Power Flow Reduced" ) \
ENUM_DEFN_CoSrc( CoSrc, AbrAo, "ABR AutoOpen" ) \
ENUM_DEFN_CoSrc( CoSrc, RelayInput1, "Relay Input 1" ) \
ENUM_DEFN_CoSrc( CoSrc, RelayInput2, "Relay Input 2" ) \
ENUM_DEFN_CoSrc( CoSrc, RelayInput3, "Relay Input 3" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input1, "IO1 Input 1" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input2, "IO1 Input 2" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input3, "IO1 Input 3" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input4, "IO1 Input 4" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input5, "IO1 Input 5" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input6, "IO1 Input 6" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input7, "IO1 Input 7" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1Input8, "IO1 Input 8" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input1, "IO2 Input 1" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input2, "IO2 Input 2" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input3, "IO2 Input 3" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input4, "IO2 Input 4" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input5, "IO2 Input 5" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input6, "IO2 Input 6" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input7, "IO2 Input 7" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2Input8, "IO2 Input 8" ) \
ENUM_DEFN_CoSrc( CoSrc, Uv4, "UV4 (Sag)" ) \
ENUM_DEFN_CoSrc( CoSrc, ArOcNpsEfSef, "AR OC/NPS/EF/SEF" ) \
ENUM_DEFN_CoSrc( CoSrc, Sectionaliser, "Sectionaliser" ) \
ENUM_DEFN_CoSrc( CoSrc, PGE, "SCADA" ) \
ENUM_DEFN_CoSrc( CoSrc, RelayInput, "Relay Input" ) \
ENUM_DEFN_CoSrc( CoSrc, Io1, "IO1" ) \
ENUM_DEFN_CoSrc( CoSrc, Io2, "IO2" ) \
ENUM_DEFN_CoSrc( CoSrc, Ov3, "OV3" ) \
ENUM_DEFN_CoSrc( CoSrc, Ov4, "OV4" ) \
ENUM_DEFN_CoSrc( CoSrc, s61850, "IEC 61850" ) \
ENUM_DEFN_CoSrc( CoSrc, SmartGridAutomation, "Smart Grid Automation" ) \
ENUM_DEFN_CoSrc( CoSrc, AutoSync, "Auto-sync" ) \
ENUM_DEFN_CoSrc( CoSrc, Yn, "Yn" ) \
ENUM_DEFN_CoSrc( CoSrc, ArOcNpsEfSefYn, "AR OC/NPS/EF/SEF/Yn" ) \
ENUM_DEFN_CoSrc( CoSrc, s61850_GOOSE, "GOOSE" ) \
ENUM_DEFN_CoSrc( CoSrc, I2I1, "I2/I1" ) \
ENUM_DEFN_CoSrc( CoSrc, ROCOF, "ROCOF" ) \
ENUM_DEFN_CoSrc( CoSrc, VVS, "VVS" ) \
ENUM_DEFN_CoSrc( CoSrc, PDOP, "PDOP" ) \
ENUM_DEFN_CoSrc( CoSrc, PDUP, "PDUP" )

#define ENUM_DEFNS_CoState \
\
ENUM_DEFN_CoState( CoState, O1, "Lockout" ) \
ENUM_DEFN_CoState( CoState, O2, "Open 2" ) \
ENUM_DEFN_CoState( CoState, O3, "Open 3" ) \
ENUM_DEFN_CoState( CoState, O4, "Open 4" ) \
ENUM_DEFN_CoState( CoState, C0, "Close 0" ) \
ENUM_DEFN_CoState( CoState, C1, "Close 1" ) \
ENUM_DEFN_CoState( CoState, C2, "Close 2" ) \
ENUM_DEFN_CoState( CoState, C3, "Close 3" ) \
ENUM_DEFN_CoState( CoState, C4, "Close 4" ) \
ENUM_DEFN_CoState( CoState, OReclose, "" ) \
ENUM_DEFN_CoState( CoState, CReclose, "" ) \
ENUM_DEFN_CoState( CoState, OAutoClose, "Open UV3 AutoClose" ) \
ENUM_DEFN_CoState( CoState, OABR, "Open ABR" ) \
ENUM_DEFN_CoState( CoState, OAutoOpen, "Open AutoOpen" ) \
ENUM_DEFN_CoState( CoState, SectionaliserO5, "O5" ) \
ENUM_DEFN_CoState( CoState, SectionaliserO2, "O2" ) \
ENUM_DEFN_CoState( CoState, SectionaliserO3, "O3" ) \
ENUM_DEFN_CoState( CoState, SectionaliserO4, "O4" )

#define ENUM_DEFNS_TccType \
\
ENUM_DEFN_TccType( TccType, TccType_NAN, "" ) \
ENUM_DEFN_TccType( TccType, TccType_Iec, "IEC Trip" ) \
ENUM_DEFN_TccType( TccType, TccType_AnsiTrip, "ANSI Trip" ) \
ENUM_DEFN_TccType( TccType, TccType_AnsiRes, "ANSI Reset" ) \
ENUM_DEFN_TccType( TccType, TccType_Noja, "NOJA Trip" ) \
ENUM_DEFN_TccType( TccType, TccType_User, "User Standard Curve" ) \
ENUM_DEFN_TccType( TccType, TccType_UD, "User Defined Curve" )

#define ENUM_DEFNS_LocalRemote \
\
ENUM_DEFN_LocalRemote( LocalRemote, Local, "Local" ) \
ENUM_DEFN_LocalRemote( LocalRemote, Remote, "Remote" )

#define ENUM_DEFNS_MeasPhaseSeqAbcType \
\
ENUM_DEFN_MeasPhaseSeqAbcType( MeasPhaseSeqAbcType, ABC, "ABC" ) \
ENUM_DEFN_MeasPhaseSeqAbcType( MeasPhaseSeqAbcType, ACB, "ACB" ) \
ENUM_DEFN_MeasPhaseSeqAbcType( MeasPhaseSeqAbcType, Unknown, "???" )

#define ENUM_DEFNS_MeasPhaseSeqRstType \
\
ENUM_DEFN_MeasPhaseSeqRstType( MeasPhaseSeqRstType, RST, "RST" ) \
ENUM_DEFN_MeasPhaseSeqRstType( MeasPhaseSeqRstType, RTS, "RTS" ) \
ENUM_DEFN_MeasPhaseSeqRstType( MeasPhaseSeqRstType, Unknown, "???" )

#define ENUM_DEFNS_ProtDirOut \
\
ENUM_DEFN_ProtDirOut( ProtDirOut, Forward, "+" ) \
ENUM_DEFN_ProtDirOut( ProtDirOut, Reverse, "-" ) \
ENUM_DEFN_ProtDirOut( ProtDirOut, Unknown, "?" )

#define ENUM_DEFNS_DbFileCommand \
\
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdNone, "DB No file command" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdSave, "DB Save all datapoints" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdRead, "DB Read all datapoints" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdSaveConfig, "DB Save configuration" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdReadConfig, "DB Load configuration" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdCrashSave, "DB crash save" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdCrashLoad, "DB crash recover" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdManualSave, "DB Manual save all datapoints" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdSaveSwitchgearType, "DB Save Switchgear Type" ) \
ENUM_DEFN_DbFileCommand( DbFileCommand, DbFCmdResetProtConfig, "DB Reset protection configuration" )

#define ENUM_DEFNS_CommsSerialBaudRate \
\
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 300, "300" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 600, "600" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 1200, "1200" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 2400, "2400" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 4800, "4800" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 9600, "9600" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 19200, "19200" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 38400, "38400" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 115200, "115200" ) \
ENUM_DEFN_CommsSerialBaudRate( CommsSerialBaudRate, 57600, "57600" )

#define ENUM_DEFNS_CommsSerialDuplex \
\
ENUM_DEFN_CommsSerialDuplex( CommsSerialDuplex, half, "Half" ) \
ENUM_DEFN_CommsSerialDuplex( CommsSerialDuplex, full, "Full" )

#define ENUM_DEFNS_CommsSerialRTSMode \
\
ENUM_DEFN_CommsSerialRTSMode( CommsSerialRTSMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialRTSMode( CommsSerialRTSMode, FlowControl, "Flow Control" ) \
ENUM_DEFN_CommsSerialRTSMode( CommsSerialRTSMode, ControlPTT, "Control PTT" )

#define ENUM_DEFNS_CommsSerialRTSOnLevel \
\
ENUM_DEFN_CommsSerialRTSOnLevel( CommsSerialRTSOnLevel, High, "High" ) \
ENUM_DEFN_CommsSerialRTSOnLevel( CommsSerialRTSOnLevel, Low, "Low" )

#define ENUM_DEFNS_CommsSerialDTRMode \
\
ENUM_DEFN_CommsSerialDTRMode( CommsSerialDTRMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialDTRMode( CommsSerialDTRMode, Control, "Control" )

#define ENUM_DEFNS_CommsSerialDTROnLevel \
\
ENUM_DEFN_CommsSerialDTROnLevel( CommsSerialDTROnLevel, High, "High" ) \
ENUM_DEFN_CommsSerialDTROnLevel( CommsSerialDTROnLevel, Low, "Low" )

#define ENUM_DEFNS_CommsSerialParity \
\
ENUM_DEFN_CommsSerialParity( CommsSerialParity, none, "None" ) \
ENUM_DEFN_CommsSerialParity( CommsSerialParity, even, "Even" ) \
ENUM_DEFN_CommsSerialParity( CommsSerialParity, odd, "Odd" )

#define ENUM_DEFNS_CommsSerialCTSMode \
\
ENUM_DEFN_CommsSerialCTSMode( CommsSerialCTSMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialCTSMode( CommsSerialCTSMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN_CommsSerialCTSMode( CommsSerialCTSMode, MonitorLow, "Monitor Low" )

#define ENUM_DEFNS_CommsSerialDSRMode \
\
ENUM_DEFN_CommsSerialDSRMode( CommsSerialDSRMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialDSRMode( CommsSerialDSRMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN_CommsSerialDSRMode( CommsSerialDSRMode, MonitorLow, "Monitor Low" )

#define ENUM_DEFNS_CommsSerialDCDMode \
\
ENUM_DEFN_CommsSerialDCDMode( CommsSerialDCDMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialDCDMode( CommsSerialDCDMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN_CommsSerialDCDMode( CommsSerialDCDMode, MonitorLow, "Monitor Low" )

#define ENUM_DEFNS_CommsWlanNetworkAuthentication \
\
ENUM_DEFN_CommsWlanNetworkAuthentication( CommsWlanNetworkAuthentication, None, "WEP Open" ) \
ENUM_DEFN_CommsWlanNetworkAuthentication( CommsWlanNetworkAuthentication, Shared, "WEP Shared" ) \
ENUM_DEFN_CommsWlanNetworkAuthentication( CommsWlanNetworkAuthentication, WPA2Personal, "WPA2-Personal" ) \
ENUM_DEFN_CommsWlanNetworkAuthentication( CommsWlanNetworkAuthentication, WPAPersonal, "WPA-Personal" )

#define ENUM_DEFNS_CommsWlanDataEncryption \
\
ENUM_DEFN_CommsWlanDataEncryption( CommsWlanDataEncryption, TKIP, "TKIP" ) \
ENUM_DEFN_CommsWlanDataEncryption( CommsWlanDataEncryption, AES, "AES" )

#define ENUM_DEFNS_BinaryInputObject01Enum \
\
ENUM_DEFN_BinaryInputObject01Enum( BinaryInputObject01Enum, BinaryInput, "Binary Input" ) \
ENUM_DEFN_BinaryInputObject01Enum( BinaryInputObject01Enum, StatusBinaryInput, "Binary Input with Status" )

#define ENUM_DEFNS_BinaryInputObject02Enum \
\
ENUM_DEFN_BinaryInputObject02Enum( BinaryInputObject02Enum, NoTimeBinaryInputChange, "Binary Input Change without Time" ) \
ENUM_DEFN_BinaryInputObject02Enum( BinaryInputObject02Enum, TimeBinaryInputChange, "Binary Input Change with Time" ) \
ENUM_DEFN_BinaryInputObject02Enum( BinaryInputObject02Enum, RelTimeBinaryInputChange, "Binary Input Change with Relative Time" )

#define ENUM_DEFNS_BinaryOutputObject10Enum \
\
ENUM_DEFN_BinaryOutputObject10Enum( BinaryOutputObject10Enum, BinaryOutput, "Binary Output" ) \
ENUM_DEFN_BinaryOutputObject10Enum( BinaryOutputObject10Enum, StatusBinaryOutput, "Binary Output with Status" )

#define ENUM_DEFNS_BinaryCounterObject20Enum \
\
ENUM_DEFN_BinaryCounterObject20Enum( BinaryCounterObject20Enum, 32BitBinaryCounter, "32-Bit Binary Counter" ) \
ENUM_DEFN_BinaryCounterObject20Enum( BinaryCounterObject20Enum, 16BitBinaryCounter, "16-Bit Binary Counter" ) \
ENUM_DEFN_BinaryCounterObject20Enum( BinaryCounterObject20Enum, 32BitBinaryCounterNoFlag, "32-Bit Binary Counter without Flag" ) \
ENUM_DEFN_BinaryCounterObject20Enum( BinaryCounterObject20Enum, 16BitBinaryCounterNoFlag, "16-Bit Binary Counter without Flag" ) \
ENUM_DEFN_BinaryCounterObject20Enum( BinaryCounterObject20Enum, Disabled, "Disabled" )

#define ENUM_DEFNS_BinaryCounterObject21Enum \
\
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 32BitFrozenCounter, "32-Bit Frozen Counter" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 16BitFrozenCounter, "16-Bit Frozen Counter" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 32BitFrozenCounterTimeFreeze, "32-Bit Frozen Counter with Time Of Freeze" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 16BitFrozenCounterTimeFreeze, "16-Bit Frozen Counter with Time Of Freeze" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 32BitFrozenCounterNoFlag, "32-Bit Frozen Counter without Flag" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, 16BitFrozenCounterNoFlag, "16-Bit Frozen Counter without Flag" ) \
ENUM_DEFN_BinaryCounterObject21Enum( BinaryCounterObject21Enum, Disabled, "Disabled" )

#define ENUM_DEFNS_BinaryCounterObject22Enum \
\
ENUM_DEFN_BinaryCounterObject22Enum( BinaryCounterObject22Enum, 32BitCounterChangeEvent, "32-Bit Counter Change Event" ) \
ENUM_DEFN_BinaryCounterObject22Enum( BinaryCounterObject22Enum, 16BitCounterChangeEvent, "16-Bit Counter Change Event" ) \
ENUM_DEFN_BinaryCounterObject22Enum( BinaryCounterObject22Enum, 32BitTimeCounterChangeEvent, "32-Bit Counter Change Event with Time" ) \
ENUM_DEFN_BinaryCounterObject22Enum( BinaryCounterObject22Enum, 16BitTimeCounterChangeEvent, "16-Bit Counter Change Event with Time" ) \
ENUM_DEFN_BinaryCounterObject22Enum( BinaryCounterObject22Enum, Disabled, "Disabled" )

#define ENUM_DEFNS_BinaryCounterObject23Enum \
\
ENUM_DEFN_BinaryCounterObject23Enum( BinaryCounterObject23Enum, 32BitFrozenCounterEvent, "32-Bit Frozen Counter Event" ) \
ENUM_DEFN_BinaryCounterObject23Enum( BinaryCounterObject23Enum, 16BitFrozenCounterEvent, "16-Bit Frozen Counter Event" ) \
ENUM_DEFN_BinaryCounterObject23Enum( BinaryCounterObject23Enum, 32BitTimeFrozenCounterEvent, "32-Bit Frozen Counter Event with Time" ) \
ENUM_DEFN_BinaryCounterObject23Enum( BinaryCounterObject23Enum, 16BitTimeFrozenCounterEvent, "16-Bit Frozen Counter Event with Time" ) \
ENUM_DEFN_BinaryCounterObject23Enum( BinaryCounterObject23Enum, Disabled, "Disabled" )

#define ENUM_DEFNS_AnalogInputObject30Enum \
\
ENUM_DEFN_AnalogInputObject30Enum( AnalogInputObject30Enum, 32BitAnalogInput, "32-Bit Analog Input" ) \
ENUM_DEFN_AnalogInputObject30Enum( AnalogInputObject30Enum, 16BitAnalogInput, "16-Bit Analog Input" ) \
ENUM_DEFN_AnalogInputObject30Enum( AnalogInputObject30Enum, 32BitAnalogInputNoFlag, "32-Bit Analog Input without Flag" ) \
ENUM_DEFN_AnalogInputObject30Enum( AnalogInputObject30Enum, 16BitAnalogInputNoFlag, "16-Bit Analog Input without Flag" )

#define ENUM_DEFNS_AnalogInputObject32Enum \
\
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 32BitAnalogChangeEventNoTimeReportAll, "Var 1: 32-Bit Analog Change Event without Time - Report All" ) \
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 16BitAnalogChangeEventNoTimeReportAll, "Var 2: 16-Bit Analog Change Event without Time - Report All" ) \
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 32BitTimeAnalogChangeEvent, "Var 3: 32-Bit Analog Change Event with Time" ) \
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 16BitTimeAnalogChangeEvent, "Var 4: 16-Bit Analog Change Event with Time" ) \
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 32BitAnalogChangeEventNoTimeReportLast, "Var 1: 32-Bit Analog Change Event without Time - Report Last" ) \
ENUM_DEFN_AnalogInputObject32Enum( AnalogInputObject32Enum, 16BitAnalogChangeEventNoTimeReportLast, "Var 2: 16-Bit Analog Change Event without Time - Report Last" )

#define ENUM_DEFNS_AnalogInputObject34Enum \
\
ENUM_DEFN_AnalogInputObject34Enum( AnalogInputObject34Enum, 16BitAnalogInputReportDeadband, "16-Bit Analog Input Reporting Deadband" ) \
ENUM_DEFN_AnalogInputObject34Enum( AnalogInputObject34Enum, 32BitAnalogInputReportDeadband, "32-Bit Analog Input Reporting Deadband" )

#define ENUM_DEFNS_ProtStatus \
\
ENUM_DEFN_ProtStatus( ProtStatus, Prot, "Prot" ) \
ENUM_DEFN_ProtStatus( ProtStatus, AR, "AR" ) \
ENUM_DEFN_ProtStatus( ProtStatus, LL, "LL" ) \
ENUM_DEFN_ProtStatus( ProtStatus, EF, "EF" ) \
ENUM_DEFN_ProtStatus( ProtStatus, SEF, "SEF" ) \
ENUM_DEFN_ProtStatus( ProtStatus, UV, "UV" ) \
ENUM_DEFN_ProtStatus( ProtStatus, OV, "OV" ) \
ENUM_DEFN_ProtStatus( ProtStatus, UF, "UF" ) \
ENUM_DEFN_ProtStatus( ProtStatus, OF, "OF" ) \
ENUM_DEFN_ProtStatus( ProtStatus, ABR, "ABR" ) \
ENUM_DEFN_ProtStatus( ProtStatus, CLP, "CLP" ) \
ENUM_DEFN_ProtStatus( ProtStatus, SSM, "SSM" ) \
ENUM_DEFN_ProtStatus( ProtStatus, DFT, "DFT" ) \
ENUM_DEFN_ProtStatus( ProtStatus, MNT, "MNT" ) \
ENUM_DEFN_ProtStatus( ProtStatus, ACO, "ACO" ) \
ENUM_DEFN_ProtStatus( ProtStatus, 79_2, "79-2" ) \
ENUM_DEFN_ProtStatus( ProtStatus, 79_3, "79-3" ) \
ENUM_DEFN_ProtStatus( ProtStatus, HRM, "HRM" ) \
ENUM_DEFN_ProtStatus( ProtStatus, NPS, "NPS" ) \
ENUM_DEFN_ProtStatus( ProtStatus, UV4, "UV4 (Sag)" ) \
ENUM_DEFN_ProtStatus( ProtStatus, LLB, "LLB" ) \
ENUM_DEFN_ProtStatus( ProtStatus, AlarmMode, "Alarm Mode" ) \
ENUM_DEFN_ProtStatus( ProtStatus, Yn, "Yn" ) \
ENUM_DEFN_ProtStatus( ProtStatus, OV3, "OV3" ) \
ENUM_DEFN_ProtStatus( ProtStatus, ROCOF, "ROCOF" ) \
ENUM_DEFN_ProtStatus( ProtStatus, VVS, "VVS" ) \
ENUM_DEFN_ProtStatus( ProtStatus, PDOP, "PDOP" ) \
ENUM_DEFN_ProtStatus( ProtStatus, PDUP, "PDUP" ) \
ENUM_DEFN_ProtStatus( ProtStatus, HLT, "HLT" )

#define ENUM_DEFNS_LogStartEnd \
\
ENUM_DEFN_LogStartEnd( LogStartEnd, Start, "(start)" ) \
ENUM_DEFN_LogStartEnd( LogStartEnd, End, "(end)" ) \
ENUM_DEFN_LogStartEnd( LogStartEnd, NaSet, "" ) \
ENUM_DEFN_LogStartEnd( LogStartEnd, NaReset, "" )

#define ENUM_DEFNS_LogEventSrc \
\
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc1f, "OC1+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc2f, "OC2+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc3f, "OC3+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc1r, "OC1-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc2r, "OC2-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oc3r, "OC3-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef1f, "EF1+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef2f, "EF2+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef3f, "EF3+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef1r, "EF1-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef2r, "EF2-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ef3r, "EF3-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Seff, "SEF+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Sefr, "SEF-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Sst, "SST" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ocll, "OCLL3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Efll, "EFLL3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Uv1, "UV1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Uv2, "UV2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Uv3, "UV3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ov1, "OV1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ov2, "OV2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UrstUnder, "Urst LT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UabcUnder, "Uabc LT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UrstOver, "Urst GT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UabcOver, "Uabc GT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Uf, "UF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Of, "OF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Lsd, "LSD" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Vrc, "VRC" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Abr, "ABR" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ir, "IR" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Clp, "CLP" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArOcef, "AR OC/EF/SEF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArSef, "AR OC/EF/SEF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Hmi, "HMI" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Pc, "PC" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io, "I/O" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Scada, "SCADA" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Tta, "TTA" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArUv, "AR OV/UV" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, DeOcefsef, "DE OC/EF/SEF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArOv, "AR OV/UV" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Sim, "SIM" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Comms, "Comms" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1, "I/O1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2, "I/O2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Relay, "Relay" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Prot, "Protection" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ao, "AutoOpen" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Calib, "Calibration process" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, HmiClient, "HMI" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, SwSimul, "Switch Simulator" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Smp, "SMP" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, HLT, "HLT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, LL, "LL" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, AbrAo, "ABR AutoOpen" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Usb, "USB" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, T10B, "SCADA" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ExtLoad, "ExtLoad" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Aco, "ACO" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Logic, "Logic" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, RelayInput, "Relay Input" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io3, "I/O3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io4, "I/O4" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UrUnder, "Ur LT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UaUnder, "Ua LT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UrOver, "Ur GT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UaOver, "Ua GT" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ar, "AR" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, De, "DE" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Oscillography, "OSC" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Hrm, "HRM" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps1f, "NPS1+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps2f, "NPS2+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps3f, "NPS3+" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps1r, "NPS1-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps2r, "NPS2-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Nps3r, "NPS3-" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Npsll1, "NPSLL1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Npsll2, "NPSLL2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Npsll3, "NPSLL3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ocll1, "OCLL1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ocll2, "OCLL2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Efll1, "EFLL1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Efll2, "EFLL2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Sefll, "SEFLL" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Mode, "Mode" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ac, "UV3 AutoClose" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input1, "I/O1 Input 1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input2, "I/O1 Input 2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input3, "I/O1 Input 3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input4, "I/O1 Input 4" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input5, "I/O1 Input 5" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input6, "I/O1 Input 6" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input7, "I/O1 Input 7" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io1Input8, "I/O1 Input 8" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input1, "I/O2 Input 1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input2, "I/O2 Input 2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input3, "I/O2 Input 3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input4, "I/O2 Input 4" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input5, "I/O2 Input 5" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input6, "I/O2 Input 6" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input7, "I/O2 Input 7" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Io2Input8, "I/O2 Input 8" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, RelayInput1, "Relay Input 1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, RelayInput2, "Relay Input 2" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, RelayInput3, "Relay Input 3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Uv4, "UV4 (Sag)" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArOcNpsEfSef, "AR OC/NPS/EF/SEF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, DeOcNpsEfSef, "DE OC/NPS/EF/SEF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Auto, "AUTO" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Sectionaliser, "Sectionaliser" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, CloseBlocking, "Logic Close Blocking" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, LLB, "LLB" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, PGE, "SCADA" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, System, "System" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ov3, "OV3" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Ov4, "OV4" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, s61850, "IEC 61850" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Psc, "PSC" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, SmartGridAutomation, "SGA" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, GPS, "GPS" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Synchronisation, "Synchronisation" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, MPCB, "Multiphase Close Blocking" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Yn, "Yn" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ArOcNpsEfSefYn, "AR OC/NPS/EF/SEF/Yn" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, s61850_GOOSE, "GOOSE" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, I2I1, "I2/I1" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, UPS, "UPS" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, FaultLocator, "Fault Locator" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, SGA_Logic, "SGA/Logic" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, SNTP, "SNTP" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, ROCOF, "ROCOF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, VVS, "VVS" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, RTC, "RTC" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, CBF, "CBF" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, PDOP, "PDOP" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, PDUP, "PDUP" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, PMU, "PMU" ) \
ENUM_DEFN_LogEventSrc( LogEventSrc, Undefined, "Undefined" )

#define ENUM_DEFNS_LogEventPhase \
\
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseNAN, "" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseA, "A" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseB, "B" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseC, "C" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseN, "N" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseNa, "" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseAB, "AB" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseBC, "BC" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseCA, "CA" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseABC, "ABC" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseR, "R" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseS, "S" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseT, "T" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseRS, "RS" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseST, "ST" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseTR, "TR" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseAE, "AE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseBE, "BE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseCE, "CE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseABE, "ABE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseBCE, "BCE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseCAE, "CAE" ) \
ENUM_DEFN_LogEventPhase( LogEventPhase, PhaseABCE, "ABCE" )

#define ENUM_DEFNS_EventDeState \
\
ENUM_DEFN_EventDeState( EventDeState, eventDeStateForward, "+" ) \
ENUM_DEFN_EventDeState( EventDeState, eventDeStateReverse, "-" ) \
ENUM_DEFN_EventDeState( EventDeState, eventDeStateUnknown, "?" )

#define ENUM_DEFNS_ActiveGrp \
\
ENUM_DEFN_ActiveGrp( ActiveGrp, activeGrpNoGroup, "" ) \
ENUM_DEFN_ActiveGrp( ActiveGrp, activeGrp1, "1" ) \
ENUM_DEFN_ActiveGrp( ActiveGrp, activeGrp2, "2" ) \
ENUM_DEFN_ActiveGrp( ActiveGrp, activeGrp3, "3" ) \
ENUM_DEFN_ActiveGrp( ActiveGrp, activeGrp4, "4" )

#define ENUM_DEFNS_CmsErrorCodes \
\
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, OK, "OK" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, IncorrectAccessCode, "Incorrect Access Code" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidDataPointID, "Invalid Data Point ID" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, ValueOutOfRange, "Value Out Of Range" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidValueSize, "Invalid Value Size" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidChunkIndex, "Invalid Chunk Index" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidFileName, "Invalid File Name" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, FileReadError, "File Read Error" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, FileWriteError, "File Write Error" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, FileNameConflict, "File Name Conflict" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidDirectoryName, "Invalid Directory Name" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, OutOfSpace, "Out Of Space" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidPermissions, "Invalid Permissions" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, SystemError, "System Error" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InvalidCommand, "Invalid Command" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, InaccurateValue, "Value is inaccurate" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, RequestApprovalTimeout, "Request Approval Timeout" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, RequestDenied, "Request Denied" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, FileNotExisting, "File does not exist" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, DirectoryNotExisting, "Directory does not exist" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, OpenSwitchgearFailed, "Open request failed" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, CloseSwitchgearFailed, "Close request failed" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, DataLogFailed, "Data Log Failed" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, ProcessingFileError, "File processing error" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, TimedOut, "Timed Out" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, DuplicateMessageInQueue, "Duplicate Message In Queue" ) \
ENUM_DEFN_CmsErrorCodes( CmsErrorCodes, NullValue, "Null Value" )

#define ENUM_DEFNS_LineSupplyStatus \
\
ENUM_DEFN_LineSupplyStatus( LineSupplyStatus, On, "ON" ) \
ENUM_DEFN_LineSupplyStatus( LineSupplyStatus, Off, "OFF" ) \
ENUM_DEFN_LineSupplyStatus( LineSupplyStatus, High, "HIGH" ) \
ENUM_DEFN_LineSupplyStatus( LineSupplyStatus, Low, "LOW" ) \
ENUM_DEFN_LineSupplyStatus( LineSupplyStatus, Surge, "SURGE" )

#define ENUM_DEFNS_TccCurveName \
\
ENUM_DEFN_TccCurveName( TccCurveName, TimeDefinite, "TD" ) \
ENUM_DEFN_TccCurveName( TccCurveName, UserDefined, "UDC" )

#define ENUM_DEFNS_HmiTccCurveClass \
\
ENUM_DEFN_HmiTccCurveClass( HmiTccCurveClass, Td, "TD" ) \
ENUM_DEFN_HmiTccCurveClass( HmiTccCurveClass, Reset, "Reset" ) \
ENUM_DEFN_HmiTccCurveClass( HmiTccCurveClass, NoReset, "No Reset" )

#define ENUM_DEFNS_SwState \
\
ENUM_DEFN_SwState( SwState, Unknown, "Disconn." ) \
ENUM_DEFN_SwState( SwState, Open, "Open" ) \
ENUM_DEFN_SwState( SwState, Closed, "Closed" ) \
ENUM_DEFN_SwState( SwState, Lockout, "Lockout" ) \
ENUM_DEFN_SwState( SwState, ILock, "MechLock" ) \
ENUM_DEFN_SwState( SwState, OpenABR, "Open" ) \
ENUM_DEFN_SwState( SwState, Failure, "Failure" ) \
ENUM_DEFN_SwState( SwState, OpenACO, "Open" ) \
ENUM_DEFN_SwState( SwState, OpenAC, "Open UV3" ) \
ENUM_DEFN_SwState( SwState, LogicallyLocked, "SWLocked" )

#define ENUM_DEFNS_OcEfSefDirs \
\
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UUU, "?/?/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UUP, "?/?/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UUN, "?/?/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UPU, "?/+/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UPP, "?/+/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UPN, "?/+/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UNU, "?/-/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UNP, "?/-/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, UNN, "?/-/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PUU, "+/?/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PUP, "+/?/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PUN, "+/?/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PPU, "+/+/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PPP, "+/+/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PPN, "+/+/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PNU, "+/-/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PNP, "+/-/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, PNN, "+/-/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NUU, "-/?/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NUP, "-/?/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NUN, "-/?/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NPU, "-/+/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NPP, "-/+/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NPN, "-/+/-" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NNU, "-/-/?" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NNP, "-/-/+" ) \
ENUM_DEFN_OcEfSefDirs( OcEfSefDirs, NNN, "-/-/-" )

#define ENUM_DEFNS_TripModeDLA \
\
ENUM_DEFN_TripModeDLA( TripModeDLA, Disable, "Disable" ) \
ENUM_DEFN_TripModeDLA( TripModeDLA, Lockout, "Lockout" ) \
ENUM_DEFN_TripModeDLA( TripModeDLA, Alarm, "Alarm" )

#define ENUM_DEFNS_HmiAuthGroup \
\
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group0, "Default" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group1, "Password" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group2, "Password" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group3, "Factory" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group4, "Recovery" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group5, "Group 5" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group6, "Group 6" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group7, "Group 7" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group8, "Group 8" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group9, "Group 9" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group10, "Group 10" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group11, "Group 11" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group12, "Group 12" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group13, "Group 13" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group14, "Group 14" ) \
ENUM_DEFN_HmiAuthGroup( HmiAuthGroup, Group15, "Group 15" )

#define ENUM_DEFNS_Bool \
\
ENUM_DEFN_Bool( Bool, False, "False" ) \
ENUM_DEFN_Bool( Bool, True, "True" )

#define ENUM_DEFNS_CommsPort \
\
ENUM_DEFN_CommsPort( CommsPort, Rs232, "RS232" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbA, "USBA" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbB, "USBB" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbC, "USBC" ) \
ENUM_DEFN_CommsPort( CommsPort, Rs232Dte2, "RS232P" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbD, "USBA2" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbE, "USBB2" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbF, "USBC2" ) \
ENUM_DEFN_CommsPort( CommsPort, UsbGadget, "CMS" ) \
ENUM_DEFN_CommsPort( CommsPort, PortNone, "None" ) \
ENUM_DEFN_CommsPort( CommsPort, Lan, "LAN" ) \
ENUM_DEFN_CommsPort( CommsPort, Wlan, "WLAN" ) \
ENUM_DEFN_CommsPort( CommsPort, MobileNetwork, "Mobile Network Modem" ) \
ENUM_DEFN_CommsPort( CommsPort, GPS, "GPS" ) \
ENUM_DEFN_CommsPort( CommsPort, LanB, "LAN2" )

#define ENUM_DEFNS_CommsSerialPinStatus \
\
ENUM_DEFN_CommsSerialPinStatus( CommsSerialPinStatus, CommsSerialPinStatusLow, "Low" ) \
ENUM_DEFN_CommsSerialPinStatus( CommsSerialPinStatus, CommsSerialPinStatusHigh, "High" ) \
ENUM_DEFN_CommsSerialPinStatus( CommsSerialPinStatus, CommsSerialPinStatusIgnore, "Ignore" )

#define ENUM_DEFNS_CommsConnectionStatus \
\
ENUM_DEFN_CommsConnectionStatus( CommsConnectionStatus, CommsConnectionStatusDisconnected, "Disconnected" ) \
ENUM_DEFN_CommsConnectionStatus( CommsConnectionStatus, CommsConnectionStatusConnected, "Connected" ) \
ENUM_DEFN_CommsConnectionStatus( CommsConnectionStatus, CommsConnectionStatusConnecting, "Connecting" )

#define ENUM_DEFNS_CommsPortDetectedType \
\
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, UnknownType, "Unknown" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, SerialType, "Serial" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, DualSerialType, "Dual Serial" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, LanType, "LAN" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, WlanType, "WLAN" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, GPRSType, "GPRS" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, BluetoothType, "Bluetooth" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, UnsupportedType, "Unsupported" ) \
ENUM_DEFN_CommsPortDetectedType( CommsPortDetectedType, MobileNetworkType, "Mobile Network Modem" )

#define ENUM_DEFNS_SerialPortConfigType \
\
ENUM_DEFN_SerialPortConfigType( SerialPortConfigType, NotUsed, "Disabled" ) \
ENUM_DEFN_SerialPortConfigType( SerialPortConfigType, SerialDirect, "Serial Direct" ) \
ENUM_DEFN_SerialPortConfigType( SerialPortConfigType, SerialModem, "Modem" ) \
ENUM_DEFN_SerialPortConfigType( SerialPortConfigType, SerialRadio, "Radio" ) \
ENUM_DEFN_SerialPortConfigType( SerialPortConfigType, SerialGPRS, "GPRS" )

#define ENUM_DEFNS_UsbPortConfigType \
\
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, NotUsed, "Disabled" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbSerialDirect, "Serial Direct" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbSerialModem, "Modem" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbSerialRadio, "Radio" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbLAN, "LAN" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbWLAN, "WLAN" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbGPRS, "GPRS" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, UsbBlueTooth, "Bluetooth" ) \
ENUM_DEFN_UsbPortConfigType( UsbPortConfigType, MobileNetwork, "Mobile Network" )

#define ENUM_DEFNS_LanPortConfigType \
\
ENUM_DEFN_LanPortConfigType( LanPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN_LanPortConfigType( LanPortConfigType, LAN, "LAN" )

#define ENUM_DEFNS_DataflowUnit \
\
ENUM_DEFN_DataflowUnit( DataflowUnit, UsingByteCount, "Byte" ) \
ENUM_DEFN_DataflowUnit( DataflowUnit, UsingPacketCount, "Packet" )

#define ENUM_DEFNS_CommsConnType \
\
ENUM_DEFN_CommsConnType( CommsConnType, Disabled, "Disabled" ) \
ENUM_DEFN_CommsConnType( CommsConnType, Serial, "Serial" ) \
ENUM_DEFN_CommsConnType( CommsConnType, SerialModem, "SerialModem" ) \
ENUM_DEFN_CommsConnType( CommsConnType, SerialRadio, "SerialRadio" ) \
ENUM_DEFN_CommsConnType( CommsConnType, LAN, "LAN" ) \
ENUM_DEFN_CommsConnType( CommsConnType, WLAN, "WLAN" )

#define ENUM_DEFNS_YesNo \
\
ENUM_DEFN_YesNo( YesNo, No, "No" ) \
ENUM_DEFN_YesNo( YesNo, Yes, "Yes" )

#define ENUM_DEFNS_ProtectionState \
\
ENUM_DEFN_ProtectionState( ProtectionState, Init, "Unknown: Initialised" ) \
ENUM_DEFN_ProtectionState( ProtectionState, NFF, "Closed: NFF" ) \
ENUM_DEFN_ProtectionState( ProtectionState, Pup, "Closed: Pickup" ) \
ENUM_DEFN_ProtectionState( ProtectionState, Fault, "Closed: Fault" ) \
ENUM_DEFN_ProtectionState( ProtectionState, AR, "Open: AR" ) \
ENUM_DEFN_ProtectionState( ProtectionState, Lockout, "Open: Lockout" ) \
ENUM_DEFN_ProtectionState( ProtectionState, ABR, "Open: ABR" ) \
ENUM_DEFN_ProtectionState( ProtectionState, OpenACO, "Open: ACO" ) \
ENUM_DEFN_ProtectionState( ProtectionState, OpenAC, "Open UV3 AutoClose" )

#define ENUM_DEFNS_AutoIp \
\
ENUM_DEFN_AutoIp( AutoIp, YesUsingDhcp, "Yes" ) \
ENUM_DEFN_AutoIp( AutoIp, NotUseDhcp, "No" )

#define ENUM_DEFNS_ProgramSimCmd \
\
ENUM_DEFN_ProgramSimCmd( ProgramSimCmd, None, "No command (default value)" ) \
ENUM_DEFN_ProgramSimCmd( ProgramSimCmd, WriteFile, "Write file /var/nand/simimg/img.new" ) \
ENUM_DEFN_ProgramSimCmd( ProgramSimCmd, WriteFileNoRestart, "Write but do not restart Relay" )

#define ENUM_DEFNS_UsbDiscCmd \
\
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, None, "No command" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyLogs, "Copy Logs" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyUpdates, "Copy Updates" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, RestoreLogs, "Restore logs" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, RestoreSettings, "Restore settings" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyInt, "Copy interruption logs" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopySag, "Copy sag/swell logs" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyHrm, "Copy harmonic logs" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyUsbInstallFiles, "Copy installation files" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, Eject, "Eject USB" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, FindDNP3SAUpdateKey, "Find DNP3-SA update key" ) \
ENUM_DEFN_UsbDiscCmd( UsbDiscCmd, CopyDNP3SAUpdateKey, "Copy DNP3-SA update key" )

#define ENUM_DEFNS_UsbDiscStatus \
\
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, NoDisc, "No Disc" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, Ready, "Ready" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, BusyCopyLog, "Copying Logs" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, BusyCopyUpdate, "Copying Updates" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, BusyCopyOsc, "Copying Captures" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, AboutToUnmount, "Syncing Filesystem" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, BusyFindDNP3SAUpdateKey, "Searching" ) \
ENUM_DEFN_UsbDiscStatus( UsbDiscStatus, BusyCopyDNP3SAUpdateKey, "Copying DNP3SA key" )

#define ENUM_DEFNS_UpdateError \
\
ENUM_DEFN_UpdateError( UpdateError, None, "None" ) \
ENUM_DEFN_UpdateError( UpdateError, Unspecified, "Unspecified Error" ) \
ENUM_DEFN_UpdateError( UpdateError, UpdateCount, "Too Many Update Files" ) \
ENUM_DEFN_UpdateError( UpdateError, UpdateInvalid, "Invalid Update File" ) \
ENUM_DEFN_UpdateError( UpdateError, UpdateUnknown, "Unrecognised Update Type" ) \
ENUM_DEFN_UpdateError( UpdateError, FileSystemIo, "Internal File System Error" ) \
ENUM_DEFN_UpdateError( UpdateError, DbVersion, "Invalid Database Version" ) \
ENUM_DEFN_UpdateError( UpdateError, UsbIoErr, "USB Read Error" ) \
ENUM_DEFN_UpdateError( UpdateError, HwMajor, "Unsupported hardware version" ) \
ENUM_DEFN_UpdateError( UpdateError, ModuleCode, "Unsupported module" ) \
ENUM_DEFN_UpdateError( UpdateError, FileSystemMismatch, "Incompatible file system" ) \
ENUM_DEFN_UpdateError( UpdateError, BackupSettingsFailed, "Backup of settings failed" ) \
ENUM_DEFN_UpdateError( UpdateError, BackupLogsFailed, "Backup of logs failed" ) \
ENUM_DEFN_UpdateError( UpdateError, InvalidMicrokernel, "Invalid microkernel" ) \
ENUM_DEFN_UpdateError( UpdateError, BackupBlocked, "Backup obstructed" ) \
ENUM_DEFN_UpdateError( UpdateError, MissingSerialNum, "Missing Serial Number" ) \
ENUM_DEFN_UpdateError( UpdateError, CommsError, "Comms Error" ) \
ENUM_DEFN_UpdateError( UpdateError, UpdateTimeout, "Timeout" ) \
ENUM_DEFN_UpdateError( UpdateError, MissingDependency, "Missing Dependency" ) \
ENUM_DEFN_UpdateError( UpdateError, NoFiles, "No Files" ) \
ENUM_DEFN_UpdateError( UpdateError, DbAccessError, "Database Access Error" ) \
ENUM_DEFN_UpdateError( UpdateError, RevertFailed, "Revert Failed" )

#define ENUM_DEFNS_SerialPartCode \
\
ENUM_DEFN_SerialPartCode( SerialPartCode, Invalid, "Invalid" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM200_15_16_630, "OSM 15-16-630-200" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM203_27_12_630, "OSM 27-12-630-203" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM210_15_16_630, "OSM 15-16-630-210" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM210_27_12_630, "OSM 27-12-630-213" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800_REAL, "OSM 15-16-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM312_15_16_800, "OSM 15-16-800-312" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800_DIN, "OSM 15-16-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM311_15_16_800_DIN, "OSM 15-16-800-311" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, GPIO01, "GPIO-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, PAN01, "PAN-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, SIM01, "SIM-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM01, "RLM-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM320_15_12_800, "OSM 15-12-800-320" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM320_27_12_800, "OSM 27-12-800-320" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_12_630, "OSM 38-12-630-300" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM301_38_12_630, "OSM 38-12-630-301" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800, "OSM 15-12-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_27_12_800, "OSM 27-12-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM02, "RLM-02" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_12_800, "OSM 38-12-800-300" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM301_38_12_800, "OSM 38-12-800-301" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM312_15_12_800, "OSM 15-12-800-312" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM312_27_12_800, "OSM 27-12-800-312" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM220_15_16_630, "OSM 15-16-630-220" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM223_27_12_630, "OSM 27-12-630-223" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_27_12_630, "OSM 27-12-630-300" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, SIM02, "SIM-02" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM211_15_16_630, "OSM 15-16-630-211" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, SIM03, "SIM-03" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_12_800_DIN, "OSM 15-12-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_27_12_800_DIN, "OSM 27-12-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM311_27_12_800, "OSM 27-12-800-311" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM311_27_12_800_DIN, "OSM 27-12-800-311" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM311_15_16_800, "OSM 15-16-800-311" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM20, "RLM-20" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM302_38_12_800, "OSM 38-12-800-302" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800_GMK, "OSM 15-16-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_27_12_800_GMK, "OSM 27-12-800-310" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM03, "RLM-03" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM15, "RLM-15" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM15_4G, "RLM-15-4G" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800_SEF, "OSM 15-16-800-310-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_27_12_800_SEF, "OSM 27-12-800-310-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_12_800_SEF, "OSM 38-12-800-300-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM312_15_16_800_SEF, "OSM 15-16-800-312-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM312_27_12_800_SEF, "OSM 27-12-800-312-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM302_38_12_800_SEF, "OSM 38-12-800-302-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_16_800_SEF, "OSM 38-16-800-300-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM302_38_16_800_SEF, "OSM 38-16-800-302-SEF" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_16_800, "OSM 38-16-800-300" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM301_38_16_800, "OSM 38-16-800-301" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM302_38_16_800, "OSM 38-16-800-302" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, PSC20, "PSC-20" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, SIM20, "SIM-20" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, RLM20_4G, "RLM-20-4G" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_16_800_DCT, "OSM 38-16-800-300-DCT" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM313_15_16_800, "OSM 15-16-800-313" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM313_27_12_800, "OSM 27-12-800-313" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM303_38_12_800, "OSM 38-12-800-303" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM303_38_16_800, "OSM 38-16-800-303" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_15_16_800_60C, "OSM 15-16-800-310-60C" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM310_27_12_800_60C, "OSM 27-12-800-310-60C" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_12_800_60C, "OSM 38-12-800-300-60C" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_16_800_60C, "OSM 38-16-800-300-60C" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM314_15_16_800, "OSM 15-16-800-314" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM314_27_12_800, "OSM 27-12-800-314" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM304_38_16_800, "OSM 38-16-800-304" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, OSM300_38_16_800_D60, "OSM 38-16-800-300-D60" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, LANG01, "LANG-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, LANG20, "LANG-20" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, DBS01, "DBS-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UKERN01, "UKERN-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UKERN02, "UKERN-02" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UKERN03, "UKERN-03" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UKERN15, "UKERN-15" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UKERN15_4G, "UKERN-15-4G" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT01, "UBOOT-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT02, "UBOOT-02" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT20, "UBOOT-20" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT03, "UBOOT-03" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT15, "UBOOT-15" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT15_4G, "UBOOT-15-4G" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, UBOOT20_4G, "UBOOT20_4G" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, FPGA01, "FPGA-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, SMP01, "SMP-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, DNP3S01, "DNP3S-01" ) \
ENUM_DEFN_SerialPartCode( SerialPartCode, S61850_CID01, "S61850 CID" )

#define ENUM_DEFNS_HmiMsgboxTitle \
\
ENUM_DEFN_HmiMsgboxTitle( HmiMsgboxTitle, Unknown, "MESSAGE" ) \
ENUM_DEFN_HmiMsgboxTitle( HmiMsgboxTitle, FastkeyError, "WARNING" ) \
ENUM_DEFN_HmiMsgboxTitle( HmiMsgboxTitle, SetDatapoint, "CHANGE VALUE WARNING" ) \
ENUM_DEFN_HmiMsgboxTitle( HmiMsgboxTitle, USBOperation, "USB Operation" )

#define ENUM_DEFNS_HmiMsgboxOperation \
\
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, Unknown, "perform operation" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyProtection, "modify protection" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyEF, "modify Earth Fault (EF)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeySEF, "modify SEF" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyAR, "modify Auto-Reclosing (AR)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyCL, "modify Cold Load (CL)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyLL, "modify Live Line (LL)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyGroup, "modify active group" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyMode, "modify remote mode" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyClose, "close" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyOpen, "open" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, SetDatapoint, "edit value" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyABR, "modify Auto Backfeed Restore (ABR)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyACO, "modify Auto Change Over (ACO)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyUV, "modify Undervoltage (UV)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyPhaseSelA, "modify Phase Select A" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyPhaseSelB, "modify Phase Select B" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyPhaseSelC, "modify Phase Select C" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyHLT, "modify Hot Line Tag (HLT)" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyLogicVAR1, "modify VAR1" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, FastkeyLogicVAR2, "modify VAR2" ) \
ENUM_DEFN_HmiMsgboxOperation( HmiMsgboxOperation, InstallFirmwareFromUSB, "install firmware from USB" )

#define ENUM_DEFNS_HmiMsgboxError \
\
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, Unknown, "Error unknown" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, DpidWrite, "Denied" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, DpidWriteMode, "Wrong control mode" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, WriteHlt, "Hot Line Tag enabled" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, DpidConfirm, "Blocked" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, FastkeyDisabled, "Fast Key disabled" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, Internal, "Internal error" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, Blank, "" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, ExtLoadOverload, "External Load Overload" ) \
ENUM_DEFN_HmiMsgboxError( HmiMsgboxError, UpdateInProgress, "Another source is performing update" )

#define ENUM_DEFNS_BaxMetaId \
\
ENUM_DEFN_BaxMetaId( BaxMetaId, DbMajor, "{I32}Database major version" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, VerStr, "{UTF8}File data version" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, FileData, "{I32:SerialPartCode}File data type" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, Source, "{UTF8}File data source" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, HwMajor, "{I32}Max supported major hardware version" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, HwMajorList, "{I32_ARRAY}Supported major hardware versions" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, DbMinor, "{I32}Database minor version" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, HwType, "{I32:SerialPartCode}Target hardware type" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, LanguageId, "{I32}Language ID" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, ResourceId, "{I32}Resource ID" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, VerMajor, "{I32}Major version number" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, VerMinor, "{I32}Minor version number" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, VerRc, "{I32}Release candidate number" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, Desc, "{UTF8}Description" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, FamilyId, "{I32}Family ID" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, ObfuscationSalt, "{RAW}Obfuscation salt" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, ObfuscationCheck, "{RAW}Obfuscation check value" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, HwTypeOthers, "{I32_ARRAY}Other hardware types" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, HwMajorOthers, "{I32_ARRAY}Other hardware versions" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpState, "{RAW}SMP State" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpStep, "{RAW}SMP Step" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpExceptionCount, "{I32}SMP Exception Count" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpExceptions, "{RAW}SMP Exceptions" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpUpFailConsecutive, "{I32}SMP Consecutive Startup Failures" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpUpFailTotal, "{I32}SMP Total Startup Failures" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpDownFailConsecutive, "{I32}SMP Consecutive Shutdown Failures" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpDownFailTotal, "{I32}SMP Total Shutdown Failures" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpDownTime, "{RAW}SMP Shutdown Time" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpDownType, "{I32}SMP Shutdown Type" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpUpMode, "{I32}SMP Startup Mode" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpLimpType, "{I32}SMP Limp Type" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, LanguageCode, "{UTF8}Language Code" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, LanguageName, "{UTF8}Language Name" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, FsType, "{I32:FileSystemType}File System Format" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpRestoreFailed, "{I32}SMP Restore Failed" ) \
ENUM_DEFN_BaxMetaId( BaxMetaId, SmpDownSrc, "{I32}SMP Shutdown Source" )

#define ENUM_DEFNS_LogicStrCode \
\
ENUM_DEFN_LogicStrCode( LogicStrCode, Null, "NULL" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Or, "Logical OR" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Nor, "Logical NOR" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Xor, "Logical XOR" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Not, "Logical NOT" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, And, "Logical AND" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Nand, "Logical NAND" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Gt, "Greater Than" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Lt, "Less Than" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Eq, "Equal" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Read, "{UI16}Read Datapoint" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Push, "{I32}Push Immediate Data" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Copy, "Duplicate Top-Of-Stack" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Ift, "If Top-Of-Stack True" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Iff, "If Top-Of-Stack False" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Stop, "Stop" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, Sto, "{UI16}Write Datapoint" ) \
ENUM_DEFN_LogicStrCode( LogicStrCode, FastTrip, "Fast Trip (Private)" )

#define ENUM_DEFNS_DbPopulate \
\
ENUM_DEFN_DbPopulate( DbPopulate, Schema, "Schema file" ) \
ENUM_DEFN_DbPopulate( DbPopulate, ConfigDef1, "Default config 1" ) \
ENUM_DEFN_DbPopulate( DbPopulate, ConfigDef2, "Default config 2" ) \
ENUM_DEFN_DbPopulate( DbPopulate, Config, "Config file" ) \
ENUM_DEFN_DbPopulate( DbPopulate, CrashSave, "Crash save file" )

#define ENUM_DEFNS_HmiMode \
\
ENUM_DEFN_HmiMode( HmiMode, Normal, "Normal" ) \
ENUM_DEFN_HmiMode( HmiMode, Limp, "Limp" ) \
ENUM_DEFN_HmiMode( HmiMode, Update, "Update" ) \
ENUM_DEFN_HmiMode( HmiMode, Shutdown, "Shutdown" ) \
ENUM_DEFN_HmiMode( HmiMode, Startup, "Startup" ) \
ENUM_DEFN_HmiMode( HmiMode, SwitchgearTypeMismatch, "Switchgear Type Mismatch" )

#define ENUM_DEFNS_ClearCommand \
\
ENUM_DEFN_ClearCommand( ClearCommand, None, "" ) \
ENUM_DEFN_ClearCommand( ClearCommand, Clear, "Erased" )

#define ENUM_DEFNS_BxmlMapHmi \
\
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, Invalid, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, hmi, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, forms, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, form, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, area, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, label, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, button, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, data_field, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, tab_strip, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, widgets, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, name, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, x_pos, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, y_pos, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, width, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, height, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_cancel, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_select, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_got_focus, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_lost_focus, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_draw, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, text_align, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, text, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, help_text, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, enabled, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, visible, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, link_id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, link_up, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, link_down, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, link_left, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, link_right, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, view_group, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, action_group, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, border_style, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, layout, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, config, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, enums, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, enum, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, min, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, max, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, entry, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, number, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, string, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, short_string, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, auto_fill, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, version, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, major, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, minor, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, patch, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, file_id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, file_version, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, user_name, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, user_version, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, authenticate, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, max_retry, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, pw_init, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, pw_mask, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, mask_all, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, init_to_default, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, pw_default, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, log, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, log_label, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, sort, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, scroll_amount, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, view, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, reset_log, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, auto_update, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, source, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, expires_ms, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, resource_rc, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, resource_id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, db_version, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, language_id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, language_name, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, language_display, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, marketing_version, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, svn_version, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, svn_url, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, confirm_text, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, confirm_title, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, auth, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, family_id, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, font, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, count, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, glyphs, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, glyph, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, code_point, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, segment, "{HEX}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, language_code, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, list, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, list_source, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, list_item, "" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_oversize, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, confirm_form, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_enter, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, on_condition, "{UTF8}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, list_source_type, "List Source Type" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, columns, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, selectable, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, list_update_trigger, "{I32}" ) \
ENUM_DEFN_BxmlMapHmi( BxmlMapHmi, alerts, "" )

#define ENUM_DEFNS_BxmlNamespace \
\
ENUM_DEFN_BxmlNamespace( BxmlNamespace, Hmi, "HMI" )

#define ENUM_DEFNS_BxmlType \
\
ENUM_DEFN_BxmlType( BxmlType, Unknown, "Unknown" ) \
ENUM_DEFN_BxmlType( BxmlType, UTF8, "UTF8" ) \
ENUM_DEFN_BxmlType( BxmlType, I32, "I32" ) \
ENUM_DEFN_BxmlType( BxmlType, RAW, "RAW" )

#define ENUM_DEFNS_CmsConnectStatus \
\
ENUM_DEFN_CmsConnectStatus( CmsConnectStatus, Disconnected, "Disconnected (default value)" ) \
ENUM_DEFN_CmsConnectStatus( CmsConnectStatus, Connected, "Connected" ) \
ENUM_DEFN_CmsConnectStatus( CmsConnectStatus, Deprecated_Idle, "Connection Idle with no activity in " )

#define ENUM_DEFNS_ERR \
\
ENUM_DEFN_ERR( ERR, NONE, "None" ) \
ENUM_DEFN_ERR( ERR, SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN_ERR( ERR, BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN_ERR( ERR, BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, MALLOC, "Could not allocate memory" ) \
ENUM_DEFN_ERR( ERR, BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, BAD_DB_ENTRY, "Bad DbEntry" ) \
ENUM_DEFN_ERR( ERR, MODE_REFUSED, "Failed local/remote test" ) \
ENUM_DEFN_ERR( ERR, NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN_ERR( ERR, NO_MEM, "No memory" ) \
ENUM_DEFN_ERR( ERR, HLT_REFUSED, "Hot line tag refused" ) \
ENUM_DEFN_ERR( ERR, NO_SUCH_FILE, "File does not exist" ) \
ENUM_DEFN_ERR( ERR, HMI_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, HMI_NO_MEMORY, "No memory" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_OPEN, "Bad device" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_PERMISSIONS, "Device IO Insufficient permissions" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_CONFIG, "Device IO configuration failed" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_TIMEOUT, "Device IO timeout" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_NAK, "Device IO NAK" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_WRITE, "Device IO write failed" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_COLLISION, "Device IO message collision" ) \
ENUM_DEFN_ERR( ERR, HMI_IO_CORRUPTED, "Device IO corrupted" ) \
ENUM_DEFN_ERR( ERR, HMI_MSG_NO_HANDLER, "No message handler" ) \
ENUM_DEFN_ERR( ERR, HMI_MSG_TIMEOUT, "Message timeout" ) \
ENUM_DEFN_ERR( ERR, HMI_CHANNEL_SYNC, "Invalid start-of-packet" ) \
ENUM_DEFN_ERR( ERR, HMI_CHANNEL_OVERFLOW, "Channel overflow" ) \
ENUM_DEFN_ERR( ERR, HMI_CHANNEL_PARTIAL, "Chanel timeout" ) \
ENUM_DEFN_ERR( ERR, HMI_CHANNEL_NO_WRITER, "No writer on IPC channel" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_MESSAGE_SIZE, "Invalid message size" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_MESSAGE_ID, "Invalid message ID" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_MESSAGE_BUFFER, "Could not allocate message buffer" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_NO_HANDLER, "No handler for IPC message" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_EXPECTED_SIZE, "Invalid IPC message size" ) \
ENUM_DEFN_ERR( ERR, HMI_IPC_OPERATION, "Unknown operation for IPC message" ) \
ENUM_DEFN_ERR( ERR, HMI_MEMPOOL_FULL, "Memory pool full" ) \
ENUM_DEFN_ERR( ERR, HMI_MEMPOOL_INVALID_POOL, "Invalid memory pool" ) \
ENUM_DEFN_ERR( ERR, HMI_MEMPOOL_INVALID_GROUP, "Invalid memory pool group." ) \
ENUM_DEFN_ERR( ERR, HMI_MEMPOOL_CORRUPT, "Memory pool is corrupt" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_SUSPENDED, "Display manager suspended" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_DENIED, "Denied setting datapoint" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_VARIABLE_NOT_FOUND, "Unknown display manager variable" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_VARIABLE_SIZE, "Display manager variable too small" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_VARIABLE_TYPE, "Invalid display manager variable data type" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_COMMAND_ARGS, "Bad format for display manager command" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_COMMAND_DPID, "Invalid datapoint for display manager command" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DRAW_NO_SPACE, "Display manager exhausted draw memory" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_ENUM_NAME, "Invalid display manager enum name" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_ENUM_ID, "Invalid display manager enum identifier" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_ENUM_VALUE, "Display manager enum value out of range" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_ENUM_MISSING, "Display manager enum no string" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_TEXT_DPID, "Display manager invalid datapoint ID" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_TYPE, "Display manager data type unknown" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_ENTRY, "Invalid display manager datapoint entry" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_VALUE, "Invalid display manager datapoint value" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_OUT_BUFFER, "Display manager print buffer too small" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_TYPE_OPERATION, "Display manager datapoint operation not supported" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_DPID_TYPE_MISMATCH, "Display manager datapoint type mismatch" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_WIDGET_TYPE, "Invalid display manager widget operation" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_FORM_DEPTH, "Exceeded display manager maximum menu depth" ) \
ENUM_DEFN_ERR( ERR, HMI_PANEL_DISPLAY_RANGE, "Bad display manager address" ) \
ENUM_DEFN_ERR( ERR, HMI_PANEL_SEGMENT_TABLE_FULL, "Panel glyph RAM full" ) \
ENUM_DEFN_ERR( ERR, HMI_PANEL_UNKNOWN_GLYPH, "Unknown glyph" ) \
ENUM_DEFN_ERR( ERR, HMI_SESSION_COUNT, "Exceeded maximum session count" ) \
ENUM_DEFN_ERR( ERR, HMI_SESSION_PORT, "Invalid session port number" ) \
ENUM_DEFN_ERR( ERR, HMI_CIRCBUFF_NO_MEM, "No memory for circular buffer" ) \
ENUM_DEFN_ERR( ERR, HMI_TIMER_CLOCK, "Monotonic clock not supported" ) \
ENUM_DEFN_ERR( ERR, HMI_RESOURCE_DIR, "Could not open resource directory" ) \
ENUM_DEFN_ERR( ERR, HMI_RESOURCE_INIT, "Resource module not initialised" ) \
ENUM_DEFN_ERR( ERR, HMI_RESOURCE_NAME, "Invalid resource file name" ) \
ENUM_DEFN_ERR( ERR, HMI_RESOURCE_NONE, "No resource files found" ) \
ENUM_DEFN_ERR( ERR, HMI_RESOURCE_RECORD, "Missing resource record" ) \
ENUM_DEFN_ERR( ERR, HMI_BUFFER_SIZE, "Buffer too small" ) \
ENUM_DEFN_ERR( ERR, HMI_AUTH_PASSWORD, "Invalid password" ) \
ENUM_DEFN_ERR( ERR, HMI_AUTH_SET_PASSWORD, "Could not set password" ) \
ENUM_DEFN_ERR( ERR, HMI_AUTH_PASSWORD_FORM, "Missing password form" ) \
ENUM_DEFN_ERR( ERR, HMI_COMMAND_DPID_TYPE, "Can't set unknown datapoint type" ) \
ENUM_DEFN_ERR( ERR, HMI_DM_MSGBOX_ID, "Invalid message box ID" ) \
ENUM_DEFN_ERR( ERR, HMI_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, HMI_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN_ERR( ERR, HMI_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, HMI_UNKNOWN_DPID, "" ) \
ENUM_DEFN_ERR( ERR, HMI_PANEL_WRITE_TIME, "Took too long to write a message to the panel" ) \
ENUM_DEFN_ERR( ERR, SMP_ALREADY_RUNNING, "Already running" ) \
ENUM_DEFN_ERR( ERR, SMP_INVALID_LOCK, "Invalid lock" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_SIZE, "Invalid message size" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_ID, "Invalid message ID" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_NO_HANDLER, "No message handler" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_EXPECTED_SIZE, "Invalid message payload size" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_STATE, "Invalid state" ) \
ENUM_DEFN_ERR( ERR, SMP_IPC_NO_CLIENTS, "No clients connected" ) \
ENUM_DEFN_ERR( ERR, SMP_FORK, "Could not fork" ) \
ENUM_DEFN_ERR( ERR, SMP_WAITPID, "Call to waitpid() failed" ) \
ENUM_DEFN_ERR( ERR, SMP_OPEN, "Call to open() failed." ) \
ENUM_DEFN_ERR( ERR, SMP_PID, "Unknown process identifier" ) \
ENUM_DEFN_ERR( ERR, SMP_ABORT_UP, "" ) \
ENUM_DEFN_ERR( ERR, SMP_CLIENT_ID, "Invalid client ID" ) \
ENUM_DEFN_ERR( ERR, SMP_LAUNCH_RESULT, "Invalid launch command result" ) \
ENUM_DEFN_ERR( ERR, SMP_LAUNCH_COMMAND, "Invalid launch command" ) \
ENUM_DEFN_ERR( ERR, SMP_LED_MODE, "Invalid LED flash pattern" ) \
ENUM_DEFN_ERR( ERR, SMP_NVM_FILE, "Could save data to non-volatile memory" ) \
ENUM_DEFN_ERR( ERR, SMP_NVM_SIZE, "Invalid data size for non-volatile memory" ) \
ENUM_DEFN_ERR( ERR, SMP_NVM_CRASH_DEVICE, "Could not read or write non-volatile memory" ) \
ENUM_DEFN_ERR( ERR, SMP_PANEL_DISCONNECTED, "Panel is disconnected" ) \
ENUM_DEFN_ERR( ERR, SMP_SCHED_NOT_SET, "Scheduling policy not set" ) \
ENUM_DEFN_ERR( ERR, SMP_SCHED_PRIORITY, "Call to setpriority() failed" ) \
ENUM_DEFN_ERR( ERR, SMP_SCHED_SCHEDULE, "Call to sched_setschedule() failed" ) \
ENUM_DEFN_ERR( ERR, SMP_SCHED_CLIENT_ID, "Can't set priority" ) \
ENUM_DEFN_ERR( ERR, SMP_PROCESS_STATE, "Unexpected state" ) \
ENUM_DEFN_ERR( ERR, SMP_CONFIG_FILE, "Invalid configuration file" ) \
ENUM_DEFN_ERR( ERR, SMP_CONFIG_ELEMENT, "Invalid configuration file format" ) \
ENUM_DEFN_ERR( ERR, SMP_CONFIG_TYPE, "Invalid configuration file format" ) \
ENUM_DEFN_ERR( ERR, SMP_CONFIG_VALUE, "Invalid configuration file format" ) \
ENUM_DEFN_ERR( ERR, SMP_FPGA_IRQ, "FPGA not interrupting" ) \
ENUM_DEFN_ERR( ERR, SMP_UP_TIMEOUT, "Too long to start up" ) \
ENUM_DEFN_ERR( ERR, SMP_DOWN_TIMEOUT, "Too long to shutdown" ) \
ENUM_DEFN_ERR( ERR, SMP_PROCESS_TERMINATED, "Process terminated unexpectedly" ) \
ENUM_DEFN_ERR( ERR, SMP_PROCESS_ERROR, "Process exited unexpectedly." ) \
ENUM_DEFN_ERR( ERR, SMP_PROCESS_SIGNAL, "Unhandled signal" ) \
ENUM_DEFN_ERR( ERR, SMP_DB_NOT_AVAILABLE, "Database not ready" ) \
ENUM_DEFN_ERR( ERR, SMP_ARG_MISSING, "Missing argument" ) \
ENUM_DEFN_ERR( ERR, SMP_ARG_SERIAL_FORMAT, "Invalid serial number format" ) \
ENUM_DEFN_ERR( ERR, SMP_ARG_MISSING_VALUE, "Missing argument value" ) \
ENUM_DEFN_ERR( ERR, SMP_CAN_TRANSMIT, "CAN transmit error" ) \
ENUM_DEFN_ERR( ERR, SMP_SERIALISE_SIZE, "Unexpected size mismatch" ) \
ENUM_DEFN_ERR( ERR, SMP_SERIALISE_FILE_TYPE, "Unknown file format" ) \
ENUM_DEFN_ERR( ERR, SMP_FSYNC, "Call to fsync() system call failed" ) \
ENUM_DEFN_ERR( ERR, SMP_CLOSE, "Call to close() or fclose() system call failed" ) \
ENUM_DEFN_ERR( ERR, SMP_UNLINK, "Call to unlink() system call failed" ) \
ENUM_DEFN_ERR( ERR, SMP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SMP_NO_MEM, "" ) \
ENUM_DEFN_ERR( ERR, SMP_NOT_IMPLEMENTED, "" ) \
ENUM_DEFN_ERR( ERR, SMP_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, SMP_NOT_INITIALISED, "" ) \
ENUM_DEFN_ERR( ERR, SMP_LAUNCH_NOT_READY, "Launch controller not ready" ) \
ENUM_DEFN_ERR( ERR, SMP_FS_TYPE_MISMATCH, "File System Type Mismatch" ) \
ENUM_DEFN_ERR( ERR, TSCHED_INVALID_TIMER, "Invalid timer" ) \
ENUM_DEFN_ERR( ERR, TSCHED_NO_FREE_TIMERS, "No free timers" ) \
ENUM_DEFN_ERR( ERR, TSCHED_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, TSCHED_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, TSCHED_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, BAX_META_ID, "Invalid BAX meta ID" ) \
ENUM_DEFN_ERR( ERR, BAX_META_SIZE, "Invalid size field for meta data" ) \
ENUM_DEFN_ERR( ERR, BAX_WRITE, "Write callback function failed" ) \
ENUM_DEFN_ERR( ERR, BAX_READ, "Read callback function failed." ) \
ENUM_DEFN_ERR( ERR, BAX_FSEEK, "Could not seek to the desired position" ) \
ENUM_DEFN_ERR( ERR, BAX_NO_WRITE, "Missing write function" ) \
ENUM_DEFN_ERR( ERR, BAX_INVALID_MAGIC, "Invalid magic number" ) \
ENUM_DEFN_ERR( ERR, BAX_INVALID_SIZE, "Invalid footer size" ) \
ENUM_DEFN_ERR( ERR, BAX_INVALID_VERSION, "Bad footer" ) \
ENUM_DEFN_ERR( ERR, BAX_FOOTER_CHECKSUM, "Bad footer checksum" ) \
ENUM_DEFN_ERR( ERR, BAX_META_CHECKSUM, "Bad meta checksum" ) \
ENUM_DEFN_ERR( ERR, BAX_DATA_CHECKSUM, "Bad payload checksum" ) \
ENUM_DEFN_ERR( ERR, BAX_TYPE_MISMATCH, "Meta type mismatch" ) \
ENUM_DEFN_ERR( ERR, BAX_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, BAX_MALLOC, "" ) \
ENUM_DEFN_ERR( ERR, BAX_NOT_IMPLEMENTED, "" ) \
ENUM_DEFN_ERR( ERR, UPDATE_OPEN_FILE, "Could not open file" ) \
ENUM_DEFN_ERR( ERR, UPDATE_COUNT, "Too many files" ) \
ENUM_DEFN_ERR( ERR, UPDATE_TYPE, "Unknown file ID" ) \
ENUM_DEFN_ERR( ERR, UPDATE_INVALID, "Invalid file format" ) \
ENUM_DEFN_ERR( ERR, UPDATE_META, "Missing meta data" ) \
ENUM_DEFN_ERR( ERR, UPDATE_PATH, "Invalid path" ) \
ENUM_DEFN_ERR( ERR, UPDATE_UNKNOWN_MODULE_CODE, "Unknown module code" ) \
ENUM_DEFN_ERR( ERR, UPDATE_UNKOWN_HW_MAJOR, "Unknown hardware version string" ) \
ENUM_DEFN_ERR( ERR, UPDATE_MODULE_CODE_MISMATCH, "Module code mismatch" ) \
ENUM_DEFN_ERR( ERR, UPDATE_HW_MAJOR_MISMATCH, "Unsupported hardware" ) \
ENUM_DEFN_ERR( ERR, UPDATE_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, UPDATE_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, UPDATE_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, UPDATE_FILE_VALIDATE, "Update validation failed" ) \
ENUM_DEFN_ERR( ERR, UPDATE_GPIO_PROG_FAIL, "GPIO programming failed" ) \
ENUM_DEFN_ERR( ERR, UPDATE_INVALID_FILENAME, "Invalid file name" ) \
ENUM_DEFN_ERR( ERR, UPDATE_READ_FILE, "Read error" ) \
ENUM_DEFN_ERR( ERR, UPDATE_OLD_FILE, "Old file" ) \
ENUM_DEFN_ERR( ERR, UPDATE_SIM_DISCONNECTED, "SIM disconnected" ) \
ENUM_DEFN_ERR( ERR, UPDATE_NOR_ERROR, "NOR Error" ) \
ENUM_DEFN_ERR( ERR, UPDATE_INVALID_UKERN, "Invalid Microkernel" ) \
ENUM_DEFN_ERR( ERR, UPDATE_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, UPDATE_BACKUP_FAILED, "Backup Failed" ) \
ENUM_DEFN_ERR( ERR, UPDATE_DB_MISMATCH, "Database mismatch" ) \
ENUM_DEFN_ERR( ERR, UPDATE_GPIO_NOT_CONNECTED, "GPIO disconnected" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_SYNC, "Invalid start-of-packet" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_OVERFLOW, "Message overflow" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_NO_WRITER, "No writer" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_PARTIAL, "Message timeout" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, CHANNEL_NO_MEM, "No memory" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_OPEN_FILE, "Could not open file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_WRITE_FILE, "Could not write file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_READ_FILE, "Could not read file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UPDATE_COUNT, "Too many update files" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UPDATE_TYPE, "Unknown file ID" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UPDATE_INVALID, "Invalid file format" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UPDATE_META, "Missing meta data" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_OPEN_FILE_USB, "Could not open USB file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_WRITE_FILE_USB, "Could not write USB file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_READ_FILE_USB, "Could not read USB file" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_OLD_UPDATE_FILE, "Update File Old" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UMOUNT_FAILED, "Unmount of the USB disc failed" ) \
ENUM_DEFN_ERR( ERR, USBCOPY_UPDATE_INVALID_FILENAME, "Invalid File Name" ) \
ENUM_DEFN_ERR( ERR, FSM_IN_TRANSITION, "Already in transition" ) \
ENUM_DEFN_ERR( ERR, FSM_INVALID_TRANSITION, "Invalid transition" ) \
ENUM_DEFN_ERR( ERR, FSM_INVALID_STATE_ID, "Unknown state ID" ) \
ENUM_DEFN_ERR( ERR, FSM_NO_STATE, "No initial state" ) \
ENUM_DEFN_ERR( ERR, FSM_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, BXML_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, BXML_MALLOC, "Dynamic memory allocation failed" ) \
ENUM_DEFN_ERR( ERR, BXML_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, BXML_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN_ERR( ERR, BXML_BUFFER_SIZE, "Buffer too small" ) \
ENUM_DEFN_ERR( ERR, BXML_NO_MEM, "Insufficient internal memory" ) \
ENUM_DEFN_ERR( ERR, BXML_NO_DATA_ATTACHED, "BXML file not attached" ) \
ENUM_DEFN_ERR( ERR, BXML_EOF, "Unexpected end of file" ) \
ENUM_DEFN_ERR( ERR, BXML_SEEK, "Could not seek to required position" ) \
ENUM_DEFN_ERR( ERR, BXML_FILE_MARKER, "Invalid BXML file" ) \
ENUM_DEFN_ERR( ERR, BXML_FILE_MAJOR, "Unknown version" ) \
ENUM_DEFN_ERR( ERR, BXML_RECORD_SIZE, "Invalid record size" ) \
ENUM_DEFN_ERR( ERR, BXML_RECORD_ALIGNMENT, "Invalid record alignment" ) \
ENUM_DEFN_ERR( ERR, BXML_NOT_SUPPORTED, "Unsupported operation" ) \
ENUM_DEFN_ERR( ERR, BXML_NODE_DATA_TYPE, "Invalid node data type" ) \
ENUM_DEFN_ERR( ERR, CALIB_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, CALIB_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, CAN_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, CAN_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, CAN_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, CAN_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, CMS_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, CMS_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, CMS_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, CMS_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, CMS_SERIAL_TIMEOUT, "" ) \
ENUM_DEFN_ERR( ERR, COMMS_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, COMMS_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DB_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, DB_UNKNOWN_DPID, "Unknown datapoint" ) \
ENUM_DEFN_ERR( ERR, DB_HLT_REFUSED, "Hot line tag refused" ) \
ENUM_DEFN_ERR( ERR, DB_MODE_REFUSED, "Failed local/remote test" ) \
ENUM_DEFN_ERR( ERR, DB_BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN_ERR( ERR, DB_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, DB_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DB_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN_ERR( ERR, DB_BAD_DB_ENTRY, "Bad DbEntry" ) \
ENUM_DEFN_ERR( ERR, DB_NON_RQST, "Non-requestable datapoint" ) \
ENUM_DEFN_ERR( ERR, DB_BAD_EVENT_DATA_SIZE, "Bad data size" ) \
ENUM_DEFN_ERR( ERR, DB_OUT_OF_RANGE, "Out of range" ) \
ENUM_DEFN_ERR( ERR, DB_TIMEOUT, "Timeout" ) \
ENUM_DEFN_ERR( ERR, DBQ_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DBQ_MALLOC, "" ) \
ENUM_DEFN_ERR( ERR, DBQ_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, DBQ_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, DBQ_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, DBSVR_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, DBSVR_MALLOC, "" ) \
ENUM_DEFN_ERR( ERR, DBSVR_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, DBSVR_NO_SUCH_FILE, "" ) \
ENUM_DEFN_ERR( ERR, DBSVR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DBSVR_CLWR_BUFF_FULL, "Client buffer full" ) \
ENUM_DEFN_ERR( ERR, DBSVR_CLWR_FAIL, "Client write failed" ) \
ENUM_DEFN_ERR( ERR, IO_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, IO_BAD_PARAM, "" ) \
ENUM_DEFN_ERR( ERR, IO_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, LOG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, LOG_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, LOG_BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN_ERR( ERR, LOG_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, LOG_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN_ERR( ERR, LOG_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, SIG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SIG_UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN_ERR( ERR, LIBSMP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, UNIVAR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, UNIVAR_BAD_SIZE, "Insufficient space in destination" ) \
ENUM_DEFN_ERR( ERR, UNIVAR_NO_MEM, "No memory" ) \
ENUM_DEFN_ERR( ERR, UNIVAR_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, UNIVAR_NOT_INITIALISED, "Not initialised" ) \
ENUM_DEFN_ERR( ERR, LOGPROC_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, LOGPROC_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, LOGPROC_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, LOGPROC_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, LOGPROC_UNKNOWN_EVENT, "Unrecognised event" ) \
ENUM_DEFN_ERR( ERR, METER_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, METER_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, METER_UNKNOWN_DPID, "" ) \
ENUM_DEFN_ERR( ERR, PROGSIM_BAD_PARAM, "" ) \
ENUM_DEFN_ERR( ERR, PROGSIM_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, PROGSIM_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, PROGGPIO_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, PROGGPIO_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, PROGGPIO_BAD_VALUE, "Bad value" ) \
ENUM_DEFN_ERR( ERR, PROT_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, PROT_BAD_SIZE, "" ) \
ENUM_DEFN_ERR( ERR, PROT_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, PROT_BAD_PARAM, "Bad paramater" ) \
ENUM_DEFN_ERR( ERR, PROTCFG_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, PROTCFG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SCADA_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SCADA_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, SCADA_DNP_UNRECOGNISED_DPID, "Suspicious behaviour" ) \
ENUM_DEFN_ERR( ERR, SCADA_SIZE_UNABLE_TO_SCALE, "Unable to scale" ) \
ENUM_DEFN_ERR( ERR, SIMOP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SIMOP_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, SIMOP_UNKNOWN_RQST, "Unknown request" ) \
ENUM_DEFN_ERR( ERR, SWITCH_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, SWITCH_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN_ERR( ERR, SWITCH_BAD_PARAM, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, SWITCH_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, SIMU_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, SIMU_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, DNP_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN_ERR( ERR, DNP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DNP_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, FONT_UNKNOWN_ARG, "Unknown command line argument" ) \
ENUM_DEFN_ERR( ERR, FONT_FOPEN, "Call to fopen() system call failed" ) \
ENUM_DEFN_ERR( ERR, FONT_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN_ERR( ERR, FONT_MALLOC, "Call to malloc() failed" ) \
ENUM_DEFN_ERR( ERR, FONT_WARNING, "Warning treated as error" ) \
ENUM_DEFN_ERR( ERR, FONT_CODE_POINT_RANGE, "Code point out of range" ) \
ENUM_DEFN_ERR( ERR, TMWSCL_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN_ERR( ERR, TMWSCL_NO_MEM, "No memory" ) \
ENUM_DEFN_ERR( ERR, TMWSCL_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, TMWSCL_UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN_ERR( ERR, TMWSCL_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN_ERR( ERR, DBTEST_SYSTEM, "" ) \
ENUM_DEFN_ERR( ERR, DBTEST_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, UPS_SYSTEM, "System call failed" ) \
ENUM_DEFN_ERR( ERR, UPS_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, X2B_NULL, "NULL parameter" ) \
ENUM_DEFN_ERR( ERR, X2B_NO_MEM, "Memory exhausted" ) \
ENUM_DEFN_ERR( ERR, X2B_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN_ERR( ERR, X2B_SIGNAL_HANDLER, "Could not register signal handler" ) \
ENUM_DEFN_ERR( ERR, X2B_IN_FILE, "Could not open input file" ) \
ENUM_DEFN_ERR( ERR, X2B_OUT_FILE, "Could not open output file" ) \
ENUM_DEFN_ERR( ERR, X2B_UNKNOWN_FILE_FORMAT, "Unspecified input file" ) \
ENUM_DEFN_ERR( ERR, X2B_READFILE, "Could not read file" ) \
ENUM_DEFN_ERR( ERR, X2B_READFILE_EOF, "Premature end of file" ) \
ENUM_DEFN_ERR( ERR, X2B_ID_MAP_FORMAT, "Invalid map file" ) \
ENUM_DEFN_ERR( ERR, X2B_ID_MAP_NAMESPACE, "Unknown namespace ID" ) \
ENUM_DEFN_ERR( ERR, X2B_ID_MAP_EMPTY, "Unknown map ID database" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_HEADER_SIZE, "Invalid BXML header size" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_MARKER, "Invalid BXML marker" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_VERSION_MAJOR, "Invalid BXML version" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_NAMESPACE_ID, "Namespace ID mismatch" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_RECORD_SIZE, "Invalid BXML record" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_RECORD_DATA_SIZE, "Invalid record data size" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_RECORD_TOO_LARGE, "Maximum record size exceeded" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_CRC, "Invalid CRC" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_UNKNOWN_ATTRIBUTE, "Unknown attribute" ) \
ENUM_DEFN_ERR( ERR, X2B_BXML_UNKNOWN_ELEMENT, "Unknown element name" ) \
ENUM_DEFN_ERR( ERR, X2B_MXML_LOAD_FILE, "Mini-xml library error" ) \
ENUM_DEFN_ERR( ERR, X2B_MXML_NEW_XML, "Mini-xml error" ) \
ENUM_DEFN_ERR( ERR, DBVER_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, DBVER_BAD_VALUE, "" ) \
ENUM_DEFN_ERR( ERR, TR_WARNING, "Treated warning as error" ) \
ENUM_DEFN_ERR( ERR, TR_TEXT_POSITION, "Invalid text position" ) \
ENUM_DEFN_ERR( ERR, TR_GLYPH_RAW, "Invalid glyph file" ) \
ENUM_DEFN_ERR( ERR, TR_GLYPH_PICTURE, "Invalid picture in glyph file" ) \
ENUM_DEFN_ERR( ERR, TR_GLYPH_SIZE_MISMATCH, "Invalid size in glyph file" ) \
ENUM_DEFN_ERR( ERR, TR_GLYPH_DATA_MISMATCH, "Glyph data specified twice differently" ) \
ENUM_DEFN_ERR( ERR, TR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, TR_NO_MEM, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_NO_MEM, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_PERMISSIONS, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_OPEN_FAILED, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_CONFIG, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_CREATE_EVENT, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_WRITE_FAILED, "" ) \
ENUM_DEFN_ERR( ERR, PSNIFF_SERIAL_READ_FAILED, "" ) \
ENUM_DEFN_ERR( ERR, NOR_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN_ERR( ERR, NOR_LOCATION, "Invalid NOR location" ) \
ENUM_DEFN_ERR( ERR, NOR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN_ERR( ERR, NOR_FWRITE, "The write or fwrite system call failed" ) \
ENUM_DEFN_ERR( ERR, NOR_FREAD, "The read or fread system call failed" ) \
ENUM_DEFN_ERR( ERR, NOR_OPEN, "The open or fopen system call failed" ) \
ENUM_DEFN_ERR( ERR, NOR_IOCTL, "The ioctl system call failed" ) \
ENUM_DEFN_ERR( ERR, SMA_SYSTEM, "SMA_SYSTEM" ) \
ENUM_DEFN_ERR( ERR, SMA_BAD_PARAM, "SMA_BAD_PARAM" ) \
ENUM_DEFN_ERR( ERR, SMA_BAD_VALUE, "SMA_BAD_VALUE" ) \
ENUM_DEFN_ERR( ERR, SMA_BAD_CMD, "SMA: Illegal command" ) \
ENUM_DEFN_ERR( ERR, SMA_TIMER_FAIL, "SMA: Timer operation failed" ) \
ENUM_DEFN_ERR( ERR, T10B_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN_ERR( ERR, T10B_BAD_PARAM, "Bad parameter in IEC 60870-5-101 / -104" ) \
ENUM_DEFN_ERR( ERR, T10B_SYSTEM, "Syatem call failed in IEC 60870-5-101 / -104" ) \
ENUM_DEFN_ERR( ERR, SCADA_T10B_BAD_PARAM, "Bad parameter in T10B support" ) \
ENUM_DEFN_ERR( ERR, SCADA_T10B_SYSTEM, "System call failed in T10B support" ) \
ENUM_DEFN_ERR( ERR, P2P_SYSTEM, "P2P_SYSTEM" ) \
ENUM_DEFN_ERR( ERR, P2P_BAD_PARAM, "P2P_BAD_PARAM" ) \
ENUM_DEFN_ERR( ERR, P2P_BAD_VALUE, "P2P_BAD_VALUE" ) \
ENUM_DEFN_ERR( ERR, P2P_BAD_CMD, "P2P_BAD_CMD" ) \
ENUM_DEFN_ERR( ERR, EXTSUPPLY_OVERLOAD, "External Supply Overload" ) \
ENUM_DEFN_ERR( ERR, S61850_SYSTEM, "System Call failed in S61850" ) \
ENUM_DEFN_ERR( ERR, S61850_MALLOC, "Memory Allocation fault in S61850" ) \
ENUM_DEFN_ERR( ERR, S61850_BAD_PARAMETER, "Bad Parameter (generic) in S61850" ) \
ENUM_DEFN_ERR( ERR, S61850_BAD_DB_ENTRY, "DBEntry fault in S61850" ) \
ENUM_DEFN_ERR( ERR, S61850_UNEXPECT_NULL_CNTXT, "Unexpected NULL in S61850 context" ) \
ENUM_DEFN_ERR( ERR, S61850_MAPPING_FAULT, "Mapping fault in S61850" ) \
ENUM_DEFN_ERR( ERR, S61850_LAST_VALUE, "End of reserved range for IEC 61850" ) \
ENUM_DEFN_ERR( ERR, EXTLOAD_OVERLOAD, "External Load Overload Active" ) \
ENUM_DEFN_ERR( ERR, HTTP_BAD_PARAM, "bad parameter for http server" ) \
ENUM_DEFN_ERR( ERR, WEBSERVER, "Webserver Failed" )

#define ENUM_DEFNS_ErrModules \
\
ENUM_DEFN_ErrModules( ErrModules, hmi, "HMI" ) \
ENUM_DEFN_ErrModules( ErrModules, smp, "SMP" ) \
ENUM_DEFN_ErrModules( ErrModules, libtsched, "TSCHED" ) \
ENUM_DEFN_ErrModules( ErrModules, libbax, "BAX" ) \
ENUM_DEFN_ErrModules( ErrModules, update, "UPDATE" ) \
ENUM_DEFN_ErrModules( ErrModules, libchannel, "CHANNEL" ) \
ENUM_DEFN_ErrModules( ErrModules, usbcopy, "USBCOPY" ) \
ENUM_DEFN_ErrModules( ErrModules, libfsm, "FSM" ) \
ENUM_DEFN_ErrModules( ErrModules, libpolarssl, "POLARSSL" ) \
ENUM_DEFN_ErrModules( ErrModules, libbxml, "BXML" ) \
ENUM_DEFN_ErrModules( ErrModules, calib, "CALIB" ) \
ENUM_DEFN_ErrModules( ErrModules, can, "CAN" ) \
ENUM_DEFN_ErrModules( ErrModules, cms, "CMS" ) \
ENUM_DEFN_ErrModules( ErrModules, comms, "COMMS" ) \
ENUM_DEFN_ErrModules( ErrModules, libdbapi, "DB" ) \
ENUM_DEFN_ErrModules( ErrModules, dbquery, "DBQ" ) \
ENUM_DEFN_ErrModules( ErrModules, dbserver, "DBSVR" ) \
ENUM_DEFN_ErrModules( ErrModules, io, "IO" ) \
ENUM_DEFN_ErrModules( ErrModules, libcsv, "CSV" ) \
ENUM_DEFN_ErrModules( ErrModules, libdebug, "DEBUG" ) \
ENUM_DEFN_ErrModules( ErrModules, liblog, "LOG" ) \
ENUM_DEFN_ErrModules( ErrModules, libsignal, "SIG" ) \
ENUM_DEFN_ErrModules( ErrModules, libsmp, "LIBSMP" ) \
ENUM_DEFN_ErrModules( ErrModules, libuboot_env, "UBOOT" ) \
ENUM_DEFN_ErrModules( ErrModules, libunivar, "UNIVAR" ) \
ENUM_DEFN_ErrModules( ErrModules, logprocess, "LOGPROC" ) \
ENUM_DEFN_ErrModules( ErrModules, meter, "METER" ) \
ENUM_DEFN_ErrModules( ErrModules, progsim, "PROGSIM" ) \
ENUM_DEFN_ErrModules( ErrModules, prot, "PROT" ) \
ENUM_DEFN_ErrModules( ErrModules, protcfg, "PROTCFG" ) \
ENUM_DEFN_ErrModules( ErrModules, scada_dnp, "SCADA" ) \
ENUM_DEFN_ErrModules( ErrModules, simop, "SIMOP" ) \
ENUM_DEFN_ErrModules( ErrModules, libsimswrqst, "SWITCH" ) \
ENUM_DEFN_ErrModules( ErrModules, simulator, "SIMU" ) \
ENUM_DEFN_ErrModules( ErrModules, libtrace, "TRACE" ) \
ENUM_DEFN_ErrModules( ErrModules, tmwscl_dnp, "DNP" ) \
ENUM_DEFN_ErrModules( ErrModules, microkernel, "UKERN" ) \
ENUM_DEFN_ErrModules( ErrModules, hmifont, "FONT" ) \
ENUM_DEFN_ErrModules( ErrModules, tmwscl, "TMWSCL" ) \
ENUM_DEFN_ErrModules( ErrModules, dbtest, "DBTEST" ) \
ENUM_DEFN_ErrModules( ErrModules, ups, "UPS" ) \
ENUM_DEFN_ErrModules( ErrModules, xml2bin, "X2B" ) \
ENUM_DEFN_ErrModules( ErrModules, dbver, "DBVER" ) \
ENUM_DEFN_ErrModules( ErrModules, translate, "TR" ) \
ENUM_DEFN_ErrModules( ErrModules, panelsniffer, "PSNIFF" ) \
ENUM_DEFN_ErrModules( ErrModules, libnor, "NOR" ) \
ENUM_DEFN_ErrModules( ErrModules, sma, "SMA" ) \
ENUM_DEFN_ErrModules( ErrModules, tmwscl_T10B, "T10B" ) \
ENUM_DEFN_ErrModules( ErrModules, scada_T10B, "SCADA_T10B" ) \
ENUM_DEFN_ErrModules( ErrModules, P2P, "P2P" ) \
ENUM_DEFN_ErrModules( ErrModules, extsupply, "External Supply" ) \
ENUM_DEFN_ErrModules( ErrModules, iec61850, "S61850" )

#define ENUM_DEFNS_FileSystemType \
\
ENUM_DEFN_FileSystemType( FileSystemType, Unknown, "Unknown" ) \
ENUM_DEFN_FileSystemType( FileSystemType, Unspecified, "Unspecified" ) \
ENUM_DEFN_FileSystemType( FileSystemType, Yaffs2_0, "YAFFS 2 (r13160)" ) \
ENUM_DEFN_FileSystemType( FileSystemType, Yaffs2_1, "YAFFS 2 (rNotReleased)" ) \
ENUM_DEFN_FileSystemType( FileSystemType, ubifs, "UBIFS" )

#define ENUM_DEFNS_IOSettingMode \
\
ENUM_DEFN_IOSettingMode( IOSettingMode, Disable, "Disable" ) \
ENUM_DEFN_IOSettingMode( IOSettingMode, Enable, "Enable" ) \
ENUM_DEFN_IOSettingMode( IOSettingMode, Test, "Test" )

#define ENUM_DEFNS_SmaChannelState \
\
ENUM_DEFN_SmaChannelState( SmaChannelState, SmaChannelClosed, "SmaChannelClosed" ) \
ENUM_DEFN_SmaChannelState( SmaChannelState, SmaChannelConnecting, "SmaChannelConnecting" ) \
ENUM_DEFN_SmaChannelState( SmaChannelState, SmaChannelConnected, "SmaChannelConnected" )

#define ENUM_DEFNS_CommsProtocols \
\
ENUM_DEFN_CommsProtocols( CommsProtocols, DNP3Protocol, "DNP3Protocol" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, CMSProtocol, "CMSProtocol" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, HMIProtocol, "HMIProtocol" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, T10BProtocol, "IEC 60870-5-101 / -104" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, P2PProtocol, "P2PProtocol" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, PGEProtocol, "2179Protocol" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, GPS, "GPS" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, NumOfProtocols, "NumOfProtocols" ) \
ENUM_DEFN_CommsProtocols( CommsProtocols, Unknown, "Unknown" )

#define ENUM_DEFNS_ShutdownReason \
\
ENUM_DEFN_ShutdownReason( ShutdownReason, SaveSimCalibration, "SaveSimCalibration" )

#define ENUM_DEFNS_CommsSerialFlowControlMode \
\
ENUM_DEFN_CommsSerialFlowControlMode( CommsSerialFlowControlMode, None, "None" ) \
ENUM_DEFN_CommsSerialFlowControlMode( CommsSerialFlowControlMode, Hardware, "Hardware" ) \
ENUM_DEFN_CommsSerialFlowControlMode( CommsSerialFlowControlMode, PTT, "PTT" ) \
ENUM_DEFN_CommsSerialFlowControlMode( CommsSerialFlowControlMode, PTTCTS, "PTT CTS" )

#define ENUM_DEFNS_HmiMsgboxMessage \
\
ENUM_DEFN_HmiMsgboxMessage( HmiMsgboxMessage, CopyComplete, "Copy Complete" )

#define ENUM_DEFNS_CommsSerialDCDControlMode \
\
ENUM_DEFN_CommsSerialDCDControlMode( CommsSerialDCDControlMode, Ignore, "Ignore" ) \
ENUM_DEFN_CommsSerialDCDControlMode( CommsSerialDCDControlMode, Block, "Block TX" )

#define ENUM_DEFNS_T10BFormatMeasurand \
\
ENUM_DEFN_T10BFormatMeasurand( T10BFormatMeasurand, Normalized, "Normalized" ) \
ENUM_DEFN_T10BFormatMeasurand( T10BFormatMeasurand, Scaled, "Scaled" ) \
ENUM_DEFN_T10BFormatMeasurand( T10BFormatMeasurand, Float, "32-bit Float" )

#define ENUM_DEFNS_T101ChannelMode \
\
ENUM_DEFN_T101ChannelMode( T101ChannelMode, Unbalanced, "Unbalanced" ) \
ENUM_DEFN_T101ChannelMode( T101ChannelMode, Balanced, "Balanced" )

#define ENUM_DEFNS_PeriodicCounterOperation \
\
ENUM_DEFN_PeriodicCounterOperation( PeriodicCounterOperation, Disabled, "Disabled" ) \
ENUM_DEFN_PeriodicCounterOperation( PeriodicCounterOperation, Freeze, "Freeze" ) \
ENUM_DEFN_PeriodicCounterOperation( PeriodicCounterOperation, FreezeAndClear, "Freeze and Clear" )

#define ENUM_DEFNS_T10BReportMode \
\
ENUM_DEFN_T10BReportMode( T10BReportMode, Disabled, "Disabled" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, Default, "Use default mode for data type" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, EventNoTime, "Event reporting with no time stamp" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, EventWithTime, "Event reporting with time stamp" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, Background, "Background reporting (no events)" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, Cyclic, "Cyclic Reporting (no events)" ) \
ENUM_DEFN_T10BReportMode( T10BReportMode, Interrogation, "Interrogation" )

#define ENUM_DEFNS_T10BControlMode \
\
ENUM_DEFN_T10BControlMode( T10BControlMode, Disabled, "Disabled" ) \
ENUM_DEFN_T10BControlMode( T10BControlMode, Default, "Use default mode for data type" ) \
ENUM_DEFN_T10BControlMode( T10BControlMode, SelectExecute, "Select before Execute" ) \
ENUM_DEFN_T10BControlMode( T10BControlMode, DirectExecute, "Direct Execute (no Select required)" )

#define ENUM_DEFNS_T10BParamRepMode \
\
ENUM_DEFN_T10BParamRepMode( T10BParamRepMode, Disabled, "Disabled" ) \
ENUM_DEFN_T10BParamRepMode( T10BParamRepMode, Default, "Use default mode for data type" ) \
ENUM_DEFN_T10BParamRepMode( T10BParamRepMode, Interrogation, "Interrogation" ) \
ENUM_DEFN_T10BParamRepMode( T10BParamRepMode, NotReported, "Not Reported" )

#define ENUM_DEFNS_CommsIpProtocolMode \
\
ENUM_DEFN_CommsIpProtocolMode( CommsIpProtocolMode, Udp, "UDP" ) \
ENUM_DEFN_CommsIpProtocolMode( CommsIpProtocolMode, Tcp, "TCP" )

#define ENUM_DEFNS_GPIOSettingMode \
\
ENUM_DEFN_GPIOSettingMode( GPIOSettingMode, Disable, "Disable" ) \
ENUM_DEFN_GPIOSettingMode( GPIOSettingMode, Enable, "Enable" ) \
ENUM_DEFN_GPIOSettingMode( GPIOSettingMode, Test1, "Test1" ) \
ENUM_DEFN_GPIOSettingMode( GPIOSettingMode, Test2, "Test2" ) \
ENUM_DEFN_GPIOSettingMode( GPIOSettingMode, Test3, "Test3" )

#define ENUM_DEFNS_IoStatus \
\
ENUM_DEFN_IoStatus( IoStatus, Off, "Off" ) \
ENUM_DEFN_IoStatus( IoStatus, On, "On" ) \
ENUM_DEFN_IoStatus( IoStatus, Undetermined, "???" ) \
ENUM_DEFN_IoStatus( IoStatus, DisabledIndividual, "D" ) \
ENUM_DEFN_IoStatus( IoStatus, DisabledGlobal, "Na" ) \
ENUM_DEFN_IoStatus( IoStatus, Disabled, "Na" )

#define ENUM_DEFNS_ConfigIOCardNum \
\
ENUM_DEFN_ConfigIOCardNum( ConfigIOCardNum, 1, "1" ) \
ENUM_DEFN_ConfigIOCardNum( ConfigIOCardNum, 2, "2" )

#define ENUM_DEFNS_SwitchgearTypes \
\
ENUM_DEFN_SwitchgearTypes( SwitchgearTypes, Unknown, "Unknown" ) \
ENUM_DEFN_SwitchgearTypes( SwitchgearTypes, 3Phase, "3 phase" ) \
ENUM_DEFN_SwitchgearTypes( SwitchgearTypes, 1Phase, "1 phase" ) \
ENUM_DEFN_SwitchgearTypes( SwitchgearTypes, SingleTriple, "Single Triple" ) \
ENUM_DEFN_SwitchgearTypes( SwitchgearTypes, ThreePhaseSEF, "3 phase SEF" )

#define ENUM_DEFNS_LoSeqMode \
\
ENUM_DEFN_LoSeqMode( LoSeqMode, MaxTrips2, "2" ) \
ENUM_DEFN_LoSeqMode( LoSeqMode, MaxTrips3, "3" ) \
ENUM_DEFN_LoSeqMode( LoSeqMode, MaxTrips4, "Normal" )

#define ENUM_DEFNS_LogicChannelMode \
\
ENUM_DEFN_LogicChannelMode( LogicChannelMode, Disable, "D" ) \
ENUM_DEFN_LogicChannelMode( LogicChannelMode, Enable, "E" ) \
ENUM_DEFN_LogicChannelMode( LogicChannelMode, Test, "T" )

#define ENUM_DEFNS_T10BCounterRepMode \
\
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Disabled, "Disabled" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Default, "Use default reporting mode for data type" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, EventNoTime, "Event reporting with no time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, EventWithTime, "Event reporting with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Interrogation, "Interrogation (no events)" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, InterrogationWithTime, "Counter Interrogation with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr1EventNoTime, "Counter Group 1 event without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr1EventWithTime, "Counter group 1 event with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr1Interrogation, "Counter group 1 interrogation without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr1InterrogationWithTime, "Counter group 1 interrogation with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr2EventNoTime, "Counter group 2 event without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr2EventWithTime, "Counter group 2 event with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr2Interrogation, "Counte group 2 interrogation without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr2InterrogationWithTime, "Counter group 2 interrogation with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr3EventNoTime, "Counter group 3 event without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr3EventWithTime, "Counter group 3 event with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr3Interrogation, "Counter group 3 interrogation without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr3InterrogationWithTime, "Counter group 3 interrogation with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr4EventNoTime, "Counter group 4 event without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr4EventWithTime, "Counter group 4 event with time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr4Interrogation, "Counter group 4 interrogation without time stamp" ) \
ENUM_DEFN_T10BCounterRepMode( T10BCounterRepMode, Ctr4InterrogationWithTime, "Counter group 4 interrogation with time stamp" )

#define ENUM_DEFNS_ACOState \
\
ENUM_DEFN_ACOState( ACOState, Off, "Off" ) \
ENUM_DEFN_ACOState( ACOState, Active, "Active" ) \
ENUM_DEFN_ACOState( ACOState, Supplying, "Supplying Load" ) \
ENUM_DEFN_ACOState( ACOState, NotSupplying, "Not Supplying Load" )

#define ENUM_DEFNS_ACOOpMode \
\
ENUM_DEFN_ACOOpMode( ACOOpMode, Equal, "Equal" ) \
ENUM_DEFN_ACOOpMode( ACOOpMode, Main, "Main" ) \
ENUM_DEFN_ACOOpMode( ACOOpMode, Alternative, "Alt" )

#define ENUM_DEFNS_FailOk \
\
ENUM_DEFN_FailOk( FailOk, OK, "OK" ) \
ENUM_DEFN_FailOk( FailOk, Fail, "Fail" )

#define ENUM_DEFNS_ACOHealthReason \
\
ENUM_DEFN_ACOHealthReason( ACOHealthReason, OK, "OK" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, SwitchStatus, "OSM Status" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, UVTripMap, "UV3 AR Map" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, VrcMode, "VRC Mode" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, AbrEn, "ABR On" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, MalWarn, "This ACR" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, ProtOn, "Prot Off" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, LLHLT, "LL/HLT On" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, P2PComms, "Peer Comms" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, ProtSettings, "Prot Settings" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, ACOSettings, "ACO Settings" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, OperationMode, "ACO Mode" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, MakeBeforeBreak, "Make Bef Brk" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, PeerHealth, "Remote ACR" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, Open, "User Trip" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, Lockout, "Prot Lockout" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, CloseTripFail, "Close/Tr Fail" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, ProtActive, "AR Active" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, Manual, "Operator" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, IllegalClose, "Close Both" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, PeerOff, "Remote ACR" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, LoadLive, "Load Live" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, EnableTimeout, "Timeout" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, UVOff, "UV is Off" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, CloseBlocking, "CloseBlocking" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, ProtectionOpenBlocking, "Open Blocking" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, SingleTripleMode, "S/T Mode" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, SectionaliserEnabled, "Sectionaliser" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, SyncEnabled, "Sync Enabled" ) \
ENUM_DEFN_ACOHealthReason( ACOHealthReason, CBF, "CBF" )

#define ENUM_DEFNS_SupplyState \
\
ENUM_DEFN_SupplyState( SupplyState, Disabled, "NA" ) \
ENUM_DEFN_SupplyState( SupplyState, Init, "Init" ) \
ENUM_DEFN_SupplyState( SupplyState, Healthy, "Healthy" ) \
ENUM_DEFN_SupplyState( SupplyState, Unhealthy, "Unhealthy" ) \
ENUM_DEFN_SupplyState( SupplyState, PickupHealthy, "Pickup Healthy" )

#define ENUM_DEFNS_LoadState \
\
ENUM_DEFN_LoadState( LoadState, Disabled, "NA" ) \
ENUM_DEFN_LoadState( LoadState, Init, "Init" ) \
ENUM_DEFN_LoadState( LoadState, Dead, "Dead" ) \
ENUM_DEFN_LoadState( LoadState, Undead, "Not Dead" )

#define ENUM_DEFNS_MakeBeforeBreak \
\
ENUM_DEFN_MakeBeforeBreak( MakeBeforeBreak, BreakBeforeMake, "Break Before Make" ) \
ENUM_DEFN_MakeBeforeBreak( MakeBeforeBreak, MakeBeforeBreak, "Make Before Break" )

#define ENUM_DEFNS_T101TimeStampSize \
\
ENUM_DEFN_T101TimeStampSize( T101TimeStampSize, 3, "3 (24-bit)" ) \
ENUM_DEFN_T101TimeStampSize( T101TimeStampSize, 7, "7 (56-bit)" )

#define ENUM_DEFNS_PhaseConfig \
\
ENUM_DEFN_PhaseConfig( PhaseConfig, ABC, "ABC" ) \
ENUM_DEFN_PhaseConfig( PhaseConfig, ACB, "ACB" ) \
ENUM_DEFN_PhaseConfig( PhaseConfig, BCA, "BCA" ) \
ENUM_DEFN_PhaseConfig( PhaseConfig, CAB, "CAB" ) \
ENUM_DEFN_PhaseConfig( PhaseConfig, BAC, "BAC" ) \
ENUM_DEFN_PhaseConfig( PhaseConfig, CBA, "CBA" )

#define ENUM_DEFNS_OscCaptureTime \
\
ENUM_DEFN_OscCaptureTime( OscCaptureTime, HalfSec, "0.5" ) \
ENUM_DEFN_OscCaptureTime( OscCaptureTime, 1Sec, "1" ) \
ENUM_DEFN_OscCaptureTime( OscCaptureTime, 3Sec, "3" )

#define ENUM_DEFNS_OscCapturePrior \
\
ENUM_DEFN_OscCapturePrior( OscCapturePrior, None, "0" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 5Pct, "5" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 10Pct, "10" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 20Pct, "20" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 40Pct, "40" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 50Pct, "50" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 60Pct, "60" ) \
ENUM_DEFN_OscCapturePrior( OscCapturePrior, 80Pct, "80" )

#define ENUM_DEFNS_OscEvent \
\
ENUM_DEFN_OscEvent( OscEvent, Trip, "Trip" ) \
ENUM_DEFN_OscEvent( OscEvent, Pickup, "Pickup" ) \
ENUM_DEFN_OscEvent( OscEvent, Close, "Close" ) \
ENUM_DEFN_OscEvent( OscEvent, Alarm, "Alarm" ) \
ENUM_DEFN_OscEvent( OscEvent, Logic, "Logic" ) \
ENUM_DEFN_OscEvent( OscEvent, IOInputs, "IO Inputs" ) \
ENUM_DEFN_OscEvent( OscEvent, ProtOperation, "Prot Operation" ) \
ENUM_DEFN_OscEvent( OscEvent, Unknown, "Unknown" )

#define ENUM_DEFNS_HmiMsgboxData \
\
ENUM_DEFN_HmiMsgboxData( HmiMsgboxData, None, "" ) \
ENUM_DEFN_HmiMsgboxData( HmiMsgboxData, ReferEventLog, "Check event log" ) \
ENUM_DEFN_HmiMsgboxData( HmiMsgboxData, ExtLoadOverload, "Please wait 1 minute" )

#define ENUM_DEFNS_OscSimStatus \
\
ENUM_DEFN_OscSimStatus( OscSimStatus, Stopped, "Stopped" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, Running, "Running" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, Finished, "Finished" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, NoFile, "NoFile" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, InvalidFormat, "InvalidFormat" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, UnrecogChannels, "UnrecogChannels" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, TooLarge, "TooLarge" ) \
ENUM_DEFN_OscSimStatus( OscSimStatus, Failed, "Failed" )

#define ENUM_DEFNS_EventTitleId \
\
ENUM_DEFN_EventTitleId( EventTitleId, NAN, "NAN" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvChangeBlocked, "Operation Blocked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, VsagCloseBlocking, "UV4 Sag Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, LoggerProcessFault, "Logger Process Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRecoveryMode, "Entered Recovery Mode" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUpdateInitiated, "Update Initiated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvExtSupplyStatusShutDown, "External Load Shutdown" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigCtrlHltOn, "Hot Line Tag On" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigCtrlHltRqstReset, "HLT Forced Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigCtrlBlockCloseOn, "Block Close" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRestoreFailed, "Restore Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBSerial, "USB Serial Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBLan, "USB LAN Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBGadget, "USB Gadget Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBWlan, "USB WLAN Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBGPRS, "USB GPRS Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBBluetooth, "USB Bluetooth Connect" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBUnsupported, "USB Unsupported" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBMismatched, "USB Mismatch" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRqstOpen, "Protection Operation" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLogsRestored, "Restored Logs" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvDatabaseRestored, "Restored Database" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLoadedCrashSave, "Load Fast Save File" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimCommsFail, "SIM Comms Fail" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Pickup, "Pickup" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Res, "Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Trip, "Trip" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimOpen, "OSM Open" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimClose, "OSM Closed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvArIInit, "AR Initiated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvArIClose, "Close" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvArIRes, "Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, DEPRCATED_EvArUInit, "" ) \
ENUM_DEFN_EventTitleId( EventTitleId, DERECATED_EvArUClose, "" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvInvalidSerialNumber, "Invalid Serial Number" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIoSerialNumberChange, "IO Module Change" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUSBHostOff, "USB Host Power Off" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigCtrlLogTest, "Test Mode" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIo1Fault, "I/O1 Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIo2Fault, "I/O2 Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigEftActivated, "MNT Exceeded" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvACOState, "ACO" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSupplyUnhealthy, "Source Not Healthy" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLogicChannelOut, "Logic Channel Change" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvInvalidLogic, "Logic Exp Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvExtSupplyStatusReset, "External Supply Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRTCHwFault, "RTC Hardware Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOscCapture, "Capture" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvInvalidSwitchSerialNum, "Invalid OSM Type" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Alarm, "Alarm" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Freeze, "Freeze" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigStatusDialupInitiated, "Dial-up Initiated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigStatusDialupFailed, "Dial-up Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfRelay, "Relay Module Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfSimComms, "SIM Comms Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfIo1Comms, "I/O1 Comms Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfIo2Comms, "I/O2 Comms Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfIo1Fault, "I/O1 Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfIo2Fault, "I/O2 Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigCtrlRemoteOn, "Control Mode Is Set To Remote" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SimDisconnected, "SIM Disconnected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvTripCloseRequestStatusTripFail, "Excessive To" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvTripCloseRequestStatusCloseFail, "Excessive Tc" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchManualTrip, "Manual Trip" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchDisconnectionStatus, "OSM Disconnected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchLockoutStatusMechaniclocked, "Mechanically Locked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOSMActuatorFaultStatusCoilOc, "OSM Coil OC" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOsmActuatorFaultStatusCoilSc, "OSM Coil SC" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOsmLimitFaultStatusFault, "OSM Limit Switch Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvDriverStatusNotReady, "SIM Caps Not Charged" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchHeaterControlOn, "Switch Heater Control On" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwtichHeaterControlFailed, "Switch Heater Control Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvExtSupplyStatusOff, "External Load Off" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvExtSupplyStatusOverLoad, "External Load Overload" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUPSStatusAcOff, "AC Off" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUPSStatusBatteryOff, "Battery Off" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUPSPowerDown, "Critical Battery Level" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SimModuleFault, "SIM Module Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleTypeSimDisconnected, "SIM Disconnected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleTypeIo1Connected, "IO1 Connected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleTypeIo2Connected, "IO2 Connected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleTypePcConnected, "PC Connected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCANControllerOverrun, "Can Bus Overrun" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCANControllerError, "Can Bus Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCANMessagebufferoverflow, "CAN Buffer Overflow" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvBatteryTestResult, "Battery Test" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLineSupplyStatus, "AC Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Not_Used_EvUPSPowerUp, "UPS Power Up" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRTCStatus, "RTC Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSetTimeDate, "RTC Setting Change" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvDisableWatchdog, "Watchdog Disabled" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvResetModule, "Reset SIM" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleFault, "SIM Module Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Not_Used_EvSupplyStatus, "AC Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimSeqStep, "Simulator Step" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimSeq, "Simulation Run" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Not_Used_EvSwitchHeaterControlOff, "Switch Heater Control: Off" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimCalibration, "SIM Calibration Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvProtStatus, "Prot Status Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvGroupSettings, "Group Settings Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvTripRequestFailCode, "Trip Request Fail" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCloseRequestFailCode, "Close Request Fail" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOperationFail, "Capacitor Voltage Abnormal" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvClpRec, "T_rec" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvClpOp, "T_ocl" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIrRec, "TrecIr" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIrOp, "T_oir" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvZscInc, "ZSC" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOSMActuatorFaultStatusQ503Failed, "SIM Driver Q503 Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOcEfSefDir, "Dir. Control Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvBatteryStatus, "Battery Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCalib, "OSM Calibration Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSimSaveCalib, "SIM Calibration Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_Coredump, "Core Dump Generated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Event_SysErr, "System Message Logged" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvTtaInit, "Time Addition" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLoadProfileChanged, "Load profile configuration changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfComms, "Module Comms Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfPanelComms, "Panel Disconnected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfRc10, "Controller Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfPanelModule, "Panel Module Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfOsm, "OSM Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigMalfCanBus, "CAN Bus Malfunction" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCloseBlocked, "Close Req. Blocked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSmpRestart, "Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSmpShutdown, "Shutdown" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSmpStartup, "Power Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvVRCOp, "VRC Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvDataSave, "Data Save" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvConnectionCompleted, "Connection Completed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvConnectionEstablished, "Connection Established" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUpdateOk, "Update Successful" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvUpdateFailed, "Update Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSystemSettingsChanged, "System Settings Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvIoSettingsChanged, "I/O Settings Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCommsSettingsChanged, "Comms Settings Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, ProtocolSettingsChanged, "Protocol Settings Changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvPanelCommsError, "Panel Comms Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SimRunningMiniBootloader, "SIM in Minibootloader Mode" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCloseBlocking, "Logic Close Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvProtOpenBlocking, "Protection Open Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvOpenBlocked, "Open Blocked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, LSRMTimerActive, "T,LSRM" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchLogicallyLocked, "SW Locked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, LiveLoadBlocking, "LLB Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Count, "Count" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SeqAdvInc, "Sequence Advance" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigIncorrectPhaseSeq, "Incorrect phase sequence" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SectionaliseMismatch, "Sectionaliser mismatch" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SectionaliseMode, "Sectionaliser mode changed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, WrongControlMode, "Wrong Control Mode" ) \
ENUM_DEFN_EventTitleId( EventTitleId, BlockedByHLT, "Operation Blocked by HLT" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvModuleTypePscDisconnected, "PSC Disconnected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, LogRolloverIdRollover, "Log Id Rollover" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvPscFault, "PSC Module Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, PscRunningMiniBootloader, "PSC In Minibootloader Mode" ) \
ENUM_DEFN_EventTitleId( EventTitleId, IEC61499AppStatusEv, "SGA Res" ) \
ENUM_DEFN_EventTitleId( EventTitleId, GPSConnected, "GPS Connected" ) \
ENUM_DEFN_EventTitleId( EventTitleId, GPSLocked, "GPS Locked" ) \
ENUM_DEFN_EventTitleId( EventTitleId, GPSRestart, "GPS Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, WlanRestart, "Wi-Fi Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, MobileNetworkRestart, "Mobile Network Modem Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, AutoSync, "Auto-Sync" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SyncInvalidSingleTriple, "Invalid Auto-Sync Single Triple Cnfg" ) \
ENUM_DEFN_EventTitleId( EventTitleId, IEC61499Command, "SGA" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SigLogicConfigIssue, "Logic Configuration Issue" ) \
ENUM_DEFN_EventTitleId( EventTitleId, IEC61850LoadCIDFile, "ICD/CID File Loading" ) \
ENUM_DEFN_EventTitleId( EventTitleId, IEC61850DeleteCIDFile, "ICD/CID File Deleted" ) \
ENUM_DEFN_EventTitleId( EventTitleId, OperationBlocking, "Operation Blocking" ) \
ENUM_DEFN_EventTitleId( EventTitleId, CommsLogging, "Comms Logging" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UPSWlanReset, "Wi-Fi Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UPSMobilenetworkReset, "Mobile Network Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UPSWlanShutdown, "Wi-Fi Shutdown" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UPSMobilenetworkShutdown, "Mobile Network Shutdown" ) \
ENUM_DEFN_EventTitleId( EventTitleId, WLANFail, "Wlan Fail" ) \
ENUM_DEFN_EventTitleId( EventTitleId, WLANError, "Wlan Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, ResetBinaryFaultTargets, "Reset Binary Fault Targets" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SimAndOsmModelMismatch, "SIM and OSM Model Mismatch" ) \
ENUM_DEFN_EventTitleId( EventTitleId, BlockPickup, "Block Pickup" ) \
ENUM_DEFN_EventTitleId( EventTitleId, InhibitOV3, "Inhibit OV3" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvGPSUnplugged, "GPS Unplugged" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvGPSMalfunction, "GPS Malfunction" ) \
ENUM_DEFN_EventTitleId( EventTitleId, IEC61499FbootStatus, "SGA fboot Failed" ) \
ENUM_DEFN_EventTitleId( EventTitleId, DistanceToFault, "Distance to Fault" ) \
ENUM_DEFN_EventTitleId( EventTitleId, Distance, "Distance" ) \
ENUM_DEFN_EventTitleId( EventTitleId, FaultImpedance, "Fault Impedance" ) \
ENUM_DEFN_EventTitleId( EventTitleId, FaultedLoopImpedance, "Faulted Loop Impedance" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLogicSGAThrottling, "Logic/SGA Throttling" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvLogicSGAStopped, "Logic/SGA Stopped" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SSTControl, "SST Control" ) \
ENUM_DEFN_EventTitleId( EventTitleId, USBOvercurrent, "USB Device Overcurrent" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvFirmwareHardwareMismatch, "Firmware/Hardware Mismatch" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvScadaRequiresRestart, "Protocol requires RC Restart" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UPSGpsShutdown, "GPS Shutdown" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSNTPSyncFail, "SNTP Unable to Sync" ) \
ENUM_DEFN_EventTitleId( EventTitleId, USBOvercurrentReset, "USB Ports Overcurrent Reset" ) \
ENUM_DEFN_EventTitleId( EventTitleId, RelayNotCalib, "Relay is not calibrated." ) \
ENUM_DEFN_EventTitleId( EventTitleId, SimNotCalib, "Sim is not Calibrated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SwgNotCalibrated, "Switchgear is not calibrated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvRelayCalibration, "Relay Calibration Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwgCalibration, "Switchgear Calibration Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, CanBusHighPower, "CAN Bus High Power" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvAnalogError, "Analog Board Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCommsError, "Comms Board Error" ) \
ENUM_DEFN_EventTitleId( EventTitleId, GPSUpdateSysTime, "Clock updated" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvSwitchgearCalibration, "Switchgear Calibration Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCBFDefaultPickup, "CBF Pickup" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCBFBackupPickup, "Backup Trip Pickup" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCBFBackupBlocked, "Block Backup Trip" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCBFMalfunction, "CBF Malfunction" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvCBFBackupTrip, "CBF Backup Trip" ) \
ENUM_DEFN_EventTitleId( EventTitleId, AddUser, "Add New User" ) \
ENUM_DEFN_EventTitleId( EventTitleId, RemoveUser, "Remove User" ) \
ENUM_DEFN_EventTitleId( EventTitleId, ChangePassword, "Change Password" ) \
ENUM_DEFN_EventTitleId( EventTitleId, RoleBitMapUpdate, "Role bit-map update" ) \
ENUM_DEFN_EventTitleId( EventTitleId, UserCredentialbatchUpdate, "User Credential Batch Update" ) \
ENUM_DEFN_EventTitleId( EventTitleId, ResetCredential, "Reset Credential files" ) \
ENUM_DEFN_EventTitleId( EventTitleId, VerifyUser, "Verify User" ) \
ENUM_DEFN_EventTitleId( EventTitleId, SIMCardStatus, "SIM Card Status" ) \
ENUM_DEFN_EventTitleId( EventTitleId, EvPMURetransmission, "PMU Retransmission" )

#define ENUM_DEFNS_HrmIndividual \
\
ENUM_DEFN_HrmIndividual( HrmIndividual, Disable, "Disable" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I2, "I2" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I3, "I3" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I4, "I4" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I5, "I5" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I6, "I6" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I7, "I7" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I8, "I8" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I9, "I9" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I10, "I10" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I11, "I11" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I12, "I12" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I13, "I13" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I14, "I14" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, I15, "I15" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In2, "In2" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In3, "In3" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In4, "In4" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In5, "In5" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In6, "In6" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In7, "In7" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In8, "In8" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In9, "In9" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In10, "In10" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In11, "In11" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In12, "In12" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In13, "In13" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In14, "In14" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, In15, "In15" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V2, "V2" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V3, "V3" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V4, "V4" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V5, "V5" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V6, "V6" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V7, "V7" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V8, "V8" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V9, "V9" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V10, "V10" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V11, "V11" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V12, "V12" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V13, "V13" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V14, "V14" ) \
ENUM_DEFN_HrmIndividual( HrmIndividual, V15, "V15" )

#define ENUM_DEFNS_OscCaptureFormat \
\
ENUM_DEFN_OscCaptureFormat( OscCaptureFormat, ComtradeBinary, "BINARY COMTRADE" ) \
ENUM_DEFN_OscCaptureFormat( OscCaptureFormat, ComtradeAscii, "ASCII COMTRADE" )

#define ENUM_DEFNS_UpdateStep \
\
ENUM_DEFN_UpdateStep( UpdateStep, None, "None" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateUboot, "Installing uboot" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateMicrokernel, "Installing microkernel" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateLanguage, "Installing language files" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateGpio, "Installing GPIO firmware" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateSIM, "Installing SIM firmware" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateRelay, "Installing relay firmware" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdatePanel, "Installing panel firmware" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateDbSchema, "Installing database schema" ) \
ENUM_DEFN_UpdateStep( UpdateStep, CopyFiles, "Copying files" ) \
ENUM_DEFN_UpdateStep( UpdateStep, ValidateFiles, "Validating files" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdatePsc, "Installing PSC firmware" ) \
ENUM_DEFN_UpdateStep( UpdateStep, UpdateComplete, "Update complete" )

#define ENUM_DEFNS_SimExtSupplyStatus \
\
ENUM_DEFN_SimExtSupplyStatus( SimExtSupplyStatus, On, "On" ) \
ENUM_DEFN_SimExtSupplyStatus( SimExtSupplyStatus, Off, "Off" ) \
ENUM_DEFN_SimExtSupplyStatus( SimExtSupplyStatus, Overload, "Overload" ) \
ENUM_DEFN_SimExtSupplyStatus( SimExtSupplyStatus, Shutdown, "Shutdown" ) \
ENUM_DEFN_SimExtSupplyStatus( SimExtSupplyStatus, Limited, "Limited" )

#define ENUM_DEFNS_ScadaScaleRangeTable \
\
ENUM_DEFN_ScadaScaleRangeTable( ScadaScaleRangeTable, StandardScaling, "Standard" ) \
ENUM_DEFN_ScadaScaleRangeTable( ScadaScaleRangeTable, AlternateScaling, "Alternate" )

#define ENUM_DEFNS_UsbDiscEjectResult \
\
ENUM_DEFN_UsbDiscEjectResult( UsbDiscEjectResult, OK, "It is safe to remove the USB disc." ) \
ENUM_DEFN_UsbDiscEjectResult( UsbDiscEjectResult, TransferInProgress, "File transfer in progress." )

#define ENUM_DEFNS_ScadaEventSource \
\
ENUM_DEFN_ScadaEventSource( ScadaEventSource, Dnp3BinaryInput, "DNP3 Binary Input" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S101SinglePoint, "S101 Single Point (Binary Input)" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S61850BinarySP, "s61850 Binary Single Point" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, Dnp3BinaryCounter, "DNP3 Binary Counter" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S101DoublePoint, "S101 Double Point (Binary Input)" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S61850BinaryDP, "s61850 Binary Double Point" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, Dnp3AnalogInput, "DNP3 Analog Input" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S101MeasuredValue, "S101 Measured Value (Analog Input)" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S61850AnalogIn, "S61850 Analog Input" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S101MonitoredIntegratedTotal, "S101 Monitored Integrated Total (Binary Counter)" ) \
ENUM_DEFN_ScadaEventSource( ScadaEventSource, S61850GseSubsDef, "Goose Subscription Definition" )

#define ENUM_DEFNS_ExtDataId \
\
ENUM_DEFN_ExtDataId( ExtDataId, LogEventSrc, "Log event source" ) \
ENUM_DEFN_ExtDataId( ExtDataId, LogicProcDpId, "Logic Id" ) \
ENUM_DEFN_ExtDataId( ExtDataId, StateType, "enum StateType" )

#define ENUM_DEFNS_AutoOpenMode \
\
ENUM_DEFN_AutoOpenMode( AutoOpenMode, Disabled, "Disabled" ) \
ENUM_DEFN_AutoOpenMode( AutoOpenMode, Timer, "Timer" ) \
ENUM_DEFN_AutoOpenMode( AutoOpenMode, PowerFlow, "Power Flow" )

#define ENUM_DEFNS_Uv4VoltageType \
\
ENUM_DEFN_Uv4VoltageType( Uv4VoltageType, Ph_Gnd, "Ph/Gnd" ) \
ENUM_DEFN_Uv4VoltageType( Uv4VoltageType, Ph_Ph, "Ph/Ph" )

#define ENUM_DEFNS_Uv4Voltages \
\
ENUM_DEFN_Uv4Voltages( Uv4Voltages, AbcRst, "ABC_RST" ) \
ENUM_DEFN_Uv4Voltages( Uv4Voltages, Abc, "ABC" ) \
ENUM_DEFN_Uv4Voltages( Uv4Voltages, Rst, "RST" )

#define ENUM_DEFNS_SingleTripleMode \
\
ENUM_DEFN_SingleTripleMode( SingleTripleMode, Trip3Lockout3, "3Ph Trip / 3Ph Lockout" ) \
ENUM_DEFN_SingleTripleMode( SingleTripleMode, Trip1Lockout3, "1Ph Trip / 3Ph Lockout" ) \
ENUM_DEFN_SingleTripleMode( SingleTripleMode, Trip1Lockout1, "1Ph Trip / 1Ph Lockout" )

#define ENUM_DEFNS_OsmSwitchCount \
\
ENUM_DEFN_OsmSwitchCount( OsmSwitchCount, 1Switch, "1" ) \
ENUM_DEFN_OsmSwitchCount( OsmSwitchCount, 3Switches, "3" )

#define ENUM_DEFNS_BatteryTestResult \
\
ENUM_DEFN_BatteryTestResult( BatteryTestResult, NotRunYet, "Battery Test Not Run Yet" ) \
ENUM_DEFN_BatteryTestResult( BatteryTestResult, Passed, "Battery Test Passed" ) \
ENUM_DEFN_BatteryTestResult( BatteryTestResult, CheckBattery, "Check Battery" ) \
ENUM_DEFN_BatteryTestResult( BatteryTestResult, Faulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN_BatteryTestResult( BatteryTestResult, NotPerformed, "Not Performed" )

#define ENUM_DEFNS_BatteryTestNotPerformedReason \
\
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, NoReason, "No Reason Given" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, ACOff, "AC Off" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, BatteryOff, "Battery Off" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, Resting, "Resting" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, NotCharging, "Battery Being Discharged" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, VoltageTooLow, "Voltage Too Low" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, NotSupported, "Not Supported" ) \
ENUM_DEFN_BatteryTestNotPerformedReason( BatteryTestNotPerformedReason, Timeout, "Timeout" )

#define ENUM_DEFNS_SingleTripleVoltageType \
\
ENUM_DEFN_SingleTripleVoltageType( SingleTripleVoltageType, Ph_Gnd, "Ph/Gnd" ) \
ENUM_DEFN_SingleTripleVoltageType( SingleTripleVoltageType, U1, "U1" )

#define ENUM_DEFNS_AbbrevStrId \
\
ENUM_DEFN_AbbrevStrId( AbbrevStrId, OC, "OC" ) \
ENUM_DEFN_AbbrevStrId( AbbrevStrId, NPS, "NPS" ) \
ENUM_DEFN_AbbrevStrId( AbbrevStrId, EF, "EF" ) \
ENUM_DEFN_AbbrevStrId( AbbrevStrId, SEF, "SEF" )

#define ENUM_DEFNS_SystemStatus \
\
ENUM_DEFN_SystemStatus( SystemStatus, Blank, "" ) \
ENUM_DEFN_SystemStatus( SystemStatus, Sectionaliser, "Sectionaliser                " ) \
ENUM_DEFN_SystemStatus( SystemStatus, SingleTriple, "Single Triple                " ) \
ENUM_DEFN_SystemStatus( SystemStatus, SingleTripleSectionaliser, "Single Triple Sectionaliser  " ) \
ENUM_DEFN_SystemStatus( SystemStatus, ACOinitiated, ">> ACO initiated             " ) \
ENUM_DEFN_SystemStatus( SystemStatus, ProtectionInitiated, ">> Protection initiated      " ) \
ENUM_DEFN_SystemStatus( SystemStatus, DemoUnit, ">> Demo                      " ) \
ENUM_DEFN_SystemStatus( SystemStatus, SynchronisationEnabled, ">> Synchronisation Enabled   " ) \
ENUM_DEFN_SystemStatus( SystemStatus, UpdateInProgress, ">> Update in progress        " )

#define ENUM_DEFNS_LockDynamic \
\
ENUM_DEFN_LockDynamic( LockDynamic, Lock, "Lock" ) \
ENUM_DEFN_LockDynamic( LockDynamic, Dynamic, "Dynamic" )

#define ENUM_DEFNS_BatteryType \
\
ENUM_DEFN_BatteryType( BatteryType, AGM, "AGM" ) \
ENUM_DEFN_BatteryType( BatteryType, GEL, "GEL" )

#define ENUM_DEFNS_DNP3SAKeyUpdateVerificationMethod \
\
ENUM_DEFN_DNP3SAKeyUpdateVerificationMethod( DNP3SAKeyUpdateVerificationMethod, SerialNumber, "SerialNumber" ) \
ENUM_DEFN_DNP3SAKeyUpdateVerificationMethod( DNP3SAKeyUpdateVerificationMethod, SerialNumAndDNP3Address, "Serial number and DNP3 address" )

#define ENUM_DEFNS_MACAlgorithm \
\
ENUM_DEFN_MACAlgorithm( MACAlgorithm, HMAC_SHA1_4, "HMAC-SHA1/8" ) \
ENUM_DEFN_MACAlgorithm( MACAlgorithm, HMAC_SHA1_8, "HMAC-SHA1/10" ) \
ENUM_DEFN_MACAlgorithm( MACAlgorithm, HMAC_SHA1_10, "HMAC-SHA256/8" ) \
ENUM_DEFN_MACAlgorithm( MACAlgorithm, HMAC_SHA256_8, "HMAC-SHA256/16" ) \
ENUM_DEFN_MACAlgorithm( MACAlgorithm, HMAC_SHA256_16, "HMAC-SHA1/8" )

#define ENUM_DEFNS_DNP3SAVersion \
\
ENUM_DEFN_DNP3SAVersion( DNP3SAVersion, V2, "DNP3-SAv2" ) \
ENUM_DEFN_DNP3SAVersion( DNP3SAVersion, V5, "DNP3-SAv5" )

#define ENUM_DEFNS_AESAlgorithm \
\
ENUM_DEFN_AESAlgorithm( AESAlgorithm, AES128, "AES 128" ) \
ENUM_DEFN_AESAlgorithm( AESAlgorithm, AES256, "AES 256" )

#define ENUM_DEFNS_DNP3SAUpdateKeyInstallStep \
\
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, NotStarted, "Not started" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, GetKey, "Find key" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, KeyNotFound, "Key not found" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, KeyFound, "Key found" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, StartInstall, "Start install" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, InstallInProgress, "Install in progress" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, InstallFailed, "Install failed" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstallStep( DNP3SAUpdateKeyInstallStep, Success, "Install succeeded" )

#define ENUM_DEFNS_SecurityStatisticsObject121Enum \
\
ENUM_DEFN_SecurityStatisticsObject121Enum( SecurityStatisticsObject121Enum, 32BitSecurityStatWithFlag, "Security statistic 32 bit with flag" )

#define ENUM_DEFNS_SecurityStatisticsObject122Enum \
\
ENUM_DEFN_SecurityStatisticsObject122Enum( SecurityStatisticsObject122Enum, 32BitSecurityStatWithFlag, "32-bit Security Statistic Change Event without Time" ) \
ENUM_DEFN_SecurityStatisticsObject122Enum( SecurityStatisticsObject122Enum, 32BitTimeSecurityStatWithFlag, "32-bit Security Statistic Change Event with Time" )

#define ENUM_DEFNS_DNP3SAUpdateKeyInstalledStatus \
\
ENUM_DEFN_DNP3SAUpdateKeyInstalledStatus( DNP3SAUpdateKeyInstalledStatus, KeyNotFound, "Not found" ) \
ENUM_DEFN_DNP3SAUpdateKeyInstalledStatus( DNP3SAUpdateKeyInstalledStatus, KeyInstalled, "Installed" )

#define ENUM_DEFNS_UsbDiscDNP3SAUpdateKeyFileError \
\
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, None, "No Error" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, TooManyFiles, "Too many files" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, FileFormatInvalid, "Invalid file format" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, OpenFail, "Failed to open file" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidUserId, "Invalid User number" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidUserRole, "Invalid user role" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidDNP3Address, "Invalid DNP3 slave address" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidDeviceSerialNumber, "Invalid relay serial number" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidKeyVersion, "Invalid update key version" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidVerificationMethod, "Invalid verification method" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidFileVersion, "Invalid config. file version" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidFileFormatVersion, "Invalid file format version" ) \
ENUM_DEFN_UsbDiscDNP3SAUpdateKeyFileError( UsbDiscDNP3SAUpdateKeyFileError, InvalidEnableAfterInstall, "Invalid enable DNP3-SA after install" )

#define ENUM_DEFNS_IEC61499AppStatus \
\
ENUM_DEFN_IEC61499AppStatus( IEC61499AppStatus, Stopped, "Stopped" ) \
ENUM_DEFN_IEC61499AppStatus( IEC61499AppStatus, Running, "Running" )

#define ENUM_DEFNS_IEC61499Command \
\
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdNone, "IEC61499 Command - None" ) \
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdStart, "IEC61499 Start Command" ) \
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdStop, "IEC61499 Stop Command" ) \
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdDeleteFromNAND, "IEC61499 Delete FBOOT from NAND" ) \
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdUSBToNAND, "IEC61499 Copy from USB to NAND" ) \
ENUM_DEFN_IEC61499Command( IEC61499Command, IEC61499CmdStagingToNAND, "IEC61499 Copy from Staging to NAND" )

#define ENUM_DEFNS_OperatingMode \
\
ENUM_DEFN_OperatingMode( OperatingMode, Recloser, "Recloser" ) \
ENUM_DEFN_OperatingMode( OperatingMode, Switch, "Switch" ) \
ENUM_DEFN_OperatingMode( OperatingMode, AlarmSwitch, "Alarm Switch" ) \
ENUM_DEFN_OperatingMode( OperatingMode, Sectionaliser, "Sectionaliser" )

#define ENUM_DEFNS_LatchEnable \
\
ENUM_DEFN_LatchEnable( LatchEnable, UnLatched, "Not Latched" ) \
ENUM_DEFN_LatchEnable( LatchEnable, Latched, "Latched" )

#define ENUM_DEFNS_DemoUnitMode \
\
ENUM_DEFN_DemoUnitMode( DemoUnitMode, Disabled, "Disabled" ) \
ENUM_DEFN_DemoUnitMode( DemoUnitMode, Standard, "Standard" ) \
ENUM_DEFN_DemoUnitMode( DemoUnitMode, SingleTriple, "Single Triple" )

#define ENUM_DEFNS_RemoteUpdateCommand \
\
ENUM_DEFN_RemoteUpdateCommand( RemoteUpdateCommand, None, "None" ) \
ENUM_DEFN_RemoteUpdateCommand( RemoteUpdateCommand, Validate, "Validate" ) \
ENUM_DEFN_RemoteUpdateCommand( RemoteUpdateCommand, Update, "Update" ) \
ENUM_DEFN_RemoteUpdateCommand( RemoteUpdateCommand, Reset, "Reset" )

#define ENUM_DEFNS_RemoteUpdateState \
\
ENUM_DEFN_RemoteUpdateState( RemoteUpdateState, Idle, "Idle" ) \
ENUM_DEFN_RemoteUpdateState( RemoteUpdateState, Validating, "Validating" ) \
ENUM_DEFN_RemoteUpdateState( RemoteUpdateState, InProgress, "Update in progress" ) \
ENUM_DEFN_RemoteUpdateState( RemoteUpdateState, Blocked, "Blocked" )

#define ENUM_DEFNS_IEC61499FBOOTChEv \
\
ENUM_DEFN_IEC61499FBOOTChEv( IEC61499FBOOTChEv, IEC61499FBOOTNoCh, "" ) \
ENUM_DEFN_IEC61499FBOOTChEv( IEC61499FBOOTChEv, IEC61499FBOOTChUSB, "Installed" ) \
ENUM_DEFN_IEC61499FBOOTChEv( IEC61499FBOOTChEv, IEC61499FBOOTChStage, "Installed" ) \
ENUM_DEFN_IEC61499FBOOTChEv( IEC61499FBOOTChEv, IEC61499FBOOTChDel, "Deleted" )

#define ENUM_DEFNS_CmsClientSupports \
\
ENUM_DEFN_CmsClientSupports( CmsClientSupports, sw3ph, "3 phase switchgear" ) \
ENUM_DEFN_CmsClientSupports( CmsClientSupports, sw1ph, "1 phase switchgear" ) \
ENUM_DEFN_CmsClientSupports( CmsClientSupports, swST, "Single-Triple switchgear" )

#define ENUM_DEFNS_IEC61499FBOOTStatus \
\
ENUM_DEFN_IEC61499FBOOTStatus( IEC61499FBOOTStatus, None, "None" ) \
ENUM_DEFN_IEC61499FBOOTStatus( IEC61499FBOOTStatus, Installed, "Installed" )

#define ENUM_DEFNS_IEC61499FBOOTOper \
\
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, None, "None" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, SuccessCopy, "SuccessCopy" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, SuccessOverwrite, "SuccessOverwrite" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, SuccessDelete, "SuccessDelete" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopy, "FailCopy" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailOverwrite, "FailOverwrite" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailDelete, "FailDelete" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopyCannotRead, "FailCopyCannotRead" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopyInvalidFile, "FailCopyInvalidFile" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopyLargeFile, "FailCopyLargeFile" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailDeletePermission, "FailDeletePermission" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopyFileNotFound, "FailCopyFileNotFound" ) \
ENUM_DEFN_IEC61499FBOOTOper( IEC61499FBOOTOper, FailCopyNoResource, "FailCopyNoResource" )

#define ENUM_DEFNS_SignalQuality \
\
ENUM_DEFN_SignalQuality( SignalQuality, NoSignal, "Unknown" ) \
ENUM_DEFN_SignalQuality( SignalQuality, LowSignal, "Low Signal" ) \
ENUM_DEFN_SignalQuality( SignalQuality, VeryGood, "Very Good" ) \
ENUM_DEFN_SignalQuality( SignalQuality, Excellent, "Excellent" )

#define ENUM_DEFNS_GpsTimeSyncStatus \
\
ENUM_DEFN_GpsTimeSyncStatus( GpsTimeSyncStatus, NoSync, "Syncing with GPS" ) \
ENUM_DEFN_GpsTimeSyncStatus( GpsTimeSyncStatus, Locked, "Locked by GPS" ) \
ENUM_DEFN_GpsTimeSyncStatus( GpsTimeSyncStatus, NoPPS, "No PPS Signal" )

#define ENUM_DEFNS_WlanConnectionMode \
\
ENUM_DEFN_WlanConnectionMode( WlanConnectionMode, AccessPoint, "Access Point" ) \
ENUM_DEFN_WlanConnectionMode( WlanConnectionMode, Client, "Client" )

#define ENUM_DEFNS_MobileNetworkSimCardStatus \
\
ENUM_DEFN_MobileNetworkSimCardStatus( MobileNetworkSimCardStatus, NotDetected, "Not Detected" ) \
ENUM_DEFN_MobileNetworkSimCardStatus( MobileNetworkSimCardStatus, Detected, "Detected" )

#define ENUM_DEFNS_MobileNetworkMode \
\
ENUM_DEFN_MobileNetworkMode( MobileNetworkMode, Unknown, "Unknown" ) \
ENUM_DEFN_MobileNetworkMode( MobileNetworkMode, GSM, "GSM(2G)" ) \
ENUM_DEFN_MobileNetworkMode( MobileNetworkMode, WCDMA, "WCDMA(3G)" ) \
ENUM_DEFN_MobileNetworkMode( MobileNetworkMode, WCDMA_GSM, "WCDMA(3G)" ) \
ENUM_DEFN_MobileNetworkMode( MobileNetworkMode, LTE_WCDMA_GSM, "LTE(4G)" )

#define ENUM_DEFNS_PhaseToSelection \
\
ENUM_DEFN_PhaseToSelection( PhaseToSelection, PhaseToGround, "Phase to Ground" ) \
ENUM_DEFN_PhaseToSelection( PhaseToSelection, PhaseToPhase, "Phase to Phase" )

#define ENUM_DEFNS_BusAndLine \
\
ENUM_DEFN_BusAndLine( BusAndLine, BusABCLineRST, "Bus: ABC & Line: RST" ) \
ENUM_DEFN_BusAndLine( BusAndLine, BusRSTLineABC, "Bus: RST & Line: ABC" )

#define ENUM_DEFNS_SyncLiveDeadMode \
\
ENUM_DEFN_SyncLiveDeadMode( SyncLiveDeadMode, Disabled, "Disabled" ) \
ENUM_DEFN_SyncLiveDeadMode( SyncLiveDeadMode, LLDB, "LLDB" ) \
ENUM_DEFN_SyncLiveDeadMode( SyncLiveDeadMode, DLLB, "DLLB" ) \
ENUM_DEFN_SyncLiveDeadMode( SyncLiveDeadMode, LLDBOrDLLB, "LLDB or DLLB" )

#define ENUM_DEFNS_SynchroniserStatus \
\
ENUM_DEFN_SynchroniserStatus( SynchroniserStatus, Fail, "Fail" ) \
ENUM_DEFN_SynchroniserStatus( SynchroniserStatus, Ok, "OK" ) \
ENUM_DEFN_SynchroniserStatus( SynchroniserStatus, Released, "Released" ) \
ENUM_DEFN_SynchroniserStatus( SynchroniserStatus, Stopped, "Stopped" )

#define ENUM_DEFNS_PowerFlowDirection \
\
ENUM_DEFN_PowerFlowDirection( PowerFlowDirection, RST_to_ABC, "RST to ABC" ) \
ENUM_DEFN_PowerFlowDirection( PowerFlowDirection, ABC_to_RST, "ABC to RST" )

#define ENUM_DEFNS_AutoRecloseStatus \
\
ENUM_DEFN_AutoRecloseStatus( AutoRecloseStatus, Ready, "Ready" ) \
ENUM_DEFN_AutoRecloseStatus( AutoRecloseStatus, InProgress, "In progress" ) \
ENUM_DEFN_AutoRecloseStatus( AutoRecloseStatus, Successful, "AR successful" )

#define ENUM_DEFNS_TripsToLockout \
\
ENUM_DEFN_TripsToLockout( TripsToLockout, One, "1" ) \
ENUM_DEFN_TripsToLockout( TripsToLockout, Two, "2" ) \
ENUM_DEFN_TripsToLockout( TripsToLockout, Three, "3" ) \
ENUM_DEFN_TripsToLockout( TripsToLockout, Four, "4" )

#define ENUM_DEFNS_YnOperationalMode \
\
ENUM_DEFN_YnOperationalMode( YnOperationalMode, Gn, "Gn" ) \
ENUM_DEFN_YnOperationalMode( YnOperationalMode, Bn, "Bn" ) \
ENUM_DEFN_YnOperationalMode( YnOperationalMode, GnBn, "Gn & Bn" )

#define ENUM_DEFNS_YnDirectionalMode \
\
ENUM_DEFN_YnDirectionalMode( YnDirectionalMode, Forward, "Forward" ) \
ENUM_DEFN_YnDirectionalMode( YnDirectionalMode, Reverse, "Reverse" ) \
ENUM_DEFN_YnDirectionalMode( YnDirectionalMode, Bidirectional, "Bidirectional" )

#define ENUM_DEFNS_HmiListSource \
\
ENUM_DEFN_HmiListSource( HmiListSource, StrArray, "String Array" ) \
ENUM_DEFN_HmiListSource( HmiListSource, StrArray2, "String Array" )

#define ENUM_DEFNS_RelayModelName \
\
ENUM_DEFN_RelayModelName( RelayModelName, RC10, "RC10" ) \
ENUM_DEFN_RelayModelName( RelayModelName, RC15, "RC15" ) \
ENUM_DEFN_RelayModelName( RelayModelName, RC20, "RC20" )

#define ENUM_DEFNS_CmsSecurityLevel \
\
ENUM_DEFN_CmsSecurityLevel( CmsSecurityLevel, Disabled, "Disabled" ) \
ENUM_DEFN_CmsSecurityLevel( CmsSecurityLevel, Authenticated, "Authenticated" ) \
ENUM_DEFN_CmsSecurityLevel( CmsSecurityLevel, AuthenticatedAndEncrypted, "Authenticated & Encrypted" )

#define ENUM_DEFNS_ModemConnectStatus \
\
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, Connecting, "Connecting" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, ModemError, "Modem Error" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, Restarting, "Restarting" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, Connected, "Connected" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SettingNetworkError, "Setting/Network Error" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, Retry, "Retry" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, DisabledByUPS, "Disabled by UPS" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMPinRequired, "SIM PIN Required" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMPinError, "SIM PIN Error" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMBlocked, "SIM Blocked" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMPukRequired, "SIM PUK Required" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMPukError, "SIM PUK Error" ) \
ENUM_DEFN_ModemConnectStatus( ModemConnectStatus, SIMBlockedPermanently, "SIM Blocked Permanently" )

#define ENUM_DEFNS_S61850CIDUpdateStatus \
\
ENUM_DEFN_S61850CIDUpdateStatus( S61850CIDUpdateStatus, Idle, "Idle" ) \
ENUM_DEFN_S61850CIDUpdateStatus( S61850CIDUpdateStatus, NewCID, "New CID" ) \
ENUM_DEFN_S61850CIDUpdateStatus( S61850CIDUpdateStatus, DeletedCID, "CID deleted" )

#define ENUM_DEFNS_WLanTxPower \
\
ENUM_DEFN_WLanTxPower( WLanTxPower, Low, "Low" ) \
ENUM_DEFN_WLanTxPower( WLanTxPower, Medium, "Medium" ) \
ENUM_DEFN_WLanTxPower( WLanTxPower, High, "High" )

#define ENUM_DEFNS_WlanConnectStatus \
\
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, Starting, "Starting" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, Booting, "Booting" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, LoadingFirmware, "Loading Firmware" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, Initialising, "Initialising" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ErrorWrongClientPassword, "Error: Wrong Client Password" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ErrorAPNotFound, "Error: AP Not Found" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ErrorWrongPasswordLength, "Error: Wrong Password Length" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ErrorAPPasswordLength, "Error: AP Password Length" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ErrorClientPasswordLength, "Error: Client Password Length" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, ConnectedtoAP, "Connected to AP" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, AccessPointRunning, "Access Point Running" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, WiFiFailRefertoEventLog, "Wi-Fi Fail: Refer to Event Log" ) \
ENUM_DEFN_WlanConnectStatus( WlanConnectStatus, DisabledByUPS, "Disabled by UPS" )

#define ENUM_DEFNS_UpdateInterlockStatus \
\
ENUM_DEFN_UpdateInterlockStatus( UpdateInterlockStatus, Unlocked, "Unlocked" ) \
ENUM_DEFN_UpdateInterlockStatus( UpdateInterlockStatus, LockedByCMS, "Locked by CMS" ) \
ENUM_DEFN_UpdateInterlockStatus( UpdateInterlockStatus, LockedByHMI, "Locked by HMI" )

#define ENUM_DEFNS_GPSStatus \
\
ENUM_DEFN_GPSStatus( GPSStatus, Normal, "Normal" ) \
ENUM_DEFN_GPSStatus( GPSStatus, Unplugged, "Unplugged" ) \
ENUM_DEFN_GPSStatus( GPSStatus, Malfunction, "Malfunction" )

#define ENUM_DEFNS_ResetCommand \
\
ENUM_DEFN_ResetCommand( ResetCommand, None, "" ) \
ENUM_DEFN_ResetCommand( ResetCommand, Reset, "Reset" )

#define ENUM_DEFNS_AlertDisplayMode \
\
ENUM_DEFN_AlertDisplayMode( AlertDisplayMode, Empty, "Empty" ) \
ENUM_DEFN_AlertDisplayMode( AlertDisplayMode, SingleColumn, "Single Column Display" ) \
ENUM_DEFN_AlertDisplayMode( AlertDisplayMode, TwoColumn, "Two Column Display" )

#define ENUM_DEFNS_Signals \
\
ENUM_DEFN_Signals( Signals, HotLineTagOn, "Hot Line Tag On" ) \
ENUM_DEFN_Signals( Signals, LogicalBlockClose, "Logical Block Close" ) \
ENUM_DEFN_Signals( Signals, UpdateFailed, "Update Failed" ) \
ENUM_DEFN_Signals( Signals, UpdateReverted, "Update Reverted" ) \
ENUM_DEFN_Signals( Signals, UpdateSettingsLogsFail, "Update Settings or Logs Fail" ) \
ENUM_DEFN_Signals( Signals, USBUnsupported, "USB Unsupported" ) \
ENUM_DEFN_Signals( Signals, USBMismatched, "USB Mismatched" ) \
ENUM_DEFN_Signals( Signals, SIMNotCalibrated, "SIM Not Calibrated" ) \
ENUM_DEFN_Signals( Signals, SIMCommsFail, "SIM Comms Fail" ) \
ENUM_DEFN_Signals( Signals, LineSupplyStatusAbnormal, "Line Supply Status Abnormal" ) \
ENUM_DEFN_Signals( Signals, USBHostOff, "USB Host Off" ) \
ENUM_DEFN_Signals( Signals, SourceNotHealthy, "Source Not Healthy" ) \
ENUM_DEFN_Signals( Signals, ACOUnhealthy, "ACO Unhealthy" ) \
ENUM_DEFN_Signals( Signals, PeerCommsFailed, "Peer Comms Failed" ) \
ENUM_DEFN_Signals( Signals, RTCHardwareFault, "RTC Hardware Fault" ) \
ENUM_DEFN_Signals( Signals, DialupFailed, "Dial-up Failed" ) \
ENUM_DEFN_Signals( Signals, RelayModuleFault, "Relay Module Fault" ) \
ENUM_DEFN_Signals( Signals, SIMCommsError, "SIM Comms Error" ) \
ENUM_DEFN_Signals( Signals, IO1CommsError, "I/O1 Comms Error" ) \
ENUM_DEFN_Signals( Signals, IO2CommsError, "I/O2 Comms Error" ) \
ENUM_DEFN_Signals( Signals, IO1Fault, "I/O1 Fault" ) \
ENUM_DEFN_Signals( Signals, IO2Fault, "I/O2 Fault" ) \
ENUM_DEFN_Signals( Signals, ExcessiveTo, "Excessive To" ) \
ENUM_DEFN_Signals( Signals, ExcessiveTc, "Excessive Tc" ) \
ENUM_DEFN_Signals( Signals, OSMPositionStatusUnavailable, "OSM Position Status Unavailable" ) \
ENUM_DEFN_Signals( Signals, OSMDisconnected, "OSM Disconnected" ) \
ENUM_DEFN_Signals( Signals, MechanicallyLocked, "Mechanically Locked" ) \
ENUM_DEFN_Signals( Signals, OSMCoilOC, "OSM Coil OC" ) \
ENUM_DEFN_Signals( Signals, OSMCoilSC, "OSM Coil SC" ) \
ENUM_DEFN_Signals( Signals, OSMLimitSwitchFault, "OSM Limit Switch Fault" ) \
ENUM_DEFN_Signals( Signals, SIMCapsNotCharged, "SIM Caps Not Charged" ) \
ENUM_DEFN_Signals( Signals, BatteryStatusAbnormal, "Battery Status Abnormal" ) \
ENUM_DEFN_Signals( Signals, BatteryChargerStateLowPower, "Battery Charger State: Low Power" ) \
ENUM_DEFN_Signals( Signals, BatteryChargerFault, "Battery Charger Fault" ) \
ENUM_DEFN_Signals( Signals, ExternalLoadOverload, "External Load Overload" ) \
ENUM_DEFN_Signals( Signals, ACOff, "AC Off (On Battery Supply)" ) \
ENUM_DEFN_Signals( Signals, BatteryOff, "Battery Off (On AC Supply)" ) \
ENUM_DEFN_Signals( Signals, CriticalBatteryLevel, "Critical Battery Level" ) \
ENUM_DEFN_Signals( Signals, SIMModuleFault, "SIM Module Fault" ) \
ENUM_DEFN_Signals( Signals, SIMDisconnected, "SIM Disconnected" ) \
ENUM_DEFN_Signals( Signals, CANControllerOverrun, "CANControllerOverrun" ) \
ENUM_DEFN_Signals( Signals, CANControllerError, "CANControllerError" ) \
ENUM_DEFN_Signals( Signals, CANMessagebufferoverflow, "CANMessagebufferoverflow" ) \
ENUM_DEFN_Signals( Signals, WarningSignals, "Warning Signals" ) \
ENUM_DEFN_Signals( Signals, Malfunction, "Malfunction" ) \
ENUM_DEFN_Signals( Signals, ModuleCommsError, "Module Comms Error" ) \
ENUM_DEFN_Signals( Signals, PanelCommsError, "Panel Comms Error" ) \
ENUM_DEFN_Signals( Signals, ControllerFault, "Controller Fault" ) \
ENUM_DEFN_Signals( Signals, ControllerModuleFault, "Controller Module Fault" ) \
ENUM_DEFN_Signals( Signals, PanelModuleFault, "Panel Module Fault" ) \
ENUM_DEFN_Signals( Signals, OSMFault, "OSM Fault" ) \
ENUM_DEFN_Signals( Signals, CANBusMalfunction, "CAN Bus Malfunction" ) \
ENUM_DEFN_Signals( Signals, CapacitorVoltageAbnormal, "Capacitor Voltage Abnormal" ) \
ENUM_DEFN_Signals( Signals, IncorrectDBValuesLoaded, "Incorrect DB Values Loaded" ) \
ENUM_DEFN_Signals( Signals, SIMMinibootloaderMode, "SIM in Minibootloader Mode" ) \
ENUM_DEFN_Signals( Signals, DisconnectedPhA, "Disconnected Ph A" ) \
ENUM_DEFN_Signals( Signals, DisconnectedPhB, "Disconnected Ph B" ) \
ENUM_DEFN_Signals( Signals, DisconnectedPhC, "Disconnected Ph C" ) \
ENUM_DEFN_Signals( Signals, MechanicallyLockedPhA, "Mechanically Locked Ph A" ) \
ENUM_DEFN_Signals( Signals, MechanicallyLockedPhB, "Mechanically Locked Ph B" ) \
ENUM_DEFN_Signals( Signals, MechanicallyLockedPhC, "Mechanically Locked Ph C" ) \
ENUM_DEFN_Signals( Signals, CoilPhAOC, "Coil Ph A OC" ) \
ENUM_DEFN_Signals( Signals, CoilPhBOC, "Coil Ph B OC" ) \
ENUM_DEFN_Signals( Signals, CoilPhCOC, "Coil Ph C OC" ) \
ENUM_DEFN_Signals( Signals, CoilPhASC, "Coil Ph A SC" ) \
ENUM_DEFN_Signals( Signals, CoilPhBSC, "Coil Ph B SC" ) \
ENUM_DEFN_Signals( Signals, CoilPhCSC, "Coil Ph C SC" ) \
ENUM_DEFN_Signals( Signals, LimitSwitchFaultPhA, "Limit Switch Fault Ph A" ) \
ENUM_DEFN_Signals( Signals, LimitSwitchFaultPhB, "Limit Switch Fault Ph B" ) \
ENUM_DEFN_Signals( Signals, LimitSwitchFaultPhC, "Limit Switch Fault Ph C" ) \
ENUM_DEFN_Signals( Signals, ExcessiveToPhA, "Excessive To Ph A" ) \
ENUM_DEFN_Signals( Signals, ExcessiveToPhB, "Excessive To Ph B" ) \
ENUM_DEFN_Signals( Signals, ExcessiveToPhC, "Excessive To Ph C" ) \
ENUM_DEFN_Signals( Signals, ExcessiveTcPhA, "Excessive Tc Ph A" ) \
ENUM_DEFN_Signals( Signals, ExcessiveTcPhB, "Excessive Tc Ph B" ) \
ENUM_DEFN_Signals( Signals, ExcessiveTcPhC, "Excessive Tc Ph C" ) \
ENUM_DEFN_Signals( Signals, SWLockedPhA, "SW Locked Ph A" ) \
ENUM_DEFN_Signals( Signals, SWLockedPhB, "SW Locked Ph B" ) \
ENUM_DEFN_Signals( Signals, SWLockedPhC, "SW Locked Ph C" ) \
ENUM_DEFN_Signals( Signals, CheckBattery, "Check Battery" ) \
ENUM_DEFN_Signals( Signals, SIMCircuitFaulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN_Signals( Signals, IncorrectPhaseSequence, "Incorrect Phase Sequence" ) \
ENUM_DEFN_Signals( Signals, SectionaliserConfigMismatch, "Sectionaliser configuration mismatch" ) \
ENUM_DEFN_Signals( Signals, GPIOMinibootloaderMode, "GPIO in Minibootloader Mode" ) \
ENUM_DEFN_Signals( Signals, LogicConfigurationIssue, "Logic Configuration Issue" ) \
ENUM_DEFN_Signals( Signals, PscDisconnected, "PSC Disconnected" ) \
ENUM_DEFN_Signals( Signals, PscRunningMiniBootloader, "PSC in Mini Bootloader Mode" ) \
ENUM_DEFN_Signals( Signals, PscModuleFault, "PSC Module Fault " ) \
ENUM_DEFN_Signals( Signals, SGAFbootFailed, "SGA fboot Failed" ) \
ENUM_DEFN_Signals( Signals, InvalidSingleTripleConfigAutoSync, "Invalid Auto-Sync Single Triple Cnfg" ) \
ENUM_DEFN_Signals( Signals, GPSEnabledUnplugged, "GPS is enabled and unplugged" ) \
ENUM_DEFN_Signals( Signals, GPSMalfunction, "GPS Malfunction" ) \
ENUM_DEFN_Signals( Signals, SimAndOsmModelMismatch, "SIM does not match OSM model number" ) \
ENUM_DEFN_Signals( Signals, LogicSGAStopped, "Logic/SGA Stopped" ) \
ENUM_DEFN_Signals( Signals, LogicSGAThrottling, "Logic/SGA Throttling" ) \
ENUM_DEFN_Signals( Signals, ScadaRestartReq, "SCADA Config requires RC restart" ) \
ENUM_DEFN_Signals( Signals, FirmwareHardwareMismatch, "Firmware/Hardware Mismatch" ) \
ENUM_DEFN_Signals( Signals, SNTPUnableToSync, "SNTP Unable to Sync" ) \
ENUM_DEFN_Signals( Signals, UsbOvercurrent, "USB Overcurrent" ) \
ENUM_DEFN_Signals( Signals, CanBusHighPower, "CAN Bus High Power " ) \
ENUM_DEFN_Signals( Signals, CorruptedPartition, "Corrupted Partition" ) \
ENUM_DEFN_Signals( Signals, RLM20UpgradeFailure, "RLM-20 Upgrade Failure" ) \
ENUM_DEFN_Signals( Signals, SigMalfAnalogBoard, "Analog Board Communication Error" ) \
ENUM_DEFN_Signals( Signals, CBFMalfunction, "CBF Malfunction" ) \
ENUM_DEFN_Signals( Signals, CBFBackupTrip, "CBF Backup Trip" ) \
ENUM_DEFN_Signals( Signals, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN_Signals( Signals, SimCardPinRequired, "SIM Card PIN Required" ) \
ENUM_DEFN_Signals( Signals, SimCardPinError, "SIM Card PIN Error" ) \
ENUM_DEFN_Signals( Signals, SimCardBlocked, "SIM Card Blocked, SIM PUK Required" ) \
ENUM_DEFN_Signals( Signals, SimCardPukError, "SIM Card PUK Error" ) \
ENUM_DEFN_Signals( Signals, SimCardBlockedPermanently, "SIM Card Blocked Permanently" )

#define ENUM_DEFNS_CommsPortHmi \
\
ENUM_DEFN_CommsPortHmi( CommsPortHmi, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmi( CommsPortHmi, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmi( CommsPortHmi, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmi( CommsPortHmi, USBC, "USBC" ) \
ENUM_DEFN_CommsPortHmi( CommsPortHmi, RS232P, "RS232P" ) \
ENUM_DEFN_CommsPortHmi( CommsPortHmi, LAN, "LAN" )

#define ENUM_DEFNS_CommsPortHmiGadget \
\
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, USBC, "USBC" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, RS232P, "RS232P" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, USBC2, "USBC2" ) \
ENUM_DEFN_CommsPortHmiGadget( CommsPortHmiGadget, USB_L, "USB-L" )

#define ENUM_DEFNS_CommsPortHmiNoLAN \
\
ENUM_DEFN_CommsPortHmiNoLAN( CommsPortHmiNoLAN, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmiNoLAN( CommsPortHmiNoLAN, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmiNoLAN( CommsPortHmiNoLAN, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmiNoLAN( CommsPortHmiNoLAN, USBC, "USBC" ) \
ENUM_DEFN_CommsPortHmiNoLAN( CommsPortHmiNoLAN, RS232P, "RS232P" )

#define ENUM_DEFNS_HrmIndividualSinglePhase \
\
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, Disable, "Disable" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I2, "I2" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I3, "I3" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I4, "I4" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I5, "I5" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I6, "I6" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I7, "I7" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I8, "I8" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I9, "I9" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I10, "I10" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I11, "I11" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I12, "I12" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I13, "I13" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I14, "I14" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, I15, "I15" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V2, "V2" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V3, "V3" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V4, "V4" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V5, "V5" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V6, "V6" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V7, "V7" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V8, "V8" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V9, "V9" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V10, "V10" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V11, "V11" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V12, "V12" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V13, "V13" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V14, "V14" ) \
ENUM_DEFN_HrmIndividualSinglePhase( HrmIndividualSinglePhase, V15, "V15" )

#define ENUM_DEFNS_Uv4VoltageTypeSinglePhase \
\
ENUM_DEFN_Uv4VoltageTypeSinglePhase( Uv4VoltageTypeSinglePhase, PhGnd, "Ph/Gnd" )

#define ENUM_DEFNS_WlanPortConfigType \
\
ENUM_DEFN_WlanPortConfigType( WlanPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN_WlanPortConfigType( WlanPortConfigType, WLAN, "WLAN" )

#define ENUM_DEFNS_MobileNetworkPortConfigType \
\
ENUM_DEFN_MobileNetworkPortConfigType( MobileNetworkPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN_MobileNetworkPortConfigType( MobileNetworkPortConfigType, MobileNetworkModem, "Mobile Network Modem" )

#define ENUM_DEFNS_CommsPortHmiNoUSBC \
\
ENUM_DEFN_CommsPortHmiNoUSBC( CommsPortHmiNoUSBC, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmiNoUSBC( CommsPortHmiNoUSBC, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmiNoUSBC( CommsPortHmiNoUSBC, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmiNoUSBC( CommsPortHmiNoUSBC, RS232P, "RS232P" ) \
ENUM_DEFN_CommsPortHmiNoUSBC( CommsPortHmiNoUSBC, LAN, "LAN" )

#define ENUM_DEFNS_CommsPortHmiNoUSBCWIFI \
\
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, RS232P, "RS232P" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, LAN, "LAN" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI( CommsPortHmiNoUSBCWIFI, WLAN, "WLAN" )

#define ENUM_DEFNS_CommsPortHmiNoUSBCWIFI4G \
\
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, RS232, "RS232" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, USBA, "USBA" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, USBB, "USBB" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, RS232P, "RS232P" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, LAN, "LAN" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, WLAN, "WLAN" ) \
ENUM_DEFN_CommsPortHmiNoUSBCWIFI4G( CommsPortHmiNoUSBCWIFI4G, MOBILENETWORK, "MOBILENETWORK" )

#define ENUM_DEFNS_CommsPortLANSetREL01 \
\
ENUM_DEFN_CommsPortLANSetREL01( CommsPortLANSetREL01, USBA, "USBA" ) \
ENUM_DEFN_CommsPortLANSetREL01( CommsPortLANSetREL01, USBB, "USBB" ) \
ENUM_DEFN_CommsPortLANSetREL01( CommsPortLANSetREL01, USBC, "USBC" )

#define ENUM_DEFNS_CommsPortLANSetREL02 \
\
ENUM_DEFN_CommsPortLANSetREL02( CommsPortLANSetREL02, USBA, "USBA" ) \
ENUM_DEFN_CommsPortLANSetREL02( CommsPortLANSetREL02, USBB, "USBB" ) \
ENUM_DEFN_CommsPortLANSetREL02( CommsPortLANSetREL02, USBC, "USBC" ) \
ENUM_DEFN_CommsPortLANSetREL02( CommsPortLANSetREL02, LAN, "LAN" )

#define ENUM_DEFNS_CommsPortLANSetREL03 \
\
ENUM_DEFN_CommsPortLANSetREL03( CommsPortLANSetREL03, USBA, "USBA" ) \
ENUM_DEFN_CommsPortLANSetREL03( CommsPortLANSetREL03, USBB, "USBB" ) \
ENUM_DEFN_CommsPortLANSetREL03( CommsPortLANSetREL03, LAN, "LAN" )

#define ENUM_DEFNS_CommsPortLANSetREL15WLAN \
\
ENUM_DEFN_CommsPortLANSetREL15WLAN( CommsPortLANSetREL15WLAN, USBA, "USBA" ) \
ENUM_DEFN_CommsPortLANSetREL15WLAN( CommsPortLANSetREL15WLAN, USBB, "USBB" ) \
ENUM_DEFN_CommsPortLANSetREL15WLAN( CommsPortLANSetREL15WLAN, LAN, "LAN" ) \
ENUM_DEFN_CommsPortLANSetREL15WLAN( CommsPortLANSetREL15WLAN, WLAN, "WLAN" )

#define ENUM_DEFNS_CommsPortLANSetREL15WWAN \
\
ENUM_DEFN_CommsPortLANSetREL15WWAN( CommsPortLANSetREL15WWAN, USBA, "USBA" ) \
ENUM_DEFN_CommsPortLANSetREL15WWAN( CommsPortLANSetREL15WWAN, USBB, "USBB" ) \
ENUM_DEFN_CommsPortLANSetREL15WWAN( CommsPortLANSetREL15WWAN, LAN, "LAN" ) \
ENUM_DEFN_CommsPortLANSetREL15WWAN( CommsPortLANSetREL15WWAN, WLAN, "WLAN" ) \
ENUM_DEFN_CommsPortLANSetREL15WWAN( CommsPortLANSetREL15WWAN, MOBILENETWORK, "MOBILENETWORK" )

#define ENUM_DEFNS_FaultLocFaultType \
\
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, None, "None" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, AE, "AE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, BE, "BE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, CE, "CE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, AB, "AB" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, BC, "BC" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, CA, "CA" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, ABC, "ABC" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, ABE, "ABE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, BCE, "BCE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, CAE, "CAE" ) \
ENUM_DEFN_FaultLocFaultType( FaultLocFaultType, ABCE, "ABCE" )

#define ENUM_DEFNS_TimeUnit \
\
ENUM_DEFN_TimeUnit( TimeUnit, min, "min" )

#define ENUM_DEFNS_ScadaProtocolLoadedStatus \
\
ENUM_DEFN_ScadaProtocolLoadedStatus( ScadaProtocolLoadedStatus, RestartReq, "Controller Restart Req" ) \
ENUM_DEFN_ScadaProtocolLoadedStatus( ScadaProtocolLoadedStatus, Ready, "Ready" )

#define ENUM_DEFNS_SWModel \
\
ENUM_DEFN_SWModel( SWModel, REL_01, "REL-01" ) \
ENUM_DEFN_SWModel( SWModel, REL_02, "REL-02" ) \
ENUM_DEFN_SWModel( SWModel, REL_03, "" ) \
ENUM_DEFN_SWModel( SWModel, REL_04, "" ) \
ENUM_DEFN_SWModel( SWModel, REL_15, "REL-15" ) \
ENUM_DEFN_SWModel( SWModel, REL_20, "REL-20" )

#define ENUM_DEFNS_NeutralPolarisation \
\
ENUM_DEFN_NeutralPolarisation( NeutralPolarisation, I0, "In" ) \
ENUM_DEFN_NeutralPolarisation( NeutralPolarisation, I0CosTheta, "In cos θ" ) \
ENUM_DEFN_NeutralPolarisation( NeutralPolarisation, I0SinTheta, "In sin θ" )

#define ENUM_DEFNS_TimeSyncStatus \
\
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, Internal, "Internal" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, CMS, "CMS" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SCADA, "SCADA" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SyncingWithGPS, "Syncing With GPS" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, LockedByGPS, "Locked By GPS" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SyncSNTPServ1, "SNTP IPv4 Server 1" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SyncSNTPServ2, "SNTP IPv4 Server 2" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SyncSNTPIPv6Serv1, "SNTP IPv6 Server 1" ) \
ENUM_DEFN_TimeSyncStatus( TimeSyncStatus, SyncSNTPIPv6Serv2, "SNTP IPv6 Server 2" )

#define ENUM_DEFNS_IpVersion \
\
ENUM_DEFN_IpVersion( IpVersion, Disabled, "None" ) \
ENUM_DEFN_IpVersion( IpVersion, IPv4, "IPv4" ) \
ENUM_DEFN_IpVersion( IpVersion, IPv6, "IPv6" ) \
ENUM_DEFN_IpVersion( IpVersion, IPv4_IPv6, "IPv4/IPv6" )

#define ENUM_DEFNS_SDCardStatus \
\
ENUM_DEFN_SDCardStatus( SDCardStatus, NoCard, "No Card" ) \
ENUM_DEFN_SDCardStatus( SDCardStatus, Unformatted, "Unformatted" ) \
ENUM_DEFN_SDCardStatus( SDCardStatus, Ready, "Ready" ) \
ENUM_DEFN_SDCardStatus( SDCardStatus, Eject, "Syncing Filesystem" )

#define ENUM_DEFNS_OscSamplesPerCycle \
\
ENUM_DEFN_OscSamplesPerCycle( OscSamplesPerCycle, Samples32, "32" ) \
ENUM_DEFN_OscSamplesPerCycle( OscSamplesPerCycle, Samples128, "128" ) \
ENUM_DEFN_OscSamplesPerCycle( OscSamplesPerCycle, Samples256, "256" )

#define ENUM_DEFNS_OscCaptureTimeExt \
\
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_0_5, "0.5" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_1, "1" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_3, "3" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_5, "5" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_10, "10" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_20, "20" ) \
ENUM_DEFN_OscCaptureTimeExt( OscCaptureTimeExt, Sec_30, "30" )

#define ENUM_DEFNS_HrmIndividualExt \
\
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, Disable, "Disable" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I2, "I2" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I3, "I3" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I4, "I4" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I5, "I5" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I6, "I6" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I7, "I7" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I8, "I8" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I9, "I9" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I10, "I10" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I11, "I11" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I12, "I12" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I13, "I13" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I14, "I14" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I15, "I15" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I16, "I16" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I17, "I17" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I18, "I18" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I19, "I19" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I20, "I20" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I21, "I21" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I22, "I22" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I23, "I23" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I24, "I24" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I25, "I25" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I26, "I26" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I27, "I27" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I28, "I28" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I29, "I29" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I30, "I30" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I31, "I31" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I32, "I32" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I33, "I33" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I34, "I34" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I35, "I35" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I36, "I36" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I37, "I37" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I38, "I38" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I39, "I39" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I40, "I40" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I41, "I41" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I42, "I42" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I43, "I43" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I44, "I44" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I45, "I45" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I46, "I46" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I47, "I47" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I48, "I48" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I49, "I49" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I50, "I50" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I51, "I51" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I52, "I52" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I53, "I53" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I54, "I54" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I55, "I55" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I56, "I56" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I57, "I57" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I58, "I58" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I59, "I59" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I60, "I60" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I61, "I61" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I62, "I62" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, I63, "I63" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In2, "In2" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In3, "In3" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In4, "In4" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In5, "In5" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In6, "In6" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In7, "In7" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In8, "In8" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In9, "In9" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In10, "In10" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In11, "In11" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In12, "In12" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In13, "In13" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In14, "In14" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In15, "In15" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In16, "In16" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In17, "In17" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In18, "In18" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In19, "In19" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In20, "In20" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In21, "In21" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In22, "In22" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In23, "In23" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In24, "In24" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In25, "In25" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In26, "In26" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In27, "In27" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In28, "In28" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In29, "In29" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In30, "In30" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In31, "In31" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In32, "In32" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In33, "In33" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In34, "In34" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In35, "In35" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In36, "In36" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In37, "In37" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In38, "In38" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In39, "In39" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In40, "In40" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In41, "In41" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In42, "In42" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In43, "In43" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In44, "In44" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In45, "In45" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In46, "In46" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In47, "In47" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In48, "In48" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In49, "In49" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In50, "In50" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In51, "In51" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In52, "In52" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In53, "In53" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In54, "In54" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In55, "In55" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In56, "In56" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In57, "In57" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In58, "In58" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In59, "In59" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In60, "In60" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In61, "In61" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In62, "In62" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, In63, "In63" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V2, "V2" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V3, "V3" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V4, "V4" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V5, "V5" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V6, "V6" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V7, "V7" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V8, "V8" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V9, "V9" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V10, "V10" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V11, "V11" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V12, "V12" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V13, "V13" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V14, "V14" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V15, "V15" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V16, "V16" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V17, "V17" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V18, "V18" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V19, "V19" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V20, "V20" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V21, "V21" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V22, "V22" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V23, "V23" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V24, "V24" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V25, "V25" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V26, "V26" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V27, "V27" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V28, "V28" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V29, "V29" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V30, "V30" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V31, "V31" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V32, "V32" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V33, "V33" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V34, "V34" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V35, "V35" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V36, "V36" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V37, "V37" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V38, "V38" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V39, "V39" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V40, "V40" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V41, "V41" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V42, "V42" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V43, "V43" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V44, "V44" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V45, "V45" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V46, "V46" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V47, "V47" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V48, "V48" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V49, "V49" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V50, "V50" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V51, "V51" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V52, "V52" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V53, "V53" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V54, "V54" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V55, "V55" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V56, "V56" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V57, "V57" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V58, "V58" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V59, "V59" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V60, "V60" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V61, "V61" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V62, "V62" ) \
ENUM_DEFN_HrmIndividualExt( HrmIndividualExt, V63, "V63" )

#define ENUM_DEFNS_HrmIndividualSinglePhaseExt \
\
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, Disable, "Disable" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I2, "I2" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I3, "I3" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I4, "I4" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I5, "I5" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I6, "I6" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I7, "I7" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I8, "I8" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I9, "I9" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I10, "I10" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I11, "I11" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I12, "I12" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I13, "I13" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I14, "I14" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I15, "I15" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I16, "I16" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I17, "I17" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I18, "I18" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I19, "I19" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I20, "I20" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I21, "I21" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I22, "I22" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I23, "I23" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I24, "I24" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I25, "I25" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I26, "I26" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I27, "I27" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I28, "I28" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I29, "I29" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I30, "I30" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I31, "I31" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I32, "I32" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I33, "I33" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I34, "I34" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I35, "I35" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I36, "I36" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I37, "I37" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I38, "I38" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I39, "I39" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I40, "I40" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I41, "I41" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I42, "I42" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I43, "I43" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I44, "I44" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I45, "I45" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I46, "I46" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I47, "I47" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I48, "I48" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I49, "I49" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I50, "I50" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I51, "I51" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I52, "I52" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I53, "I53" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I54, "I54" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I55, "I55" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I56, "I56" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I57, "I57" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I58, "I58" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I59, "I59" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I60, "I60" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I61, "I61" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I62, "I62" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, I63, "I63" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V2, "V2" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V3, "V3" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V4, "V4" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V5, "V5" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V6, "V6" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V7, "V7" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V8, "V8" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V9, "V9" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V10, "V10" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V11, "V11" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V12, "V12" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V13, "V13" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V14, "V14" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V15, "V15" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V16, "V16" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V17, "V17" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V18, "V18" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V19, "V19" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V20, "V20" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V21, "V21" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V22, "V22" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V23, "V23" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V24, "V24" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V25, "V25" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V26, "V26" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V27, "V27" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V28, "V28" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V29, "V29" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V30, "V30" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V31, "V31" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V32, "V32" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V33, "V33" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V34, "V34" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V35, "V35" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V36, "V36" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V37, "V37" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V38, "V38" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V39, "V39" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V40, "V40" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V41, "V41" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V42, "V42" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V43, "V43" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V44, "V44" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V45, "V45" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V46, "V46" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V47, "V47" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V48, "V48" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V49, "V49" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V50, "V50" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V51, "V51" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V52, "V52" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V53, "V53" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V54, "V54" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V55, "V55" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V56, "V56" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V57, "V57" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V58, "V58" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V59, "V59" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V60, "V60" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V61, "V61" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V62, "V62" ) \
ENUM_DEFN_HrmIndividualSinglePhaseExt( HrmIndividualSinglePhaseExt, V63, "V63" )

#define ENUM_DEFNS_RC20CommsPortNoUSBCWIFI \
\
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, RS232, "RS232" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, USBA, "USBA" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, USBB, "USBB" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, RS232P, "RS232P" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, LAN, "LAN" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, WLAN, "WLAN" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI( RC20CommsPortNoUSBCWIFI, LANB, "LAN2" )

#define ENUM_DEFNS_RC20CommsPortNoUSBCWIFI4G \
\
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, RS232, "RS232" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, USBA, "USBA" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, USBB, "USBB" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, RS232P, "RS232P" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, LAN, "LAN" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, WLAN, "WLAN" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN_RC20CommsPortNoUSBCWIFI4G( RC20CommsPortNoUSBCWIFI4G, LANB, "LAN2" )

#define ENUM_DEFNS_BatteryCapacityConfidence \
\
ENUM_DEFN_BatteryCapacityConfidence( BatteryCapacityConfidence, Unknown, "Unknown" ) \
ENUM_DEFN_BatteryCapacityConfidence( BatteryCapacityConfidence, NotConfident, "Not Confident" ) \
ENUM_DEFN_BatteryCapacityConfidence( BatteryCapacityConfidence, Confident, "Confident" )

#define ENUM_DEFNS_PMUPerfClass \
\
ENUM_DEFN_PMUPerfClass( PMUPerfClass, TypeM, "M" ) \
ENUM_DEFN_PMUPerfClass( PMUPerfClass, TypeP, "P" )

#define ENUM_DEFNS_RC20CommsPortLAN \
\
ENUM_DEFN_RC20CommsPortLAN( RC20CommsPortLAN, USBA, "USBA" ) \
ENUM_DEFN_RC20CommsPortLAN( RC20CommsPortLAN, USBB, "USBB" ) \
ENUM_DEFN_RC20CommsPortLAN( RC20CommsPortLAN, LAN, "LAN" ) \
ENUM_DEFN_RC20CommsPortLAN( RC20CommsPortLAN, WLAN, "WLAN" ) \
ENUM_DEFN_RC20CommsPortLAN( RC20CommsPortLAN, LAN2, "LAN2" )

#define ENUM_DEFNS_RC20CommsPortLAN4G \
\
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, USBA, "USBA" ) \
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, USBB, "USBB" ) \
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, LAN, "LAN" ) \
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, WLAN, "WLAN" ) \
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN_RC20CommsPortLAN4G( RC20CommsPortLAN4G, LAN2, "LAN2" )

#define ENUM_DEFNS_PMUQuality \
\
ENUM_DEFN_PMUQuality( PMUQuality, Unknown, "Unknown" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_100ns, "Valid, Error < 100 ns" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_1us, "Valid, Error < 1 us" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_10us, "Valid, Error < 10 us" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_100us, "Valid, Error < 100 us" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_1ms, "Valid, Error < 1 ms" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Valid_10ms, "Valid, Error < 10 ms" ) \
ENUM_DEFN_PMUQuality( PMUQuality, Invalid, "Invalid" ) \
ENUM_DEFN_PMUQuality( PMUQuality, DataAbsent, "Data Absent" )

#define ENUM_DEFNS_PMUStatus \
\
ENUM_DEFN_PMUStatus( PMUStatus, Disabled, "Disabled" ) \
ENUM_DEFN_PMUStatus( PMUStatus, RequireCID, "Require CID Config" ) \
ENUM_DEFN_PMUStatus( PMUStatus, ConfigError, "Configuration Error" ) \
ENUM_DEFN_PMUStatus( PMUStatus, NoSync, "GPS Not Synced" ) \
ENUM_DEFN_PMUStatus( PMUStatus, Sync, "GPS Synced" )

#define ENUM_DEFNS_PMUConfigStatus \
\
ENUM_DEFN_PMUConfigStatus( PMUConfigStatus, Invalid, "Invalid" ) \
ENUM_DEFN_PMUConfigStatus( PMUConfigStatus, Unconfigured, "Unconfigured" ) \
ENUM_DEFN_PMUConfigStatus( PMUConfigStatus, Valid, "Valid" )

#define ENUM_DEFNS_LineSupplyRange \
\
ENUM_DEFN_LineSupplyRange( LineSupplyRange, AC110V, "110V" ) \
ENUM_DEFN_LineSupplyRange( LineSupplyRange, AC220V, "220V" ) \
ENUM_DEFN_LineSupplyRange( LineSupplyRange, DC, "DC" ) \
ENUM_DEFN_LineSupplyRange( LineSupplyRange, Detecting, "Detecting" ) \
ENUM_DEFN_LineSupplyRange( LineSupplyRange, Off, "Off" )

#define ENUM_DEFNS_TimeSyncUnlockedTime \
\
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, Unknown, "Unknown" ) \
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, Locked, "Locked" ) \
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, UnlockedLessThan10s, "Unlocked <10 s" ) \
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, UnlockedLessThan100s, "Unlocked <100 s" ) \
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, UnlockedLessThan1000s, "Unlocked <1000 s" ) \
ENUM_DEFN_TimeSyncUnlockedTime( TimeSyncUnlockedTime, Unlocked1000sOrMore, "Unlocked >=1000 s" )

#define ENUM_DEFNS_CBF_backup_trip \
\
ENUM_DEFN_CBF_backup_trip( CBF_backup_trip, CBF_malfunction, "Excessive To" ) \
ENUM_DEFN_CBF_backup_trip( CBF_backup_trip, CBF_malf_current, "Excessive To/Current" ) \
ENUM_DEFN_CBF_backup_trip( CBF_backup_trip, CBF_current, "Current" )

#define ENUM_DEFNS_CbfCurrentMode \
\
ENUM_DEFN_CbfCurrentMode( CbfCurrentMode, Oc, "Phase" ) \
ENUM_DEFN_CbfCurrentMode( CbfCurrentMode, OcEf, "Phase/Residual" ) \
ENUM_DEFN_CbfCurrentMode( CbfCurrentMode, Ef, "Residual" )

#define ENUM_DEFNS_CommsPortREL15 \
\
ENUM_DEFN_CommsPortREL15( CommsPortREL15, USBA, "USB A" ) \
ENUM_DEFN_CommsPortREL15( CommsPortREL15, USBB, "USB B" ) \
ENUM_DEFN_CommsPortREL15( CommsPortREL15, None, "None" ) \
ENUM_DEFN_CommsPortREL15( CommsPortREL15, LAN, "LAN" ) \
ENUM_DEFN_CommsPortREL15( CommsPortREL15, WLAN, "WLAN" )

#define ENUM_DEFNS_CommsPortREL204G \
\
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, USBA, "USB A" ) \
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, USBB, "USB B" ) \
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, None, "None" ) \
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, LAN, "LAN" ) \
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, WLAN, "WLAN" ) \
ENUM_DEFN_CommsPortREL204G( CommsPortREL204G, LAN2, "LAN 2" )

#define ENUM_DEFNS_CommsPortREL02 \
\
ENUM_DEFN_CommsPortREL02( CommsPortREL02, USBA, "USB A" ) \
ENUM_DEFN_CommsPortREL02( CommsPortREL02, USBB, "USB B" ) \
ENUM_DEFN_CommsPortREL02( CommsPortREL02, USBC, "USB C" ) \
ENUM_DEFN_CommsPortREL02( CommsPortREL02, None, "None" ) \
ENUM_DEFN_CommsPortREL02( CommsPortREL02, LAN, "LAN" )

#define ENUM_DEFNS_CommsPortREL01 \
\
ENUM_DEFN_CommsPortREL01( CommsPortREL01, USBA, "USB A" ) \
ENUM_DEFN_CommsPortREL01( CommsPortREL01, USBB, "USB B" ) \
ENUM_DEFN_CommsPortREL01( CommsPortREL01, USBC, "USB C" ) \
ENUM_DEFN_CommsPortREL01( CommsPortREL01, None, "None" )

#define ENUM_DEFNS_ActiveInactive \
\
ENUM_DEFN_ActiveInactive( ActiveInactive, Inactive, "Inactive" ) \
ENUM_DEFN_ActiveInactive( ActiveInactive, Active, "Active" )

#define ENUM_DEFNS_UserCredentialResultStatus \
\
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, Success, "Success" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, DlopenErr, "dlopen() failure" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, SymbolErr, "Symbol not found" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, ServiceErr, "Service Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, SystemErr, "System Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, BuffErr, "Buffer Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, PerDenied, "Permission Denied" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthErr, "Authentication failure" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, CredInsufficient, "Can not access authentication data" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthInfoUnavail, "Authentication Service unavailable" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, UserUnknown, "User not known" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, MaxTries, "Maximum Retries" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, NewAuthTokReqd, "New authentication token required" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AcctExpired, "User account has expired " ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, SessionErr, "Session Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, CredUnavail, " user credentials unavailable" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, CredExpired, "User credentials expired" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, CredErr, "Failure setting user credentials" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, NoModuleData, "No Module Data" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, CovErr, "PAM Conversation Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthOkErr, "Authentication token  error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthTokRecoveryErr, "Auth Token Recover Error" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthTokLockBusy, " Authentication token lock busy" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthTokDisableAging, "Authentication token aging disabled" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, TryAgain, " password required input" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, Ignore, "Ignore account module" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, Abort, "Critical error  Abortion" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, AuthTokExpired, "authentication token expired" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, ModuleUnknown, "module is not known" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, BadItem, "Bad item passed to Security Module" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, ConvAgain, "Conversation again without data" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, Incomplete, "auth stack not called complete" ) \
ENUM_DEFN_UserCredentialResultStatus( UserCredentialResultStatus, Standby, "Default Status" )

#define ENUM_DEFNS_CredentialOperationMode \
\
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, StandbyMode, "Credential operation standby mode" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, AddNewUser, "Add New User" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, RemoveUser, "Remove the existing user" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, ChangePassword, "Change existing user's password" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, UpdateRoleInfo, "Update user's  role bitmap" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, BatchUpdateCredential, "batch update on user credentials" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, ResetCredential, "Remove all credentials" ) \
ENUM_DEFN_CredentialOperationMode( CredentialOperationMode, VerifyUser, "UserName and  Password verification" )

#define ENUM_DEFNS_ConstraintT10BRG \
\
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, OA, "OA" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, MPort, "M Port" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, OA_MPort, "OA+M Port" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, MIP, "M IP" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, OA_MIP, "OA+M IP" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, MPort_MIP, "M Port+M IP" ) \
ENUM_DEFN_ConstraintT10BRG( ConstraintT10BRG, OA_MPort_MIP, "OA+M Port+M IP" )

#define ENUM_DEFNS_ConnectionStateT10BRG \
\
ENUM_DEFN_ConnectionStateT10BRG( ConnectionStateT10BRG, Closed, "Closed" ) \
ENUM_DEFN_ConnectionStateT10BRG( ConnectionStateT10BRG, Testing, "Testing" ) \
ENUM_DEFN_ConnectionStateT10BRG( ConnectionStateT10BRG, Started, "Started" )

#define ENUM_DEFNS_ConnectionMethodT10BRG \
\
ENUM_DEFN_ConnectionMethodT10BRG( ConnectionMethodT10BRG, Method1, "Method 1" ) \
ENUM_DEFN_ConnectionMethodT10BRG( ConnectionMethodT10BRG, Method2, "Method 2" )

#define ENUM_DEFNS_pinPukResult \
\
ENUM_DEFN_pinPukResult( pinPukResult, None, "" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINEntered, "PIN Entered" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINNotEntered, "PIN Not Entered" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINConfirmOK, "PIN Confirm OK" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINConfirmFail, "PIN Confirm Fail" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINWriteSuccess, "PIN Write Success" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINWriteFail, "PIN Write Fail" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINMaxTriesExceeded, "PIN Max Tries Exceeded" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKEntered, "PUK Entered" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKNotEntered, "PUK Not Entered" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKConfirmOK, "PUK Confirm OK" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKConfirmFail, "PUK Confirm Fail" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKWriteSuccess, "PUK Write Success" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKWriteFail, "PUK Write Fail" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKMaxTriesExceeded, "PUK Max Tries Exceeded" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINEntryByCMS, "PIN Entry By CMS" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKEntryByCMS, "PUK Entry By CMS" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PINNotAvailable, "PIN Not Available" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKNotAvailable, "PUK Not Available" ) \
ENUM_DEFN_pinPukResult( pinPukResult, PUKWroteNewPIN, "PIN Write Success" )

#define ENUM_DEFNS_ChangedLog \
\
ENUM_DEFN_ChangedLog( ChangedLog, NoText, "" ) \
ENUM_DEFN_ChangedLog( ChangedLog, Changed, "Changed" )

/**The Enumeration definitions
 * Arguments: type, name, text
 * type        Enumeration type name
 * name        Enumeration value name
 * text        English display string for the enumeration value
 */
#define ENUM_DEFNS \
\
ENUM_DEFN( TimeFormat, 12, "12 Hour" ) \
ENUM_DEFN( TimeFormat, 24, "24 Hour" ) \
ENUM_DEFN( DateFormat, dmy, "dd/mm/yyyy" ) \
ENUM_DEFN( DateFormat, mdy, "mm/dd/yyyy" ) \
ENUM_DEFN( OkFail, Fail, "Fail" ) \
ENUM_DEFN( OkFail, OK, "OK" ) \
ENUM_DEFN( BattTestState, Apply, "Apply" ) \
ENUM_DEFN( BattTestState, Fail, "Fail" ) \
ENUM_DEFN( BattTestState, OK, "OK" ) \
ENUM_DEFN( BattTestState, Testing, "Testing" ) \
ENUM_DEFN( EnDis, Dis, "D" ) \
ENUM_DEFN( EnDis, En, "E" ) \
ENUM_DEFN( RelayState, Lockout, "Lockout" ) \
ENUM_DEFN( RelayState, Pickup, "Pickup" ) \
ENUM_DEFN( RelayState, Ready, "Ready" ) \
ENUM_DEFN( RelayState, Warn, "Warning" ) \
ENUM_DEFN( OkSCct, OK, "OK" ) \
ENUM_DEFN( OkSCct, SCct, "Short Circuit" ) \
ENUM_DEFN( RdyNr, NotRdy, "Not Ready" ) \
ENUM_DEFN( RdyNr, Rdy, "Ready" ) \
ENUM_DEFN( OnOff, Off, "Off" ) \
ENUM_DEFN( OnOff, On, "On" ) \
ENUM_DEFN( AvgPeriod, 10m, "10 minutes" ) \
ENUM_DEFN( AvgPeriod, 15m, "15 minutes" ) \
ENUM_DEFN( AvgPeriod, 1m, "1 minute" ) \
ENUM_DEFN( AvgPeriod, 30m, "30 minutes" ) \
ENUM_DEFN( AvgPeriod, 5m, "5 minutes" ) \
ENUM_DEFN( AvgPeriod, 60m, "60 minutes" ) \
ENUM_DEFN( SysFreq, 50, "50 Hz" ) \
ENUM_DEFN( SysFreq, 60, "60 Hz" ) \
ENUM_DEFN( USense, 1ph, "Single phase" ) \
ENUM_DEFN( USense, 3ph, "Three phase" ) \
ENUM_DEFN( AuxConfig, DC, "DC" ) \
ENUM_DEFN( AuxConfig, Delta, "AC HV Delta" ) \
ENUM_DEFN( AuxConfig, Star, "AC HV Star" ) \
ENUM_DEFN( AlOp, Alarm, "Alarm" ) \
ENUM_DEFN( AlOp, Op, "Operate" ) \
ENUM_DEFN( OpenClose, Close, "Closed" ) \
ENUM_DEFN( OpenClose, NA, "NA" ) \
ENUM_DEFN( OpenClose, Open, "Open" ) \
ENUM_DEFN( TripMode, Alarm, "Alarm" ) \
ENUM_DEFN( TripMode, Count, "Count" ) \
ENUM_DEFN( TripMode, Disable, "Disabled" ) \
ENUM_DEFN( TripMode, Lockout, "Lockout" ) \
ENUM_DEFN( TripMode, Reclose, "Reclose" ) \
ENUM_DEFN( TripMode, Sectionalise, "Sectionalise" ) \
ENUM_DEFN( TtaMode, Cont, "Continuous" ) \
ENUM_DEFN( TtaMode, Trans, "Transient" ) \
ENUM_DEFN( DndMode, Block, "Block" ) \
ENUM_DEFN( DndMode, Trip, "Trip" ) \
ENUM_DEFN( VrcMode, ABC, "ABC" ) \
ENUM_DEFN( VrcMode, Ring, "Ring" ) \
ENUM_DEFN( VrcMode, RST, "RST" ) \
ENUM_DEFN( RatedFreq, 50, "50" ) \
ENUM_DEFN( RatedFreq, 60, "60" ) \
ENUM_DEFN( RatedFreq, Auto, "Auto" ) \
ENUM_DEFN( ScadaTimeIsLocal, No, "GMT/UTC" ) \
ENUM_DEFN( ScadaTimeIsLocal, Yes, "Local" ) \
ENUM_DEFN( EventDataID, 2179, "2179" ) \
ENUM_DEFN( EventDataID, ABC, "ABC" ) \
ENUM_DEFN( EventDataID, ACO, "{arg:0 @195}" ) \
ENUM_DEFN( EventDataID, ActGroup, "Act. Group: {arg:0}" ) \
ENUM_DEFN( EventDataID, AoTopen, "T(open), mins = {arg:0}" ) \
ENUM_DEFN( EventDataID, AoTopenPF, "T(open), secs = {arg:0}" ) \
ENUM_DEFN( EventDataID, APConfigFailure, "AP Config Failure" ) \
ENUM_DEFN( EventDataID, APFailure, "AP Failure" ) \
ENUM_DEFN( EventDataID, APNotFound, "AP Not Found" ) \
ENUM_DEFN( EventDataID, APScanFailure, "AP Scan Failure" ) \
ENUM_DEFN( EventDataID, AutoSync, "Auto-Sync" ) \
ENUM_DEFN( EventDataID, AutoSyncCancelled, "Cancelled" ) \
ENUM_DEFN( EventDataID, AutoSyncFailed, "Failed" ) \
ENUM_DEFN( EventDataID, AutoSyncReleased, "Released" ) \
ENUM_DEFN( EventDataID, BackupLogsFailed, "Logs Backup Failure" ) \
ENUM_DEFN( EventDataID, BackupRelayLog, "Backup Relay Log" ) \
ENUM_DEFN( EventDataID, BackupRelaySettings, "Backup Relay Settings" ) \
ENUM_DEFN( EventDataID, BackupSettingsFailed, "Settings Backup Failure" ) \
ENUM_DEFN( EventDataID, BatteryDisconnected, "Disconnected" ) \
ENUM_DEFN( EventDataID, BatteryFaulty, "Faulty" ) \
ENUM_DEFN( EventDataID, BatteryHealthy, "Healthy" ) \
ENUM_DEFN( EventDataID, BatteryHigh, "High" ) \
ENUM_DEFN( EventDataID, BatteryLow, "Low" ) \
ENUM_DEFN( EventDataID, BatteryNormal, "Normal" ) \
ENUM_DEFN( EventDataID, BatterySuspect, "Suspect" ) \
ENUM_DEFN( EventDataID, BatteryTestACOff, "AC Off" ) \
ENUM_DEFN( EventDataID, BatteryTestBatteryOff, "Battery Off" ) \
ENUM_DEFN( EventDataID, BatteryTestCheckBattery, "Check Battery" ) \
ENUM_DEFN( EventDataID, BatteryTestFailed, "Test Failed" ) \
ENUM_DEFN( EventDataID, BatteryTestFaulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN( EventDataID, BatteryTestNotCharging, "Battery Being Discharged" ) \
ENUM_DEFN( EventDataID, BatteryTestNotPerformed, "Not Performed" ) \
ENUM_DEFN( EventDataID, BatteryTestNotSupported, "Not Supported" ) \
ENUM_DEFN( EventDataID, BatteryTestPassed, "Battery Test Passed" ) \
ENUM_DEFN( EventDataID, BatteryTestResting, "Resting" ) \
ENUM_DEFN( EventDataID, BatteryTestTimeout, "Timeout" ) \
ENUM_DEFN( EventDataID, BatteryTestVoltageTooLow, "Voltage Too Low" ) \
ENUM_DEFN( EventDataID, BnFwd, "Bn FWD, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, BnRev, "Bn REV, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, CannotOverwrite, "Cannot Overwrite" ) \
ENUM_DEFN( EventDataID, CBFIa, "Ia,A={arg:0}" ) \
ENUM_DEFN( EventDataID, CBFIb, "Ib,A={arg:0}" ) \
ENUM_DEFN( EventDataID, CBFIc, "Ic,A={arg:0}" ) \
ENUM_DEFN( EventDataID, CBFIn, "In,A={arg:0}" ) \
ENUM_DEFN( EventDataID, Channel, "Channel" ) \
ENUM_DEFN( EventDataID, ChannelRegionFailed, "Channel Region Failed" ) \
ENUM_DEFN( EventDataID, CloseOpenLog, "Close/Open Log" ) \
ENUM_DEFN( EventDataID, CloseRequestFail0, "OSM Not Connected" ) \
ENUM_DEFN( EventDataID, CloseRequestFail1, "Mechanically Locked" ) \
ENUM_DEFN( EventDataID, CloseRequestFail2, "Command Pending" ) \
ENUM_DEFN( EventDataID, CloseRequestFail3, "Faulty Actuator" ) \
ENUM_DEFN( EventDataID, CloseRequestFail4, "Mechanism Failure" ) \
ENUM_DEFN( EventDataID, CloseRequestFail5, "Duty Cycle Exceeded" ) \
ENUM_DEFN( EventDataID, CloseRequestFail6, "Close Cap Not Ok" ) \
ENUM_DEFN( EventDataID, CloseRequestFail7, "Trip Cap Not OK" ) \
ENUM_DEFN( EventDataID, CloseRequestFail8, "Already Closed" ) \
ENUM_DEFN( EventDataID, CloseRequestFail9, "Excess Actuator Current Draw" ) \
ENUM_DEFN( EventDataID, CMS, "CMS" ) \
ENUM_DEFN( EventDataID, CommsError, "Comms Error" ) \
ENUM_DEFN( EventDataID, DbAccessFail, "Database Access Failure" ) \
ENUM_DEFN( EventDataID, DbSchema, "DB Schema" ) \
ENUM_DEFN( EventDataID, DeviceNotReady, "Device Not Ready" ) \
ENUM_DEFN( EventDataID, Disabled, "Disabled" ) \
ENUM_DEFN( EventDataID, DiscFull, "Disc Full" ) \
ENUM_DEFN( EventDataID, Distance, "FltDiskm, km={iarg:0 *1/10 .1}" ) \
ENUM_DEFN( EventDataID, DNP3, "DNP3" ) \
ENUM_DEFN( EventDataID, Dnp3BinaryControlWatchDog, "DNP3 Binary Control Watchdog" ) \
ENUM_DEFN( EventDataID, Dnp3PollWatchDog, "DNP3 Poll Watchdog" ) \
ENUM_DEFN( EventDataID, EFF, "EF+" ) \
ENUM_DEFN( EventDataID, EFR, "EF-" ) \
ENUM_DEFN( EventDataID, ErrorMsgId, "ID {arg:0}" ) \
ENUM_DEFN( EventDataID, ErrorMsgNumber, "Code {arg:0}" ) \
ENUM_DEFN( EventDataID, EventLog, "Event Log" ) \
ENUM_DEFN( EventDataID, ExceptionFPE, "Floating Point Exception" ) \
ENUM_DEFN( EventDataID, Fail, "Fail" ) \
ENUM_DEFN( EventDataID, Failed, "Failed" ) \
ENUM_DEFN( EventDataID, FailedBooting, "Failed Booting" ) \
ENUM_DEFN( EventDataID, FailedInitialisation, "Failed Initialisation" ) \
ENUM_DEFN( EventDataID, FailedLoadingFirmware, "Failed Loading Firmware" ) \
ENUM_DEFN( EventDataID, FaultedLoopImpedance, "ZLoop∡θLoop, Ω={iarg:0 *1/10 .1}∡{ia" ) \
ENUM_DEFN( EventDataID, FaultedLoopImpedanceTheta, "θLoop={iarg:0 *1/10 .1}°" ) \
ENUM_DEFN( EventDataID, FaultedLoopImpedanceZ, "ZLoop Ω={iarg:0 *1/10 .1}" ) \
ENUM_DEFN( EventDataID, FaultImpedance, "Zf∡θf, Ω={iarg:0 *1/10 .1}∡{iarg:1 *" ) \
ENUM_DEFN( EventDataID, FaultImpedanceTheta, "θf={iarg:0 *1/10 .1}°" ) \
ENUM_DEFN( EventDataID, FaultImpedanceZ, "Zf Ω={iarg:0 *1/10 .1}" ) \
ENUM_DEFN( EventDataID, FaultLog, "Fault Log" ) \
ENUM_DEFN( EventDataID, FileIoError, "Internal File System Error" ) \
ENUM_DEFN( EventDataID, FileSysMismatch, "Incompatible File System" ) \
ENUM_DEFN( EventDataID, FreezeI, "Imax, A={arg:0 *1/4}" ) \
ENUM_DEFN( EventDataID, FreqMax, "Max Freq, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, FreqMin, "Min Freq, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, FreqOp, "Freq Op, Hz={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, GnFwd, "Gn FWD, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, GnRev, "Gn REV, mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, GpioFirmware, "GPIO Firmware" ) \
ENUM_DEFN( EventDataID, GPS, "GPS" ) \
ENUM_DEFN( EventDataID, HangupDcd, "DCD" ) \
ENUM_DEFN( EventDataID, HangupInactive, "Inactive" ) \
ENUM_DEFN( EventDataID, HangupMaxDuration, "Max Call Duration" ) \
ENUM_DEFN( EventDataID, HarmonicsLog, "Harmonics Log" ) \
ENUM_DEFN( EventDataID, HmiResource, "Language" ) \
ENUM_DEFN( EventDataID, HrmI10th, "I10" ) \
ENUM_DEFN( EventDataID, HrmI11th, "I11" ) \
ENUM_DEFN( EventDataID, HrmI12th, "I12" ) \
ENUM_DEFN( EventDataID, HrmI13th, "I13" ) \
ENUM_DEFN( EventDataID, HrmI14th, "I14" ) \
ENUM_DEFN( EventDataID, HrmI15th, "I15" ) \
ENUM_DEFN( EventDataID, HrmI16th, "I16" ) \
ENUM_DEFN( EventDataID, HrmI17th, "I17" ) \
ENUM_DEFN( EventDataID, HrmI18th, "I18" ) \
ENUM_DEFN( EventDataID, HrmI19th, "I19" ) \
ENUM_DEFN( EventDataID, HrmI20th, "I20" ) \
ENUM_DEFN( EventDataID, HrmI21st, "I21" ) \
ENUM_DEFN( EventDataID, HrmI22nd, "I22" ) \
ENUM_DEFN( EventDataID, HrmI23rd, "I23" ) \
ENUM_DEFN( EventDataID, HrmI24th, "I24" ) \
ENUM_DEFN( EventDataID, HrmI25th, "I25" ) \
ENUM_DEFN( EventDataID, HrmI26th, "I26" ) \
ENUM_DEFN( EventDataID, HrmI27th, "I27" ) \
ENUM_DEFN( EventDataID, HrmI28th, "I28" ) \
ENUM_DEFN( EventDataID, HrmI29th, "I29" ) \
ENUM_DEFN( EventDataID, HrmI2nd, "I2" ) \
ENUM_DEFN( EventDataID, HrmI30th, "I30" ) \
ENUM_DEFN( EventDataID, HrmI31st, "I31" ) \
ENUM_DEFN( EventDataID, HrmI32nd, "I32" ) \
ENUM_DEFN( EventDataID, HrmI33rd, "I33" ) \
ENUM_DEFN( EventDataID, HrmI34th, "I34" ) \
ENUM_DEFN( EventDataID, HrmI35th, "I35" ) \
ENUM_DEFN( EventDataID, HrmI36th, "I36" ) \
ENUM_DEFN( EventDataID, HrmI37th, "I37" ) \
ENUM_DEFN( EventDataID, HrmI38th, "I38" ) \
ENUM_DEFN( EventDataID, HrmI39th, "I39" ) \
ENUM_DEFN( EventDataID, HrmI3rd, "I3" ) \
ENUM_DEFN( EventDataID, HrmI40th, "I40" ) \
ENUM_DEFN( EventDataID, HrmI41st, "I41" ) \
ENUM_DEFN( EventDataID, HrmI42nd, "I42" ) \
ENUM_DEFN( EventDataID, HrmI43rd, "I43" ) \
ENUM_DEFN( EventDataID, HrmI44th, "I44" ) \
ENUM_DEFN( EventDataID, HrmI45th, "I45" ) \
ENUM_DEFN( EventDataID, HrmI46th, "I46" ) \
ENUM_DEFN( EventDataID, HrmI47th, "I47" ) \
ENUM_DEFN( EventDataID, HrmI48th, "I48" ) \
ENUM_DEFN( EventDataID, HrmI49th, "I49" ) \
ENUM_DEFN( EventDataID, HrmI4th, "I4" ) \
ENUM_DEFN( EventDataID, HrmI50th, "I50" ) \
ENUM_DEFN( EventDataID, HrmI51st, "I51" ) \
ENUM_DEFN( EventDataID, HrmI52nd, "I52" ) \
ENUM_DEFN( EventDataID, HrmI53rd, "I53" ) \
ENUM_DEFN( EventDataID, HrmI54th, "I54" ) \
ENUM_DEFN( EventDataID, HrmI55th, "I55" ) \
ENUM_DEFN( EventDataID, HrmI56th, "I56" ) \
ENUM_DEFN( EventDataID, HrmI57th, "I57" ) \
ENUM_DEFN( EventDataID, HrmI58th, "I58" ) \
ENUM_DEFN( EventDataID, HrmI59th, "I59" ) \
ENUM_DEFN( EventDataID, HrmI5th, "I5" ) \
ENUM_DEFN( EventDataID, HrmI60th, "I60" ) \
ENUM_DEFN( EventDataID, HrmI61st, "I61" ) \
ENUM_DEFN( EventDataID, HrmI62nd, "I62" ) \
ENUM_DEFN( EventDataID, HrmI63rd, "I63" ) \
ENUM_DEFN( EventDataID, HrmI6th, "I6" ) \
ENUM_DEFN( EventDataID, HrmI7th, "I7" ) \
ENUM_DEFN( EventDataID, HrmI8th, "I8" ) \
ENUM_DEFN( EventDataID, HrmI9th, "I9" ) \
ENUM_DEFN( EventDataID, HrmIn10th, "In10" ) \
ENUM_DEFN( EventDataID, HrmIn11th, "In11" ) \
ENUM_DEFN( EventDataID, HrmIn12th, "In12" ) \
ENUM_DEFN( EventDataID, HrmIn13th, "In13" ) \
ENUM_DEFN( EventDataID, HrmIn14th, "In14" ) \
ENUM_DEFN( EventDataID, HrmIn15th, "In15" ) \
ENUM_DEFN( EventDataID, HrmIn16th, "In16" ) \
ENUM_DEFN( EventDataID, HrmIn17th, "In17" ) \
ENUM_DEFN( EventDataID, HrmIn18th, "In18" ) \
ENUM_DEFN( EventDataID, HrmIn19th, "In19" ) \
ENUM_DEFN( EventDataID, HrmIn20th, "In20" ) \
ENUM_DEFN( EventDataID, HrmIn21st, "In21" ) \
ENUM_DEFN( EventDataID, HrmIn22nd, "In22" ) \
ENUM_DEFN( EventDataID, HrmIn23rd, "In23" ) \
ENUM_DEFN( EventDataID, HrmIn24th, "In24" ) \
ENUM_DEFN( EventDataID, HrmIn25th, "In25" ) \
ENUM_DEFN( EventDataID, HrmIn26th, "In26" ) \
ENUM_DEFN( EventDataID, HrmIn27th, "In27" ) \
ENUM_DEFN( EventDataID, HrmIn28th, "In28" ) \
ENUM_DEFN( EventDataID, HrmIn29th, "In29" ) \
ENUM_DEFN( EventDataID, HrmIn2nd, "In2" ) \
ENUM_DEFN( EventDataID, HrmIn30th, "In30" ) \
ENUM_DEFN( EventDataID, HrmIn31st, "In31" ) \
ENUM_DEFN( EventDataID, HrmIn32nd, "In32" ) \
ENUM_DEFN( EventDataID, HrmIn33rd, "In33" ) \
ENUM_DEFN( EventDataID, HrmIn34th, "In34" ) \
ENUM_DEFN( EventDataID, HrmIn35th, "In35" ) \
ENUM_DEFN( EventDataID, HrmIn36th, "In36" ) \
ENUM_DEFN( EventDataID, HrmIn37th, "In37" ) \
ENUM_DEFN( EventDataID, HrmIn38th, "In38" ) \
ENUM_DEFN( EventDataID, HrmIn39th, "In39" ) \
ENUM_DEFN( EventDataID, HrmIn3rd, "In3" ) \
ENUM_DEFN( EventDataID, HrmIn40th, "In40" ) \
ENUM_DEFN( EventDataID, HrmIn41st, "In41" ) \
ENUM_DEFN( EventDataID, HrmIn42nd, "In42" ) \
ENUM_DEFN( EventDataID, HrmIn43rd, "In43" ) \
ENUM_DEFN( EventDataID, HrmIn44th, "In44" ) \
ENUM_DEFN( EventDataID, HrmIn45th, "In45" ) \
ENUM_DEFN( EventDataID, HrmIn46th, "In46" ) \
ENUM_DEFN( EventDataID, HrmIn47th, "In47" ) \
ENUM_DEFN( EventDataID, HrmIn48th, "In48" ) \
ENUM_DEFN( EventDataID, HrmIn49th, "In49" ) \
ENUM_DEFN( EventDataID, HrmIn4th, "In4" ) \
ENUM_DEFN( EventDataID, HrmIn50th, "In50" ) \
ENUM_DEFN( EventDataID, HrmIn51st, "In51" ) \
ENUM_DEFN( EventDataID, HrmIn52nd, "In52" ) \
ENUM_DEFN( EventDataID, HrmIn53rd, "In53" ) \
ENUM_DEFN( EventDataID, HrmIn54th, "In54" ) \
ENUM_DEFN( EventDataID, HrmIn55th, "In55" ) \
ENUM_DEFN( EventDataID, HrmIn56th, "In56" ) \
ENUM_DEFN( EventDataID, HrmIn57th, "In57" ) \
ENUM_DEFN( EventDataID, HrmIn58th, "In58" ) \
ENUM_DEFN( EventDataID, HrmIn59th, "In59" ) \
ENUM_DEFN( EventDataID, HrmIn5th, "In5" ) \
ENUM_DEFN( EventDataID, HrmIn60th, "In60" ) \
ENUM_DEFN( EventDataID, HrmIn61st, "In61" ) \
ENUM_DEFN( EventDataID, HrmIn62nd, "In62" ) \
ENUM_DEFN( EventDataID, HrmIn63rd, "In63" ) \
ENUM_DEFN( EventDataID, HrmIn6th, "In6" ) \
ENUM_DEFN( EventDataID, HrmIn7th, "In7" ) \
ENUM_DEFN( EventDataID, HrmIn8th, "In8" ) \
ENUM_DEFN( EventDataID, HrmIn9th, "In9" ) \
ENUM_DEFN( EventDataID, HrmIndA_op, "HRM, A={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmIndB_op, "HRM, B={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmIndC_op, "HRM, C={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmIndD_op, "HRM, D={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmIndE_op, "HRM, E={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmTDD_op, "HRM, TDD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmTHD_op, "HRM, THD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, HrmV10th, "V10" ) \
ENUM_DEFN( EventDataID, HrmV11th, "V11" ) \
ENUM_DEFN( EventDataID, HrmV12th, "V12" ) \
ENUM_DEFN( EventDataID, HrmV13th, "V13" ) \
ENUM_DEFN( EventDataID, HrmV14th, "V14" ) \
ENUM_DEFN( EventDataID, HrmV15th, "V15" ) \
ENUM_DEFN( EventDataID, HrmV16th, "V16" ) \
ENUM_DEFN( EventDataID, HrmV17th, "V17" ) \
ENUM_DEFN( EventDataID, HrmV18th, "V18" ) \
ENUM_DEFN( EventDataID, HrmV19th, "V19" ) \
ENUM_DEFN( EventDataID, HrmV20th, "V20" ) \
ENUM_DEFN( EventDataID, HrmV21st, "V21" ) \
ENUM_DEFN( EventDataID, HrmV22nd, "V22" ) \
ENUM_DEFN( EventDataID, HrmV23rd, "V23" ) \
ENUM_DEFN( EventDataID, HrmV24th, "V24" ) \
ENUM_DEFN( EventDataID, HrmV25th, "V25" ) \
ENUM_DEFN( EventDataID, HrmV26th, "V26" ) \
ENUM_DEFN( EventDataID, HrmV27th, "V27" ) \
ENUM_DEFN( EventDataID, HrmV28th, "V28" ) \
ENUM_DEFN( EventDataID, HrmV29th, "V29" ) \
ENUM_DEFN( EventDataID, HrmV2nd, "V2" ) \
ENUM_DEFN( EventDataID, HrmV30th, "V30" ) \
ENUM_DEFN( EventDataID, HrmV31st, "V31" ) \
ENUM_DEFN( EventDataID, HrmV32nd, "V32" ) \
ENUM_DEFN( EventDataID, HrmV33rd, "V33" ) \
ENUM_DEFN( EventDataID, HrmV34th, "V34" ) \
ENUM_DEFN( EventDataID, HrmV35th, "V35" ) \
ENUM_DEFN( EventDataID, HrmV36th, "V36" ) \
ENUM_DEFN( EventDataID, HrmV37th, "V37" ) \
ENUM_DEFN( EventDataID, HrmV38th, "V38" ) \
ENUM_DEFN( EventDataID, HrmV39th, "V39" ) \
ENUM_DEFN( EventDataID, HrmV3rd, "V3" ) \
ENUM_DEFN( EventDataID, HrmV40th, "V40" ) \
ENUM_DEFN( EventDataID, HrmV41st, "V41" ) \
ENUM_DEFN( EventDataID, HrmV42nd, "V42" ) \
ENUM_DEFN( EventDataID, HrmV43rd, "V43" ) \
ENUM_DEFN( EventDataID, HrmV44th, "V44" ) \
ENUM_DEFN( EventDataID, HrmV45th, "V45" ) \
ENUM_DEFN( EventDataID, HrmV46th, "V46" ) \
ENUM_DEFN( EventDataID, HrmV47th, "V47" ) \
ENUM_DEFN( EventDataID, HrmV48th, "V48" ) \
ENUM_DEFN( EventDataID, HrmV49th, "V49" ) \
ENUM_DEFN( EventDataID, HrmV4th, "V4" ) \
ENUM_DEFN( EventDataID, HrmV50th, "V50" ) \
ENUM_DEFN( EventDataID, HrmV51st, "V51" ) \
ENUM_DEFN( EventDataID, HrmV52nd, "V52" ) \
ENUM_DEFN( EventDataID, HrmV53rd, "V53" ) \
ENUM_DEFN( EventDataID, HrmV54th, "V54" ) \
ENUM_DEFN( EventDataID, HrmV55th, "V55" ) \
ENUM_DEFN( EventDataID, HrmV56th, "V56" ) \
ENUM_DEFN( EventDataID, HrmV57th, "V57" ) \
ENUM_DEFN( EventDataID, HrmV58th, "V58" ) \
ENUM_DEFN( EventDataID, HrmV59th, "V59" ) \
ENUM_DEFN( EventDataID, HrmV5th, "V5" ) \
ENUM_DEFN( EventDataID, HrmV60th, "V60" ) \
ENUM_DEFN( EventDataID, HrmV61st, "V61" ) \
ENUM_DEFN( EventDataID, HrmV62nd, "V62" ) \
ENUM_DEFN( EventDataID, HrmV63rd, "V63" ) \
ENUM_DEFN( EventDataID, HrmV6th, "V6" ) \
ENUM_DEFN( EventDataID, HrmV7th, "V7" ) \
ENUM_DEFN( EventDataID, HrmV8th, "V8" ) \
ENUM_DEFN( EventDataID, HrmV9th, "V9" ) \
ENUM_DEFN( EventDataID, I2I1op, "Iop, I2/I1={arg:0 *1/1000}%" ) \
ENUM_DEFN( EventDataID, IDE, "IDE" ) \
ENUM_DEFN( EventDataID, IEC60870, "IEC 60870" ) \
ENUM_DEFN( EventDataID, IEC61499AppFailedFBOOT, "Failed FBOOT" ) \
ENUM_DEFN( EventDataID, IEC61499AppMissingFBOOT, "Missing FBOOT" ) \
ENUM_DEFN( EventDataID, IEC61499ExternEvtLim, "SGA External Events Limit" ) \
ENUM_DEFN( EventDataID, IEC61499InternEvtLim, "SGA Internal Events Limit" ) \
ENUM_DEFN( EventDataID, IEC61499ResourceLimit, "SGA Resource Limit" ) \
ENUM_DEFN( EventDataID, IEC61850, "IEC 61850" ) \
ENUM_DEFN( EventDataID, IEC61850GoosePub, "IEC 61850 GOOSE Publisher" ) \
ENUM_DEFN( EventDataID, IEC61850GooseSub, "IEC 61850 GOOSE Subscriber" ) \
ENUM_DEFN( EventDataID, IEC61850MMS, "IEC 61850 MMS" ) \
ENUM_DEFN( EventDataID, InitialisationFailed, "Initialisation Failed" ) \
ENUM_DEFN( EventDataID, InterruptionsLog, "Interruptions Log" ) \
ENUM_DEFN( EventDataID, Invalid, "Invalid" ) \
ENUM_DEFN( EventDataID, InvalidChannel, "Invalid Channel" ) \
ENUM_DEFN( EventDataID, InvalidDbVersion, "Invalid Database Version" ) \
ENUM_DEFN( EventDataID, InvalidMicrokernel, "Invalid Microkernel" ) \
ENUM_DEFN( EventDataID, InvalidRFBand, "Invalid RF Band" ) \
ENUM_DEFN( EventDataID, InvalidUpdateFile, "Invalid Update File" ) \
ENUM_DEFN( EventDataID, InvalidUser, "Invalid User name or Password" ) \
ENUM_DEFN( EventDataID, IO1, "IO1" ) \
ENUM_DEFN( EventDataID, IO2, "IO2" ) \
ENUM_DEFN( EventDataID, IO3, "IO3" ) \
ENUM_DEFN( EventDataID, IO4, "IO4" ) \
ENUM_DEFN( EventDataID, Iop, "Iop, A={arg:0}" ) \
ENUM_DEFN( EventDataID, Iop_mA, "Iop, A={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, JoiningAPFailure, "Joining AP Failure" ) \
ENUM_DEFN( EventDataID, LangEnglish, "English" ) \
ENUM_DEFN( EventDataID, LangEnglishUS, "US English" ) \
ENUM_DEFN( EventDataID, LangPolish, "Polish" ) \
ENUM_DEFN( EventDataID, LangPortuguese, "Portuguese" ) \
ENUM_DEFN( EventDataID, LangRomanian, "Romanian" ) \
ENUM_DEFN( EventDataID, LangRussian, "Russian" ) \
ENUM_DEFN( EventDataID, LangSpanish, "Spanish" ) \
ENUM_DEFN( EventDataID, LangTurkish, "Turkish" ) \
ENUM_DEFN( EventDataID, LineSupplyStatusDisconnected, "Disconnected" ) \
ENUM_DEFN( EventDataID, LineSupplyStatusHigh, "High" ) \
ENUM_DEFN( EventDataID, LineSupplyStatusLo, "Low" ) \
ENUM_DEFN( EventDataID, LineSupplyStatusNormal, "Normal" ) \
ENUM_DEFN( EventDataID, LineSupplyStatusSurge, "Surge" ) \
ENUM_DEFN( EventDataID, LoadProfileLog, "Load Profile Log" ) \
ENUM_DEFN( EventDataID, LogicState, "Logic State" ) \
ENUM_DEFN( EventDataID, LoSeq2, "79-2 LO" ) \
ENUM_DEFN( EventDataID, LoSeq3, "79-3 LO" ) \
ENUM_DEFN( EventDataID, MalfunctionsLog, "Malfunctions Log" ) \
ENUM_DEFN( EventDataID, MaxBnFwd, "Max(Bn FWD), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, MaxGnFwd, "Max(Gn FWD), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, MaxHrmIndA, "Max(HRM), A={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmIndB, "Max(HRM), B={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmIndC, "Max(HRM), C={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmIndD, "Max(HRM), D={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmIndE, "Max(HRM), E={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmTDD, "Max(HRM), TDD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxHrmTHD, "Max(HRM), THD={arg:0 *1/10000 .1}%" ) \
ENUM_DEFN( EventDataID, MaxI2, "Max(I2), A={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxI2I1, "Max(I2/I1)={arg:0 *1/1000}%" ) \
ENUM_DEFN( EventDataID, MaxIa, "Max(Ia), A={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxIb, "Max(Ib), A={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxIc, "Max(Ic), A={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxIn, "Max(In), A={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxIn_mA, "Max(In), A={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxPDOP, "Max(PDOP), kVA={arg:0}" ) \
ENUM_DEFN( EventDataID, MaxROCOF, "Max(ROCOF), Hz/s={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxU1, "Max(U1), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxU2, "Max(U2), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUa, "Max(Ua), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUab, "Max(Uab), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUb, "Max(Ub), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUbc, "Max(Ubc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUc, "Max(Uc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUca, "Max(Uca), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUn, "Max(Un), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUr, "Max(Ur), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUs, "Max(Us), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxUt, "Max(Ut), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MaxVVS, "Max(VVS), °={arg:0 *1/1000}" ) \
ENUM_DEFN( EventDataID, MicrokernelFirmware, "Microkernel Firmware" ) \
ENUM_DEFN( EventDataID, MinBnRev, "Min(Bn REV), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, MinGnRev, "Min(Gn REV), mSi={iarg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, MinPDUP, "Min(PDUP), kVA={arg:0}" ) \
ENUM_DEFN( EventDataID, MinU1, "Min(U1), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUa, "Min(Ua), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUab, "Min(Uab), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUb, "Min(Ub), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUbc, "Min(Ubc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUc, "Min(Uc), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUca, "Min(Uca), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUr, "Min(Ur), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUs, "Min(Us), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MinUt, "Min(Ut), kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, MissingDependency, "Incompatible Files" ) \
ENUM_DEFN( EventDataID, MODEM, "Mobile Network Modem" ) \
ENUM_DEFN( EventDataID, ModuleBootloadFault, "Bootloader CRC" ) \
ENUM_DEFN( EventDataID, ModuleFaultBatteryCharger, "Battery Charger" ) \
ENUM_DEFN( EventDataID, ModuleFaultPowerOutputs, "Power Outputs" ) \
ENUM_DEFN( EventDataID, ModuleFaultUpdate, "Update" ) \
ENUM_DEFN( EventDataID, ModuleFlashFault, "Flash" ) \
ENUM_DEFN( EventDataID, ModuleFmFault, "Firmware CRC" ) \
ENUM_DEFN( EventDataID, ModuleIncorrectSWFault, "Incorrect Software" ) \
ENUM_DEFN( EventDataID, ModuleManufFault, "Invalid Manufacturing Details" ) \
ENUM_DEFN( EventDataID, ModulePsFault, "Power Supply" ) \
ENUM_DEFN( EventDataID, ModuleRamFault, "Ram" ) \
ENUM_DEFN( EventDataID, ModuleTempFault, "Temp Sensor" ) \
ENUM_DEFN( EventDataID, NAN, "NAN" ) \
ENUM_DEFN( EventDataID, NoFiles, "No Files" ) \
ENUM_DEFN( EventDataID, NoSerialNum, "No Serial Number" ) \
ENUM_DEFN( EventDataID, OCLM, "OCLM={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, Off, "Off" ) \
ENUM_DEFN( EventDataID, OIRM, "OIRM={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, On, "On" ) \
ENUM_DEFN( EventDataID, OperationFault0, "Close Volt Drop Too High" ) \
ENUM_DEFN( EventDataID, OperationFault1, "Trip Volt Drop Too High" ) \
ENUM_DEFN( EventDataID, OperationFault2, "Trip Volt Drop On Close" ) \
ENUM_DEFN( EventDataID, OscAlarm, "Osc Alarm" ) \
ENUM_DEFN( EventDataID, OscClose, "Osc Close" ) \
ENUM_DEFN( EventDataID, OscIOInputs, "Osc IO Inputs" ) \
ENUM_DEFN( EventDataID, OscLogic, "Osc Logic" ) \
ENUM_DEFN( EventDataID, OscPickup, "Osc Pickup" ) \
ENUM_DEFN( EventDataID, OscProtOperation, "Protection Operation Oscillography" ) \
ENUM_DEFN( EventDataID, OscTrip, "Trip(Osc)" ) \
ENUM_DEFN( EventDataID, OsmLimitCloseFailedClosed, "Close Limit Switch Failed Closed" ) \
ENUM_DEFN( EventDataID, OsmLimitCloseFailedOpen, "Close Limit Switch Failed Open" ) \
ENUM_DEFN( EventDataID, OsmLimitCloseMechFailedClosed, "Close & M.Ilock Lim.Sw Failed Closed" ) \
ENUM_DEFN( EventDataID, OsmLimitCloseOpenFailedClosed, "Close & Open Limit Sw Failed Closed" ) \
ENUM_DEFN( EventDataID, OsmLimitOpenFailedClosed, "Open Limit Switch Failed Closed" ) \
ENUM_DEFN( EventDataID, OsmLimitOpenFailedOpen, "Open Limit Switch Failed Open" ) \
ENUM_DEFN( EventDataID, OutOfRange, "Out of Range" ) \
ENUM_DEFN( EventDataID, OV3, "OV3" ) \
ENUM_DEFN( EventDataID, OV3abc, "OV3(ABC)" ) \
ENUM_DEFN( EventDataID, OV3rst, "OV3(RST)" ) \
ENUM_DEFN( EventDataID, Overload, "Overload" ) \
ENUM_DEFN( EventDataID, P2PComms, "P2PComms" ) \
ENUM_DEFN( EventDataID, Panel, "Panel" ) \
ENUM_DEFN( EventDataID, PasswordMissing, "Password Missing" ) \
ENUM_DEFN( EventDataID, PDCAddr, "PDC, addr={arg:0}" ) \
ENUM_DEFN( EventDataID, PDCPort, "port={arg:0}" ) \
ENUM_DEFN( EventDataID, PDOP_op, "PDOP, kVA={arg:0}" ) \
ENUM_DEFN( EventDataID, PDOPAngle, "θPDOP, °={iarg:0 *1/10 .1}" ) \
ENUM_DEFN( EventDataID, PDUP_op, "PDUP, kVA={arg:0}" ) \
ENUM_DEFN( EventDataID, PDUPAngle, "θPDUP, °={iarg:0 *1/10 .1}" ) \
ENUM_DEFN( EventDataID, ProtStatus, "{arg:0}" ) \
ENUM_DEFN( EventDataID, PscFirmware, "PSC firmware update" ) \
ENUM_DEFN( EventDataID, QueryFWVerFailed, "Query FW Ver Failed" ) \
ENUM_DEFN( EventDataID, QueryMACFailed, "Query MAC Failed" ) \
ENUM_DEFN( EventDataID, RecoveryFs, "No File System" ) \
ENUM_DEFN( EventDataID, RecoveryLaunch, "Startup Error" ) \
ENUM_DEFN( EventDataID, RecoveryUser, "User Request" ) \
ENUM_DEFN( EventDataID, Rel03ModuleFault, "REL-03 Module Fault" ) \
ENUM_DEFN( EventDataID, Rel15_4G_ModuleFault, "REL-15-4G Module Fault" ) \
ENUM_DEFN( EventDataID, Rel15ModuleFault, "REL-15 Module Fault" ) \
ENUM_DEFN( EventDataID, RelayCalibIa, "Relay Ia is calibrated" ) \
ENUM_DEFN( EventDataID, RelayCalibIb, "Relay Ib is calibrated" ) \
ENUM_DEFN( EventDataID, RelayFirmware, "Relay Firmware" ) \
ENUM_DEFN( EventDataID, RelayLog, "Relay Log" ) \
ENUM_DEFN( EventDataID, RelayNotCalibIa, "Relay Ia  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIaHigh, "Relay Ia High  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIb, "Relay Ib  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIbHigh, "Relay Ib High is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIc, "Relay Ic  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIcHigh, "Relay Ic High  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibIn, "Relay In  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVa, "Relay Va  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVb, "Relay Vb  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVc, "Relay Vc  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVr, "Relay Vr  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVs, "Relay Vs  is not calibrated." ) \
ENUM_DEFN( EventDataID, RelayNotCalibVt, "Relay Vt  is not calibrated" ) \
ENUM_DEFN( EventDataID, RelaySettings, "Relay Settings" ) \
ENUM_DEFN( EventDataID, Remote, "Remote Dial In" ) \
ENUM_DEFN( EventDataID, RemoveBackupFailed, "Remove Backup Failure" ) \
ENUM_DEFN( EventDataID, ROCOF_op, "ROCOF, Hz/s={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, RS232, "RS232" ) \
ENUM_DEFN( EventDataID, RS232P, "RS232P" ) \
ENUM_DEFN( EventDataID, RST, "RST" ) \
ENUM_DEFN( EventDataID, RTCFaulty, "RTC is faulty." ) \
ENUM_DEFN( EventDataID, RTCNotSync, "RTC is not synchronized" ) \
ENUM_DEFN( EventDataID, SagSwellLog, "Sags/Swells Log" ) \
ENUM_DEFN( EventDataID, SEFF, "SEF+" ) \
ENUM_DEFN( EventDataID, SEFR, "SEF-" ) \
ENUM_DEFN( EventDataID, SerialNumber, "Serial Number" ) \
ENUM_DEFN( EventDataID, SetRFFrequencyFailed, "Set RF Frequency Failed" ) \
ENUM_DEFN( EventDataID, SettingPasswordFailed, "Setting Password Failed" ) \
ENUM_DEFN( EventDataID, SettingRFFailed, "Setting RF Failed" ) \
ENUM_DEFN( EventDataID, SettingsLog, "Settings Log" ) \
ENUM_DEFN( EventDataID, SettingTXPowerFailed, "Setting TX Power Failed" ) \
ENUM_DEFN( EventDataID, SIM01, "SIM01" ) \
ENUM_DEFN( EventDataID, SIM02, "SIM02" ) \
ENUM_DEFN( EventDataID, SIM03, "SIM03" ) \
ENUM_DEFN( EventDataID, SIM20, "SIM20" ) \
ENUM_DEFN( EventDataID, SIMBlocked, "SIM Blocked" ) \
ENUM_DEFN( EventDataID, SimCalibAll, "All SIM coefficients are calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIa, "SIM Ia is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIaHi, "SIM Ia (High) is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIb, "SIM Ib is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIbHi, "SIM Ib (High) is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIc, "SIM Ic is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIcHi, "SIM Ic (High) is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibIn, "SIM In is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibrated, "Calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibratedCorrupted, "Cal Values Corrupted" ) \
ENUM_DEFN( EventDataID, SimCalibUa, "SIM Ua is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibUb, "SIM Ub is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibUc, "SIM Uc is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibUr, "SIM Ur is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibUs, "SIM Us is calibrated" ) \
ENUM_DEFN( EventDataID, SimCalibUt, "SIM Ut is calibrated" ) \
ENUM_DEFN( EventDataID, SIMCardBlockedPerm, "SIM Card Blocked permanently" ) \
ENUM_DEFN( EventDataID, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN( EventDataID, SIMCardPUKError, "SIM Card PUK Error" ) \
ENUM_DEFN( EventDataID, SimFirmware, "SIM Firmware" ) \
ENUM_DEFN( EventDataID, SimNotCalibIa, "Sim Ia is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIaHigh, "Sim  Ia High is not  calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIb, "Sim Ib is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIbHigh, "Sim Ib  High is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIc, "Sim  Ic is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIcHigh, "Sim Ic  High is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibIn, "Sim In  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibrated, "Not Calibrated" ) \
ENUM_DEFN( EventDataID, SimNotCalibVa, "Sim Va  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibVb, "Sim Vb  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibVc, "Sim Vc  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibVr, "Sim Vr  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibVs, "Sim Vs  is not calibrated." ) \
ENUM_DEFN( EventDataID, SimNotCalibVt, "Sim Vt  is not calibrated." ) \
ENUM_DEFN( EventDataID, SIMPINError, "SIM PIN Error" ) \
ENUM_DEFN( EventDataID, SIMPINRequired, "SIM PIN Required" ) \
ENUM_DEFN( EventDataID, SIMPUKRequired, "SIM PUK Required" ) \
ENUM_DEFN( EventDataID, simStepCnt, "Simulation step {arg:0}" ) \
ENUM_DEFN( EventDataID, SmpShutdownError, "Internal Error" ) \
ENUM_DEFN( EventDataID, SmpShutdownPower, "Power Supply" ) \
ENUM_DEFN( EventDataID, SmpShutdownSwitchgearType, "OSM Model Change" ) \
ENUM_DEFN( EventDataID, SmpShutdownUser, "User Shutdown" ) \
ENUM_DEFN( EventDataID, SourceUnhealthy, "Source Not Healthy" ) \
ENUM_DEFN( EventDataID, SSIDMismatch, "SSID Mismatch" ) \
ENUM_DEFN( EventDataID, SSTControl_Tst, "Tst, s={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, Stop, "Stop" ) \
ENUM_DEFN( EventDataID, String, "{arg:0}" ) \
ENUM_DEFN( EventDataID, Success, "Success" ) \
ENUM_DEFN( EventDataID, SwgCalibAll, "All sw. coefficients are calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibIa, "Switchgear Ia is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibIb, "Switchgear Ib is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibIc, "Switchgear Ic is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibIn, "Switchgear In is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUa, "Switchgear Ua is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUb, "Switchgear Ub is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUc, "Switchgear Uc is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUr, "Switchgear Ur is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUs, "Switchgear Us is calibrated" ) \
ENUM_DEFN( EventDataID, SwgCalibUt, "Switchgear Ut is calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIa, "Switchgear Ia  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIaHigh, "Switchgear Ia High  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIb, "Switchgear Ib  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIbHigh, "Switchgear Ib High  is not calibrated." ) \
ENUM_DEFN( EventDataID, SwgNotCalibIc, "Switchgear Ic  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIcHigh, "Switchgear Ic High  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibIn, "SwitchGEAR In is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibVa, "Switchgear Va  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibVb, "Switchgear Vb  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibVc, "Switchgear Vc  is not calibrated" ) \
ENUM_DEFN( EventDataID, SwgNotCalibVr, "Switchgear Vr  is not calibrated." ) \
ENUM_DEFN( EventDataID, SwgNotCalibVs, "Switchgear Vs  is not calibrated." ) \
ENUM_DEFN( EventDataID, SwgNotCalibVt, "Switchgear Vt  is not calibrated." ) \
ENUM_DEFN( EventDataID, SyncBlockingDLDB, "DLDB Blocking" ) \
ENUM_DEFN( EventDataID, SyncBlockingDLLB, "DLLB Blocking" ) \
ENUM_DEFN( EventDataID, SyncBlockingLLDB, "LLDB Blocking" ) \
ENUM_DEFN( EventDataID, SyncCheckFail, "Sync-check Fail" ) \
ENUM_DEFN( EventDataID, SyncDeltaFreqFail, "∆f Fail" ) \
ENUM_DEFN( EventDataID, SyncDeltaPhaseFail, "∆ϕ Fail" ) \
ENUM_DEFN( EventDataID, SyncDeltaVFail, "∆V Fail" ) \
ENUM_DEFN( EventDataID, SyncLLLBFail, "LLLB Fail" ) \
ENUM_DEFN( EventDataID, SysErrorLog, "System Error Log" ) \
ENUM_DEFN( EventDataID, SystemCheck, "System Check" ) \
ENUM_DEFN( EventDataID, T10BBinaryControlWatchDog, "T10B Binary Control Watchdog" ) \
ENUM_DEFN( EventDataID, T10BPollWatchDog, "T10B Poll Watchdog" ) \
ENUM_DEFN( EventDataID, Timeout, "Timeout" ) \
ENUM_DEFN( EventDataID, TooManyUpdateFiles, "Too Many Update Files" ) \
ENUM_DEFN( EventDataID, Tr, "Tr, s={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, TripI2, "Trip(I2), A={arg:0}" ) \
ENUM_DEFN( EventDataID, TripIa, "Trip(Ia), A={arg:0}" ) \
ENUM_DEFN( EventDataID, TripIb, "Trip(Ib), A={arg:0}" ) \
ENUM_DEFN( EventDataID, TripIc, "Trip(Ic), A={arg:0}" ) \
ENUM_DEFN( EventDataID, TripIn, "Trip(In), A={arg:0}" ) \
ENUM_DEFN( EventDataID, TripIn_mA, "Trip(In), A={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, TripRequestFail0, "OSM Not Connected" ) \
ENUM_DEFN( EventDataID, TripRequestFail1, "Mechanically Locked" ) \
ENUM_DEFN( EventDataID, TripRequestFail2, "Operation Active" ) \
ENUM_DEFN( EventDataID, TripRequestFail3, "Faulty Actuator" ) \
ENUM_DEFN( EventDataID, TripRequestFail4, "Mechanism Failure" ) \
ENUM_DEFN( EventDataID, TtaTat, "Tat, s={arg:0 *1/10 .2}" ) \
ENUM_DEFN( EventDataID, UbootFirmware, "U-Boot Firmware" ) \
ENUM_DEFN( EventDataID, Unknown, "Unknown" ) \
ENUM_DEFN( EventDataID, Unsol, "Unsolicited Dial Out" ) \
ENUM_DEFN( EventDataID, UnsupportedHardware, "Unsupported Hardware" ) \
ENUM_DEFN( EventDataID, UnsupportedPartCode, "Unsupported Part Number" ) \
ENUM_DEFN( EventDataID, UnsupportedRF, "Unsupported RF" ) \
ENUM_DEFN( EventDataID, Up, "Up, kV={arg:0 *1/100 .1}" ) \
ENUM_DEFN( EventDataID, USBA, "USB A" ) \
ENUM_DEFN( EventDataID, USBB, "USB B" ) \
ENUM_DEFN( EventDataID, USBC, "USB C" ) \
ENUM_DEFN( EventDataID, USBCSP, "USB CSP" ) \
ENUM_DEFN( EventDataID, USBEXTERNAL, "External Hub Ports" ) \
ENUM_DEFN( EventDataID, UsbIoError, "USB Access Error" ) \
ENUM_DEFN( EventDataID, USBONBOARD, "Onboard Ports" ) \
ENUM_DEFN( EventDataID, USBONBOARDA, "USB A" ) \
ENUM_DEFN( EventDataID, USBONBOARDB, "USB B" ) \
ENUM_DEFN( EventDataID, UserAuthenticated, "User Credential Operation Successful" ) \
ENUM_DEFN( EventDataID, VVS_op, "VVS, °={arg:0 *1/1000}" ) \
ENUM_DEFN( EventDataID, Warm, "Warm" ) \
ENUM_DEFN( EventDataID, WarningsLog, "Warnings Log" ) \
ENUM_DEFN( EventDataID, WIFI, "WiFi" ) \
ENUM_DEFN( EventDataID, WriteToRelay, "Save Relay Calibration" ) \
ENUM_DEFN( EventDataID, WriteToSIM, "Write to SIM" ) \
ENUM_DEFN( EventDataID, WriteToSwg, "Save Switchgear Calibration" ) \
ENUM_DEFN( EventDataID, WrongAPPasswordLength, "Wrong AP Password Length" ) \
ENUM_DEFN( EventDataID, WrongClientPassword, "Wrong Client Password" ) \
ENUM_DEFN( EventDataID, WrongClientPasswordLength, "Wrong Client Password Length" ) \
ENUM_DEFN( EventDataID, WrongJoinCommand, "Wrong Join Command" ) \
ENUM_DEFN( EventDataID, WrongJoinParameter, "Wrong Join Parameter" ) \
ENUM_DEFN( EventDataID, WrongOperationMode, "Wrong Operation Mode" ) \
ENUM_DEFN( EventDataID, WrongParameter, "Wrong Parameter" ) \
ENUM_DEFN( EventDataID, WrongPasswordLength, "Wrong Password Length" ) \
ENUM_DEFN( DbClientId, CALIB, "calibration process" ) \
ENUM_DEFN( DbClientId, CAN, "CAN process Client ID" ) \
ENUM_DEFN( DbClientId, CAN_TEST, "CAN TEST process ID" ) \
ENUM_DEFN( DbClientId, CMS, "PC" ) \
ENUM_DEFN( DbClientId, CMS2, "CMS AUX" ) \
ENUM_DEFN( DbClientId, CMS3, "CMS AUX 2" ) \
ENUM_DEFN( DbClientId, COMMS, "communication" ) \
ENUM_DEFN( DbClientId, DbClientTest, "DB Test Client" ) \
ENUM_DEFN( DbClientId, DbClientTestListener, "DB Test Listener" ) \
ENUM_DEFN( DbClientId, DbServer, "DbServer" ) \
ENUM_DEFN( DbClientId, FaultLocator, "Fault Locator" ) \
ENUM_DEFN( DbClientId, GPS, "GPS" ) \
ENUM_DEFN( DbClientId, HMI, "HMI" ) \
ENUM_DEFN( DbClientId, Hotplug, "Hotplug" ) \
ENUM_DEFN( DbClientId, IO, "IO" ) \
ENUM_DEFN( DbClientId, IO1, "I/O 1" ) \
ENUM_DEFN( DbClientId, IO2, "I/O 2" ) \
ENUM_DEFN( DbClientId, IO3, "I/O 3" ) \
ENUM_DEFN( DbClientId, IO4, "I/O 4" ) \
ENUM_DEFN( DbClientId, LOG, "Log Process Client ID" ) \
ENUM_DEFN( DbClientId, LogComms, "LogComms" ) \
ENUM_DEFN( DbClientId, Logic, "Logic" ) \
ENUM_DEFN( DbClientId, Meter, "Meter" ) \
ENUM_DEFN( DbClientId, NAN, "Non client ID" ) \
ENUM_DEFN( DbClientId, OPCUASERVER, "OPCUA Server" ) \
ENUM_DEFN( DbClientId, Oscillography, "Oscillography" ) \
ENUM_DEFN( DbClientId, p2pComm, "p2p Communication" ) \
ENUM_DEFN( DbClientId, Panel, "Panel" ) \
ENUM_DEFN( DbClientId, PGE, "SCADA 2179" ) \
ENUM_DEFN( DbClientId, PMU, "PMU" ) \
ENUM_DEFN( DbClientId, ProgGPIO, "GPIO programmer" ) \
ENUM_DEFN( DbClientId, ProgPSC, "PSC Programmer" ) \
ENUM_DEFN( DbClientId, Prot, "Protection" ) \
ENUM_DEFN( DbClientId, ProtCfg, "Protection Config" ) \
ENUM_DEFN( DbClientId, ProtUTest, "Protection Unit Test" ) \
ENUM_DEFN( DbClientId, PSC, "PSC" ) \
ENUM_DEFN( DbClientId, RelayInput, "Relay Input" ) \
ENUM_DEFN( DbClientId, s61850, "SCADA IEC 61850 MMS" ) \
ENUM_DEFN( DbClientId, s61850_GOOSE, "IEC 61850 GOOSE" ) \
ENUM_DEFN( DbClientId, Scada, "SCADA" ) \
ENUM_DEFN( DbClientId, SIM, "SIM" ) \
ENUM_DEFN( DbClientId, SimOpTest, "SIM Sw Test" ) \
ENUM_DEFN( DbClientId, Simulator, "Simulator" ) \
ENUM_DEFN( DbClientId, SMA0, "SMA0" ) \
ENUM_DEFN( DbClientId, SMA1, "SMA1" ) \
ENUM_DEFN( DbClientId, SMA2, "SMA2" ) \
ENUM_DEFN( DbClientId, SMA3, "SMA3" ) \
ENUM_DEFN( DbClientId, SMA4, "SMA4" ) \
ENUM_DEFN( DbClientId, SMA5, "SMA5" ) \
ENUM_DEFN( DbClientId, SMA6, "SMA6" ) \
ENUM_DEFN( DbClientId, SMA7, "SMA7" ) \
ENUM_DEFN( DbClientId, SmartGridAutomation, "Smart Grid Automation" ) \
ENUM_DEFN( DbClientId, SMP, "System Management Process" ) \
ENUM_DEFN( DbClientId, SmpTest, "SMP Test" ) \
ENUM_DEFN( DbClientId, SNTP, "SNTP" ) \
ENUM_DEFN( DbClientId, System, "System" ) \
ENUM_DEFN( DbClientId, T10B, "SCADA IEC 60870" ) \
ENUM_DEFN( DbClientId, Update, "Update" ) \
ENUM_DEFN( DbClientId, UPS, "UPS process" ) \
ENUM_DEFN( DbClientId, UsbCopy, "USB Copy" ) \
ENUM_DEFN( DbClientId, UsbGadget, "USB Gadget" ) \
ENUM_DEFN( DbClientId, UserCredential, "User Credential management" ) \
ENUM_DEFN( DbClientId, Webserver, "Webserver" ) \
ENUM_DEFN( DbClientId, WLAN, "WLAN" ) \
ENUM_DEFN( BaudRateType, B115200, "115200bps" ) \
ENUM_DEFN( BaudRateType, B19200, "19200bps" ) \
ENUM_DEFN( ChangeEvent, ChChanged, "Changed" ) \
ENUM_DEFN( ChangeEvent, ChErased, "Erased" ) \
ENUM_DEFN( ChangeEvent, ChNoDisp, "" ) \
ENUM_DEFN( Co, Close, "Close" ) \
ENUM_DEFN( Co, ClosePhA, "Close A" ) \
ENUM_DEFN( Co, ClosePhB, "Close B" ) \
ENUM_DEFN( Co, ClosePhC, "Close C" ) \
ENUM_DEFN( Co, Open, "Open" ) \
ENUM_DEFN( Co, OpenPhA, "Open A" ) \
ENUM_DEFN( Co, OpenPhB, "Open B" ) \
ENUM_DEFN( Co, OpenPhC, "Open C" ) \
ENUM_DEFN( CoSrc, Abr, "ABR" ) \
ENUM_DEFN( CoSrc, AbrAo, "ABR AutoOpen" ) \
ENUM_DEFN( CoSrc, Ac, "UV3 AutoClose" ) \
ENUM_DEFN( CoSrc, Aco, "ACO" ) \
ENUM_DEFN( CoSrc, AoPowerFlowDirChanged, "AutoOpen Power Flow Dir Changed" ) \
ENUM_DEFN( CoSrc, AoPowerFlowReduced, "AutoOpen Power Flow Reduced" ) \
ENUM_DEFN( CoSrc, AoTimer, "AutoOpen Timer" ) \
ENUM_DEFN( CoSrc, Ar, "AR" ) \
ENUM_DEFN( CoSrc, ArOcef, "AR OC/EF/SEF" ) \
ENUM_DEFN( CoSrc, ArOcNpsEfSef, "AR OC/NPS/EF/SEF" ) \
ENUM_DEFN( CoSrc, ArOcNpsEfSefYn, "AR OC/NPS/EF/SEF/Yn" ) \
ENUM_DEFN( CoSrc, ArOv, "AR OV/UV" ) \
ENUM_DEFN( CoSrc, ArSef, "AR OC/EF/SEF" ) \
ENUM_DEFN( CoSrc, ArUv, "AR OV/UV" ) \
ENUM_DEFN( CoSrc, AutoSync, "Auto-sync" ) \
ENUM_DEFN( CoSrc, Ef1f, "EF1+" ) \
ENUM_DEFN( CoSrc, Ef1r, "EF1-" ) \
ENUM_DEFN( CoSrc, Ef2f, "EF2+" ) \
ENUM_DEFN( CoSrc, Ef2r, "EF2-" ) \
ENUM_DEFN( CoSrc, Ef3f, "EF3+" ) \
ENUM_DEFN( CoSrc, Ef3r, "EF3-" ) \
ENUM_DEFN( CoSrc, Efll, "EFLL3" ) \
ENUM_DEFN( CoSrc, Efll1, "EFLL1" ) \
ENUM_DEFN( CoSrc, Efll2, "EFLL2" ) \
ENUM_DEFN( CoSrc, Hlt, "HLT" ) \
ENUM_DEFN( CoSrc, Hmi, "HMI" ) \
ENUM_DEFN( CoSrc, Hrm, "HRM" ) \
ENUM_DEFN( CoSrc, I2I1, "I2/I1" ) \
ENUM_DEFN( CoSrc, Io, "IO" ) \
ENUM_DEFN( CoSrc, Io1, "IO1" ) \
ENUM_DEFN( CoSrc, Io1Input1, "IO1 Input 1" ) \
ENUM_DEFN( CoSrc, Io1Input2, "IO1 Input 2" ) \
ENUM_DEFN( CoSrc, Io1Input3, "IO1 Input 3" ) \
ENUM_DEFN( CoSrc, Io1Input4, "IO1 Input 4" ) \
ENUM_DEFN( CoSrc, Io1Input5, "IO1 Input 5" ) \
ENUM_DEFN( CoSrc, Io1Input6, "IO1 Input 6" ) \
ENUM_DEFN( CoSrc, Io1Input7, "IO1 Input 7" ) \
ENUM_DEFN( CoSrc, Io1Input8, "IO1 Input 8" ) \
ENUM_DEFN( CoSrc, Io2, "IO2" ) \
ENUM_DEFN( CoSrc, Io2Input1, "IO2 Input 1" ) \
ENUM_DEFN( CoSrc, Io2Input2, "IO2 Input 2" ) \
ENUM_DEFN( CoSrc, Io2Input3, "IO2 Input 3" ) \
ENUM_DEFN( CoSrc, Io2Input4, "IO2 Input 4" ) \
ENUM_DEFN( CoSrc, Io2Input5, "IO2 Input 5" ) \
ENUM_DEFN( CoSrc, Io2Input6, "IO2 Input 6" ) \
ENUM_DEFN( CoSrc, Io2Input7, "IO2 Input 7" ) \
ENUM_DEFN( CoSrc, Io2Input8, "IO2 Input 8" ) \
ENUM_DEFN( CoSrc, Logic, "Logic" ) \
ENUM_DEFN( CoSrc, Manual, "Manual" ) \
ENUM_DEFN( CoSrc, Nps1f, "NPS1+" ) \
ENUM_DEFN( CoSrc, Nps1r, "NPS1-" ) \
ENUM_DEFN( CoSrc, Nps2f, "NPS2+" ) \
ENUM_DEFN( CoSrc, Nps2r, "NPS2-" ) \
ENUM_DEFN( CoSrc, Nps3f, "NPS3+" ) \
ENUM_DEFN( CoSrc, Nps3r, "NPS3-" ) \
ENUM_DEFN( CoSrc, Npsll1, "NPSLL1" ) \
ENUM_DEFN( CoSrc, Npsll2, "NPSLL2" ) \
ENUM_DEFN( CoSrc, Npsll3, "NPSLL3" ) \
ENUM_DEFN( CoSrc, Oc1f, "OC1+" ) \
ENUM_DEFN( CoSrc, Oc1r, "OC1-" ) \
ENUM_DEFN( CoSrc, Oc2f, "OC2+" ) \
ENUM_DEFN( CoSrc, Oc2r, "OC2-" ) \
ENUM_DEFN( CoSrc, Oc3f, "OC3+" ) \
ENUM_DEFN( CoSrc, Oc3r, "OC3-" ) \
ENUM_DEFN( CoSrc, Ocll, "OCLL3" ) \
ENUM_DEFN( CoSrc, Ocll1, "OCLL1" ) \
ENUM_DEFN( CoSrc, Ocll2, "OCLL2" ) \
ENUM_DEFN( CoSrc, Of, "OF" ) \
ENUM_DEFN( CoSrc, Ov1, "OV1" ) \
ENUM_DEFN( CoSrc, Ov2, "OV2" ) \
ENUM_DEFN( CoSrc, Ov3, "OV3" ) \
ENUM_DEFN( CoSrc, Ov4, "OV4" ) \
ENUM_DEFN( CoSrc, Pc, "PC" ) \
ENUM_DEFN( CoSrc, PDOP, "PDOP" ) \
ENUM_DEFN( CoSrc, PDUP, "PDUP" ) \
ENUM_DEFN( CoSrc, PGE, "SCADA" ) \
ENUM_DEFN( CoSrc, RelayInput, "Relay Input" ) \
ENUM_DEFN( CoSrc, RelayInput1, "Relay Input 1" ) \
ENUM_DEFN( CoSrc, RelayInput2, "Relay Input 2" ) \
ENUM_DEFN( CoSrc, RelayInput3, "Relay Input 3" ) \
ENUM_DEFN( CoSrc, ROCOF, "ROCOF" ) \
ENUM_DEFN( CoSrc, s61850, "IEC 61850" ) \
ENUM_DEFN( CoSrc, s61850_GOOSE, "GOOSE" ) \
ENUM_DEFN( CoSrc, Scada, "SCADA" ) \
ENUM_DEFN( CoSrc, Sectionaliser, "Sectionaliser" ) \
ENUM_DEFN( CoSrc, Seff, "SEF+" ) \
ENUM_DEFN( CoSrc, Sefll, "SEFLL" ) \
ENUM_DEFN( CoSrc, Sefr, "SEF-" ) \
ENUM_DEFN( CoSrc, SmartGridAutomation, "Smart Grid Automation" ) \
ENUM_DEFN( CoSrc, T10B, "SCADA" ) \
ENUM_DEFN( CoSrc, Uf, "UF" ) \
ENUM_DEFN( CoSrc, Undef, "Undefined" ) \
ENUM_DEFN( CoSrc, Uv1, "UV1" ) \
ENUM_DEFN( CoSrc, Uv2, "UV2" ) \
ENUM_DEFN( CoSrc, Uv3, "UV3" ) \
ENUM_DEFN( CoSrc, Uv4, "UV4 (Sag)" ) \
ENUM_DEFN( CoSrc, VVS, "VVS" ) \
ENUM_DEFN( CoSrc, Yn, "Yn" ) \
ENUM_DEFN( CoState, C0, "Close 0" ) \
ENUM_DEFN( CoState, C1, "Close 1" ) \
ENUM_DEFN( CoState, C2, "Close 2" ) \
ENUM_DEFN( CoState, C3, "Close 3" ) \
ENUM_DEFN( CoState, C4, "Close 4" ) \
ENUM_DEFN( CoState, CReclose, "" ) \
ENUM_DEFN( CoState, O1, "Lockout" ) \
ENUM_DEFN( CoState, O2, "Open 2" ) \
ENUM_DEFN( CoState, O3, "Open 3" ) \
ENUM_DEFN( CoState, O4, "Open 4" ) \
ENUM_DEFN( CoState, OABR, "Open ABR" ) \
ENUM_DEFN( CoState, OAutoClose, "Open UV3 AutoClose" ) \
ENUM_DEFN( CoState, OAutoOpen, "Open AutoOpen" ) \
ENUM_DEFN( CoState, OReclose, "" ) \
ENUM_DEFN( CoState, SectionaliserO2, "O2" ) \
ENUM_DEFN( CoState, SectionaliserO3, "O3" ) \
ENUM_DEFN( CoState, SectionaliserO4, "O4" ) \
ENUM_DEFN( CoState, SectionaliserO5, "O5" ) \
ENUM_DEFN( TccType, TccType_AnsiRes, "ANSI Reset" ) \
ENUM_DEFN( TccType, TccType_AnsiTrip, "ANSI Trip" ) \
ENUM_DEFN( TccType, TccType_Iec, "IEC Trip" ) \
ENUM_DEFN( TccType, TccType_NAN, "" ) \
ENUM_DEFN( TccType, TccType_Noja, "NOJA Trip" ) \
ENUM_DEFN( TccType, TccType_UD, "User Defined Curve" ) \
ENUM_DEFN( TccType, TccType_User, "User Standard Curve" ) \
ENUM_DEFN( LocalRemote, Local, "Local" ) \
ENUM_DEFN( LocalRemote, Remote, "Remote" ) \
ENUM_DEFN( MeasPhaseSeqAbcType, ABC, "ABC" ) \
ENUM_DEFN( MeasPhaseSeqAbcType, ACB, "ACB" ) \
ENUM_DEFN( MeasPhaseSeqAbcType, Unknown, "???" ) \
ENUM_DEFN( MeasPhaseSeqRstType, RST, "RST" ) \
ENUM_DEFN( MeasPhaseSeqRstType, RTS, "RTS" ) \
ENUM_DEFN( MeasPhaseSeqRstType, Unknown, "???" ) \
ENUM_DEFN( ProtDirOut, Forward, "+" ) \
ENUM_DEFN( ProtDirOut, Reverse, "-" ) \
ENUM_DEFN( ProtDirOut, Unknown, "?" ) \
ENUM_DEFN( DbFileCommand, DbFCmdCrashLoad, "DB crash recover" ) \
ENUM_DEFN( DbFileCommand, DbFCmdCrashSave, "DB crash save" ) \
ENUM_DEFN( DbFileCommand, DbFCmdManualSave, "DB Manual save all datapoints" ) \
ENUM_DEFN( DbFileCommand, DbFCmdNone, "DB No file command" ) \
ENUM_DEFN( DbFileCommand, DbFCmdRead, "DB Read all datapoints" ) \
ENUM_DEFN( DbFileCommand, DbFCmdReadConfig, "DB Load configuration" ) \
ENUM_DEFN( DbFileCommand, DbFCmdResetProtConfig, "DB Reset protection configuration" ) \
ENUM_DEFN( DbFileCommand, DbFCmdSave, "DB Save all datapoints" ) \
ENUM_DEFN( DbFileCommand, DbFCmdSaveConfig, "DB Save configuration" ) \
ENUM_DEFN( DbFileCommand, DbFCmdSaveSwitchgearType, "DB Save Switchgear Type" ) \
ENUM_DEFN( CommsSerialBaudRate, 115200, "115200" ) \
ENUM_DEFN( CommsSerialBaudRate, 1200, "1200" ) \
ENUM_DEFN( CommsSerialBaudRate, 19200, "19200" ) \
ENUM_DEFN( CommsSerialBaudRate, 2400, "2400" ) \
ENUM_DEFN( CommsSerialBaudRate, 300, "300" ) \
ENUM_DEFN( CommsSerialBaudRate, 38400, "38400" ) \
ENUM_DEFN( CommsSerialBaudRate, 4800, "4800" ) \
ENUM_DEFN( CommsSerialBaudRate, 57600, "57600" ) \
ENUM_DEFN( CommsSerialBaudRate, 600, "600" ) \
ENUM_DEFN( CommsSerialBaudRate, 9600, "9600" ) \
ENUM_DEFN( CommsSerialDuplex, full, "Full" ) \
ENUM_DEFN( CommsSerialDuplex, half, "Half" ) \
ENUM_DEFN( CommsSerialRTSMode, ControlPTT, "Control PTT" ) \
ENUM_DEFN( CommsSerialRTSMode, FlowControl, "Flow Control" ) \
ENUM_DEFN( CommsSerialRTSMode, Ignore, "Ignore" ) \
ENUM_DEFN( CommsSerialRTSOnLevel, High, "High" ) \
ENUM_DEFN( CommsSerialRTSOnLevel, Low, "Low" ) \
ENUM_DEFN( CommsSerialDTRMode, Control, "Control" ) \
ENUM_DEFN( CommsSerialDTRMode, Ignore, "Ignore" ) \
ENUM_DEFN( CommsSerialDTROnLevel, High, "High" ) \
ENUM_DEFN( CommsSerialDTROnLevel, Low, "Low" ) \
ENUM_DEFN( CommsSerialParity, even, "Even" ) \
ENUM_DEFN( CommsSerialParity, none, "None" ) \
ENUM_DEFN( CommsSerialParity, odd, "Odd" ) \
ENUM_DEFN( CommsSerialCTSMode, Ignore, "Ignore" ) \
ENUM_DEFN( CommsSerialCTSMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN( CommsSerialCTSMode, MonitorLow, "Monitor Low" ) \
ENUM_DEFN( CommsSerialDSRMode, Ignore, "Ignore" ) \
ENUM_DEFN( CommsSerialDSRMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN( CommsSerialDSRMode, MonitorLow, "Monitor Low" ) \
ENUM_DEFN( CommsSerialDCDMode, Ignore, "Ignore" ) \
ENUM_DEFN( CommsSerialDCDMode, MonitorHigh, "Monitor High" ) \
ENUM_DEFN( CommsSerialDCDMode, MonitorLow, "Monitor Low" ) \
ENUM_DEFN( CommsWlanNetworkAuthentication, None, "WEP Open" ) \
ENUM_DEFN( CommsWlanNetworkAuthentication, Shared, "WEP Shared" ) \
ENUM_DEFN( CommsWlanNetworkAuthentication, WPA2Personal, "WPA2-Personal" ) \
ENUM_DEFN( CommsWlanNetworkAuthentication, WPAPersonal, "WPA-Personal" ) \
ENUM_DEFN( CommsWlanDataEncryption, AES, "AES" ) \
ENUM_DEFN( CommsWlanDataEncryption, TKIP, "TKIP" ) \
ENUM_DEFN( BinaryInputObject01Enum, BinaryInput, "Binary Input" ) \
ENUM_DEFN( BinaryInputObject01Enum, StatusBinaryInput, "Binary Input with Status" ) \
ENUM_DEFN( BinaryInputObject02Enum, NoTimeBinaryInputChange, "Binary Input Change without Time" ) \
ENUM_DEFN( BinaryInputObject02Enum, RelTimeBinaryInputChange, "Binary Input Change with Relative Time" ) \
ENUM_DEFN( BinaryInputObject02Enum, TimeBinaryInputChange, "Binary Input Change with Time" ) \
ENUM_DEFN( BinaryOutputObject10Enum, BinaryOutput, "Binary Output" ) \
ENUM_DEFN( BinaryOutputObject10Enum, StatusBinaryOutput, "Binary Output with Status" ) \
ENUM_DEFN( BinaryCounterObject20Enum, 16BitBinaryCounter, "16-Bit Binary Counter" ) \
ENUM_DEFN( BinaryCounterObject20Enum, 16BitBinaryCounterNoFlag, "16-Bit Binary Counter without Flag" ) \
ENUM_DEFN( BinaryCounterObject20Enum, 32BitBinaryCounter, "32-Bit Binary Counter" ) \
ENUM_DEFN( BinaryCounterObject20Enum, 32BitBinaryCounterNoFlag, "32-Bit Binary Counter without Flag" ) \
ENUM_DEFN( BinaryCounterObject20Enum, Disabled, "Disabled" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 16BitFrozenCounter, "16-Bit Frozen Counter" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 16BitFrozenCounterNoFlag, "16-Bit Frozen Counter without Flag" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 16BitFrozenCounterTimeFreeze, "16-Bit Frozen Counter with Time Of Freeze" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 32BitFrozenCounter, "32-Bit Frozen Counter" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 32BitFrozenCounterNoFlag, "32-Bit Frozen Counter without Flag" ) \
ENUM_DEFN( BinaryCounterObject21Enum, 32BitFrozenCounterTimeFreeze, "32-Bit Frozen Counter with Time Of Freeze" ) \
ENUM_DEFN( BinaryCounterObject21Enum, Disabled, "Disabled" ) \
ENUM_DEFN( BinaryCounterObject22Enum, 16BitCounterChangeEvent, "16-Bit Counter Change Event" ) \
ENUM_DEFN( BinaryCounterObject22Enum, 16BitTimeCounterChangeEvent, "16-Bit Counter Change Event with Time" ) \
ENUM_DEFN( BinaryCounterObject22Enum, 32BitCounterChangeEvent, "32-Bit Counter Change Event" ) \
ENUM_DEFN( BinaryCounterObject22Enum, 32BitTimeCounterChangeEvent, "32-Bit Counter Change Event with Time" ) \
ENUM_DEFN( BinaryCounterObject22Enum, Disabled, "Disabled" ) \
ENUM_DEFN( BinaryCounterObject23Enum, 16BitFrozenCounterEvent, "16-Bit Frozen Counter Event" ) \
ENUM_DEFN( BinaryCounterObject23Enum, 16BitTimeFrozenCounterEvent, "16-Bit Frozen Counter Event with Time" ) \
ENUM_DEFN( BinaryCounterObject23Enum, 32BitFrozenCounterEvent, "32-Bit Frozen Counter Event" ) \
ENUM_DEFN( BinaryCounterObject23Enum, 32BitTimeFrozenCounterEvent, "32-Bit Frozen Counter Event with Time" ) \
ENUM_DEFN( BinaryCounterObject23Enum, Disabled, "Disabled" ) \
ENUM_DEFN( AnalogInputObject30Enum, 16BitAnalogInput, "16-Bit Analog Input" ) \
ENUM_DEFN( AnalogInputObject30Enum, 16BitAnalogInputNoFlag, "16-Bit Analog Input without Flag" ) \
ENUM_DEFN( AnalogInputObject30Enum, 32BitAnalogInput, "32-Bit Analog Input" ) \
ENUM_DEFN( AnalogInputObject30Enum, 32BitAnalogInputNoFlag, "32-Bit Analog Input without Flag" ) \
ENUM_DEFN( AnalogInputObject32Enum, 16BitAnalogChangeEventNoTimeReportAll, "Var 2: 16-Bit Analog Change Event without Time - Report All" ) \
ENUM_DEFN( AnalogInputObject32Enum, 16BitAnalogChangeEventNoTimeReportLast, "Var 2: 16-Bit Analog Change Event without Time - Report Last" ) \
ENUM_DEFN( AnalogInputObject32Enum, 16BitTimeAnalogChangeEvent, "Var 4: 16-Bit Analog Change Event with Time" ) \
ENUM_DEFN( AnalogInputObject32Enum, 32BitAnalogChangeEventNoTimeReportAll, "Var 1: 32-Bit Analog Change Event without Time - Report All" ) \
ENUM_DEFN( AnalogInputObject32Enum, 32BitAnalogChangeEventNoTimeReportLast, "Var 1: 32-Bit Analog Change Event without Time - Report Last" ) \
ENUM_DEFN( AnalogInputObject32Enum, 32BitTimeAnalogChangeEvent, "Var 3: 32-Bit Analog Change Event with Time" ) \
ENUM_DEFN( AnalogInputObject34Enum, 16BitAnalogInputReportDeadband, "16-Bit Analog Input Reporting Deadband" ) \
ENUM_DEFN( AnalogInputObject34Enum, 32BitAnalogInputReportDeadband, "32-Bit Analog Input Reporting Deadband" ) \
ENUM_DEFN( ProtStatus, 79_2, "79-2" ) \
ENUM_DEFN( ProtStatus, 79_3, "79-3" ) \
ENUM_DEFN( ProtStatus, ABR, "ABR" ) \
ENUM_DEFN( ProtStatus, ACO, "ACO" ) \
ENUM_DEFN( ProtStatus, AlarmMode, "Alarm Mode" ) \
ENUM_DEFN( ProtStatus, AR, "AR" ) \
ENUM_DEFN( ProtStatus, CLP, "CLP" ) \
ENUM_DEFN( ProtStatus, DFT, "DFT" ) \
ENUM_DEFN( ProtStatus, EF, "EF" ) \
ENUM_DEFN( ProtStatus, HLT, "HLT" ) \
ENUM_DEFN( ProtStatus, HRM, "HRM" ) \
ENUM_DEFN( ProtStatus, LL, "LL" ) \
ENUM_DEFN( ProtStatus, LLB, "LLB" ) \
ENUM_DEFN( ProtStatus, MNT, "MNT" ) \
ENUM_DEFN( ProtStatus, NPS, "NPS" ) \
ENUM_DEFN( ProtStatus, OF, "OF" ) \
ENUM_DEFN( ProtStatus, OV, "OV" ) \
ENUM_DEFN( ProtStatus, OV3, "OV3" ) \
ENUM_DEFN( ProtStatus, PDOP, "PDOP" ) \
ENUM_DEFN( ProtStatus, PDUP, "PDUP" ) \
ENUM_DEFN( ProtStatus, Prot, "Prot" ) \
ENUM_DEFN( ProtStatus, ROCOF, "ROCOF" ) \
ENUM_DEFN( ProtStatus, SEF, "SEF" ) \
ENUM_DEFN( ProtStatus, SSM, "SSM" ) \
ENUM_DEFN( ProtStatus, UF, "UF" ) \
ENUM_DEFN( ProtStatus, UV, "UV" ) \
ENUM_DEFN( ProtStatus, UV4, "UV4 (Sag)" ) \
ENUM_DEFN( ProtStatus, VVS, "VVS" ) \
ENUM_DEFN( ProtStatus, Yn, "Yn" ) \
ENUM_DEFN( LogStartEnd, End, "(end)" ) \
ENUM_DEFN( LogStartEnd, NaReset, "" ) \
ENUM_DEFN( LogStartEnd, NaSet, "" ) \
ENUM_DEFN( LogStartEnd, Start, "(start)" ) \
ENUM_DEFN( LogEventSrc, Abr, "ABR" ) \
ENUM_DEFN( LogEventSrc, AbrAo, "ABR AutoOpen" ) \
ENUM_DEFN( LogEventSrc, Ac, "UV3 AutoClose" ) \
ENUM_DEFN( LogEventSrc, Aco, "ACO" ) \
ENUM_DEFN( LogEventSrc, Ao, "AutoOpen" ) \
ENUM_DEFN( LogEventSrc, Ar, "AR" ) \
ENUM_DEFN( LogEventSrc, ArOcef, "AR OC/EF/SEF" ) \
ENUM_DEFN( LogEventSrc, ArOcNpsEfSef, "AR OC/NPS/EF/SEF" ) \
ENUM_DEFN( LogEventSrc, ArOcNpsEfSefYn, "AR OC/NPS/EF/SEF/Yn" ) \
ENUM_DEFN( LogEventSrc, ArOv, "AR OV/UV" ) \
ENUM_DEFN( LogEventSrc, ArSef, "AR OC/EF/SEF" ) \
ENUM_DEFN( LogEventSrc, ArUv, "AR OV/UV" ) \
ENUM_DEFN( LogEventSrc, Auto, "AUTO" ) \
ENUM_DEFN( LogEventSrc, Calib, "Calibration process" ) \
ENUM_DEFN( LogEventSrc, CBF, "CBF" ) \
ENUM_DEFN( LogEventSrc, CloseBlocking, "Logic Close Blocking" ) \
ENUM_DEFN( LogEventSrc, Clp, "CLP" ) \
ENUM_DEFN( LogEventSrc, Comms, "Comms" ) \
ENUM_DEFN( LogEventSrc, De, "DE" ) \
ENUM_DEFN( LogEventSrc, DeOcefsef, "DE OC/EF/SEF" ) \
ENUM_DEFN( LogEventSrc, DeOcNpsEfSef, "DE OC/NPS/EF/SEF" ) \
ENUM_DEFN( LogEventSrc, Ef1f, "EF1+" ) \
ENUM_DEFN( LogEventSrc, Ef1r, "EF1-" ) \
ENUM_DEFN( LogEventSrc, Ef2f, "EF2+" ) \
ENUM_DEFN( LogEventSrc, Ef2r, "EF2-" ) \
ENUM_DEFN( LogEventSrc, Ef3f, "EF3+" ) \
ENUM_DEFN( LogEventSrc, Ef3r, "EF3-" ) \
ENUM_DEFN( LogEventSrc, Efll, "EFLL3" ) \
ENUM_DEFN( LogEventSrc, Efll1, "EFLL1" ) \
ENUM_DEFN( LogEventSrc, Efll2, "EFLL2" ) \
ENUM_DEFN( LogEventSrc, ExtLoad, "ExtLoad" ) \
ENUM_DEFN( LogEventSrc, FaultLocator, "Fault Locator" ) \
ENUM_DEFN( LogEventSrc, GPS, "GPS" ) \
ENUM_DEFN( LogEventSrc, HLT, "HLT" ) \
ENUM_DEFN( LogEventSrc, Hmi, "HMI" ) \
ENUM_DEFN( LogEventSrc, HmiClient, "HMI" ) \
ENUM_DEFN( LogEventSrc, Hrm, "HRM" ) \
ENUM_DEFN( LogEventSrc, I2I1, "I2/I1" ) \
ENUM_DEFN( LogEventSrc, Io, "I/O" ) \
ENUM_DEFN( LogEventSrc, Io1, "I/O1" ) \
ENUM_DEFN( LogEventSrc, Io1Input1, "I/O1 Input 1" ) \
ENUM_DEFN( LogEventSrc, Io1Input2, "I/O1 Input 2" ) \
ENUM_DEFN( LogEventSrc, Io1Input3, "I/O1 Input 3" ) \
ENUM_DEFN( LogEventSrc, Io1Input4, "I/O1 Input 4" ) \
ENUM_DEFN( LogEventSrc, Io1Input5, "I/O1 Input 5" ) \
ENUM_DEFN( LogEventSrc, Io1Input6, "I/O1 Input 6" ) \
ENUM_DEFN( LogEventSrc, Io1Input7, "I/O1 Input 7" ) \
ENUM_DEFN( LogEventSrc, Io1Input8, "I/O1 Input 8" ) \
ENUM_DEFN( LogEventSrc, Io2, "I/O2" ) \
ENUM_DEFN( LogEventSrc, Io2Input1, "I/O2 Input 1" ) \
ENUM_DEFN( LogEventSrc, Io2Input2, "I/O2 Input 2" ) \
ENUM_DEFN( LogEventSrc, Io2Input3, "I/O2 Input 3" ) \
ENUM_DEFN( LogEventSrc, Io2Input4, "I/O2 Input 4" ) \
ENUM_DEFN( LogEventSrc, Io2Input5, "I/O2 Input 5" ) \
ENUM_DEFN( LogEventSrc, Io2Input6, "I/O2 Input 6" ) \
ENUM_DEFN( LogEventSrc, Io2Input7, "I/O2 Input 7" ) \
ENUM_DEFN( LogEventSrc, Io2Input8, "I/O2 Input 8" ) \
ENUM_DEFN( LogEventSrc, Io3, "I/O3" ) \
ENUM_DEFN( LogEventSrc, Io4, "I/O4" ) \
ENUM_DEFN( LogEventSrc, Ir, "IR" ) \
ENUM_DEFN( LogEventSrc, LL, "LL" ) \
ENUM_DEFN( LogEventSrc, LLB, "LLB" ) \
ENUM_DEFN( LogEventSrc, Logic, "Logic" ) \
ENUM_DEFN( LogEventSrc, Lsd, "LSD" ) \
ENUM_DEFN( LogEventSrc, Mode, "Mode" ) \
ENUM_DEFN( LogEventSrc, MPCB, "Multiphase Close Blocking" ) \
ENUM_DEFN( LogEventSrc, Nps1f, "NPS1+" ) \
ENUM_DEFN( LogEventSrc, Nps1r, "NPS1-" ) \
ENUM_DEFN( LogEventSrc, Nps2f, "NPS2+" ) \
ENUM_DEFN( LogEventSrc, Nps2r, "NPS2-" ) \
ENUM_DEFN( LogEventSrc, Nps3f, "NPS3+" ) \
ENUM_DEFN( LogEventSrc, Nps3r, "NPS3-" ) \
ENUM_DEFN( LogEventSrc, Npsll1, "NPSLL1" ) \
ENUM_DEFN( LogEventSrc, Npsll2, "NPSLL2" ) \
ENUM_DEFN( LogEventSrc, Npsll3, "NPSLL3" ) \
ENUM_DEFN( LogEventSrc, Oc1f, "OC1+" ) \
ENUM_DEFN( LogEventSrc, Oc1r, "OC1-" ) \
ENUM_DEFN( LogEventSrc, Oc2f, "OC2+" ) \
ENUM_DEFN( LogEventSrc, Oc2r, "OC2-" ) \
ENUM_DEFN( LogEventSrc, Oc3f, "OC3+" ) \
ENUM_DEFN( LogEventSrc, Oc3r, "OC3-" ) \
ENUM_DEFN( LogEventSrc, Ocll, "OCLL3" ) \
ENUM_DEFN( LogEventSrc, Ocll1, "OCLL1" ) \
ENUM_DEFN( LogEventSrc, Ocll2, "OCLL2" ) \
ENUM_DEFN( LogEventSrc, Of, "OF" ) \
ENUM_DEFN( LogEventSrc, Oscillography, "OSC" ) \
ENUM_DEFN( LogEventSrc, Ov1, "OV1" ) \
ENUM_DEFN( LogEventSrc, Ov2, "OV2" ) \
ENUM_DEFN( LogEventSrc, Ov3, "OV3" ) \
ENUM_DEFN( LogEventSrc, Ov4, "OV4" ) \
ENUM_DEFN( LogEventSrc, Pc, "PC" ) \
ENUM_DEFN( LogEventSrc, PDOP, "PDOP" ) \
ENUM_DEFN( LogEventSrc, PDUP, "PDUP" ) \
ENUM_DEFN( LogEventSrc, PGE, "SCADA" ) \
ENUM_DEFN( LogEventSrc, PMU, "PMU" ) \
ENUM_DEFN( LogEventSrc, Prot, "Protection" ) \
ENUM_DEFN( LogEventSrc, Psc, "PSC" ) \
ENUM_DEFN( LogEventSrc, Relay, "Relay" ) \
ENUM_DEFN( LogEventSrc, RelayInput, "Relay Input" ) \
ENUM_DEFN( LogEventSrc, RelayInput1, "Relay Input 1" ) \
ENUM_DEFN( LogEventSrc, RelayInput2, "Relay Input 2" ) \
ENUM_DEFN( LogEventSrc, RelayInput3, "Relay Input 3" ) \
ENUM_DEFN( LogEventSrc, ROCOF, "ROCOF" ) \
ENUM_DEFN( LogEventSrc, RTC, "RTC" ) \
ENUM_DEFN( LogEventSrc, s61850, "IEC 61850" ) \
ENUM_DEFN( LogEventSrc, s61850_GOOSE, "GOOSE" ) \
ENUM_DEFN( LogEventSrc, Scada, "SCADA" ) \
ENUM_DEFN( LogEventSrc, Sectionaliser, "Sectionaliser" ) \
ENUM_DEFN( LogEventSrc, Seff, "SEF+" ) \
ENUM_DEFN( LogEventSrc, Sefll, "SEFLL" ) \
ENUM_DEFN( LogEventSrc, Sefr, "SEF-" ) \
ENUM_DEFN( LogEventSrc, SGA_Logic, "SGA/Logic" ) \
ENUM_DEFN( LogEventSrc, Sim, "SIM" ) \
ENUM_DEFN( LogEventSrc, SmartGridAutomation, "SGA" ) \
ENUM_DEFN( LogEventSrc, Smp, "SMP" ) \
ENUM_DEFN( LogEventSrc, SNTP, "SNTP" ) \
ENUM_DEFN( LogEventSrc, Sst, "SST" ) \
ENUM_DEFN( LogEventSrc, SwSimul, "Switch Simulator" ) \
ENUM_DEFN( LogEventSrc, Synchronisation, "Synchronisation" ) \
ENUM_DEFN( LogEventSrc, System, "System" ) \
ENUM_DEFN( LogEventSrc, T10B, "SCADA" ) \
ENUM_DEFN( LogEventSrc, Tta, "TTA" ) \
ENUM_DEFN( LogEventSrc, UabcOver, "Uabc GT" ) \
ENUM_DEFN( LogEventSrc, UabcUnder, "Uabc LT" ) \
ENUM_DEFN( LogEventSrc, UaOver, "Ua GT" ) \
ENUM_DEFN( LogEventSrc, UaUnder, "Ua LT" ) \
ENUM_DEFN( LogEventSrc, Uf, "UF" ) \
ENUM_DEFN( LogEventSrc, Undefined, "Undefined" ) \
ENUM_DEFN( LogEventSrc, UPS, "UPS" ) \
ENUM_DEFN( LogEventSrc, UrOver, "Ur GT" ) \
ENUM_DEFN( LogEventSrc, UrstOver, "Urst GT" ) \
ENUM_DEFN( LogEventSrc, UrstUnder, "Urst LT" ) \
ENUM_DEFN( LogEventSrc, UrUnder, "Ur LT" ) \
ENUM_DEFN( LogEventSrc, Usb, "USB" ) \
ENUM_DEFN( LogEventSrc, Uv1, "UV1" ) \
ENUM_DEFN( LogEventSrc, Uv2, "UV2" ) \
ENUM_DEFN( LogEventSrc, Uv3, "UV3" ) \
ENUM_DEFN( LogEventSrc, Uv4, "UV4 (Sag)" ) \
ENUM_DEFN( LogEventSrc, Vrc, "VRC" ) \
ENUM_DEFN( LogEventSrc, VVS, "VVS" ) \
ENUM_DEFN( LogEventSrc, Yn, "Yn" ) \
ENUM_DEFN( LogEventPhase, PhaseA, "A" ) \
ENUM_DEFN( LogEventPhase, PhaseAB, "AB" ) \
ENUM_DEFN( LogEventPhase, PhaseABC, "ABC" ) \
ENUM_DEFN( LogEventPhase, PhaseABCE, "ABCE" ) \
ENUM_DEFN( LogEventPhase, PhaseABE, "ABE" ) \
ENUM_DEFN( LogEventPhase, PhaseAE, "AE" ) \
ENUM_DEFN( LogEventPhase, PhaseB, "B" ) \
ENUM_DEFN( LogEventPhase, PhaseBC, "BC" ) \
ENUM_DEFN( LogEventPhase, PhaseBCE, "BCE" ) \
ENUM_DEFN( LogEventPhase, PhaseBE, "BE" ) \
ENUM_DEFN( LogEventPhase, PhaseC, "C" ) \
ENUM_DEFN( LogEventPhase, PhaseCA, "CA" ) \
ENUM_DEFN( LogEventPhase, PhaseCAE, "CAE" ) \
ENUM_DEFN( LogEventPhase, PhaseCE, "CE" ) \
ENUM_DEFN( LogEventPhase, PhaseN, "N" ) \
ENUM_DEFN( LogEventPhase, PhaseNa, "" ) \
ENUM_DEFN( LogEventPhase, PhaseNAN, "" ) \
ENUM_DEFN( LogEventPhase, PhaseR, "R" ) \
ENUM_DEFN( LogEventPhase, PhaseRS, "RS" ) \
ENUM_DEFN( LogEventPhase, PhaseS, "S" ) \
ENUM_DEFN( LogEventPhase, PhaseST, "ST" ) \
ENUM_DEFN( LogEventPhase, PhaseT, "T" ) \
ENUM_DEFN( LogEventPhase, PhaseTR, "TR" ) \
ENUM_DEFN( EventDeState, eventDeStateForward, "+" ) \
ENUM_DEFN( EventDeState, eventDeStateReverse, "-" ) \
ENUM_DEFN( EventDeState, eventDeStateUnknown, "?" ) \
ENUM_DEFN( ActiveGrp, activeGrp1, "1" ) \
ENUM_DEFN( ActiveGrp, activeGrp2, "2" ) \
ENUM_DEFN( ActiveGrp, activeGrp3, "3" ) \
ENUM_DEFN( ActiveGrp, activeGrp4, "4" ) \
ENUM_DEFN( ActiveGrp, activeGrpNoGroup, "" ) \
ENUM_DEFN( CmsErrorCodes, CloseSwitchgearFailed, "Close request failed" ) \
ENUM_DEFN( CmsErrorCodes, DataLogFailed, "Data Log Failed" ) \
ENUM_DEFN( CmsErrorCodes, DirectoryNotExisting, "Directory does not exist" ) \
ENUM_DEFN( CmsErrorCodes, DuplicateMessageInQueue, "Duplicate Message In Queue" ) \
ENUM_DEFN( CmsErrorCodes, FileNameConflict, "File Name Conflict" ) \
ENUM_DEFN( CmsErrorCodes, FileNotExisting, "File does not exist" ) \
ENUM_DEFN( CmsErrorCodes, FileReadError, "File Read Error" ) \
ENUM_DEFN( CmsErrorCodes, FileWriteError, "File Write Error" ) \
ENUM_DEFN( CmsErrorCodes, InaccurateValue, "Value is inaccurate" ) \
ENUM_DEFN( CmsErrorCodes, IncorrectAccessCode, "Incorrect Access Code" ) \
ENUM_DEFN( CmsErrorCodes, InvalidChunkIndex, "Invalid Chunk Index" ) \
ENUM_DEFN( CmsErrorCodes, InvalidCommand, "Invalid Command" ) \
ENUM_DEFN( CmsErrorCodes, InvalidDataPointID, "Invalid Data Point ID" ) \
ENUM_DEFN( CmsErrorCodes, InvalidDirectoryName, "Invalid Directory Name" ) \
ENUM_DEFN( CmsErrorCodes, InvalidFileName, "Invalid File Name" ) \
ENUM_DEFN( CmsErrorCodes, InvalidPermissions, "Invalid Permissions" ) \
ENUM_DEFN( CmsErrorCodes, InvalidValueSize, "Invalid Value Size" ) \
ENUM_DEFN( CmsErrorCodes, NullValue, "Null Value" ) \
ENUM_DEFN( CmsErrorCodes, OK, "OK" ) \
ENUM_DEFN( CmsErrorCodes, OpenSwitchgearFailed, "Open request failed" ) \
ENUM_DEFN( CmsErrorCodes, OutOfSpace, "Out Of Space" ) \
ENUM_DEFN( CmsErrorCodes, ProcessingFileError, "File processing error" ) \
ENUM_DEFN( CmsErrorCodes, RequestApprovalTimeout, "Request Approval Timeout" ) \
ENUM_DEFN( CmsErrorCodes, RequestDenied, "Request Denied" ) \
ENUM_DEFN( CmsErrorCodes, SystemError, "System Error" ) \
ENUM_DEFN( CmsErrorCodes, TimedOut, "Timed Out" ) \
ENUM_DEFN( CmsErrorCodes, ValueOutOfRange, "Value Out Of Range" ) \
ENUM_DEFN( LineSupplyStatus, High, "HIGH" ) \
ENUM_DEFN( LineSupplyStatus, Low, "LOW" ) \
ENUM_DEFN( LineSupplyStatus, Off, "OFF" ) \
ENUM_DEFN( LineSupplyStatus, On, "ON" ) \
ENUM_DEFN( LineSupplyStatus, Surge, "SURGE" ) \
ENUM_DEFN( TccCurveName, TimeDefinite, "TD" ) \
ENUM_DEFN( TccCurveName, UserDefined, "UDC" ) \
ENUM_DEFN( HmiTccCurveClass, NoReset, "No Reset" ) \
ENUM_DEFN( HmiTccCurveClass, Reset, "Reset" ) \
ENUM_DEFN( HmiTccCurveClass, Td, "TD" ) \
ENUM_DEFN( SwState, Closed, "Closed" ) \
ENUM_DEFN( SwState, Failure, "Failure" ) \
ENUM_DEFN( SwState, ILock, "MechLock" ) \
ENUM_DEFN( SwState, Lockout, "Lockout" ) \
ENUM_DEFN( SwState, LogicallyLocked, "SWLocked" ) \
ENUM_DEFN( SwState, Open, "Open" ) \
ENUM_DEFN( SwState, OpenABR, "Open" ) \
ENUM_DEFN( SwState, OpenAC, "Open UV3" ) \
ENUM_DEFN( SwState, OpenACO, "Open" ) \
ENUM_DEFN( SwState, Unknown, "Disconn." ) \
ENUM_DEFN( OcEfSefDirs, NNN, "-/-/-" ) \
ENUM_DEFN( OcEfSefDirs, NNP, "-/-/+" ) \
ENUM_DEFN( OcEfSefDirs, NNU, "-/-/?" ) \
ENUM_DEFN( OcEfSefDirs, NPN, "-/+/-" ) \
ENUM_DEFN( OcEfSefDirs, NPP, "-/+/+" ) \
ENUM_DEFN( OcEfSefDirs, NPU, "-/+/?" ) \
ENUM_DEFN( OcEfSefDirs, NUN, "-/?/-" ) \
ENUM_DEFN( OcEfSefDirs, NUP, "-/?/+" ) \
ENUM_DEFN( OcEfSefDirs, NUU, "-/?/?" ) \
ENUM_DEFN( OcEfSefDirs, PNN, "+/-/-" ) \
ENUM_DEFN( OcEfSefDirs, PNP, "+/-/+" ) \
ENUM_DEFN( OcEfSefDirs, PNU, "+/-/?" ) \
ENUM_DEFN( OcEfSefDirs, PPN, "+/+/-" ) \
ENUM_DEFN( OcEfSefDirs, PPP, "+/+/+" ) \
ENUM_DEFN( OcEfSefDirs, PPU, "+/+/?" ) \
ENUM_DEFN( OcEfSefDirs, PUN, "+/?/-" ) \
ENUM_DEFN( OcEfSefDirs, PUP, "+/?/+" ) \
ENUM_DEFN( OcEfSefDirs, PUU, "+/?/?" ) \
ENUM_DEFN( OcEfSefDirs, UNN, "?/-/-" ) \
ENUM_DEFN( OcEfSefDirs, UNP, "?/-/+" ) \
ENUM_DEFN( OcEfSefDirs, UNU, "?/-/?" ) \
ENUM_DEFN( OcEfSefDirs, UPN, "?/+/-" ) \
ENUM_DEFN( OcEfSefDirs, UPP, "?/+/+" ) \
ENUM_DEFN( OcEfSefDirs, UPU, "?/+/?" ) \
ENUM_DEFN( OcEfSefDirs, UUN, "?/?/-" ) \
ENUM_DEFN( OcEfSefDirs, UUP, "?/?/+" ) \
ENUM_DEFN( OcEfSefDirs, UUU, "?/?/?" ) \
ENUM_DEFN( TripModeDLA, Alarm, "Alarm" ) \
ENUM_DEFN( TripModeDLA, Disable, "Disable" ) \
ENUM_DEFN( TripModeDLA, Lockout, "Lockout" ) \
ENUM_DEFN( HmiAuthGroup, Group0, "Default" ) \
ENUM_DEFN( HmiAuthGroup, Group1, "Password" ) \
ENUM_DEFN( HmiAuthGroup, Group10, "Group 10" ) \
ENUM_DEFN( HmiAuthGroup, Group11, "Group 11" ) \
ENUM_DEFN( HmiAuthGroup, Group12, "Group 12" ) \
ENUM_DEFN( HmiAuthGroup, Group13, "Group 13" ) \
ENUM_DEFN( HmiAuthGroup, Group14, "Group 14" ) \
ENUM_DEFN( HmiAuthGroup, Group15, "Group 15" ) \
ENUM_DEFN( HmiAuthGroup, Group2, "Password" ) \
ENUM_DEFN( HmiAuthGroup, Group3, "Factory" ) \
ENUM_DEFN( HmiAuthGroup, Group4, "Recovery" ) \
ENUM_DEFN( HmiAuthGroup, Group5, "Group 5" ) \
ENUM_DEFN( HmiAuthGroup, Group6, "Group 6" ) \
ENUM_DEFN( HmiAuthGroup, Group7, "Group 7" ) \
ENUM_DEFN( HmiAuthGroup, Group8, "Group 8" ) \
ENUM_DEFN( HmiAuthGroup, Group9, "Group 9" ) \
ENUM_DEFN( Bool, False, "False" ) \
ENUM_DEFN( Bool, True, "True" ) \
ENUM_DEFN( CommsPort, GPS, "GPS" ) \
ENUM_DEFN( CommsPort, Lan, "LAN" ) \
ENUM_DEFN( CommsPort, LanB, "LAN2" ) \
ENUM_DEFN( CommsPort, MobileNetwork, "Mobile Network Modem" ) \
ENUM_DEFN( CommsPort, PortNone, "None" ) \
ENUM_DEFN( CommsPort, Rs232, "RS232" ) \
ENUM_DEFN( CommsPort, Rs232Dte2, "RS232P" ) \
ENUM_DEFN( CommsPort, UsbA, "USBA" ) \
ENUM_DEFN( CommsPort, UsbB, "USBB" ) \
ENUM_DEFN( CommsPort, UsbC, "USBC" ) \
ENUM_DEFN( CommsPort, UsbD, "USBA2" ) \
ENUM_DEFN( CommsPort, UsbE, "USBB2" ) \
ENUM_DEFN( CommsPort, UsbF, "USBC2" ) \
ENUM_DEFN( CommsPort, UsbGadget, "CMS" ) \
ENUM_DEFN( CommsPort, Wlan, "WLAN" ) \
ENUM_DEFN( CommsSerialPinStatus, CommsSerialPinStatusHigh, "High" ) \
ENUM_DEFN( CommsSerialPinStatus, CommsSerialPinStatusIgnore, "Ignore" ) \
ENUM_DEFN( CommsSerialPinStatus, CommsSerialPinStatusLow, "Low" ) \
ENUM_DEFN( CommsConnectionStatus, CommsConnectionStatusConnected, "Connected" ) \
ENUM_DEFN( CommsConnectionStatus, CommsConnectionStatusConnecting, "Connecting" ) \
ENUM_DEFN( CommsConnectionStatus, CommsConnectionStatusDisconnected, "Disconnected" ) \
ENUM_DEFN( CommsPortDetectedType, BluetoothType, "Bluetooth" ) \
ENUM_DEFN( CommsPortDetectedType, DualSerialType, "Dual Serial" ) \
ENUM_DEFN( CommsPortDetectedType, GPRSType, "GPRS" ) \
ENUM_DEFN( CommsPortDetectedType, LanType, "LAN" ) \
ENUM_DEFN( CommsPortDetectedType, MobileNetworkType, "Mobile Network Modem" ) \
ENUM_DEFN( CommsPortDetectedType, SerialType, "Serial" ) \
ENUM_DEFN( CommsPortDetectedType, UnknownType, "Unknown" ) \
ENUM_DEFN( CommsPortDetectedType, UnsupportedType, "Unsupported" ) \
ENUM_DEFN( CommsPortDetectedType, WlanType, "WLAN" ) \
ENUM_DEFN( SerialPortConfigType, NotUsed, "Disabled" ) \
ENUM_DEFN( SerialPortConfigType, SerialDirect, "Serial Direct" ) \
ENUM_DEFN( SerialPortConfigType, SerialGPRS, "GPRS" ) \
ENUM_DEFN( SerialPortConfigType, SerialModem, "Modem" ) \
ENUM_DEFN( SerialPortConfigType, SerialRadio, "Radio" ) \
ENUM_DEFN( UsbPortConfigType, MobileNetwork, "Mobile Network" ) \
ENUM_DEFN( UsbPortConfigType, NotUsed, "Disabled" ) \
ENUM_DEFN( UsbPortConfigType, UsbBlueTooth, "Bluetooth" ) \
ENUM_DEFN( UsbPortConfigType, UsbGPRS, "GPRS" ) \
ENUM_DEFN( UsbPortConfigType, UsbLAN, "LAN" ) \
ENUM_DEFN( UsbPortConfigType, UsbSerialDirect, "Serial Direct" ) \
ENUM_DEFN( UsbPortConfigType, UsbSerialModem, "Modem" ) \
ENUM_DEFN( UsbPortConfigType, UsbSerialRadio, "Radio" ) \
ENUM_DEFN( UsbPortConfigType, UsbWLAN, "WLAN" ) \
ENUM_DEFN( LanPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN( LanPortConfigType, LAN, "LAN" ) \
ENUM_DEFN( DataflowUnit, UsingByteCount, "Byte" ) \
ENUM_DEFN( DataflowUnit, UsingPacketCount, "Packet" ) \
ENUM_DEFN( CommsConnType, Disabled, "Disabled" ) \
ENUM_DEFN( CommsConnType, LAN, "LAN" ) \
ENUM_DEFN( CommsConnType, Serial, "Serial" ) \
ENUM_DEFN( CommsConnType, SerialModem, "SerialModem" ) \
ENUM_DEFN( CommsConnType, SerialRadio, "SerialRadio" ) \
ENUM_DEFN( CommsConnType, WLAN, "WLAN" ) \
ENUM_DEFN( YesNo, No, "No" ) \
ENUM_DEFN( YesNo, Yes, "Yes" ) \
ENUM_DEFN( ProtectionState, ABR, "Open: ABR" ) \
ENUM_DEFN( ProtectionState, AR, "Open: AR" ) \
ENUM_DEFN( ProtectionState, Fault, "Closed: Fault" ) \
ENUM_DEFN( ProtectionState, Init, "Unknown: Initialised" ) \
ENUM_DEFN( ProtectionState, Lockout, "Open: Lockout" ) \
ENUM_DEFN( ProtectionState, NFF, "Closed: NFF" ) \
ENUM_DEFN( ProtectionState, OpenAC, "Open UV3 AutoClose" ) \
ENUM_DEFN( ProtectionState, OpenACO, "Open: ACO" ) \
ENUM_DEFN( ProtectionState, Pup, "Closed: Pickup" ) \
ENUM_DEFN( AutoIp, NotUseDhcp, "No" ) \
ENUM_DEFN( AutoIp, YesUsingDhcp, "Yes" ) \
ENUM_DEFN( ProgramSimCmd, None, "No command (default value)" ) \
ENUM_DEFN( ProgramSimCmd, WriteFile, "Write file /var/nand/simimg/img.new" ) \
ENUM_DEFN( ProgramSimCmd, WriteFileNoRestart, "Write but do not restart Relay" ) \
ENUM_DEFN( UsbDiscCmd, CopyDNP3SAUpdateKey, "Copy DNP3-SA update key" ) \
ENUM_DEFN( UsbDiscCmd, CopyHrm, "Copy harmonic logs" ) \
ENUM_DEFN( UsbDiscCmd, CopyInt, "Copy interruption logs" ) \
ENUM_DEFN( UsbDiscCmd, CopyLogs, "Copy Logs" ) \
ENUM_DEFN( UsbDiscCmd, CopySag, "Copy sag/swell logs" ) \
ENUM_DEFN( UsbDiscCmd, CopyUpdates, "Copy Updates" ) \
ENUM_DEFN( UsbDiscCmd, CopyUsbInstallFiles, "Copy installation files" ) \
ENUM_DEFN( UsbDiscCmd, Eject, "Eject USB" ) \
ENUM_DEFN( UsbDiscCmd, FindDNP3SAUpdateKey, "Find DNP3-SA update key" ) \
ENUM_DEFN( UsbDiscCmd, None, "No command" ) \
ENUM_DEFN( UsbDiscCmd, RestoreLogs, "Restore logs" ) \
ENUM_DEFN( UsbDiscCmd, RestoreSettings, "Restore settings" ) \
ENUM_DEFN( UsbDiscStatus, AboutToUnmount, "Syncing Filesystem" ) \
ENUM_DEFN( UsbDiscStatus, BusyCopyDNP3SAUpdateKey, "Copying DNP3SA key" ) \
ENUM_DEFN( UsbDiscStatus, BusyCopyLog, "Copying Logs" ) \
ENUM_DEFN( UsbDiscStatus, BusyCopyOsc, "Copying Captures" ) \
ENUM_DEFN( UsbDiscStatus, BusyCopyUpdate, "Copying Updates" ) \
ENUM_DEFN( UsbDiscStatus, BusyFindDNP3SAUpdateKey, "Searching" ) \
ENUM_DEFN( UsbDiscStatus, NoDisc, "No Disc" ) \
ENUM_DEFN( UsbDiscStatus, Ready, "Ready" ) \
ENUM_DEFN( UpdateError, BackupBlocked, "Backup obstructed" ) \
ENUM_DEFN( UpdateError, BackupLogsFailed, "Backup of logs failed" ) \
ENUM_DEFN( UpdateError, BackupSettingsFailed, "Backup of settings failed" ) \
ENUM_DEFN( UpdateError, CommsError, "Comms Error" ) \
ENUM_DEFN( UpdateError, DbAccessError, "Database Access Error" ) \
ENUM_DEFN( UpdateError, DbVersion, "Invalid Database Version" ) \
ENUM_DEFN( UpdateError, FileSystemIo, "Internal File System Error" ) \
ENUM_DEFN( UpdateError, FileSystemMismatch, "Incompatible file system" ) \
ENUM_DEFN( UpdateError, HwMajor, "Unsupported hardware version" ) \
ENUM_DEFN( UpdateError, InvalidMicrokernel, "Invalid microkernel" ) \
ENUM_DEFN( UpdateError, MissingDependency, "Missing Dependency" ) \
ENUM_DEFN( UpdateError, MissingSerialNum, "Missing Serial Number" ) \
ENUM_DEFN( UpdateError, ModuleCode, "Unsupported module" ) \
ENUM_DEFN( UpdateError, NoFiles, "No Files" ) \
ENUM_DEFN( UpdateError, None, "None" ) \
ENUM_DEFN( UpdateError, RevertFailed, "Revert Failed" ) \
ENUM_DEFN( UpdateError, Unspecified, "Unspecified Error" ) \
ENUM_DEFN( UpdateError, UpdateCount, "Too Many Update Files" ) \
ENUM_DEFN( UpdateError, UpdateInvalid, "Invalid Update File" ) \
ENUM_DEFN( UpdateError, UpdateTimeout, "Timeout" ) \
ENUM_DEFN( UpdateError, UpdateUnknown, "Unrecognised Update Type" ) \
ENUM_DEFN( UpdateError, UsbIoErr, "USB Read Error" ) \
ENUM_DEFN( SerialPartCode, DBS01, "DBS-01" ) \
ENUM_DEFN( SerialPartCode, DNP3S01, "DNP3S-01" ) \
ENUM_DEFN( SerialPartCode, FPGA01, "FPGA-01" ) \
ENUM_DEFN( SerialPartCode, GPIO01, "GPIO-01" ) \
ENUM_DEFN( SerialPartCode, Invalid, "Invalid" ) \
ENUM_DEFN( SerialPartCode, LANG01, "LANG-01" ) \
ENUM_DEFN( SerialPartCode, LANG20, "LANG-20" ) \
ENUM_DEFN( SerialPartCode, OSM200_15_16_630, "OSM 15-16-630-200" ) \
ENUM_DEFN( SerialPartCode, OSM203_27_12_630, "OSM 27-12-630-203" ) \
ENUM_DEFN( SerialPartCode, OSM210_15_16_630, "OSM 15-16-630-210" ) \
ENUM_DEFN( SerialPartCode, OSM210_27_12_630, "OSM 27-12-630-213" ) \
ENUM_DEFN( SerialPartCode, OSM211_15_16_630, "OSM 15-16-630-211" ) \
ENUM_DEFN( SerialPartCode, OSM220_15_16_630, "OSM 15-16-630-220" ) \
ENUM_DEFN( SerialPartCode, OSM223_27_12_630, "OSM 27-12-630-223" ) \
ENUM_DEFN( SerialPartCode, OSM300_27_12_630, "OSM 27-12-630-300" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_12_630, "OSM 38-12-630-300" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_12_800, "OSM 38-12-800-300" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_12_800_60C, "OSM 38-12-800-300-60C" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_12_800_SEF, "OSM 38-12-800-300-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_16_800, "OSM 38-16-800-300" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_16_800_60C, "OSM 38-16-800-300-60C" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_16_800_D60, "OSM 38-16-800-300-D60" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_16_800_DCT, "OSM 38-16-800-300-DCT" ) \
ENUM_DEFN( SerialPartCode, OSM300_38_16_800_SEF, "OSM 38-16-800-300-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM301_38_12_630, "OSM 38-12-630-301" ) \
ENUM_DEFN( SerialPartCode, OSM301_38_12_800, "OSM 38-12-800-301" ) \
ENUM_DEFN( SerialPartCode, OSM301_38_16_800, "OSM 38-16-800-301" ) \
ENUM_DEFN( SerialPartCode, OSM302_38_12_800, "OSM 38-12-800-302" ) \
ENUM_DEFN( SerialPartCode, OSM302_38_12_800_SEF, "OSM 38-12-800-302-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM302_38_16_800, "OSM 38-16-800-302" ) \
ENUM_DEFN( SerialPartCode, OSM302_38_16_800_SEF, "OSM 38-16-800-302-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM303_38_12_800, "OSM 38-12-800-303" ) \
ENUM_DEFN( SerialPartCode, OSM303_38_16_800, "OSM 38-16-800-303" ) \
ENUM_DEFN( SerialPartCode, OSM304_38_16_800, "OSM 38-16-800-304" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_12_800_DIN, "OSM 15-12-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800, "OSM 15-12-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800_60C, "OSM 15-16-800-310-60C" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800_DIN, "OSM 15-16-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800_GMK, "OSM 15-16-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800_REAL, "OSM 15-16-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_15_16_800_SEF, "OSM 15-16-800-310-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM310_27_12_800, "OSM 27-12-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_27_12_800_60C, "OSM 27-12-800-310-60C" ) \
ENUM_DEFN( SerialPartCode, OSM310_27_12_800_DIN, "OSM 27-12-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_27_12_800_GMK, "OSM 27-12-800-310" ) \
ENUM_DEFN( SerialPartCode, OSM310_27_12_800_SEF, "OSM 27-12-800-310-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM311_15_16_800, "OSM 15-16-800-311" ) \
ENUM_DEFN( SerialPartCode, OSM311_15_16_800_DIN, "OSM 15-16-800-311" ) \
ENUM_DEFN( SerialPartCode, OSM311_27_12_800, "OSM 27-12-800-311" ) \
ENUM_DEFN( SerialPartCode, OSM311_27_12_800_DIN, "OSM 27-12-800-311" ) \
ENUM_DEFN( SerialPartCode, OSM312_15_12_800, "OSM 15-12-800-312" ) \
ENUM_DEFN( SerialPartCode, OSM312_15_16_800, "OSM 15-16-800-312" ) \
ENUM_DEFN( SerialPartCode, OSM312_15_16_800_SEF, "OSM 15-16-800-312-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM312_27_12_800, "OSM 27-12-800-312" ) \
ENUM_DEFN( SerialPartCode, OSM312_27_12_800_SEF, "OSM 27-12-800-312-SEF" ) \
ENUM_DEFN( SerialPartCode, OSM313_15_16_800, "OSM 15-16-800-313" ) \
ENUM_DEFN( SerialPartCode, OSM313_27_12_800, "OSM 27-12-800-313" ) \
ENUM_DEFN( SerialPartCode, OSM314_15_16_800, "OSM 15-16-800-314" ) \
ENUM_DEFN( SerialPartCode, OSM314_27_12_800, "OSM 27-12-800-314" ) \
ENUM_DEFN( SerialPartCode, OSM320_15_12_800, "OSM 15-12-800-320" ) \
ENUM_DEFN( SerialPartCode, OSM320_27_12_800, "OSM 27-12-800-320" ) \
ENUM_DEFN( SerialPartCode, PAN01, "PAN-01" ) \
ENUM_DEFN( SerialPartCode, PSC20, "PSC-20" ) \
ENUM_DEFN( SerialPartCode, RLM01, "RLM-01" ) \
ENUM_DEFN( SerialPartCode, RLM02, "RLM-02" ) \
ENUM_DEFN( SerialPartCode, RLM03, "RLM-03" ) \
ENUM_DEFN( SerialPartCode, RLM15, "RLM-15" ) \
ENUM_DEFN( SerialPartCode, RLM15_4G, "RLM-15-4G" ) \
ENUM_DEFN( SerialPartCode, RLM20, "RLM-20" ) \
ENUM_DEFN( SerialPartCode, RLM20_4G, "RLM-20-4G" ) \
ENUM_DEFN( SerialPartCode, S61850_CID01, "S61850 CID" ) \
ENUM_DEFN( SerialPartCode, SIM01, "SIM-01" ) \
ENUM_DEFN( SerialPartCode, SIM02, "SIM-02" ) \
ENUM_DEFN( SerialPartCode, SIM03, "SIM-03" ) \
ENUM_DEFN( SerialPartCode, SIM20, "SIM-20" ) \
ENUM_DEFN( SerialPartCode, SMP01, "SMP-01" ) \
ENUM_DEFN( SerialPartCode, UBOOT01, "UBOOT-01" ) \
ENUM_DEFN( SerialPartCode, UBOOT02, "UBOOT-02" ) \
ENUM_DEFN( SerialPartCode, UBOOT03, "UBOOT-03" ) \
ENUM_DEFN( SerialPartCode, UBOOT15, "UBOOT-15" ) \
ENUM_DEFN( SerialPartCode, UBOOT15_4G, "UBOOT-15-4G" ) \
ENUM_DEFN( SerialPartCode, UBOOT20, "UBOOT-20" ) \
ENUM_DEFN( SerialPartCode, UBOOT20_4G, "UBOOT20_4G" ) \
ENUM_DEFN( SerialPartCode, UKERN01, "UKERN-01" ) \
ENUM_DEFN( SerialPartCode, UKERN02, "UKERN-02" ) \
ENUM_DEFN( SerialPartCode, UKERN03, "UKERN-03" ) \
ENUM_DEFN( SerialPartCode, UKERN15, "UKERN-15" ) \
ENUM_DEFN( SerialPartCode, UKERN15_4G, "UKERN-15-4G" ) \
ENUM_DEFN( HmiMsgboxTitle, FastkeyError, "WARNING" ) \
ENUM_DEFN( HmiMsgboxTitle, SetDatapoint, "CHANGE VALUE WARNING" ) \
ENUM_DEFN( HmiMsgboxTitle, Unknown, "MESSAGE" ) \
ENUM_DEFN( HmiMsgboxTitle, USBOperation, "USB Operation" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyABR, "modify Auto Backfeed Restore (ABR)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyACO, "modify Auto Change Over (ACO)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyAR, "modify Auto-Reclosing (AR)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyCL, "modify Cold Load (CL)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyClose, "close" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyEF, "modify Earth Fault (EF)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyGroup, "modify active group" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyHLT, "modify Hot Line Tag (HLT)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyLL, "modify Live Line (LL)" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyLogicVAR1, "modify VAR1" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyLogicVAR2, "modify VAR2" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyMode, "modify remote mode" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyOpen, "open" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyPhaseSelA, "modify Phase Select A" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyPhaseSelB, "modify Phase Select B" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyPhaseSelC, "modify Phase Select C" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyProtection, "modify protection" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeySEF, "modify SEF" ) \
ENUM_DEFN( HmiMsgboxOperation, FastkeyUV, "modify Undervoltage (UV)" ) \
ENUM_DEFN( HmiMsgboxOperation, InstallFirmwareFromUSB, "install firmware from USB" ) \
ENUM_DEFN( HmiMsgboxOperation, SetDatapoint, "edit value" ) \
ENUM_DEFN( HmiMsgboxOperation, Unknown, "perform operation" ) \
ENUM_DEFN( HmiMsgboxError, Blank, "" ) \
ENUM_DEFN( HmiMsgboxError, DpidConfirm, "Blocked" ) \
ENUM_DEFN( HmiMsgboxError, DpidWrite, "Denied" ) \
ENUM_DEFN( HmiMsgboxError, DpidWriteMode, "Wrong control mode" ) \
ENUM_DEFN( HmiMsgboxError, ExtLoadOverload, "External Load Overload" ) \
ENUM_DEFN( HmiMsgboxError, FastkeyDisabled, "Fast Key disabled" ) \
ENUM_DEFN( HmiMsgboxError, Internal, "Internal error" ) \
ENUM_DEFN( HmiMsgboxError, Unknown, "Error unknown" ) \
ENUM_DEFN( HmiMsgboxError, UpdateInProgress, "Another source is performing update" ) \
ENUM_DEFN( HmiMsgboxError, WriteHlt, "Hot Line Tag enabled" ) \
ENUM_DEFN( BaxMetaId, DbMajor, "{I32}Database major version" ) \
ENUM_DEFN( BaxMetaId, DbMinor, "{I32}Database minor version" ) \
ENUM_DEFN( BaxMetaId, Desc, "{UTF8}Description" ) \
ENUM_DEFN( BaxMetaId, FamilyId, "{I32}Family ID" ) \
ENUM_DEFN( BaxMetaId, FileData, "{I32:SerialPartCode}File data type" ) \
ENUM_DEFN( BaxMetaId, FsType, "{I32:FileSystemType}File System Format" ) \
ENUM_DEFN( BaxMetaId, HwMajor, "{I32}Max supported major hardware version" ) \
ENUM_DEFN( BaxMetaId, HwMajorList, "{I32_ARRAY}Supported major hardware versions" ) \
ENUM_DEFN( BaxMetaId, HwMajorOthers, "{I32_ARRAY}Other hardware versions" ) \
ENUM_DEFN( BaxMetaId, HwType, "{I32:SerialPartCode}Target hardware type" ) \
ENUM_DEFN( BaxMetaId, HwTypeOthers, "{I32_ARRAY}Other hardware types" ) \
ENUM_DEFN( BaxMetaId, LanguageCode, "{UTF8}Language Code" ) \
ENUM_DEFN( BaxMetaId, LanguageId, "{I32}Language ID" ) \
ENUM_DEFN( BaxMetaId, LanguageName, "{UTF8}Language Name" ) \
ENUM_DEFN( BaxMetaId, ObfuscationCheck, "{RAW}Obfuscation check value" ) \
ENUM_DEFN( BaxMetaId, ObfuscationSalt, "{RAW}Obfuscation salt" ) \
ENUM_DEFN( BaxMetaId, ResourceId, "{I32}Resource ID" ) \
ENUM_DEFN( BaxMetaId, SmpDownFailConsecutive, "{I32}SMP Consecutive Shutdown Failures" ) \
ENUM_DEFN( BaxMetaId, SmpDownFailTotal, "{I32}SMP Total Shutdown Failures" ) \
ENUM_DEFN( BaxMetaId, SmpDownSrc, "{I32}SMP Shutdown Source" ) \
ENUM_DEFN( BaxMetaId, SmpDownTime, "{RAW}SMP Shutdown Time" ) \
ENUM_DEFN( BaxMetaId, SmpDownType, "{I32}SMP Shutdown Type" ) \
ENUM_DEFN( BaxMetaId, SmpExceptionCount, "{I32}SMP Exception Count" ) \
ENUM_DEFN( BaxMetaId, SmpExceptions, "{RAW}SMP Exceptions" ) \
ENUM_DEFN( BaxMetaId, SmpLimpType, "{I32}SMP Limp Type" ) \
ENUM_DEFN( BaxMetaId, SmpRestoreFailed, "{I32}SMP Restore Failed" ) \
ENUM_DEFN( BaxMetaId, SmpState, "{RAW}SMP State" ) \
ENUM_DEFN( BaxMetaId, SmpStep, "{RAW}SMP Step" ) \
ENUM_DEFN( BaxMetaId, SmpUpFailConsecutive, "{I32}SMP Consecutive Startup Failures" ) \
ENUM_DEFN( BaxMetaId, SmpUpFailTotal, "{I32}SMP Total Startup Failures" ) \
ENUM_DEFN( BaxMetaId, SmpUpMode, "{I32}SMP Startup Mode" ) \
ENUM_DEFN( BaxMetaId, Source, "{UTF8}File data source" ) \
ENUM_DEFN( BaxMetaId, VerMajor, "{I32}Major version number" ) \
ENUM_DEFN( BaxMetaId, VerMinor, "{I32}Minor version number" ) \
ENUM_DEFN( BaxMetaId, VerRc, "{I32}Release candidate number" ) \
ENUM_DEFN( BaxMetaId, VerStr, "{UTF8}File data version" ) \
ENUM_DEFN( LogicStrCode, And, "Logical AND" ) \
ENUM_DEFN( LogicStrCode, Copy, "Duplicate Top-Of-Stack" ) \
ENUM_DEFN( LogicStrCode, Eq, "Equal" ) \
ENUM_DEFN( LogicStrCode, FastTrip, "Fast Trip (Private)" ) \
ENUM_DEFN( LogicStrCode, Gt, "Greater Than" ) \
ENUM_DEFN( LogicStrCode, Iff, "If Top-Of-Stack False" ) \
ENUM_DEFN( LogicStrCode, Ift, "If Top-Of-Stack True" ) \
ENUM_DEFN( LogicStrCode, Lt, "Less Than" ) \
ENUM_DEFN( LogicStrCode, Nand, "Logical NAND" ) \
ENUM_DEFN( LogicStrCode, Nor, "Logical NOR" ) \
ENUM_DEFN( LogicStrCode, Not, "Logical NOT" ) \
ENUM_DEFN( LogicStrCode, Null, "NULL" ) \
ENUM_DEFN( LogicStrCode, Or, "Logical OR" ) \
ENUM_DEFN( LogicStrCode, Push, "{I32}Push Immediate Data" ) \
ENUM_DEFN( LogicStrCode, Read, "{UI16}Read Datapoint" ) \
ENUM_DEFN( LogicStrCode, Sto, "{UI16}Write Datapoint" ) \
ENUM_DEFN( LogicStrCode, Stop, "Stop" ) \
ENUM_DEFN( LogicStrCode, Xor, "Logical XOR" ) \
ENUM_DEFN( DbPopulate, Config, "Config file" ) \
ENUM_DEFN( DbPopulate, ConfigDef1, "Default config 1" ) \
ENUM_DEFN( DbPopulate, ConfigDef2, "Default config 2" ) \
ENUM_DEFN( DbPopulate, CrashSave, "Crash save file" ) \
ENUM_DEFN( DbPopulate, Schema, "Schema file" ) \
ENUM_DEFN( HmiMode, Limp, "Limp" ) \
ENUM_DEFN( HmiMode, Normal, "Normal" ) \
ENUM_DEFN( HmiMode, Shutdown, "Shutdown" ) \
ENUM_DEFN( HmiMode, Startup, "Startup" ) \
ENUM_DEFN( HmiMode, SwitchgearTypeMismatch, "Switchgear Type Mismatch" ) \
ENUM_DEFN( HmiMode, Update, "Update" ) \
ENUM_DEFN( ClearCommand, Clear, "Erased" ) \
ENUM_DEFN( ClearCommand, None, "" ) \
ENUM_DEFN( BxmlMapHmi, action_group, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, alerts, "" ) \
ENUM_DEFN( BxmlMapHmi, area, "" ) \
ENUM_DEFN( BxmlMapHmi, auth, "" ) \
ENUM_DEFN( BxmlMapHmi, authenticate, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, auto_fill, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, auto_update, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, border_style, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, button, "" ) \
ENUM_DEFN( BxmlMapHmi, code_point, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, columns, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, config, "" ) \
ENUM_DEFN( BxmlMapHmi, confirm_form, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, confirm_text, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, confirm_title, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, count, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, data_field, "" ) \
ENUM_DEFN( BxmlMapHmi, db_version, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, enabled, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, entry, "" ) \
ENUM_DEFN( BxmlMapHmi, enum, "" ) \
ENUM_DEFN( BxmlMapHmi, enums, "" ) \
ENUM_DEFN( BxmlMapHmi, expires_ms, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, family_id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, file_id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, file_version, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, font, "" ) \
ENUM_DEFN( BxmlMapHmi, form, "" ) \
ENUM_DEFN( BxmlMapHmi, forms, "" ) \
ENUM_DEFN( BxmlMapHmi, glyph, "" ) \
ENUM_DEFN( BxmlMapHmi, glyphs, "" ) \
ENUM_DEFN( BxmlMapHmi, height, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, help_text, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, hmi, "" ) \
ENUM_DEFN( BxmlMapHmi, id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, init_to_default, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, Invalid, "" ) \
ENUM_DEFN( BxmlMapHmi, label, "" ) \
ENUM_DEFN( BxmlMapHmi, language_code, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, language_display, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, language_id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, language_name, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, layout, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, link_down, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, link_id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, link_left, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, link_right, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, link_up, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, list, "" ) \
ENUM_DEFN( BxmlMapHmi, list_item, "" ) \
ENUM_DEFN( BxmlMapHmi, list_source, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, list_source_type, "List Source Type" ) \
ENUM_DEFN( BxmlMapHmi, list_update_trigger, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, log, "" ) \
ENUM_DEFN( BxmlMapHmi, log_label, "" ) \
ENUM_DEFN( BxmlMapHmi, major, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, marketing_version, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, mask_all, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, max, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, max_retry, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, min, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, minor, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, name, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, number, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, on_cancel, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_condition, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_draw, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_enter, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_got_focus, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_lost_focus, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_oversize, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, on_select, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, patch, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, pw_default, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, pw_init, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, pw_mask, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, reset_log, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, resource_id, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, resource_rc, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, scroll_amount, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, segment, "{HEX}" ) \
ENUM_DEFN( BxmlMapHmi, selectable, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, short_string, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, sort, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, source, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, string, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, svn_url, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, svn_version, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, tab_strip, "" ) \
ENUM_DEFN( BxmlMapHmi, text, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, text_align, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, user_name, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, user_version, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, version, "" ) \
ENUM_DEFN( BxmlMapHmi, view, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, view_group, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, visible, "{UTF8}" ) \
ENUM_DEFN( BxmlMapHmi, widgets, "" ) \
ENUM_DEFN( BxmlMapHmi, width, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, x_pos, "{I32}" ) \
ENUM_DEFN( BxmlMapHmi, y_pos, "{I32}" ) \
ENUM_DEFN( BxmlNamespace, Hmi, "HMI" ) \
ENUM_DEFN( BxmlType, I32, "I32" ) \
ENUM_DEFN( BxmlType, RAW, "RAW" ) \
ENUM_DEFN( BxmlType, Unknown, "Unknown" ) \
ENUM_DEFN( BxmlType, UTF8, "UTF8" ) \
ENUM_DEFN( CmsConnectStatus, Connected, "Connected" ) \
ENUM_DEFN( CmsConnectStatus, Deprecated_Idle, "Connection Idle with no activity in " ) \
ENUM_DEFN( CmsConnectStatus, Disconnected, "Disconnected (default value)" ) \
ENUM_DEFN( ERR, BAD_DB_ENTRY, "Bad DbEntry" ) \
ENUM_DEFN( ERR, BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN( ERR, BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, BAX_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, BAX_DATA_CHECKSUM, "Bad payload checksum" ) \
ENUM_DEFN( ERR, BAX_FOOTER_CHECKSUM, "Bad footer checksum" ) \
ENUM_DEFN( ERR, BAX_FSEEK, "Could not seek to the desired position" ) \
ENUM_DEFN( ERR, BAX_INVALID_MAGIC, "Invalid magic number" ) \
ENUM_DEFN( ERR, BAX_INVALID_SIZE, "Invalid footer size" ) \
ENUM_DEFN( ERR, BAX_INVALID_VERSION, "Bad footer" ) \
ENUM_DEFN( ERR, BAX_MALLOC, "" ) \
ENUM_DEFN( ERR, BAX_META_CHECKSUM, "Bad meta checksum" ) \
ENUM_DEFN( ERR, BAX_META_ID, "Invalid BAX meta ID" ) \
ENUM_DEFN( ERR, BAX_META_SIZE, "Invalid size field for meta data" ) \
ENUM_DEFN( ERR, BAX_NO_WRITE, "Missing write function" ) \
ENUM_DEFN( ERR, BAX_NOT_IMPLEMENTED, "" ) \
ENUM_DEFN( ERR, BAX_READ, "Read callback function failed." ) \
ENUM_DEFN( ERR, BAX_TYPE_MISMATCH, "Meta type mismatch" ) \
ENUM_DEFN( ERR, BAX_WRITE, "Write callback function failed" ) \
ENUM_DEFN( ERR, BXML_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, BXML_BUFFER_SIZE, "Buffer too small" ) \
ENUM_DEFN( ERR, BXML_EOF, "Unexpected end of file" ) \
ENUM_DEFN( ERR, BXML_FILE_MAJOR, "Unknown version" ) \
ENUM_DEFN( ERR, BXML_FILE_MARKER, "Invalid BXML file" ) \
ENUM_DEFN( ERR, BXML_MALLOC, "Dynamic memory allocation failed" ) \
ENUM_DEFN( ERR, BXML_NO_DATA_ATTACHED, "BXML file not attached" ) \
ENUM_DEFN( ERR, BXML_NO_MEM, "Insufficient internal memory" ) \
ENUM_DEFN( ERR, BXML_NODE_DATA_TYPE, "Invalid node data type" ) \
ENUM_DEFN( ERR, BXML_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN( ERR, BXML_NOT_SUPPORTED, "Unsupported operation" ) \
ENUM_DEFN( ERR, BXML_RECORD_ALIGNMENT, "Invalid record alignment" ) \
ENUM_DEFN( ERR, BXML_RECORD_SIZE, "Invalid record size" ) \
ENUM_DEFN( ERR, BXML_SEEK, "Could not seek to required position" ) \
ENUM_DEFN( ERR, BXML_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, CALIB_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, CALIB_SYSTEM, "" ) \
ENUM_DEFN( ERR, CAN_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, CAN_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, CAN_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, CAN_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, CHANNEL_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, CHANNEL_NO_MEM, "No memory" ) \
ENUM_DEFN( ERR, CHANNEL_NO_WRITER, "No writer" ) \
ENUM_DEFN( ERR, CHANNEL_OVERFLOW, "Message overflow" ) \
ENUM_DEFN( ERR, CHANNEL_PARTIAL, "Message timeout" ) \
ENUM_DEFN( ERR, CHANNEL_SYNC, "Invalid start-of-packet" ) \
ENUM_DEFN( ERR, CHANNEL_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, CMS_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, CMS_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, CMS_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, CMS_SERIAL_TIMEOUT, "" ) \
ENUM_DEFN( ERR, CMS_SYSTEM, "" ) \
ENUM_DEFN( ERR, COMMS_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, COMMS_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, DB_BAD_DB_ENTRY, "Bad DbEntry" ) \
ENUM_DEFN( ERR, DB_BAD_EVENT_DATA_SIZE, "Bad data size" ) \
ENUM_DEFN( ERR, DB_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DB_BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN( ERR, DB_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, DB_HLT_REFUSED, "Hot line tag refused" ) \
ENUM_DEFN( ERR, DB_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN( ERR, DB_MODE_REFUSED, "Failed local/remote test" ) \
ENUM_DEFN( ERR, DB_NON_RQST, "Non-requestable datapoint" ) \
ENUM_DEFN( ERR, DB_OUT_OF_RANGE, "Out of range" ) \
ENUM_DEFN( ERR, DB_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, DB_TIMEOUT, "Timeout" ) \
ENUM_DEFN( ERR, DB_UNKNOWN_DPID, "Unknown datapoint" ) \
ENUM_DEFN( ERR, DBQ_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DBQ_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, DBQ_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, DBQ_MALLOC, "" ) \
ENUM_DEFN( ERR, DBQ_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, DBSVR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DBSVR_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, DBSVR_CLWR_BUFF_FULL, "Client buffer full" ) \
ENUM_DEFN( ERR, DBSVR_CLWR_FAIL, "Client write failed" ) \
ENUM_DEFN( ERR, DBSVR_MALLOC, "" ) \
ENUM_DEFN( ERR, DBSVR_NO_SUCH_FILE, "" ) \
ENUM_DEFN( ERR, DBSVR_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, DBTEST_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DBTEST_SYSTEM, "" ) \
ENUM_DEFN( ERR, DBVER_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DBVER_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, DNP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, DNP_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN( ERR, DNP_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, EXTLOAD_OVERLOAD, "External Load Overload Active" ) \
ENUM_DEFN( ERR, EXTSUPPLY_OVERLOAD, "External Supply Overload" ) \
ENUM_DEFN( ERR, FONT_CODE_POINT_RANGE, "Code point out of range" ) \
ENUM_DEFN( ERR, FONT_FOPEN, "Call to fopen() system call failed" ) \
ENUM_DEFN( ERR, FONT_MALLOC, "Call to malloc() failed" ) \
ENUM_DEFN( ERR, FONT_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN( ERR, FONT_UNKNOWN_ARG, "Unknown command line argument" ) \
ENUM_DEFN( ERR, FONT_WARNING, "Warning treated as error" ) \
ENUM_DEFN( ERR, FSM_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, FSM_IN_TRANSITION, "Already in transition" ) \
ENUM_DEFN( ERR, FSM_INVALID_STATE_ID, "Unknown state ID" ) \
ENUM_DEFN( ERR, FSM_INVALID_TRANSITION, "Invalid transition" ) \
ENUM_DEFN( ERR, FSM_NO_STATE, "No initial state" ) \
ENUM_DEFN( ERR, HLT_REFUSED, "Hot line tag refused" ) \
ENUM_DEFN( ERR, HMI_AUTH_PASSWORD, "Invalid password" ) \
ENUM_DEFN( ERR, HMI_AUTH_PASSWORD_FORM, "Missing password form" ) \
ENUM_DEFN( ERR, HMI_AUTH_SET_PASSWORD, "Could not set password" ) \
ENUM_DEFN( ERR, HMI_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, HMI_BUFFER_SIZE, "Buffer too small" ) \
ENUM_DEFN( ERR, HMI_CHANNEL_NO_WRITER, "No writer on IPC channel" ) \
ENUM_DEFN( ERR, HMI_CHANNEL_OVERFLOW, "Channel overflow" ) \
ENUM_DEFN( ERR, HMI_CHANNEL_PARTIAL, "Chanel timeout" ) \
ENUM_DEFN( ERR, HMI_CHANNEL_SYNC, "Invalid start-of-packet" ) \
ENUM_DEFN( ERR, HMI_CIRCBUFF_NO_MEM, "No memory for circular buffer" ) \
ENUM_DEFN( ERR, HMI_COMMAND_DPID_TYPE, "Can't set unknown datapoint type" ) \
ENUM_DEFN( ERR, HMI_DM_COMMAND_ARGS, "Bad format for display manager command" ) \
ENUM_DEFN( ERR, HMI_DM_COMMAND_DPID, "Invalid datapoint for display manager command" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_DENIED, "Denied setting datapoint" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_ENTRY, "Invalid display manager datapoint entry" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_OUT_BUFFER, "Display manager print buffer too small" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_TYPE, "Display manager data type unknown" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_TYPE_MISMATCH, "Display manager datapoint type mismatch" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_TYPE_OPERATION, "Display manager datapoint operation not supported" ) \
ENUM_DEFN( ERR, HMI_DM_DPID_VALUE, "Invalid display manager datapoint value" ) \
ENUM_DEFN( ERR, HMI_DM_DRAW_NO_SPACE, "Display manager exhausted draw memory" ) \
ENUM_DEFN( ERR, HMI_DM_ENUM_ID, "Invalid display manager enum identifier" ) \
ENUM_DEFN( ERR, HMI_DM_ENUM_MISSING, "Display manager enum no string" ) \
ENUM_DEFN( ERR, HMI_DM_ENUM_NAME, "Invalid display manager enum name" ) \
ENUM_DEFN( ERR, HMI_DM_ENUM_VALUE, "Display manager enum value out of range" ) \
ENUM_DEFN( ERR, HMI_DM_FORM_DEPTH, "Exceeded display manager maximum menu depth" ) \
ENUM_DEFN( ERR, HMI_DM_MSGBOX_ID, "Invalid message box ID" ) \
ENUM_DEFN( ERR, HMI_DM_SUSPENDED, "Display manager suspended" ) \
ENUM_DEFN( ERR, HMI_DM_TEXT_DPID, "Display manager invalid datapoint ID" ) \
ENUM_DEFN( ERR, HMI_DM_VARIABLE_NOT_FOUND, "Unknown display manager variable" ) \
ENUM_DEFN( ERR, HMI_DM_VARIABLE_SIZE, "Display manager variable too small" ) \
ENUM_DEFN( ERR, HMI_DM_VARIABLE_TYPE, "Invalid display manager variable data type" ) \
ENUM_DEFN( ERR, HMI_DM_WIDGET_TYPE, "Invalid display manager widget operation" ) \
ENUM_DEFN( ERR, HMI_IO_COLLISION, "Device IO message collision" ) \
ENUM_DEFN( ERR, HMI_IO_CONFIG, "Device IO configuration failed" ) \
ENUM_DEFN( ERR, HMI_IO_CORRUPTED, "Device IO corrupted" ) \
ENUM_DEFN( ERR, HMI_IO_NAK, "Device IO NAK" ) \
ENUM_DEFN( ERR, HMI_IO_OPEN, "Bad device" ) \
ENUM_DEFN( ERR, HMI_IO_PERMISSIONS, "Device IO Insufficient permissions" ) \
ENUM_DEFN( ERR, HMI_IO_TIMEOUT, "Device IO timeout" ) \
ENUM_DEFN( ERR, HMI_IO_WRITE, "Device IO write failed" ) \
ENUM_DEFN( ERR, HMI_IPC_EXPECTED_SIZE, "Invalid IPC message size" ) \
ENUM_DEFN( ERR, HMI_IPC_MESSAGE_BUFFER, "Could not allocate message buffer" ) \
ENUM_DEFN( ERR, HMI_IPC_MESSAGE_ID, "Invalid message ID" ) \
ENUM_DEFN( ERR, HMI_IPC_MESSAGE_SIZE, "Invalid message size" ) \
ENUM_DEFN( ERR, HMI_IPC_NO_HANDLER, "No handler for IPC message" ) \
ENUM_DEFN( ERR, HMI_IPC_OPERATION, "Unknown operation for IPC message" ) \
ENUM_DEFN( ERR, HMI_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN( ERR, HMI_MEMPOOL_CORRUPT, "Memory pool is corrupt" ) \
ENUM_DEFN( ERR, HMI_MEMPOOL_FULL, "Memory pool full" ) \
ENUM_DEFN( ERR, HMI_MEMPOOL_INVALID_GROUP, "Invalid memory pool group." ) \
ENUM_DEFN( ERR, HMI_MEMPOOL_INVALID_POOL, "Invalid memory pool" ) \
ENUM_DEFN( ERR, HMI_MSG_NO_HANDLER, "No message handler" ) \
ENUM_DEFN( ERR, HMI_MSG_TIMEOUT, "Message timeout" ) \
ENUM_DEFN( ERR, HMI_NO_MEMORY, "No memory" ) \
ENUM_DEFN( ERR, HMI_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, HMI_PANEL_DISPLAY_RANGE, "Bad display manager address" ) \
ENUM_DEFN( ERR, HMI_PANEL_SEGMENT_TABLE_FULL, "Panel glyph RAM full" ) \
ENUM_DEFN( ERR, HMI_PANEL_UNKNOWN_GLYPH, "Unknown glyph" ) \
ENUM_DEFN( ERR, HMI_PANEL_WRITE_TIME, "Took too long to write a message to the panel" ) \
ENUM_DEFN( ERR, HMI_RESOURCE_DIR, "Could not open resource directory" ) \
ENUM_DEFN( ERR, HMI_RESOURCE_INIT, "Resource module not initialised" ) \
ENUM_DEFN( ERR, HMI_RESOURCE_NAME, "Invalid resource file name" ) \
ENUM_DEFN( ERR, HMI_RESOURCE_NONE, "No resource files found" ) \
ENUM_DEFN( ERR, HMI_RESOURCE_RECORD, "Missing resource record" ) \
ENUM_DEFN( ERR, HMI_SESSION_COUNT, "Exceeded maximum session count" ) \
ENUM_DEFN( ERR, HMI_SESSION_PORT, "Invalid session port number" ) \
ENUM_DEFN( ERR, HMI_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, HMI_TIMER_CLOCK, "Monotonic clock not supported" ) \
ENUM_DEFN( ERR, HMI_UNKNOWN_DPID, "" ) \
ENUM_DEFN( ERR, HTTP_BAD_PARAM, "bad parameter for http server" ) \
ENUM_DEFN( ERR, IO_BAD_PARAM, "" ) \
ENUM_DEFN( ERR, IO_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, IO_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, LIBSMP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, LOG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, LOG_BAD_SIZE, "Insufficent space in destination" ) \
ENUM_DEFN( ERR, LOG_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, LOG_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, LOG_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN( ERR, LOG_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, LOGPROC_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, LOGPROC_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, LOGPROC_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, LOGPROC_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, LOGPROC_UNKNOWN_EVENT, "Unrecognised event" ) \
ENUM_DEFN( ERR, MALLOC, "Could not allocate memory" ) \
ENUM_DEFN( ERR, METER_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, METER_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, METER_UNKNOWN_DPID, "" ) \
ENUM_DEFN( ERR, MODE_REFUSED, "Failed local/remote test" ) \
ENUM_DEFN( ERR, NO_MEM, "No memory" ) \
ENUM_DEFN( ERR, NO_SUCH_FILE, "File does not exist" ) \
ENUM_DEFN( ERR, NONE, "None" ) \
ENUM_DEFN( ERR, NOR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, NOR_FREAD, "The read or fread system call failed" ) \
ENUM_DEFN( ERR, NOR_FWRITE, "The write or fwrite system call failed" ) \
ENUM_DEFN( ERR, NOR_IOCTL, "The ioctl system call failed" ) \
ENUM_DEFN( ERR, NOR_LOCATION, "Invalid NOR location" ) \
ENUM_DEFN( ERR, NOR_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, NOR_OPEN, "The open or fopen system call failed" ) \
ENUM_DEFN( ERR, NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN( ERR, P2P_BAD_CMD, "P2P_BAD_CMD" ) \
ENUM_DEFN( ERR, P2P_BAD_PARAM, "P2P_BAD_PARAM" ) \
ENUM_DEFN( ERR, P2P_BAD_VALUE, "P2P_BAD_VALUE" ) \
ENUM_DEFN( ERR, P2P_SYSTEM, "P2P_SYSTEM" ) \
ENUM_DEFN( ERR, PROGGPIO_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, PROGGPIO_BAD_VALUE, "Bad value" ) \
ENUM_DEFN( ERR, PROGGPIO_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, PROGSIM_BAD_PARAM, "" ) \
ENUM_DEFN( ERR, PROGSIM_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, PROGSIM_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, PROT_BAD_PARAM, "Bad paramater" ) \
ENUM_DEFN( ERR, PROT_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, PROT_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, PROT_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, PROTCFG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, PROTCFG_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, PSNIFF_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, PSNIFF_NO_MEM, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_CONFIG, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_CREATE_EVENT, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_OPEN_FAILED, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_PERMISSIONS, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_READ_FAILED, "" ) \
ENUM_DEFN( ERR, PSNIFF_SERIAL_WRITE_FAILED, "" ) \
ENUM_DEFN( ERR, S61850_BAD_DB_ENTRY, "DBEntry fault in S61850" ) \
ENUM_DEFN( ERR, S61850_BAD_PARAMETER, "Bad Parameter (generic) in S61850" ) \
ENUM_DEFN( ERR, S61850_LAST_VALUE, "End of reserved range for IEC 61850" ) \
ENUM_DEFN( ERR, S61850_MALLOC, "Memory Allocation fault in S61850" ) \
ENUM_DEFN( ERR, S61850_MAPPING_FAULT, "Mapping fault in S61850" ) \
ENUM_DEFN( ERR, S61850_SYSTEM, "System Call failed in S61850" ) \
ENUM_DEFN( ERR, S61850_UNEXPECT_NULL_CNTXT, "Unexpected NULL in S61850 context" ) \
ENUM_DEFN( ERR, SCADA_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, SCADA_DNP_UNRECOGNISED_DPID, "Suspicious behaviour" ) \
ENUM_DEFN( ERR, SCADA_SIZE_UNABLE_TO_SCALE, "Unable to scale" ) \
ENUM_DEFN( ERR, SCADA_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, SCADA_T10B_BAD_PARAM, "Bad parameter in T10B support" ) \
ENUM_DEFN( ERR, SCADA_T10B_SYSTEM, "System call failed in T10B support" ) \
ENUM_DEFN( ERR, SIG_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, SIG_UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN( ERR, SIMOP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, SIMOP_SYSTEM, "" ) \
ENUM_DEFN( ERR, SIMOP_UNKNOWN_RQST, "Unknown request" ) \
ENUM_DEFN( ERR, SIMU_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, SIMU_SYSTEM, "" ) \
ENUM_DEFN( ERR, SMA_BAD_CMD, "SMA: Illegal command" ) \
ENUM_DEFN( ERR, SMA_BAD_PARAM, "SMA_BAD_PARAM" ) \
ENUM_DEFN( ERR, SMA_BAD_VALUE, "SMA_BAD_VALUE" ) \
ENUM_DEFN( ERR, SMA_SYSTEM, "SMA_SYSTEM" ) \
ENUM_DEFN( ERR, SMA_TIMER_FAIL, "SMA: Timer operation failed" ) \
ENUM_DEFN( ERR, SMP_ABORT_UP, "" ) \
ENUM_DEFN( ERR, SMP_ALREADY_RUNNING, "Already running" ) \
ENUM_DEFN( ERR, SMP_ARG_MISSING, "Missing argument" ) \
ENUM_DEFN( ERR, SMP_ARG_MISSING_VALUE, "Missing argument value" ) \
ENUM_DEFN( ERR, SMP_ARG_SERIAL_FORMAT, "Invalid serial number format" ) \
ENUM_DEFN( ERR, SMP_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, SMP_CAN_TRANSMIT, "CAN transmit error" ) \
ENUM_DEFN( ERR, SMP_CLIENT_ID, "Invalid client ID" ) \
ENUM_DEFN( ERR, SMP_CLOSE, "Call to close() or fclose() system call failed" ) \
ENUM_DEFN( ERR, SMP_CONFIG_ELEMENT, "Invalid configuration file format" ) \
ENUM_DEFN( ERR, SMP_CONFIG_FILE, "Invalid configuration file" ) \
ENUM_DEFN( ERR, SMP_CONFIG_TYPE, "Invalid configuration file format" ) \
ENUM_DEFN( ERR, SMP_CONFIG_VALUE, "Invalid configuration file format" ) \
ENUM_DEFN( ERR, SMP_DB_NOT_AVAILABLE, "Database not ready" ) \
ENUM_DEFN( ERR, SMP_DOWN_TIMEOUT, "Too long to shutdown" ) \
ENUM_DEFN( ERR, SMP_FORK, "Could not fork" ) \
ENUM_DEFN( ERR, SMP_FPGA_IRQ, "FPGA not interrupting" ) \
ENUM_DEFN( ERR, SMP_FS_TYPE_MISMATCH, "File System Type Mismatch" ) \
ENUM_DEFN( ERR, SMP_FSYNC, "Call to fsync() system call failed" ) \
ENUM_DEFN( ERR, SMP_INVALID_LOCK, "Invalid lock" ) \
ENUM_DEFN( ERR, SMP_IPC_EXPECTED_SIZE, "Invalid message payload size" ) \
ENUM_DEFN( ERR, SMP_IPC_ID, "Invalid message ID" ) \
ENUM_DEFN( ERR, SMP_IPC_NO_CLIENTS, "No clients connected" ) \
ENUM_DEFN( ERR, SMP_IPC_NO_HANDLER, "No message handler" ) \
ENUM_DEFN( ERR, SMP_IPC_SIZE, "Invalid message size" ) \
ENUM_DEFN( ERR, SMP_IPC_STATE, "Invalid state" ) \
ENUM_DEFN( ERR, SMP_LAUNCH_COMMAND, "Invalid launch command" ) \
ENUM_DEFN( ERR, SMP_LAUNCH_NOT_READY, "Launch controller not ready" ) \
ENUM_DEFN( ERR, SMP_LAUNCH_RESULT, "Invalid launch command result" ) \
ENUM_DEFN( ERR, SMP_LED_MODE, "Invalid LED flash pattern" ) \
ENUM_DEFN( ERR, SMP_NO_MEM, "" ) \
ENUM_DEFN( ERR, SMP_NOT_IMPLEMENTED, "" ) \
ENUM_DEFN( ERR, SMP_NOT_INITIALISED, "" ) \
ENUM_DEFN( ERR, SMP_NVM_CRASH_DEVICE, "Could not read or write non-volatile memory" ) \
ENUM_DEFN( ERR, SMP_NVM_FILE, "Could save data to non-volatile memory" ) \
ENUM_DEFN( ERR, SMP_NVM_SIZE, "Invalid data size for non-volatile memory" ) \
ENUM_DEFN( ERR, SMP_OPEN, "Call to open() failed." ) \
ENUM_DEFN( ERR, SMP_PANEL_DISCONNECTED, "Panel is disconnected" ) \
ENUM_DEFN( ERR, SMP_PID, "Unknown process identifier" ) \
ENUM_DEFN( ERR, SMP_PROCESS_ERROR, "Process exited unexpectedly." ) \
ENUM_DEFN( ERR, SMP_PROCESS_SIGNAL, "Unhandled signal" ) \
ENUM_DEFN( ERR, SMP_PROCESS_STATE, "Unexpected state" ) \
ENUM_DEFN( ERR, SMP_PROCESS_TERMINATED, "Process terminated unexpectedly" ) \
ENUM_DEFN( ERR, SMP_SCHED_CLIENT_ID, "Can't set priority" ) \
ENUM_DEFN( ERR, SMP_SCHED_NOT_SET, "Scheduling policy not set" ) \
ENUM_DEFN( ERR, SMP_SCHED_PRIORITY, "Call to setpriority() failed" ) \
ENUM_DEFN( ERR, SMP_SCHED_SCHEDULE, "Call to sched_setschedule() failed" ) \
ENUM_DEFN( ERR, SMP_SERIALISE_FILE_TYPE, "Unknown file format" ) \
ENUM_DEFN( ERR, SMP_SERIALISE_SIZE, "Unexpected size mismatch" ) \
ENUM_DEFN( ERR, SMP_SYSTEM, "" ) \
ENUM_DEFN( ERR, SMP_UNLINK, "Call to unlink() system call failed" ) \
ENUM_DEFN( ERR, SMP_UP_TIMEOUT, "Too long to start up" ) \
ENUM_DEFN( ERR, SMP_WAITPID, "Call to waitpid() failed" ) \
ENUM_DEFN( ERR, SWITCH_BAD_PARAM, "Value out of range" ) \
ENUM_DEFN( ERR, SWITCH_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, SWITCH_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN( ERR, SWITCH_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, T10B_BAD_PARAM, "Bad parameter in IEC 60870-5-101 / -104" ) \
ENUM_DEFN( ERR, T10B_MALLOC, "Could not allocate memory" ) \
ENUM_DEFN( ERR, T10B_SYSTEM, "Syatem call failed in IEC 60870-5-101 / -104" ) \
ENUM_DEFN( ERR, TMWSCL_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, TMWSCL_NO_MEM, "No memory" ) \
ENUM_DEFN( ERR, TMWSCL_NOT_INITIALISED, "Module not initialised" ) \
ENUM_DEFN( ERR, TMWSCL_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, TMWSCL_UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN( ERR, TR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, TR_GLYPH_DATA_MISMATCH, "Glyph data specified twice differently" ) \
ENUM_DEFN( ERR, TR_GLYPH_PICTURE, "Invalid picture in glyph file" ) \
ENUM_DEFN( ERR, TR_GLYPH_RAW, "Invalid glyph file" ) \
ENUM_DEFN( ERR, TR_GLYPH_SIZE_MISMATCH, "Invalid size in glyph file" ) \
ENUM_DEFN( ERR, TR_NO_MEM, "" ) \
ENUM_DEFN( ERR, TR_TEXT_POSITION, "Invalid text position" ) \
ENUM_DEFN( ERR, TR_WARNING, "Treated warning as error" ) \
ENUM_DEFN( ERR, TSCHED_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, TSCHED_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, TSCHED_INVALID_TIMER, "Invalid timer" ) \
ENUM_DEFN( ERR, TSCHED_NO_FREE_TIMERS, "No free timers" ) \
ENUM_DEFN( ERR, TSCHED_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, UNIVAR_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, UNIVAR_BAD_SIZE, "Insufficient space in destination" ) \
ENUM_DEFN( ERR, UNIVAR_NO_MEM, "No memory" ) \
ENUM_DEFN( ERR, UNIVAR_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, UNIVAR_NOT_INITIALISED, "Not initialised" ) \
ENUM_DEFN( ERR, UNKNOWN_DPID, "Unknown datapoint ID" ) \
ENUM_DEFN( ERR, UPDATE_BACKUP_FAILED, "Backup Failed" ) \
ENUM_DEFN( ERR, UPDATE_BAD_PARAM, "Bad parameter" ) \
ENUM_DEFN( ERR, UPDATE_BAD_SIZE, "" ) \
ENUM_DEFN( ERR, UPDATE_BAD_VALUE, "Value out of range" ) \
ENUM_DEFN( ERR, UPDATE_COUNT, "Too many files" ) \
ENUM_DEFN( ERR, UPDATE_DB_MISMATCH, "Database mismatch" ) \
ENUM_DEFN( ERR, UPDATE_FILE_VALIDATE, "Update validation failed" ) \
ENUM_DEFN( ERR, UPDATE_GPIO_NOT_CONNECTED, "GPIO disconnected" ) \
ENUM_DEFN( ERR, UPDATE_GPIO_PROG_FAIL, "GPIO programming failed" ) \
ENUM_DEFN( ERR, UPDATE_HW_MAJOR_MISMATCH, "Unsupported hardware" ) \
ENUM_DEFN( ERR, UPDATE_INVALID, "Invalid file format" ) \
ENUM_DEFN( ERR, UPDATE_INVALID_FILENAME, "Invalid file name" ) \
ENUM_DEFN( ERR, UPDATE_INVALID_UKERN, "Invalid Microkernel" ) \
ENUM_DEFN( ERR, UPDATE_META, "Missing meta data" ) \
ENUM_DEFN( ERR, UPDATE_MODULE_CODE_MISMATCH, "Module code mismatch" ) \
ENUM_DEFN( ERR, UPDATE_NOR_ERROR, "NOR Error" ) \
ENUM_DEFN( ERR, UPDATE_NOT_IMPLEMENTED, "Not implemented" ) \
ENUM_DEFN( ERR, UPDATE_OLD_FILE, "Old file" ) \
ENUM_DEFN( ERR, UPDATE_OPEN_FILE, "Could not open file" ) \
ENUM_DEFN( ERR, UPDATE_PATH, "Invalid path" ) \
ENUM_DEFN( ERR, UPDATE_READ_FILE, "Read error" ) \
ENUM_DEFN( ERR, UPDATE_SIM_DISCONNECTED, "SIM disconnected" ) \
ENUM_DEFN( ERR, UPDATE_TYPE, "Unknown file ID" ) \
ENUM_DEFN( ERR, UPDATE_UNKNOWN_MODULE_CODE, "Unknown module code" ) \
ENUM_DEFN( ERR, UPDATE_UNKOWN_HW_MAJOR, "Unknown hardware version string" ) \
ENUM_DEFN( ERR, UPS_BAD_VALUE, "" ) \
ENUM_DEFN( ERR, UPS_SYSTEM, "System call failed" ) \
ENUM_DEFN( ERR, USBCOPY_OLD_UPDATE_FILE, "Update File Old" ) \
ENUM_DEFN( ERR, USBCOPY_OPEN_FILE, "Could not open file" ) \
ENUM_DEFN( ERR, USBCOPY_OPEN_FILE_USB, "Could not open USB file" ) \
ENUM_DEFN( ERR, USBCOPY_READ_FILE, "Could not read file" ) \
ENUM_DEFN( ERR, USBCOPY_READ_FILE_USB, "Could not read USB file" ) \
ENUM_DEFN( ERR, USBCOPY_UMOUNT_FAILED, "Unmount of the USB disc failed" ) \
ENUM_DEFN( ERR, USBCOPY_UPDATE_COUNT, "Too many update files" ) \
ENUM_DEFN( ERR, USBCOPY_UPDATE_INVALID, "Invalid file format" ) \
ENUM_DEFN( ERR, USBCOPY_UPDATE_INVALID_FILENAME, "Invalid File Name" ) \
ENUM_DEFN( ERR, USBCOPY_UPDATE_META, "Missing meta data" ) \
ENUM_DEFN( ERR, USBCOPY_UPDATE_TYPE, "Unknown file ID" ) \
ENUM_DEFN( ERR, USBCOPY_WRITE_FILE, "Could not write file" ) \
ENUM_DEFN( ERR, USBCOPY_WRITE_FILE_USB, "Could not write USB file" ) \
ENUM_DEFN( ERR, WEBSERVER, "Webserver Failed" ) \
ENUM_DEFN( ERR, X2B_BXML_CRC, "Invalid CRC" ) \
ENUM_DEFN( ERR, X2B_BXML_HEADER_SIZE, "Invalid BXML header size" ) \
ENUM_DEFN( ERR, X2B_BXML_MARKER, "Invalid BXML marker" ) \
ENUM_DEFN( ERR, X2B_BXML_NAMESPACE_ID, "Namespace ID mismatch" ) \
ENUM_DEFN( ERR, X2B_BXML_RECORD_DATA_SIZE, "Invalid record data size" ) \
ENUM_DEFN( ERR, X2B_BXML_RECORD_SIZE, "Invalid BXML record" ) \
ENUM_DEFN( ERR, X2B_BXML_RECORD_TOO_LARGE, "Maximum record size exceeded" ) \
ENUM_DEFN( ERR, X2B_BXML_UNKNOWN_ATTRIBUTE, "Unknown attribute" ) \
ENUM_DEFN( ERR, X2B_BXML_UNKNOWN_ELEMENT, "Unknown element name" ) \
ENUM_DEFN( ERR, X2B_BXML_VERSION_MAJOR, "Invalid BXML version" ) \
ENUM_DEFN( ERR, X2B_ID_MAP_EMPTY, "Unknown map ID database" ) \
ENUM_DEFN( ERR, X2B_ID_MAP_FORMAT, "Invalid map file" ) \
ENUM_DEFN( ERR, X2B_ID_MAP_NAMESPACE, "Unknown namespace ID" ) \
ENUM_DEFN( ERR, X2B_IN_FILE, "Could not open input file" ) \
ENUM_DEFN( ERR, X2B_MXML_LOAD_FILE, "Mini-xml library error" ) \
ENUM_DEFN( ERR, X2B_MXML_NEW_XML, "Mini-xml error" ) \
ENUM_DEFN( ERR, X2B_NO_MEM, "Memory exhausted" ) \
ENUM_DEFN( ERR, X2B_NOT_IMPLEMENTED, "Function not implemented" ) \
ENUM_DEFN( ERR, X2B_NULL, "NULL parameter" ) \
ENUM_DEFN( ERR, X2B_OUT_FILE, "Could not open output file" ) \
ENUM_DEFN( ERR, X2B_READFILE, "Could not read file" ) \
ENUM_DEFN( ERR, X2B_READFILE_EOF, "Premature end of file" ) \
ENUM_DEFN( ERR, X2B_SIGNAL_HANDLER, "Could not register signal handler" ) \
ENUM_DEFN( ERR, X2B_UNKNOWN_FILE_FORMAT, "Unspecified input file" ) \
ENUM_DEFN( ErrModules, calib, "CALIB" ) \
ENUM_DEFN( ErrModules, can, "CAN" ) \
ENUM_DEFN( ErrModules, cms, "CMS" ) \
ENUM_DEFN( ErrModules, comms, "COMMS" ) \
ENUM_DEFN( ErrModules, dbquery, "DBQ" ) \
ENUM_DEFN( ErrModules, dbserver, "DBSVR" ) \
ENUM_DEFN( ErrModules, dbtest, "DBTEST" ) \
ENUM_DEFN( ErrModules, dbver, "DBVER" ) \
ENUM_DEFN( ErrModules, extsupply, "External Supply" ) \
ENUM_DEFN( ErrModules, hmi, "HMI" ) \
ENUM_DEFN( ErrModules, hmifont, "FONT" ) \
ENUM_DEFN( ErrModules, iec61850, "S61850" ) \
ENUM_DEFN( ErrModules, io, "IO" ) \
ENUM_DEFN( ErrModules, libbax, "BAX" ) \
ENUM_DEFN( ErrModules, libbxml, "BXML" ) \
ENUM_DEFN( ErrModules, libchannel, "CHANNEL" ) \
ENUM_DEFN( ErrModules, libcsv, "CSV" ) \
ENUM_DEFN( ErrModules, libdbapi, "DB" ) \
ENUM_DEFN( ErrModules, libdebug, "DEBUG" ) \
ENUM_DEFN( ErrModules, libfsm, "FSM" ) \
ENUM_DEFN( ErrModules, liblog, "LOG" ) \
ENUM_DEFN( ErrModules, libnor, "NOR" ) \
ENUM_DEFN( ErrModules, libpolarssl, "POLARSSL" ) \
ENUM_DEFN( ErrModules, libsignal, "SIG" ) \
ENUM_DEFN( ErrModules, libsimswrqst, "SWITCH" ) \
ENUM_DEFN( ErrModules, libsmp, "LIBSMP" ) \
ENUM_DEFN( ErrModules, libtrace, "TRACE" ) \
ENUM_DEFN( ErrModules, libtsched, "TSCHED" ) \
ENUM_DEFN( ErrModules, libuboot_env, "UBOOT" ) \
ENUM_DEFN( ErrModules, libunivar, "UNIVAR" ) \
ENUM_DEFN( ErrModules, logprocess, "LOGPROC" ) \
ENUM_DEFN( ErrModules, meter, "METER" ) \
ENUM_DEFN( ErrModules, microkernel, "UKERN" ) \
ENUM_DEFN( ErrModules, P2P, "P2P" ) \
ENUM_DEFN( ErrModules, panelsniffer, "PSNIFF" ) \
ENUM_DEFN( ErrModules, progsim, "PROGSIM" ) \
ENUM_DEFN( ErrModules, prot, "PROT" ) \
ENUM_DEFN( ErrModules, protcfg, "PROTCFG" ) \
ENUM_DEFN( ErrModules, scada_dnp, "SCADA" ) \
ENUM_DEFN( ErrModules, scada_T10B, "SCADA_T10B" ) \
ENUM_DEFN( ErrModules, simop, "SIMOP" ) \
ENUM_DEFN( ErrModules, simulator, "SIMU" ) \
ENUM_DEFN( ErrModules, sma, "SMA" ) \
ENUM_DEFN( ErrModules, smp, "SMP" ) \
ENUM_DEFN( ErrModules, tmwscl, "TMWSCL" ) \
ENUM_DEFN( ErrModules, tmwscl_dnp, "DNP" ) \
ENUM_DEFN( ErrModules, tmwscl_T10B, "T10B" ) \
ENUM_DEFN( ErrModules, translate, "TR" ) \
ENUM_DEFN( ErrModules, update, "UPDATE" ) \
ENUM_DEFN( ErrModules, ups, "UPS" ) \
ENUM_DEFN( ErrModules, usbcopy, "USBCOPY" ) \
ENUM_DEFN( ErrModules, xml2bin, "X2B" ) \
ENUM_DEFN( FileSystemType, ubifs, "UBIFS" ) \
ENUM_DEFN( FileSystemType, Unknown, "Unknown" ) \
ENUM_DEFN( FileSystemType, Unspecified, "Unspecified" ) \
ENUM_DEFN( FileSystemType, Yaffs2_0, "YAFFS 2 (r13160)" ) \
ENUM_DEFN( FileSystemType, Yaffs2_1, "YAFFS 2 (rNotReleased)" ) \
ENUM_DEFN( IOSettingMode, Disable, "Disable" ) \
ENUM_DEFN( IOSettingMode, Enable, "Enable" ) \
ENUM_DEFN( IOSettingMode, Test, "Test" ) \
ENUM_DEFN( SmaChannelState, SmaChannelClosed, "SmaChannelClosed" ) \
ENUM_DEFN( SmaChannelState, SmaChannelConnected, "SmaChannelConnected" ) \
ENUM_DEFN( SmaChannelState, SmaChannelConnecting, "SmaChannelConnecting" ) \
ENUM_DEFN( CommsProtocols, CMSProtocol, "CMSProtocol" ) \
ENUM_DEFN( CommsProtocols, DNP3Protocol, "DNP3Protocol" ) \
ENUM_DEFN( CommsProtocols, GPS, "GPS" ) \
ENUM_DEFN( CommsProtocols, HMIProtocol, "HMIProtocol" ) \
ENUM_DEFN( CommsProtocols, NumOfProtocols, "NumOfProtocols" ) \
ENUM_DEFN( CommsProtocols, P2PProtocol, "P2PProtocol" ) \
ENUM_DEFN( CommsProtocols, PGEProtocol, "2179Protocol" ) \
ENUM_DEFN( CommsProtocols, T10BProtocol, "IEC 60870-5-101 / -104" ) \
ENUM_DEFN( CommsProtocols, Unknown, "Unknown" ) \
ENUM_DEFN( ShutdownReason, SaveSimCalibration, "SaveSimCalibration" ) \
ENUM_DEFN( CommsSerialFlowControlMode, Hardware, "Hardware" ) \
ENUM_DEFN( CommsSerialFlowControlMode, None, "None" ) \
ENUM_DEFN( CommsSerialFlowControlMode, PTT, "PTT" ) \
ENUM_DEFN( CommsSerialFlowControlMode, PTTCTS, "PTT CTS" ) \
ENUM_DEFN( HmiMsgboxMessage, CopyComplete, "Copy Complete" ) \
ENUM_DEFN( CommsSerialDCDControlMode, Block, "Block TX" ) \
ENUM_DEFN( CommsSerialDCDControlMode, Ignore, "Ignore" ) \
ENUM_DEFN( T10BFormatMeasurand, Float, "32-bit Float" ) \
ENUM_DEFN( T10BFormatMeasurand, Normalized, "Normalized" ) \
ENUM_DEFN( T10BFormatMeasurand, Scaled, "Scaled" ) \
ENUM_DEFN( T101ChannelMode, Balanced, "Balanced" ) \
ENUM_DEFN( T101ChannelMode, Unbalanced, "Unbalanced" ) \
ENUM_DEFN( PeriodicCounterOperation, Disabled, "Disabled" ) \
ENUM_DEFN( PeriodicCounterOperation, Freeze, "Freeze" ) \
ENUM_DEFN( PeriodicCounterOperation, FreezeAndClear, "Freeze and Clear" ) \
ENUM_DEFN( T10BReportMode, Background, "Background reporting (no events)" ) \
ENUM_DEFN( T10BReportMode, Cyclic, "Cyclic Reporting (no events)" ) \
ENUM_DEFN( T10BReportMode, Default, "Use default mode for data type" ) \
ENUM_DEFN( T10BReportMode, Disabled, "Disabled" ) \
ENUM_DEFN( T10BReportMode, EventNoTime, "Event reporting with no time stamp" ) \
ENUM_DEFN( T10BReportMode, EventWithTime, "Event reporting with time stamp" ) \
ENUM_DEFN( T10BReportMode, Interrogation, "Interrogation" ) \
ENUM_DEFN( T10BControlMode, Default, "Use default mode for data type" ) \
ENUM_DEFN( T10BControlMode, DirectExecute, "Direct Execute (no Select required)" ) \
ENUM_DEFN( T10BControlMode, Disabled, "Disabled" ) \
ENUM_DEFN( T10BControlMode, SelectExecute, "Select before Execute" ) \
ENUM_DEFN( T10BParamRepMode, Default, "Use default mode for data type" ) \
ENUM_DEFN( T10BParamRepMode, Disabled, "Disabled" ) \
ENUM_DEFN( T10BParamRepMode, Interrogation, "Interrogation" ) \
ENUM_DEFN( T10BParamRepMode, NotReported, "Not Reported" ) \
ENUM_DEFN( CommsIpProtocolMode, Tcp, "TCP" ) \
ENUM_DEFN( CommsIpProtocolMode, Udp, "UDP" ) \
ENUM_DEFN( GPIOSettingMode, Disable, "Disable" ) \
ENUM_DEFN( GPIOSettingMode, Enable, "Enable" ) \
ENUM_DEFN( GPIOSettingMode, Test1, "Test1" ) \
ENUM_DEFN( GPIOSettingMode, Test2, "Test2" ) \
ENUM_DEFN( GPIOSettingMode, Test3, "Test3" ) \
ENUM_DEFN( IoStatus, Disabled, "Na" ) \
ENUM_DEFN( IoStatus, DisabledGlobal, "Na" ) \
ENUM_DEFN( IoStatus, DisabledIndividual, "D" ) \
ENUM_DEFN( IoStatus, Off, "Off" ) \
ENUM_DEFN( IoStatus, On, "On" ) \
ENUM_DEFN( IoStatus, Undetermined, "???" ) \
ENUM_DEFN( ConfigIOCardNum, 1, "1" ) \
ENUM_DEFN( ConfigIOCardNum, 2, "2" ) \
ENUM_DEFN( SwitchgearTypes, 1Phase, "1 phase" ) \
ENUM_DEFN( SwitchgearTypes, 3Phase, "3 phase" ) \
ENUM_DEFN( SwitchgearTypes, SingleTriple, "Single Triple" ) \
ENUM_DEFN( SwitchgearTypes, ThreePhaseSEF, "3 phase SEF" ) \
ENUM_DEFN( SwitchgearTypes, Unknown, "Unknown" ) \
ENUM_DEFN( LoSeqMode, MaxTrips2, "2" ) \
ENUM_DEFN( LoSeqMode, MaxTrips3, "3" ) \
ENUM_DEFN( LoSeqMode, MaxTrips4, "Normal" ) \
ENUM_DEFN( LogicChannelMode, Disable, "D" ) \
ENUM_DEFN( LogicChannelMode, Enable, "E" ) \
ENUM_DEFN( LogicChannelMode, Test, "T" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr1EventNoTime, "Counter Group 1 event without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr1EventWithTime, "Counter group 1 event with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr1Interrogation, "Counter group 1 interrogation without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr1InterrogationWithTime, "Counter group 1 interrogation with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr2EventNoTime, "Counter group 2 event without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr2EventWithTime, "Counter group 2 event with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr2Interrogation, "Counte group 2 interrogation without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr2InterrogationWithTime, "Counter group 2 interrogation with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr3EventNoTime, "Counter group 3 event without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr3EventWithTime, "Counter group 3 event with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr3Interrogation, "Counter group 3 interrogation without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr3InterrogationWithTime, "Counter group 3 interrogation with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr4EventNoTime, "Counter group 4 event without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr4EventWithTime, "Counter group 4 event with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr4Interrogation, "Counter group 4 interrogation without time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Ctr4InterrogationWithTime, "Counter group 4 interrogation with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Default, "Use default reporting mode for data type" ) \
ENUM_DEFN( T10BCounterRepMode, Disabled, "Disabled" ) \
ENUM_DEFN( T10BCounterRepMode, EventNoTime, "Event reporting with no time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, EventWithTime, "Event reporting with time stamp" ) \
ENUM_DEFN( T10BCounterRepMode, Interrogation, "Interrogation (no events)" ) \
ENUM_DEFN( T10BCounterRepMode, InterrogationWithTime, "Counter Interrogation with time stamp" ) \
ENUM_DEFN( ACOState, Active, "Active" ) \
ENUM_DEFN( ACOState, NotSupplying, "Not Supplying Load" ) \
ENUM_DEFN( ACOState, Off, "Off" ) \
ENUM_DEFN( ACOState, Supplying, "Supplying Load" ) \
ENUM_DEFN( ACOOpMode, Alternative, "Alt" ) \
ENUM_DEFN( ACOOpMode, Equal, "Equal" ) \
ENUM_DEFN( ACOOpMode, Main, "Main" ) \
ENUM_DEFN( FailOk, Fail, "Fail" ) \
ENUM_DEFN( FailOk, OK, "OK" ) \
ENUM_DEFN( ACOHealthReason, AbrEn, "ABR On" ) \
ENUM_DEFN( ACOHealthReason, ACOSettings, "ACO Settings" ) \
ENUM_DEFN( ACOHealthReason, CBF, "CBF" ) \
ENUM_DEFN( ACOHealthReason, CloseBlocking, "CloseBlocking" ) \
ENUM_DEFN( ACOHealthReason, CloseTripFail, "Close/Tr Fail" ) \
ENUM_DEFN( ACOHealthReason, EnableTimeout, "Timeout" ) \
ENUM_DEFN( ACOHealthReason, IllegalClose, "Close Both" ) \
ENUM_DEFN( ACOHealthReason, LLHLT, "LL/HLT On" ) \
ENUM_DEFN( ACOHealthReason, LoadLive, "Load Live" ) \
ENUM_DEFN( ACOHealthReason, Lockout, "Prot Lockout" ) \
ENUM_DEFN( ACOHealthReason, MakeBeforeBreak, "Make Bef Brk" ) \
ENUM_DEFN( ACOHealthReason, MalWarn, "This ACR" ) \
ENUM_DEFN( ACOHealthReason, Manual, "Operator" ) \
ENUM_DEFN( ACOHealthReason, OK, "OK" ) \
ENUM_DEFN( ACOHealthReason, Open, "User Trip" ) \
ENUM_DEFN( ACOHealthReason, OperationMode, "ACO Mode" ) \
ENUM_DEFN( ACOHealthReason, P2PComms, "Peer Comms" ) \
ENUM_DEFN( ACOHealthReason, PeerHealth, "Remote ACR" ) \
ENUM_DEFN( ACOHealthReason, PeerOff, "Remote ACR" ) \
ENUM_DEFN( ACOHealthReason, ProtActive, "AR Active" ) \
ENUM_DEFN( ACOHealthReason, ProtectionOpenBlocking, "Open Blocking" ) \
ENUM_DEFN( ACOHealthReason, ProtOn, "Prot Off" ) \
ENUM_DEFN( ACOHealthReason, ProtSettings, "Prot Settings" ) \
ENUM_DEFN( ACOHealthReason, SectionaliserEnabled, "Sectionaliser" ) \
ENUM_DEFN( ACOHealthReason, SingleTripleMode, "S/T Mode" ) \
ENUM_DEFN( ACOHealthReason, SwitchStatus, "OSM Status" ) \
ENUM_DEFN( ACOHealthReason, SyncEnabled, "Sync Enabled" ) \
ENUM_DEFN( ACOHealthReason, UVOff, "UV is Off" ) \
ENUM_DEFN( ACOHealthReason, UVTripMap, "UV3 AR Map" ) \
ENUM_DEFN( ACOHealthReason, VrcMode, "VRC Mode" ) \
ENUM_DEFN( SupplyState, Disabled, "NA" ) \
ENUM_DEFN( SupplyState, Healthy, "Healthy" ) \
ENUM_DEFN( SupplyState, Init, "Init" ) \
ENUM_DEFN( SupplyState, PickupHealthy, "Pickup Healthy" ) \
ENUM_DEFN( SupplyState, Unhealthy, "Unhealthy" ) \
ENUM_DEFN( LoadState, Dead, "Dead" ) \
ENUM_DEFN( LoadState, Disabled, "NA" ) \
ENUM_DEFN( LoadState, Init, "Init" ) \
ENUM_DEFN( LoadState, Undead, "Not Dead" ) \
ENUM_DEFN( MakeBeforeBreak, BreakBeforeMake, "Break Before Make" ) \
ENUM_DEFN( MakeBeforeBreak, MakeBeforeBreak, "Make Before Break" ) \
ENUM_DEFN( T101TimeStampSize, 3, "3 (24-bit)" ) \
ENUM_DEFN( T101TimeStampSize, 7, "7 (56-bit)" ) \
ENUM_DEFN( PhaseConfig, ABC, "ABC" ) \
ENUM_DEFN( PhaseConfig, ACB, "ACB" ) \
ENUM_DEFN( PhaseConfig, BAC, "BAC" ) \
ENUM_DEFN( PhaseConfig, BCA, "BCA" ) \
ENUM_DEFN( PhaseConfig, CAB, "CAB" ) \
ENUM_DEFN( PhaseConfig, CBA, "CBA" ) \
ENUM_DEFN( OscCaptureTime, 1Sec, "1" ) \
ENUM_DEFN( OscCaptureTime, 3Sec, "3" ) \
ENUM_DEFN( OscCaptureTime, HalfSec, "0.5" ) \
ENUM_DEFN( OscCapturePrior, 10Pct, "10" ) \
ENUM_DEFN( OscCapturePrior, 20Pct, "20" ) \
ENUM_DEFN( OscCapturePrior, 40Pct, "40" ) \
ENUM_DEFN( OscCapturePrior, 50Pct, "50" ) \
ENUM_DEFN( OscCapturePrior, 5Pct, "5" ) \
ENUM_DEFN( OscCapturePrior, 60Pct, "60" ) \
ENUM_DEFN( OscCapturePrior, 80Pct, "80" ) \
ENUM_DEFN( OscCapturePrior, None, "0" ) \
ENUM_DEFN( OscEvent, Alarm, "Alarm" ) \
ENUM_DEFN( OscEvent, Close, "Close" ) \
ENUM_DEFN( OscEvent, IOInputs, "IO Inputs" ) \
ENUM_DEFN( OscEvent, Logic, "Logic" ) \
ENUM_DEFN( OscEvent, Pickup, "Pickup" ) \
ENUM_DEFN( OscEvent, ProtOperation, "Prot Operation" ) \
ENUM_DEFN( OscEvent, Trip, "Trip" ) \
ENUM_DEFN( OscEvent, Unknown, "Unknown" ) \
ENUM_DEFN( HmiMsgboxData, ExtLoadOverload, "Please wait 1 minute" ) \
ENUM_DEFN( HmiMsgboxData, None, "" ) \
ENUM_DEFN( HmiMsgboxData, ReferEventLog, "Check event log" ) \
ENUM_DEFN( OscSimStatus, Failed, "Failed" ) \
ENUM_DEFN( OscSimStatus, Finished, "Finished" ) \
ENUM_DEFN( OscSimStatus, InvalidFormat, "InvalidFormat" ) \
ENUM_DEFN( OscSimStatus, NoFile, "NoFile" ) \
ENUM_DEFN( OscSimStatus, Running, "Running" ) \
ENUM_DEFN( OscSimStatus, Stopped, "Stopped" ) \
ENUM_DEFN( OscSimStatus, TooLarge, "TooLarge" ) \
ENUM_DEFN( OscSimStatus, UnrecogChannels, "UnrecogChannels" ) \
ENUM_DEFN( EventTitleId, AddUser, "Add New User" ) \
ENUM_DEFN( EventTitleId, AutoSync, "Auto-Sync" ) \
ENUM_DEFN( EventTitleId, BlockedByHLT, "Operation Blocked by HLT" ) \
ENUM_DEFN( EventTitleId, BlockPickup, "Block Pickup" ) \
ENUM_DEFN( EventTitleId, CanBusHighPower, "CAN Bus High Power" ) \
ENUM_DEFN( EventTitleId, ChangePassword, "Change Password" ) \
ENUM_DEFN( EventTitleId, CommsLogging, "Comms Logging" ) \
ENUM_DEFN( EventTitleId, Count, "Count" ) \
ENUM_DEFN( EventTitleId, DEPRCATED_EvArUInit, "" ) \
ENUM_DEFN( EventTitleId, DERECATED_EvArUClose, "" ) \
ENUM_DEFN( EventTitleId, Distance, "Distance" ) \
ENUM_DEFN( EventTitleId, DistanceToFault, "Distance to Fault" ) \
ENUM_DEFN( EventTitleId, EvACOState, "ACO" ) \
ENUM_DEFN( EventTitleId, EvAnalogError, "Analog Board Error" ) \
ENUM_DEFN( EventTitleId, EvArIClose, "Close" ) \
ENUM_DEFN( EventTitleId, EvArIInit, "AR Initiated" ) \
ENUM_DEFN( EventTitleId, EvArIRes, "Reset" ) \
ENUM_DEFN( EventTitleId, EvBatteryStatus, "Battery Status" ) \
ENUM_DEFN( EventTitleId, EvBatteryTestResult, "Battery Test" ) \
ENUM_DEFN( EventTitleId, EvCalib, "OSM Calibration Changed" ) \
ENUM_DEFN( EventTitleId, EvCANControllerError, "Can Bus Error" ) \
ENUM_DEFN( EventTitleId, EvCANControllerOverrun, "Can Bus Overrun" ) \
ENUM_DEFN( EventTitleId, EvCANMessagebufferoverflow, "CAN Buffer Overflow" ) \
ENUM_DEFN( EventTitleId, EvCBFBackupBlocked, "Block Backup Trip" ) \
ENUM_DEFN( EventTitleId, EvCBFBackupPickup, "Backup Trip Pickup" ) \
ENUM_DEFN( EventTitleId, EvCBFBackupTrip, "CBF Backup Trip" ) \
ENUM_DEFN( EventTitleId, EvCBFDefaultPickup, "CBF Pickup" ) \
ENUM_DEFN( EventTitleId, EvCBFMalfunction, "CBF Malfunction" ) \
ENUM_DEFN( EventTitleId, EvChangeBlocked, "Operation Blocked" ) \
ENUM_DEFN( EventTitleId, EvCloseBlocked, "Close Req. Blocked" ) \
ENUM_DEFN( EventTitleId, EvCloseBlocking, "Logic Close Blocking" ) \
ENUM_DEFN( EventTitleId, EvCloseRequestFailCode, "Close Request Fail" ) \
ENUM_DEFN( EventTitleId, EvClpOp, "T_ocl" ) \
ENUM_DEFN( EventTitleId, EvClpRec, "T_rec" ) \
ENUM_DEFN( EventTitleId, EvCommsError, "Comms Board Error" ) \
ENUM_DEFN( EventTitleId, EvCommsSettingsChanged, "Comms Settings Changed" ) \
ENUM_DEFN( EventTitleId, EvConnectionCompleted, "Connection Completed" ) \
ENUM_DEFN( EventTitleId, EvConnectionEstablished, "Connection Established" ) \
ENUM_DEFN( EventTitleId, EvDatabaseRestored, "Restored Database" ) \
ENUM_DEFN( EventTitleId, EvDataSave, "Data Save" ) \
ENUM_DEFN( EventTitleId, EvDisableWatchdog, "Watchdog Disabled" ) \
ENUM_DEFN( EventTitleId, EvDriverStatusNotReady, "SIM Caps Not Charged" ) \
ENUM_DEFN( EventTitleId, Event_Alarm, "Alarm" ) \
ENUM_DEFN( EventTitleId, Event_Coredump, "Core Dump Generated" ) \
ENUM_DEFN( EventTitleId, Event_Freeze, "Freeze" ) \
ENUM_DEFN( EventTitleId, Event_Pickup, "Pickup" ) \
ENUM_DEFN( EventTitleId, Event_Res, "Reset" ) \
ENUM_DEFN( EventTitleId, Event_SysErr, "System Message Logged" ) \
ENUM_DEFN( EventTitleId, Event_Trip, "Trip" ) \
ENUM_DEFN( EventTitleId, EvExtSupplyStatusOff, "External Load Off" ) \
ENUM_DEFN( EventTitleId, EvExtSupplyStatusOverLoad, "External Load Overload" ) \
ENUM_DEFN( EventTitleId, EvExtSupplyStatusReset, "External Supply Reset" ) \
ENUM_DEFN( EventTitleId, EvExtSupplyStatusShutDown, "External Load Shutdown" ) \
ENUM_DEFN( EventTitleId, EvFirmwareHardwareMismatch, "Firmware/Hardware Mismatch" ) \
ENUM_DEFN( EventTitleId, EvGPSMalfunction, "GPS Malfunction" ) \
ENUM_DEFN( EventTitleId, EvGPSUnplugged, "GPS Unplugged" ) \
ENUM_DEFN( EventTitleId, EvGroupSettings, "Group Settings Changed" ) \
ENUM_DEFN( EventTitleId, EvInvalidLogic, "Logic Exp Error" ) \
ENUM_DEFN( EventTitleId, EvInvalidSerialNumber, "Invalid Serial Number" ) \
ENUM_DEFN( EventTitleId, EvInvalidSwitchSerialNum, "Invalid OSM Type" ) \
ENUM_DEFN( EventTitleId, EvIo1Fault, "I/O1 Fault" ) \
ENUM_DEFN( EventTitleId, EvIo2Fault, "I/O2 Fault" ) \
ENUM_DEFN( EventTitleId, EvIoSerialNumberChange, "IO Module Change" ) \
ENUM_DEFN( EventTitleId, EvIoSettingsChanged, "I/O Settings Changed" ) \
ENUM_DEFN( EventTitleId, EvIrOp, "T_oir" ) \
ENUM_DEFN( EventTitleId, EvIrRec, "TrecIr" ) \
ENUM_DEFN( EventTitleId, EvLineSupplyStatus, "AC Status" ) \
ENUM_DEFN( EventTitleId, EvLoadedCrashSave, "Load Fast Save File" ) \
ENUM_DEFN( EventTitleId, EvLoadProfileChanged, "Load profile configuration changed" ) \
ENUM_DEFN( EventTitleId, EvLogicChannelOut, "Logic Channel Change" ) \
ENUM_DEFN( EventTitleId, EvLogicSGAStopped, "Logic/SGA Stopped" ) \
ENUM_DEFN( EventTitleId, EvLogicSGAThrottling, "Logic/SGA Throttling" ) \
ENUM_DEFN( EventTitleId, EvLogsRestored, "Restored Logs" ) \
ENUM_DEFN( EventTitleId, EvModuleFault, "SIM Module Fault" ) \
ENUM_DEFN( EventTitleId, EvModuleTypeIo1Connected, "IO1 Connected" ) \
ENUM_DEFN( EventTitleId, EvModuleTypeIo2Connected, "IO2 Connected" ) \
ENUM_DEFN( EventTitleId, EvModuleTypePcConnected, "PC Connected" ) \
ENUM_DEFN( EventTitleId, EvModuleTypePscDisconnected, "PSC Disconnected" ) \
ENUM_DEFN( EventTitleId, EvModuleTypeSimDisconnected, "SIM Disconnected" ) \
ENUM_DEFN( EventTitleId, EvOcEfSefDir, "Dir. Control Changed" ) \
ENUM_DEFN( EventTitleId, EvOpenBlocked, "Open Blocked" ) \
ENUM_DEFN( EventTitleId, EvOperationFail, "Capacitor Voltage Abnormal" ) \
ENUM_DEFN( EventTitleId, EvOscCapture, "Capture" ) \
ENUM_DEFN( EventTitleId, EvOSMActuatorFaultStatusCoilOc, "OSM Coil OC" ) \
ENUM_DEFN( EventTitleId, EvOsmActuatorFaultStatusCoilSc, "OSM Coil SC" ) \
ENUM_DEFN( EventTitleId, EvOSMActuatorFaultStatusQ503Failed, "SIM Driver Q503 Failed" ) \
ENUM_DEFN( EventTitleId, EvOsmLimitFaultStatusFault, "OSM Limit Switch Fault" ) \
ENUM_DEFN( EventTitleId, EvPanelCommsError, "Panel Comms Error" ) \
ENUM_DEFN( EventTitleId, EvPMURetransmission, "PMU Retransmission" ) \
ENUM_DEFN( EventTitleId, EvProtOpenBlocking, "Protection Open Blocking" ) \
ENUM_DEFN( EventTitleId, EvProtStatus, "Prot Status Changed" ) \
ENUM_DEFN( EventTitleId, EvPscFault, "PSC Module Fault" ) \
ENUM_DEFN( EventTitleId, EvRecoveryMode, "Entered Recovery Mode" ) \
ENUM_DEFN( EventTitleId, EvRelayCalibration, "Relay Calibration Status" ) \
ENUM_DEFN( EventTitleId, EvResetModule, "Reset SIM" ) \
ENUM_DEFN( EventTitleId, EvRestoreFailed, "Restore Failed" ) \
ENUM_DEFN( EventTitleId, EvRqstOpen, "Protection Operation" ) \
ENUM_DEFN( EventTitleId, EvRTCHwFault, "RTC Hardware Fault" ) \
ENUM_DEFN( EventTitleId, EvRTCStatus, "RTC Reset" ) \
ENUM_DEFN( EventTitleId, EvScadaRequiresRestart, "Protocol requires RC Restart" ) \
ENUM_DEFN( EventTitleId, EvSetTimeDate, "RTC Setting Change" ) \
ENUM_DEFN( EventTitleId, EvSimCalibration, "SIM Calibration Status" ) \
ENUM_DEFN( EventTitleId, EvSimClose, "OSM Closed" ) \
ENUM_DEFN( EventTitleId, EvSimCommsFail, "SIM Comms Fail" ) \
ENUM_DEFN( EventTitleId, EvSimOpen, "OSM Open" ) \
ENUM_DEFN( EventTitleId, EvSimSaveCalib, "SIM Calibration Changed" ) \
ENUM_DEFN( EventTitleId, EvSimSeq, "Simulation Run" ) \
ENUM_DEFN( EventTitleId, EvSimSeqStep, "Simulator Step" ) \
ENUM_DEFN( EventTitleId, EvSmpRestart, "Restart" ) \
ENUM_DEFN( EventTitleId, EvSmpShutdown, "Shutdown" ) \
ENUM_DEFN( EventTitleId, EvSmpStartup, "Power Restart" ) \
ENUM_DEFN( EventTitleId, EvSNTPSyncFail, "SNTP Unable to Sync" ) \
ENUM_DEFN( EventTitleId, EvSupplyUnhealthy, "Source Not Healthy" ) \
ENUM_DEFN( EventTitleId, EvSwgCalibration, "Switchgear Calibration Status" ) \
ENUM_DEFN( EventTitleId, EvSwitchDisconnectionStatus, "OSM Disconnected" ) \
ENUM_DEFN( EventTitleId, EvSwitchgearCalibration, "Switchgear Calibration Status" ) \
ENUM_DEFN( EventTitleId, EvSwitchHeaterControlOn, "Switch Heater Control On" ) \
ENUM_DEFN( EventTitleId, EvSwitchLockoutStatusMechaniclocked, "Mechanically Locked" ) \
ENUM_DEFN( EventTitleId, EvSwitchLogicallyLocked, "SW Locked" ) \
ENUM_DEFN( EventTitleId, EvSwitchManualTrip, "Manual Trip" ) \
ENUM_DEFN( EventTitleId, EvSwtichHeaterControlFailed, "Switch Heater Control Failed" ) \
ENUM_DEFN( EventTitleId, EvSystemSettingsChanged, "System Settings Changed" ) \
ENUM_DEFN( EventTitleId, EvTripCloseRequestStatusCloseFail, "Excessive Tc" ) \
ENUM_DEFN( EventTitleId, EvTripCloseRequestStatusTripFail, "Excessive To" ) \
ENUM_DEFN( EventTitleId, EvTripRequestFailCode, "Trip Request Fail" ) \
ENUM_DEFN( EventTitleId, EvTtaInit, "Time Addition" ) \
ENUM_DEFN( EventTitleId, EvUpdateFailed, "Update Failed" ) \
ENUM_DEFN( EventTitleId, EvUpdateInitiated, "Update Initiated" ) \
ENUM_DEFN( EventTitleId, EvUpdateOk, "Update Successful" ) \
ENUM_DEFN( EventTitleId, EvUPSPowerDown, "Critical Battery Level" ) \
ENUM_DEFN( EventTitleId, EvUPSStatusAcOff, "AC Off" ) \
ENUM_DEFN( EventTitleId, EvUPSStatusBatteryOff, "Battery Off" ) \
ENUM_DEFN( EventTitleId, EvUSBBluetooth, "USB Bluetooth Connect" ) \
ENUM_DEFN( EventTitleId, EvUSBGadget, "USB Gadget Connect" ) \
ENUM_DEFN( EventTitleId, EvUSBGPRS, "USB GPRS Connect" ) \
ENUM_DEFN( EventTitleId, EvUSBHostOff, "USB Host Power Off" ) \
ENUM_DEFN( EventTitleId, EvUSBLan, "USB LAN Connect" ) \
ENUM_DEFN( EventTitleId, EvUSBMismatched, "USB Mismatch" ) \
ENUM_DEFN( EventTitleId, EvUSBSerial, "USB Serial Connect" ) \
ENUM_DEFN( EventTitleId, EvUSBUnsupported, "USB Unsupported" ) \
ENUM_DEFN( EventTitleId, EvUSBWlan, "USB WLAN Connect" ) \
ENUM_DEFN( EventTitleId, EvVRCOp, "VRC Blocking" ) \
ENUM_DEFN( EventTitleId, EvZscInc, "ZSC" ) \
ENUM_DEFN( EventTitleId, FaultedLoopImpedance, "Faulted Loop Impedance" ) \
ENUM_DEFN( EventTitleId, FaultImpedance, "Fault Impedance" ) \
ENUM_DEFN( EventTitleId, GPSConnected, "GPS Connected" ) \
ENUM_DEFN( EventTitleId, GPSLocked, "GPS Locked" ) \
ENUM_DEFN( EventTitleId, GPSRestart, "GPS Restart" ) \
ENUM_DEFN( EventTitleId, GPSUpdateSysTime, "Clock updated" ) \
ENUM_DEFN( EventTitleId, IEC61499AppStatusEv, "SGA Res" ) \
ENUM_DEFN( EventTitleId, IEC61499Command, "SGA" ) \
ENUM_DEFN( EventTitleId, IEC61499FbootStatus, "SGA fboot Failed" ) \
ENUM_DEFN( EventTitleId, IEC61850DeleteCIDFile, "ICD/CID File Deleted" ) \
ENUM_DEFN( EventTitleId, IEC61850LoadCIDFile, "ICD/CID File Loading" ) \
ENUM_DEFN( EventTitleId, InhibitOV3, "Inhibit OV3" ) \
ENUM_DEFN( EventTitleId, LiveLoadBlocking, "LLB Blocking" ) \
ENUM_DEFN( EventTitleId, LoggerProcessFault, "Logger Process Fault" ) \
ENUM_DEFN( EventTitleId, LogRolloverIdRollover, "Log Id Rollover" ) \
ENUM_DEFN( EventTitleId, LSRMTimerActive, "T,LSRM" ) \
ENUM_DEFN( EventTitleId, MobileNetworkRestart, "Mobile Network Modem Restart" ) \
ENUM_DEFN( EventTitleId, NAN, "NAN" ) \
ENUM_DEFN( EventTitleId, Not_Used_EvSupplyStatus, "AC Status" ) \
ENUM_DEFN( EventTitleId, Not_Used_EvSwitchHeaterControlOff, "Switch Heater Control: Off" ) \
ENUM_DEFN( EventTitleId, Not_Used_EvUPSPowerUp, "UPS Power Up" ) \
ENUM_DEFN( EventTitleId, OperationBlocking, "Operation Blocking" ) \
ENUM_DEFN( EventTitleId, ProtocolSettingsChanged, "Protocol Settings Changed" ) \
ENUM_DEFN( EventTitleId, PscRunningMiniBootloader, "PSC In Minibootloader Mode" ) \
ENUM_DEFN( EventTitleId, RelayNotCalib, "Relay is not calibrated." ) \
ENUM_DEFN( EventTitleId, RemoveUser, "Remove User" ) \
ENUM_DEFN( EventTitleId, ResetBinaryFaultTargets, "Reset Binary Fault Targets" ) \
ENUM_DEFN( EventTitleId, ResetCredential, "Reset Credential files" ) \
ENUM_DEFN( EventTitleId, RoleBitMapUpdate, "Role bit-map update" ) \
ENUM_DEFN( EventTitleId, SectionaliseMismatch, "Sectionaliser mismatch" ) \
ENUM_DEFN( EventTitleId, SectionaliseMode, "Sectionaliser mode changed" ) \
ENUM_DEFN( EventTitleId, SeqAdvInc, "Sequence Advance" ) \
ENUM_DEFN( EventTitleId, SigCtrlBlockCloseOn, "Block Close" ) \
ENUM_DEFN( EventTitleId, SigCtrlHltOn, "Hot Line Tag On" ) \
ENUM_DEFN( EventTitleId, SigCtrlHltRqstReset, "HLT Forced Reset" ) \
ENUM_DEFN( EventTitleId, SigCtrlLogTest, "Test Mode" ) \
ENUM_DEFN( EventTitleId, SigCtrlRemoteOn, "Control Mode Is Set To Remote" ) \
ENUM_DEFN( EventTitleId, SigEftActivated, "MNT Exceeded" ) \
ENUM_DEFN( EventTitleId, SigIncorrectPhaseSeq, "Incorrect phase sequence" ) \
ENUM_DEFN( EventTitleId, SigLogicConfigIssue, "Logic Configuration Issue" ) \
ENUM_DEFN( EventTitleId, SigMalfCanBus, "CAN Bus Malfunction" ) \
ENUM_DEFN( EventTitleId, SigMalfComms, "Module Comms Error" ) \
ENUM_DEFN( EventTitleId, SigMalfIo1Comms, "I/O1 Comms Error" ) \
ENUM_DEFN( EventTitleId, SigMalfIo1Fault, "I/O1 Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfIo2Comms, "I/O2 Comms Error" ) \
ENUM_DEFN( EventTitleId, SigMalfIo2Fault, "I/O2 Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfOsm, "OSM Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfPanelComms, "Panel Disconnected" ) \
ENUM_DEFN( EventTitleId, SigMalfPanelModule, "Panel Module Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfRc10, "Controller Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfRelay, "Relay Module Fault" ) \
ENUM_DEFN( EventTitleId, SigMalfSimComms, "SIM Comms Error" ) \
ENUM_DEFN( EventTitleId, SigStatusDialupFailed, "Dial-up Failed" ) \
ENUM_DEFN( EventTitleId, SigStatusDialupInitiated, "Dial-up Initiated" ) \
ENUM_DEFN( EventTitleId, SimAndOsmModelMismatch, "SIM and OSM Model Mismatch" ) \
ENUM_DEFN( EventTitleId, SIMCardStatus, "SIM Card Status" ) \
ENUM_DEFN( EventTitleId, SimDisconnected, "SIM Disconnected" ) \
ENUM_DEFN( EventTitleId, SimModuleFault, "SIM Module Fault" ) \
ENUM_DEFN( EventTitleId, SimNotCalib, "Sim is not Calibrated" ) \
ENUM_DEFN( EventTitleId, SimRunningMiniBootloader, "SIM in Minibootloader Mode" ) \
ENUM_DEFN( EventTitleId, SSTControl, "SST Control" ) \
ENUM_DEFN( EventTitleId, SwgNotCalibrated, "Switchgear is not calibrated" ) \
ENUM_DEFN( EventTitleId, SyncInvalidSingleTriple, "Invalid Auto-Sync Single Triple Cnfg" ) \
ENUM_DEFN( EventTitleId, UPSGpsShutdown, "GPS Shutdown" ) \
ENUM_DEFN( EventTitleId, UPSMobilenetworkReset, "Mobile Network Reset" ) \
ENUM_DEFN( EventTitleId, UPSMobilenetworkShutdown, "Mobile Network Shutdown" ) \
ENUM_DEFN( EventTitleId, UPSWlanReset, "Wi-Fi Reset" ) \
ENUM_DEFN( EventTitleId, UPSWlanShutdown, "Wi-Fi Shutdown" ) \
ENUM_DEFN( EventTitleId, USBOvercurrent, "USB Device Overcurrent" ) \
ENUM_DEFN( EventTitleId, USBOvercurrentReset, "USB Ports Overcurrent Reset" ) \
ENUM_DEFN( EventTitleId, UserCredentialbatchUpdate, "User Credential Batch Update" ) \
ENUM_DEFN( EventTitleId, VerifyUser, "Verify User" ) \
ENUM_DEFN( EventTitleId, VsagCloseBlocking, "UV4 Sag Blocking" ) \
ENUM_DEFN( EventTitleId, WLANError, "Wlan Error" ) \
ENUM_DEFN( EventTitleId, WLANFail, "Wlan Fail" ) \
ENUM_DEFN( EventTitleId, WlanRestart, "Wi-Fi Restart" ) \
ENUM_DEFN( EventTitleId, WrongControlMode, "Wrong Control Mode" ) \
ENUM_DEFN( HrmIndividual, Disable, "Disable" ) \
ENUM_DEFN( HrmIndividual, I10, "I10" ) \
ENUM_DEFN( HrmIndividual, I11, "I11" ) \
ENUM_DEFN( HrmIndividual, I12, "I12" ) \
ENUM_DEFN( HrmIndividual, I13, "I13" ) \
ENUM_DEFN( HrmIndividual, I14, "I14" ) \
ENUM_DEFN( HrmIndividual, I15, "I15" ) \
ENUM_DEFN( HrmIndividual, I2, "I2" ) \
ENUM_DEFN( HrmIndividual, I3, "I3" ) \
ENUM_DEFN( HrmIndividual, I4, "I4" ) \
ENUM_DEFN( HrmIndividual, I5, "I5" ) \
ENUM_DEFN( HrmIndividual, I6, "I6" ) \
ENUM_DEFN( HrmIndividual, I7, "I7" ) \
ENUM_DEFN( HrmIndividual, I8, "I8" ) \
ENUM_DEFN( HrmIndividual, I9, "I9" ) \
ENUM_DEFN( HrmIndividual, In10, "In10" ) \
ENUM_DEFN( HrmIndividual, In11, "In11" ) \
ENUM_DEFN( HrmIndividual, In12, "In12" ) \
ENUM_DEFN( HrmIndividual, In13, "In13" ) \
ENUM_DEFN( HrmIndividual, In14, "In14" ) \
ENUM_DEFN( HrmIndividual, In15, "In15" ) \
ENUM_DEFN( HrmIndividual, In2, "In2" ) \
ENUM_DEFN( HrmIndividual, In3, "In3" ) \
ENUM_DEFN( HrmIndividual, In4, "In4" ) \
ENUM_DEFN( HrmIndividual, In5, "In5" ) \
ENUM_DEFN( HrmIndividual, In6, "In6" ) \
ENUM_DEFN( HrmIndividual, In7, "In7" ) \
ENUM_DEFN( HrmIndividual, In8, "In8" ) \
ENUM_DEFN( HrmIndividual, In9, "In9" ) \
ENUM_DEFN( HrmIndividual, V10, "V10" ) \
ENUM_DEFN( HrmIndividual, V11, "V11" ) \
ENUM_DEFN( HrmIndividual, V12, "V12" ) \
ENUM_DEFN( HrmIndividual, V13, "V13" ) \
ENUM_DEFN( HrmIndividual, V14, "V14" ) \
ENUM_DEFN( HrmIndividual, V15, "V15" ) \
ENUM_DEFN( HrmIndividual, V2, "V2" ) \
ENUM_DEFN( HrmIndividual, V3, "V3" ) \
ENUM_DEFN( HrmIndividual, V4, "V4" ) \
ENUM_DEFN( HrmIndividual, V5, "V5" ) \
ENUM_DEFN( HrmIndividual, V6, "V6" ) \
ENUM_DEFN( HrmIndividual, V7, "V7" ) \
ENUM_DEFN( HrmIndividual, V8, "V8" ) \
ENUM_DEFN( HrmIndividual, V9, "V9" ) \
ENUM_DEFN( OscCaptureFormat, ComtradeAscii, "ASCII COMTRADE" ) \
ENUM_DEFN( OscCaptureFormat, ComtradeBinary, "BINARY COMTRADE" ) \
ENUM_DEFN( UpdateStep, CopyFiles, "Copying files" ) \
ENUM_DEFN( UpdateStep, None, "None" ) \
ENUM_DEFN( UpdateStep, UpdateComplete, "Update complete" ) \
ENUM_DEFN( UpdateStep, UpdateDbSchema, "Installing database schema" ) \
ENUM_DEFN( UpdateStep, UpdateGpio, "Installing GPIO firmware" ) \
ENUM_DEFN( UpdateStep, UpdateLanguage, "Installing language files" ) \
ENUM_DEFN( UpdateStep, UpdateMicrokernel, "Installing microkernel" ) \
ENUM_DEFN( UpdateStep, UpdatePanel, "Installing panel firmware" ) \
ENUM_DEFN( UpdateStep, UpdatePsc, "Installing PSC firmware" ) \
ENUM_DEFN( UpdateStep, UpdateRelay, "Installing relay firmware" ) \
ENUM_DEFN( UpdateStep, UpdateSIM, "Installing SIM firmware" ) \
ENUM_DEFN( UpdateStep, UpdateUboot, "Installing uboot" ) \
ENUM_DEFN( UpdateStep, ValidateFiles, "Validating files" ) \
ENUM_DEFN( SimExtSupplyStatus, Limited, "Limited" ) \
ENUM_DEFN( SimExtSupplyStatus, Off, "Off" ) \
ENUM_DEFN( SimExtSupplyStatus, On, "On" ) \
ENUM_DEFN( SimExtSupplyStatus, Overload, "Overload" ) \
ENUM_DEFN( SimExtSupplyStatus, Shutdown, "Shutdown" ) \
ENUM_DEFN( ScadaScaleRangeTable, AlternateScaling, "Alternate" ) \
ENUM_DEFN( ScadaScaleRangeTable, StandardScaling, "Standard" ) \
ENUM_DEFN( UsbDiscEjectResult, OK, "It is safe to remove the USB disc." ) \
ENUM_DEFN( UsbDiscEjectResult, TransferInProgress, "File transfer in progress." ) \
ENUM_DEFN( ScadaEventSource, Dnp3AnalogInput, "DNP3 Analog Input" ) \
ENUM_DEFN( ScadaEventSource, Dnp3BinaryCounter, "DNP3 Binary Counter" ) \
ENUM_DEFN( ScadaEventSource, Dnp3BinaryInput, "DNP3 Binary Input" ) \
ENUM_DEFN( ScadaEventSource, S101DoublePoint, "S101 Double Point (Binary Input)" ) \
ENUM_DEFN( ScadaEventSource, S101MeasuredValue, "S101 Measured Value (Analog Input)" ) \
ENUM_DEFN( ScadaEventSource, S101MonitoredIntegratedTotal, "S101 Monitored Integrated Total (Binary Counter)" ) \
ENUM_DEFN( ScadaEventSource, S101SinglePoint, "S101 Single Point (Binary Input)" ) \
ENUM_DEFN( ScadaEventSource, S61850AnalogIn, "S61850 Analog Input" ) \
ENUM_DEFN( ScadaEventSource, S61850BinaryDP, "s61850 Binary Double Point" ) \
ENUM_DEFN( ScadaEventSource, S61850BinarySP, "s61850 Binary Single Point" ) \
ENUM_DEFN( ScadaEventSource, S61850GseSubsDef, "Goose Subscription Definition" ) \
ENUM_DEFN( ExtDataId, LogEventSrc, "Log event source" ) \
ENUM_DEFN( ExtDataId, LogicProcDpId, "Logic Id" ) \
ENUM_DEFN( ExtDataId, StateType, "enum StateType" ) \
ENUM_DEFN( AutoOpenMode, Disabled, "Disabled" ) \
ENUM_DEFN( AutoOpenMode, PowerFlow, "Power Flow" ) \
ENUM_DEFN( AutoOpenMode, Timer, "Timer" ) \
ENUM_DEFN( Uv4VoltageType, Ph_Gnd, "Ph/Gnd" ) \
ENUM_DEFN( Uv4VoltageType, Ph_Ph, "Ph/Ph" ) \
ENUM_DEFN( Uv4Voltages, Abc, "ABC" ) \
ENUM_DEFN( Uv4Voltages, AbcRst, "ABC_RST" ) \
ENUM_DEFN( Uv4Voltages, Rst, "RST" ) \
ENUM_DEFN( SingleTripleMode, Trip1Lockout1, "1Ph Trip / 1Ph Lockout" ) \
ENUM_DEFN( SingleTripleMode, Trip1Lockout3, "1Ph Trip / 3Ph Lockout" ) \
ENUM_DEFN( SingleTripleMode, Trip3Lockout3, "3Ph Trip / 3Ph Lockout" ) \
ENUM_DEFN( OsmSwitchCount, 1Switch, "1" ) \
ENUM_DEFN( OsmSwitchCount, 3Switches, "3" ) \
ENUM_DEFN( BatteryTestResult, CheckBattery, "Check Battery" ) \
ENUM_DEFN( BatteryTestResult, Faulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN( BatteryTestResult, NotPerformed, "Not Performed" ) \
ENUM_DEFN( BatteryTestResult, NotRunYet, "Battery Test Not Run Yet" ) \
ENUM_DEFN( BatteryTestResult, Passed, "Battery Test Passed" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, ACOff, "AC Off" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, BatteryOff, "Battery Off" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, NoReason, "No Reason Given" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, NotCharging, "Battery Being Discharged" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, NotSupported, "Not Supported" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, Resting, "Resting" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, Timeout, "Timeout" ) \
ENUM_DEFN( BatteryTestNotPerformedReason, VoltageTooLow, "Voltage Too Low" ) \
ENUM_DEFN( SingleTripleVoltageType, Ph_Gnd, "Ph/Gnd" ) \
ENUM_DEFN( SingleTripleVoltageType, U1, "U1" ) \
ENUM_DEFN( AbbrevStrId, EF, "EF" ) \
ENUM_DEFN( AbbrevStrId, NPS, "NPS" ) \
ENUM_DEFN( AbbrevStrId, OC, "OC" ) \
ENUM_DEFN( AbbrevStrId, SEF, "SEF" ) \
ENUM_DEFN( SystemStatus, ACOinitiated, ">> ACO initiated             " ) \
ENUM_DEFN( SystemStatus, Blank, "" ) \
ENUM_DEFN( SystemStatus, DemoUnit, ">> Demo                      " ) \
ENUM_DEFN( SystemStatus, ProtectionInitiated, ">> Protection initiated      " ) \
ENUM_DEFN( SystemStatus, Sectionaliser, "Sectionaliser                " ) \
ENUM_DEFN( SystemStatus, SingleTriple, "Single Triple                " ) \
ENUM_DEFN( SystemStatus, SingleTripleSectionaliser, "Single Triple Sectionaliser  " ) \
ENUM_DEFN( SystemStatus, SynchronisationEnabled, ">> Synchronisation Enabled   " ) \
ENUM_DEFN( SystemStatus, UpdateInProgress, ">> Update in progress        " ) \
ENUM_DEFN( LockDynamic, Dynamic, "Dynamic" ) \
ENUM_DEFN( LockDynamic, Lock, "Lock" ) \
ENUM_DEFN( BatteryType, AGM, "AGM" ) \
ENUM_DEFN( BatteryType, GEL, "GEL" ) \
ENUM_DEFN( DNP3SAKeyUpdateVerificationMethod, SerialNumAndDNP3Address, "Serial number and DNP3 address" ) \
ENUM_DEFN( DNP3SAKeyUpdateVerificationMethod, SerialNumber, "SerialNumber" ) \
ENUM_DEFN( MACAlgorithm, HMAC_SHA1_10, "HMAC-SHA256/8" ) \
ENUM_DEFN( MACAlgorithm, HMAC_SHA1_4, "HMAC-SHA1/8" ) \
ENUM_DEFN( MACAlgorithm, HMAC_SHA1_8, "HMAC-SHA1/10" ) \
ENUM_DEFN( MACAlgorithm, HMAC_SHA256_16, "HMAC-SHA1/8" ) \
ENUM_DEFN( MACAlgorithm, HMAC_SHA256_8, "HMAC-SHA256/16" ) \
ENUM_DEFN( DNP3SAVersion, V2, "DNP3-SAv2" ) \
ENUM_DEFN( DNP3SAVersion, V5, "DNP3-SAv5" ) \
ENUM_DEFN( AESAlgorithm, AES128, "AES 128" ) \
ENUM_DEFN( AESAlgorithm, AES256, "AES 256" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, GetKey, "Find key" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, InstallFailed, "Install failed" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, InstallInProgress, "Install in progress" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, KeyFound, "Key found" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, KeyNotFound, "Key not found" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, NotStarted, "Not started" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, StartInstall, "Start install" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstallStep, Success, "Install succeeded" ) \
ENUM_DEFN( SecurityStatisticsObject121Enum, 32BitSecurityStatWithFlag, "Security statistic 32 bit with flag" ) \
ENUM_DEFN( SecurityStatisticsObject122Enum, 32BitSecurityStatWithFlag, "32-bit Security Statistic Change Event without Time" ) \
ENUM_DEFN( SecurityStatisticsObject122Enum, 32BitTimeSecurityStatWithFlag, "32-bit Security Statistic Change Event with Time" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstalledStatus, KeyInstalled, "Installed" ) \
ENUM_DEFN( DNP3SAUpdateKeyInstalledStatus, KeyNotFound, "Not found" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, FileFormatInvalid, "Invalid file format" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidDeviceSerialNumber, "Invalid relay serial number" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidDNP3Address, "Invalid DNP3 slave address" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidEnableAfterInstall, "Invalid enable DNP3-SA after install" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidFileFormatVersion, "Invalid file format version" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidFileVersion, "Invalid config. file version" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidKeyVersion, "Invalid update key version" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidUserId, "Invalid User number" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidUserRole, "Invalid user role" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, InvalidVerificationMethod, "Invalid verification method" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, None, "No Error" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, OpenFail, "Failed to open file" ) \
ENUM_DEFN( UsbDiscDNP3SAUpdateKeyFileError, TooManyFiles, "Too many files" ) \
ENUM_DEFN( IEC61499AppStatus, Running, "Running" ) \
ENUM_DEFN( IEC61499AppStatus, Stopped, "Stopped" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdDeleteFromNAND, "IEC61499 Delete FBOOT from NAND" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdNone, "IEC61499 Command - None" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdStagingToNAND, "IEC61499 Copy from Staging to NAND" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdStart, "IEC61499 Start Command" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdStop, "IEC61499 Stop Command" ) \
ENUM_DEFN( IEC61499Command, IEC61499CmdUSBToNAND, "IEC61499 Copy from USB to NAND" ) \
ENUM_DEFN( OperatingMode, AlarmSwitch, "Alarm Switch" ) \
ENUM_DEFN( OperatingMode, Recloser, "Recloser" ) \
ENUM_DEFN( OperatingMode, Sectionaliser, "Sectionaliser" ) \
ENUM_DEFN( OperatingMode, Switch, "Switch" ) \
ENUM_DEFN( LatchEnable, Latched, "Latched" ) \
ENUM_DEFN( LatchEnable, UnLatched, "Not Latched" ) \
ENUM_DEFN( DemoUnitMode, Disabled, "Disabled" ) \
ENUM_DEFN( DemoUnitMode, SingleTriple, "Single Triple" ) \
ENUM_DEFN( DemoUnitMode, Standard, "Standard" ) \
ENUM_DEFN( RemoteUpdateCommand, None, "None" ) \
ENUM_DEFN( RemoteUpdateCommand, Reset, "Reset" ) \
ENUM_DEFN( RemoteUpdateCommand, Update, "Update" ) \
ENUM_DEFN( RemoteUpdateCommand, Validate, "Validate" ) \
ENUM_DEFN( RemoteUpdateState, Blocked, "Blocked" ) \
ENUM_DEFN( RemoteUpdateState, Idle, "Idle" ) \
ENUM_DEFN( RemoteUpdateState, InProgress, "Update in progress" ) \
ENUM_DEFN( RemoteUpdateState, Validating, "Validating" ) \
ENUM_DEFN( IEC61499FBOOTChEv, IEC61499FBOOTChDel, "Deleted" ) \
ENUM_DEFN( IEC61499FBOOTChEv, IEC61499FBOOTChStage, "Installed" ) \
ENUM_DEFN( IEC61499FBOOTChEv, IEC61499FBOOTChUSB, "Installed" ) \
ENUM_DEFN( IEC61499FBOOTChEv, IEC61499FBOOTNoCh, "" ) \
ENUM_DEFN( CmsClientSupports, sw1ph, "1 phase switchgear" ) \
ENUM_DEFN( CmsClientSupports, sw3ph, "3 phase switchgear" ) \
ENUM_DEFN( CmsClientSupports, swST, "Single-Triple switchgear" ) \
ENUM_DEFN( IEC61499FBOOTStatus, Installed, "Installed" ) \
ENUM_DEFN( IEC61499FBOOTStatus, None, "None" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopy, "FailCopy" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopyCannotRead, "FailCopyCannotRead" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopyFileNotFound, "FailCopyFileNotFound" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopyInvalidFile, "FailCopyInvalidFile" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopyLargeFile, "FailCopyLargeFile" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailCopyNoResource, "FailCopyNoResource" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailDelete, "FailDelete" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailDeletePermission, "FailDeletePermission" ) \
ENUM_DEFN( IEC61499FBOOTOper, FailOverwrite, "FailOverwrite" ) \
ENUM_DEFN( IEC61499FBOOTOper, None, "None" ) \
ENUM_DEFN( IEC61499FBOOTOper, SuccessCopy, "SuccessCopy" ) \
ENUM_DEFN( IEC61499FBOOTOper, SuccessDelete, "SuccessDelete" ) \
ENUM_DEFN( IEC61499FBOOTOper, SuccessOverwrite, "SuccessOverwrite" ) \
ENUM_DEFN( SignalQuality, Excellent, "Excellent" ) \
ENUM_DEFN( SignalQuality, LowSignal, "Low Signal" ) \
ENUM_DEFN( SignalQuality, NoSignal, "Unknown" ) \
ENUM_DEFN( SignalQuality, VeryGood, "Very Good" ) \
ENUM_DEFN( GpsTimeSyncStatus, Locked, "Locked by GPS" ) \
ENUM_DEFN( GpsTimeSyncStatus, NoPPS, "No PPS Signal" ) \
ENUM_DEFN( GpsTimeSyncStatus, NoSync, "Syncing with GPS" ) \
ENUM_DEFN( WlanConnectionMode, AccessPoint, "Access Point" ) \
ENUM_DEFN( WlanConnectionMode, Client, "Client" ) \
ENUM_DEFN( MobileNetworkSimCardStatus, Detected, "Detected" ) \
ENUM_DEFN( MobileNetworkSimCardStatus, NotDetected, "Not Detected" ) \
ENUM_DEFN( MobileNetworkMode, GSM, "GSM(2G)" ) \
ENUM_DEFN( MobileNetworkMode, LTE_WCDMA_GSM, "LTE(4G)" ) \
ENUM_DEFN( MobileNetworkMode, Unknown, "Unknown" ) \
ENUM_DEFN( MobileNetworkMode, WCDMA, "WCDMA(3G)" ) \
ENUM_DEFN( MobileNetworkMode, WCDMA_GSM, "WCDMA(3G)" ) \
ENUM_DEFN( PhaseToSelection, PhaseToGround, "Phase to Ground" ) \
ENUM_DEFN( PhaseToSelection, PhaseToPhase, "Phase to Phase" ) \
ENUM_DEFN( BusAndLine, BusABCLineRST, "Bus: ABC & Line: RST" ) \
ENUM_DEFN( BusAndLine, BusRSTLineABC, "Bus: RST & Line: ABC" ) \
ENUM_DEFN( SyncLiveDeadMode, Disabled, "Disabled" ) \
ENUM_DEFN( SyncLiveDeadMode, DLLB, "DLLB" ) \
ENUM_DEFN( SyncLiveDeadMode, LLDB, "LLDB" ) \
ENUM_DEFN( SyncLiveDeadMode, LLDBOrDLLB, "LLDB or DLLB" ) \
ENUM_DEFN( SynchroniserStatus, Fail, "Fail" ) \
ENUM_DEFN( SynchroniserStatus, Ok, "OK" ) \
ENUM_DEFN( SynchroniserStatus, Released, "Released" ) \
ENUM_DEFN( SynchroniserStatus, Stopped, "Stopped" ) \
ENUM_DEFN( PowerFlowDirection, ABC_to_RST, "ABC to RST" ) \
ENUM_DEFN( PowerFlowDirection, RST_to_ABC, "RST to ABC" ) \
ENUM_DEFN( AutoRecloseStatus, InProgress, "In progress" ) \
ENUM_DEFN( AutoRecloseStatus, Ready, "Ready" ) \
ENUM_DEFN( AutoRecloseStatus, Successful, "AR successful" ) \
ENUM_DEFN( TripsToLockout, Four, "4" ) \
ENUM_DEFN( TripsToLockout, One, "1" ) \
ENUM_DEFN( TripsToLockout, Three, "3" ) \
ENUM_DEFN( TripsToLockout, Two, "2" ) \
ENUM_DEFN( YnOperationalMode, Bn, "Bn" ) \
ENUM_DEFN( YnOperationalMode, Gn, "Gn" ) \
ENUM_DEFN( YnOperationalMode, GnBn, "Gn & Bn" ) \
ENUM_DEFN( YnDirectionalMode, Bidirectional, "Bidirectional" ) \
ENUM_DEFN( YnDirectionalMode, Forward, "Forward" ) \
ENUM_DEFN( YnDirectionalMode, Reverse, "Reverse" ) \
ENUM_DEFN( HmiListSource, StrArray, "String Array" ) \
ENUM_DEFN( HmiListSource, StrArray2, "String Array" ) \
ENUM_DEFN( RelayModelName, RC10, "RC10" ) \
ENUM_DEFN( RelayModelName, RC15, "RC15" ) \
ENUM_DEFN( RelayModelName, RC20, "RC20" ) \
ENUM_DEFN( CmsSecurityLevel, Authenticated, "Authenticated" ) \
ENUM_DEFN( CmsSecurityLevel, AuthenticatedAndEncrypted, "Authenticated & Encrypted" ) \
ENUM_DEFN( CmsSecurityLevel, Disabled, "Disabled" ) \
ENUM_DEFN( ModemConnectStatus, Connected, "Connected" ) \
ENUM_DEFN( ModemConnectStatus, Connecting, "Connecting" ) \
ENUM_DEFN( ModemConnectStatus, DisabledByUPS, "Disabled by UPS" ) \
ENUM_DEFN( ModemConnectStatus, ModemError, "Modem Error" ) \
ENUM_DEFN( ModemConnectStatus, Restarting, "Restarting" ) \
ENUM_DEFN( ModemConnectStatus, Retry, "Retry" ) \
ENUM_DEFN( ModemConnectStatus, SettingNetworkError, "Setting/Network Error" ) \
ENUM_DEFN( ModemConnectStatus, SIMBlocked, "SIM Blocked" ) \
ENUM_DEFN( ModemConnectStatus, SIMBlockedPermanently, "SIM Blocked Permanently" ) \
ENUM_DEFN( ModemConnectStatus, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN( ModemConnectStatus, SIMPinError, "SIM PIN Error" ) \
ENUM_DEFN( ModemConnectStatus, SIMPinRequired, "SIM PIN Required" ) \
ENUM_DEFN( ModemConnectStatus, SIMPukError, "SIM PUK Error" ) \
ENUM_DEFN( ModemConnectStatus, SIMPukRequired, "SIM PUK Required" ) \
ENUM_DEFN( S61850CIDUpdateStatus, DeletedCID, "CID deleted" ) \
ENUM_DEFN( S61850CIDUpdateStatus, Idle, "Idle" ) \
ENUM_DEFN( S61850CIDUpdateStatus, NewCID, "New CID" ) \
ENUM_DEFN( WLanTxPower, High, "High" ) \
ENUM_DEFN( WLanTxPower, Low, "Low" ) \
ENUM_DEFN( WLanTxPower, Medium, "Medium" ) \
ENUM_DEFN( WlanConnectStatus, AccessPointRunning, "Access Point Running" ) \
ENUM_DEFN( WlanConnectStatus, Booting, "Booting" ) \
ENUM_DEFN( WlanConnectStatus, ConnectedtoAP, "Connected to AP" ) \
ENUM_DEFN( WlanConnectStatus, DisabledByUPS, "Disabled by UPS" ) \
ENUM_DEFN( WlanConnectStatus, ErrorAPNotFound, "Error: AP Not Found" ) \
ENUM_DEFN( WlanConnectStatus, ErrorAPPasswordLength, "Error: AP Password Length" ) \
ENUM_DEFN( WlanConnectStatus, ErrorClientPasswordLength, "Error: Client Password Length" ) \
ENUM_DEFN( WlanConnectStatus, ErrorWrongClientPassword, "Error: Wrong Client Password" ) \
ENUM_DEFN( WlanConnectStatus, ErrorWrongPasswordLength, "Error: Wrong Password Length" ) \
ENUM_DEFN( WlanConnectStatus, Initialising, "Initialising" ) \
ENUM_DEFN( WlanConnectStatus, LoadingFirmware, "Loading Firmware" ) \
ENUM_DEFN( WlanConnectStatus, Starting, "Starting" ) \
ENUM_DEFN( WlanConnectStatus, WiFiFailRefertoEventLog, "Wi-Fi Fail: Refer to Event Log" ) \
ENUM_DEFN( UpdateInterlockStatus, LockedByCMS, "Locked by CMS" ) \
ENUM_DEFN( UpdateInterlockStatus, LockedByHMI, "Locked by HMI" ) \
ENUM_DEFN( UpdateInterlockStatus, Unlocked, "Unlocked" ) \
ENUM_DEFN( GPSStatus, Malfunction, "Malfunction" ) \
ENUM_DEFN( GPSStatus, Normal, "Normal" ) \
ENUM_DEFN( GPSStatus, Unplugged, "Unplugged" ) \
ENUM_DEFN( ResetCommand, None, "" ) \
ENUM_DEFN( ResetCommand, Reset, "Reset" ) \
ENUM_DEFN( AlertDisplayMode, Empty, "Empty" ) \
ENUM_DEFN( AlertDisplayMode, SingleColumn, "Single Column Display" ) \
ENUM_DEFN( AlertDisplayMode, TwoColumn, "Two Column Display" ) \
ENUM_DEFN( Signals, ACOff, "AC Off (On Battery Supply)" ) \
ENUM_DEFN( Signals, ACOUnhealthy, "ACO Unhealthy" ) \
ENUM_DEFN( Signals, BatteryChargerFault, "Battery Charger Fault" ) \
ENUM_DEFN( Signals, BatteryChargerStateLowPower, "Battery Charger State: Low Power" ) \
ENUM_DEFN( Signals, BatteryOff, "Battery Off (On AC Supply)" ) \
ENUM_DEFN( Signals, BatteryStatusAbnormal, "Battery Status Abnormal" ) \
ENUM_DEFN( Signals, CanBusHighPower, "CAN Bus High Power " ) \
ENUM_DEFN( Signals, CANBusMalfunction, "CAN Bus Malfunction" ) \
ENUM_DEFN( Signals, CANControllerError, "CANControllerError" ) \
ENUM_DEFN( Signals, CANControllerOverrun, "CANControllerOverrun" ) \
ENUM_DEFN( Signals, CANMessagebufferoverflow, "CANMessagebufferoverflow" ) \
ENUM_DEFN( Signals, CapacitorVoltageAbnormal, "Capacitor Voltage Abnormal" ) \
ENUM_DEFN( Signals, CBFBackupTrip, "CBF Backup Trip" ) \
ENUM_DEFN( Signals, CBFMalfunction, "CBF Malfunction" ) \
ENUM_DEFN( Signals, CheckBattery, "Check Battery" ) \
ENUM_DEFN( Signals, CoilPhAOC, "Coil Ph A OC" ) \
ENUM_DEFN( Signals, CoilPhASC, "Coil Ph A SC" ) \
ENUM_DEFN( Signals, CoilPhBOC, "Coil Ph B OC" ) \
ENUM_DEFN( Signals, CoilPhBSC, "Coil Ph B SC" ) \
ENUM_DEFN( Signals, CoilPhCOC, "Coil Ph C OC" ) \
ENUM_DEFN( Signals, CoilPhCSC, "Coil Ph C SC" ) \
ENUM_DEFN( Signals, ControllerFault, "Controller Fault" ) \
ENUM_DEFN( Signals, ControllerModuleFault, "Controller Module Fault" ) \
ENUM_DEFN( Signals, CorruptedPartition, "Corrupted Partition" ) \
ENUM_DEFN( Signals, CriticalBatteryLevel, "Critical Battery Level" ) \
ENUM_DEFN( Signals, DialupFailed, "Dial-up Failed" ) \
ENUM_DEFN( Signals, DisconnectedPhA, "Disconnected Ph A" ) \
ENUM_DEFN( Signals, DisconnectedPhB, "Disconnected Ph B" ) \
ENUM_DEFN( Signals, DisconnectedPhC, "Disconnected Ph C" ) \
ENUM_DEFN( Signals, ExcessiveTc, "Excessive Tc" ) \
ENUM_DEFN( Signals, ExcessiveTcPhA, "Excessive Tc Ph A" ) \
ENUM_DEFN( Signals, ExcessiveTcPhB, "Excessive Tc Ph B" ) \
ENUM_DEFN( Signals, ExcessiveTcPhC, "Excessive Tc Ph C" ) \
ENUM_DEFN( Signals, ExcessiveTo, "Excessive To" ) \
ENUM_DEFN( Signals, ExcessiveToPhA, "Excessive To Ph A" ) \
ENUM_DEFN( Signals, ExcessiveToPhB, "Excessive To Ph B" ) \
ENUM_DEFN( Signals, ExcessiveToPhC, "Excessive To Ph C" ) \
ENUM_DEFN( Signals, ExternalLoadOverload, "External Load Overload" ) \
ENUM_DEFN( Signals, FirmwareHardwareMismatch, "Firmware/Hardware Mismatch" ) \
ENUM_DEFN( Signals, GPIOMinibootloaderMode, "GPIO in Minibootloader Mode" ) \
ENUM_DEFN( Signals, GPSEnabledUnplugged, "GPS is enabled and unplugged" ) \
ENUM_DEFN( Signals, GPSMalfunction, "GPS Malfunction" ) \
ENUM_DEFN( Signals, HotLineTagOn, "Hot Line Tag On" ) \
ENUM_DEFN( Signals, IncorrectDBValuesLoaded, "Incorrect DB Values Loaded" ) \
ENUM_DEFN( Signals, IncorrectPhaseSequence, "Incorrect Phase Sequence" ) \
ENUM_DEFN( Signals, InvalidSingleTripleConfigAutoSync, "Invalid Auto-Sync Single Triple Cnfg" ) \
ENUM_DEFN( Signals, IO1CommsError, "I/O1 Comms Error" ) \
ENUM_DEFN( Signals, IO1Fault, "I/O1 Fault" ) \
ENUM_DEFN( Signals, IO2CommsError, "I/O2 Comms Error" ) \
ENUM_DEFN( Signals, IO2Fault, "I/O2 Fault" ) \
ENUM_DEFN( Signals, LimitSwitchFaultPhA, "Limit Switch Fault Ph A" ) \
ENUM_DEFN( Signals, LimitSwitchFaultPhB, "Limit Switch Fault Ph B" ) \
ENUM_DEFN( Signals, LimitSwitchFaultPhC, "Limit Switch Fault Ph C" ) \
ENUM_DEFN( Signals, LineSupplyStatusAbnormal, "Line Supply Status Abnormal" ) \
ENUM_DEFN( Signals, LogicalBlockClose, "Logical Block Close" ) \
ENUM_DEFN( Signals, LogicConfigurationIssue, "Logic Configuration Issue" ) \
ENUM_DEFN( Signals, LogicSGAStopped, "Logic/SGA Stopped" ) \
ENUM_DEFN( Signals, LogicSGAThrottling, "Logic/SGA Throttling" ) \
ENUM_DEFN( Signals, Malfunction, "Malfunction" ) \
ENUM_DEFN( Signals, MechanicallyLocked, "Mechanically Locked" ) \
ENUM_DEFN( Signals, MechanicallyLockedPhA, "Mechanically Locked Ph A" ) \
ENUM_DEFN( Signals, MechanicallyLockedPhB, "Mechanically Locked Ph B" ) \
ENUM_DEFN( Signals, MechanicallyLockedPhC, "Mechanically Locked Ph C" ) \
ENUM_DEFN( Signals, ModuleCommsError, "Module Comms Error" ) \
ENUM_DEFN( Signals, OSMCoilOC, "OSM Coil OC" ) \
ENUM_DEFN( Signals, OSMCoilSC, "OSM Coil SC" ) \
ENUM_DEFN( Signals, OSMDisconnected, "OSM Disconnected" ) \
ENUM_DEFN( Signals, OSMFault, "OSM Fault" ) \
ENUM_DEFN( Signals, OSMLimitSwitchFault, "OSM Limit Switch Fault" ) \
ENUM_DEFN( Signals, OSMPositionStatusUnavailable, "OSM Position Status Unavailable" ) \
ENUM_DEFN( Signals, PanelCommsError, "Panel Comms Error" ) \
ENUM_DEFN( Signals, PanelModuleFault, "Panel Module Fault" ) \
ENUM_DEFN( Signals, PeerCommsFailed, "Peer Comms Failed" ) \
ENUM_DEFN( Signals, PscDisconnected, "PSC Disconnected" ) \
ENUM_DEFN( Signals, PscModuleFault, "PSC Module Fault " ) \
ENUM_DEFN( Signals, PscRunningMiniBootloader, "PSC in Mini Bootloader Mode" ) \
ENUM_DEFN( Signals, RelayModuleFault, "Relay Module Fault" ) \
ENUM_DEFN( Signals, RLM20UpgradeFailure, "RLM-20 Upgrade Failure" ) \
ENUM_DEFN( Signals, RTCHardwareFault, "RTC Hardware Fault" ) \
ENUM_DEFN( Signals, ScadaRestartReq, "SCADA Config requires RC restart" ) \
ENUM_DEFN( Signals, SectionaliserConfigMismatch, "Sectionaliser configuration mismatch" ) \
ENUM_DEFN( Signals, SGAFbootFailed, "SGA fboot Failed" ) \
ENUM_DEFN( Signals, SigMalfAnalogBoard, "Analog Board Communication Error" ) \
ENUM_DEFN( Signals, SimAndOsmModelMismatch, "SIM does not match OSM model number" ) \
ENUM_DEFN( Signals, SIMCapsNotCharged, "SIM Caps Not Charged" ) \
ENUM_DEFN( Signals, SimCardBlocked, "SIM Card Blocked, SIM PUK Required" ) \
ENUM_DEFN( Signals, SimCardBlockedPermanently, "SIM Card Blocked Permanently" ) \
ENUM_DEFN( Signals, SIMCardError, "SIM Card Error" ) \
ENUM_DEFN( Signals, SimCardPinError, "SIM Card PIN Error" ) \
ENUM_DEFN( Signals, SimCardPinRequired, "SIM Card PIN Required" ) \
ENUM_DEFN( Signals, SimCardPukError, "SIM Card PUK Error" ) \
ENUM_DEFN( Signals, SIMCircuitFaulty, "Battery Test Circuit Fault" ) \
ENUM_DEFN( Signals, SIMCommsError, "SIM Comms Error" ) \
ENUM_DEFN( Signals, SIMCommsFail, "SIM Comms Fail" ) \
ENUM_DEFN( Signals, SIMDisconnected, "SIM Disconnected" ) \
ENUM_DEFN( Signals, SIMMinibootloaderMode, "SIM in Minibootloader Mode" ) \
ENUM_DEFN( Signals, SIMModuleFault, "SIM Module Fault" ) \
ENUM_DEFN( Signals, SIMNotCalibrated, "SIM Not Calibrated" ) \
ENUM_DEFN( Signals, SNTPUnableToSync, "SNTP Unable to Sync" ) \
ENUM_DEFN( Signals, SourceNotHealthy, "Source Not Healthy" ) \
ENUM_DEFN( Signals, SWLockedPhA, "SW Locked Ph A" ) \
ENUM_DEFN( Signals, SWLockedPhB, "SW Locked Ph B" ) \
ENUM_DEFN( Signals, SWLockedPhC, "SW Locked Ph C" ) \
ENUM_DEFN( Signals, UpdateFailed, "Update Failed" ) \
ENUM_DEFN( Signals, UpdateReverted, "Update Reverted" ) \
ENUM_DEFN( Signals, UpdateSettingsLogsFail, "Update Settings or Logs Fail" ) \
ENUM_DEFN( Signals, USBHostOff, "USB Host Off" ) \
ENUM_DEFN( Signals, USBMismatched, "USB Mismatched" ) \
ENUM_DEFN( Signals, UsbOvercurrent, "USB Overcurrent" ) \
ENUM_DEFN( Signals, USBUnsupported, "USB Unsupported" ) \
ENUM_DEFN( Signals, WarningSignals, "Warning Signals" ) \
ENUM_DEFN( CommsPortHmi, LAN, "LAN" ) \
ENUM_DEFN( CommsPortHmi, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmi, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmi, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmi, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmi, USBC, "USBC" ) \
ENUM_DEFN( CommsPortHmiGadget, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmiGadget, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmiGadget, USB_L, "USB-L" ) \
ENUM_DEFN( CommsPortHmiGadget, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmiGadget, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmiGadget, USBC, "USBC" ) \
ENUM_DEFN( CommsPortHmiGadget, USBC2, "USBC2" ) \
ENUM_DEFN( CommsPortHmiNoLAN, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmiNoLAN, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmiNoLAN, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmiNoLAN, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmiNoLAN, USBC, "USBC" ) \
ENUM_DEFN( HrmIndividualSinglePhase, Disable, "Disable" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I10, "I10" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I11, "I11" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I12, "I12" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I13, "I13" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I14, "I14" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I15, "I15" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I2, "I2" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I3, "I3" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I4, "I4" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I5, "I5" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I6, "I6" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I7, "I7" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I8, "I8" ) \
ENUM_DEFN( HrmIndividualSinglePhase, I9, "I9" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V10, "V10" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V11, "V11" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V12, "V12" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V13, "V13" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V14, "V14" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V15, "V15" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V2, "V2" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V3, "V3" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V4, "V4" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V5, "V5" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V6, "V6" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V7, "V7" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V8, "V8" ) \
ENUM_DEFN( HrmIndividualSinglePhase, V9, "V9" ) \
ENUM_DEFN( Uv4VoltageTypeSinglePhase, PhGnd, "Ph/Gnd" ) \
ENUM_DEFN( WlanPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN( WlanPortConfigType, WLAN, "WLAN" ) \
ENUM_DEFN( MobileNetworkPortConfigType, Disabled, "Disabled" ) \
ENUM_DEFN( MobileNetworkPortConfigType, MobileNetworkModem, "Mobile Network Modem" ) \
ENUM_DEFN( CommsPortHmiNoUSBC, LAN, "LAN" ) \
ENUM_DEFN( CommsPortHmiNoUSBC, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmiNoUSBC, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmiNoUSBC, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmiNoUSBC, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, LAN, "LAN" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI, WLAN, "WLAN" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, LAN, "LAN" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, RS232, "RS232" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, RS232P, "RS232P" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, USBA, "USBA" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, USBB, "USBB" ) \
ENUM_DEFN( CommsPortHmiNoUSBCWIFI4G, WLAN, "WLAN" ) \
ENUM_DEFN( CommsPortLANSetREL01, USBA, "USBA" ) \
ENUM_DEFN( CommsPortLANSetREL01, USBB, "USBB" ) \
ENUM_DEFN( CommsPortLANSetREL01, USBC, "USBC" ) \
ENUM_DEFN( CommsPortLANSetREL02, LAN, "LAN" ) \
ENUM_DEFN( CommsPortLANSetREL02, USBA, "USBA" ) \
ENUM_DEFN( CommsPortLANSetREL02, USBB, "USBB" ) \
ENUM_DEFN( CommsPortLANSetREL02, USBC, "USBC" ) \
ENUM_DEFN( CommsPortLANSetREL03, LAN, "LAN" ) \
ENUM_DEFN( CommsPortLANSetREL03, USBA, "USBA" ) \
ENUM_DEFN( CommsPortLANSetREL03, USBB, "USBB" ) \
ENUM_DEFN( CommsPortLANSetREL15WLAN, LAN, "LAN" ) \
ENUM_DEFN( CommsPortLANSetREL15WLAN, USBA, "USBA" ) \
ENUM_DEFN( CommsPortLANSetREL15WLAN, USBB, "USBB" ) \
ENUM_DEFN( CommsPortLANSetREL15WLAN, WLAN, "WLAN" ) \
ENUM_DEFN( CommsPortLANSetREL15WWAN, LAN, "LAN" ) \
ENUM_DEFN( CommsPortLANSetREL15WWAN, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN( CommsPortLANSetREL15WWAN, USBA, "USBA" ) \
ENUM_DEFN( CommsPortLANSetREL15WWAN, USBB, "USBB" ) \
ENUM_DEFN( CommsPortLANSetREL15WWAN, WLAN, "WLAN" ) \
ENUM_DEFN( FaultLocFaultType, AB, "AB" ) \
ENUM_DEFN( FaultLocFaultType, ABC, "ABC" ) \
ENUM_DEFN( FaultLocFaultType, ABCE, "ABCE" ) \
ENUM_DEFN( FaultLocFaultType, ABE, "ABE" ) \
ENUM_DEFN( FaultLocFaultType, AE, "AE" ) \
ENUM_DEFN( FaultLocFaultType, BC, "BC" ) \
ENUM_DEFN( FaultLocFaultType, BCE, "BCE" ) \
ENUM_DEFN( FaultLocFaultType, BE, "BE" ) \
ENUM_DEFN( FaultLocFaultType, CA, "CA" ) \
ENUM_DEFN( FaultLocFaultType, CAE, "CAE" ) \
ENUM_DEFN( FaultLocFaultType, CE, "CE" ) \
ENUM_DEFN( FaultLocFaultType, None, "None" ) \
ENUM_DEFN( TimeUnit, min, "min" ) \
ENUM_DEFN( ScadaProtocolLoadedStatus, Ready, "Ready" ) \
ENUM_DEFN( ScadaProtocolLoadedStatus, RestartReq, "Controller Restart Req" ) \
ENUM_DEFN( SWModel, REL_01, "REL-01" ) \
ENUM_DEFN( SWModel, REL_02, "REL-02" ) \
ENUM_DEFN( SWModel, REL_03, "" ) \
ENUM_DEFN( SWModel, REL_04, "" ) \
ENUM_DEFN( SWModel, REL_15, "REL-15" ) \
ENUM_DEFN( SWModel, REL_20, "REL-20" ) \
ENUM_DEFN( NeutralPolarisation, I0, "In" ) \
ENUM_DEFN( NeutralPolarisation, I0CosTheta, "In cos θ" ) \
ENUM_DEFN( NeutralPolarisation, I0SinTheta, "In sin θ" ) \
ENUM_DEFN( TimeSyncStatus, CMS, "CMS" ) \
ENUM_DEFN( TimeSyncStatus, Internal, "Internal" ) \
ENUM_DEFN( TimeSyncStatus, LockedByGPS, "Locked By GPS" ) \
ENUM_DEFN( TimeSyncStatus, SCADA, "SCADA" ) \
ENUM_DEFN( TimeSyncStatus, SyncingWithGPS, "Syncing With GPS" ) \
ENUM_DEFN( TimeSyncStatus, SyncSNTPIPv6Serv1, "SNTP IPv6 Server 1" ) \
ENUM_DEFN( TimeSyncStatus, SyncSNTPIPv6Serv2, "SNTP IPv6 Server 2" ) \
ENUM_DEFN( TimeSyncStatus, SyncSNTPServ1, "SNTP IPv4 Server 1" ) \
ENUM_DEFN( TimeSyncStatus, SyncSNTPServ2, "SNTP IPv4 Server 2" ) \
ENUM_DEFN( IpVersion, Disabled, "None" ) \
ENUM_DEFN( IpVersion, IPv4, "IPv4" ) \
ENUM_DEFN( IpVersion, IPv4_IPv6, "IPv4/IPv6" ) \
ENUM_DEFN( IpVersion, IPv6, "IPv6" ) \
ENUM_DEFN( SDCardStatus, Eject, "Syncing Filesystem" ) \
ENUM_DEFN( SDCardStatus, NoCard, "No Card" ) \
ENUM_DEFN( SDCardStatus, Ready, "Ready" ) \
ENUM_DEFN( SDCardStatus, Unformatted, "Unformatted" ) \
ENUM_DEFN( OscSamplesPerCycle, Samples128, "128" ) \
ENUM_DEFN( OscSamplesPerCycle, Samples256, "256" ) \
ENUM_DEFN( OscSamplesPerCycle, Samples32, "32" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_0_5, "0.5" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_1, "1" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_10, "10" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_20, "20" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_3, "3" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_30, "30" ) \
ENUM_DEFN( OscCaptureTimeExt, Sec_5, "5" ) \
ENUM_DEFN( HrmIndividualExt, Disable, "Disable" ) \
ENUM_DEFN( HrmIndividualExt, I10, "I10" ) \
ENUM_DEFN( HrmIndividualExt, I11, "I11" ) \
ENUM_DEFN( HrmIndividualExt, I12, "I12" ) \
ENUM_DEFN( HrmIndividualExt, I13, "I13" ) \
ENUM_DEFN( HrmIndividualExt, I14, "I14" ) \
ENUM_DEFN( HrmIndividualExt, I15, "I15" ) \
ENUM_DEFN( HrmIndividualExt, I16, "I16" ) \
ENUM_DEFN( HrmIndividualExt, I17, "I17" ) \
ENUM_DEFN( HrmIndividualExt, I18, "I18" ) \
ENUM_DEFN( HrmIndividualExt, I19, "I19" ) \
ENUM_DEFN( HrmIndividualExt, I2, "I2" ) \
ENUM_DEFN( HrmIndividualExt, I20, "I20" ) \
ENUM_DEFN( HrmIndividualExt, I21, "I21" ) \
ENUM_DEFN( HrmIndividualExt, I22, "I22" ) \
ENUM_DEFN( HrmIndividualExt, I23, "I23" ) \
ENUM_DEFN( HrmIndividualExt, I24, "I24" ) \
ENUM_DEFN( HrmIndividualExt, I25, "I25" ) \
ENUM_DEFN( HrmIndividualExt, I26, "I26" ) \
ENUM_DEFN( HrmIndividualExt, I27, "I27" ) \
ENUM_DEFN( HrmIndividualExt, I28, "I28" ) \
ENUM_DEFN( HrmIndividualExt, I29, "I29" ) \
ENUM_DEFN( HrmIndividualExt, I3, "I3" ) \
ENUM_DEFN( HrmIndividualExt, I30, "I30" ) \
ENUM_DEFN( HrmIndividualExt, I31, "I31" ) \
ENUM_DEFN( HrmIndividualExt, I32, "I32" ) \
ENUM_DEFN( HrmIndividualExt, I33, "I33" ) \
ENUM_DEFN( HrmIndividualExt, I34, "I34" ) \
ENUM_DEFN( HrmIndividualExt, I35, "I35" ) \
ENUM_DEFN( HrmIndividualExt, I36, "I36" ) \
ENUM_DEFN( HrmIndividualExt, I37, "I37" ) \
ENUM_DEFN( HrmIndividualExt, I38, "I38" ) \
ENUM_DEFN( HrmIndividualExt, I39, "I39" ) \
ENUM_DEFN( HrmIndividualExt, I4, "I4" ) \
ENUM_DEFN( HrmIndividualExt, I40, "I40" ) \
ENUM_DEFN( HrmIndividualExt, I41, "I41" ) \
ENUM_DEFN( HrmIndividualExt, I42, "I42" ) \
ENUM_DEFN( HrmIndividualExt, I43, "I43" ) \
ENUM_DEFN( HrmIndividualExt, I44, "I44" ) \
ENUM_DEFN( HrmIndividualExt, I45, "I45" ) \
ENUM_DEFN( HrmIndividualExt, I46, "I46" ) \
ENUM_DEFN( HrmIndividualExt, I47, "I47" ) \
ENUM_DEFN( HrmIndividualExt, I48, "I48" ) \
ENUM_DEFN( HrmIndividualExt, I49, "I49" ) \
ENUM_DEFN( HrmIndividualExt, I5, "I5" ) \
ENUM_DEFN( HrmIndividualExt, I50, "I50" ) \
ENUM_DEFN( HrmIndividualExt, I51, "I51" ) \
ENUM_DEFN( HrmIndividualExt, I52, "I52" ) \
ENUM_DEFN( HrmIndividualExt, I53, "I53" ) \
ENUM_DEFN( HrmIndividualExt, I54, "I54" ) \
ENUM_DEFN( HrmIndividualExt, I55, "I55" ) \
ENUM_DEFN( HrmIndividualExt, I56, "I56" ) \
ENUM_DEFN( HrmIndividualExt, I57, "I57" ) \
ENUM_DEFN( HrmIndividualExt, I58, "I58" ) \
ENUM_DEFN( HrmIndividualExt, I59, "I59" ) \
ENUM_DEFN( HrmIndividualExt, I6, "I6" ) \
ENUM_DEFN( HrmIndividualExt, I60, "I60" ) \
ENUM_DEFN( HrmIndividualExt, I61, "I61" ) \
ENUM_DEFN( HrmIndividualExt, I62, "I62" ) \
ENUM_DEFN( HrmIndividualExt, I63, "I63" ) \
ENUM_DEFN( HrmIndividualExt, I7, "I7" ) \
ENUM_DEFN( HrmIndividualExt, I8, "I8" ) \
ENUM_DEFN( HrmIndividualExt, I9, "I9" ) \
ENUM_DEFN( HrmIndividualExt, In10, "In10" ) \
ENUM_DEFN( HrmIndividualExt, In11, "In11" ) \
ENUM_DEFN( HrmIndividualExt, In12, "In12" ) \
ENUM_DEFN( HrmIndividualExt, In13, "In13" ) \
ENUM_DEFN( HrmIndividualExt, In14, "In14" ) \
ENUM_DEFN( HrmIndividualExt, In15, "In15" ) \
ENUM_DEFN( HrmIndividualExt, In16, "In16" ) \
ENUM_DEFN( HrmIndividualExt, In17, "In17" ) \
ENUM_DEFN( HrmIndividualExt, In18, "In18" ) \
ENUM_DEFN( HrmIndividualExt, In19, "In19" ) \
ENUM_DEFN( HrmIndividualExt, In2, "In2" ) \
ENUM_DEFN( HrmIndividualExt, In20, "In20" ) \
ENUM_DEFN( HrmIndividualExt, In21, "In21" ) \
ENUM_DEFN( HrmIndividualExt, In22, "In22" ) \
ENUM_DEFN( HrmIndividualExt, In23, "In23" ) \
ENUM_DEFN( HrmIndividualExt, In24, "In24" ) \
ENUM_DEFN( HrmIndividualExt, In25, "In25" ) \
ENUM_DEFN( HrmIndividualExt, In26, "In26" ) \
ENUM_DEFN( HrmIndividualExt, In27, "In27" ) \
ENUM_DEFN( HrmIndividualExt, In28, "In28" ) \
ENUM_DEFN( HrmIndividualExt, In29, "In29" ) \
ENUM_DEFN( HrmIndividualExt, In3, "In3" ) \
ENUM_DEFN( HrmIndividualExt, In30, "In30" ) \
ENUM_DEFN( HrmIndividualExt, In31, "In31" ) \
ENUM_DEFN( HrmIndividualExt, In32, "In32" ) \
ENUM_DEFN( HrmIndividualExt, In33, "In33" ) \
ENUM_DEFN( HrmIndividualExt, In34, "In34" ) \
ENUM_DEFN( HrmIndividualExt, In35, "In35" ) \
ENUM_DEFN( HrmIndividualExt, In36, "In36" ) \
ENUM_DEFN( HrmIndividualExt, In37, "In37" ) \
ENUM_DEFN( HrmIndividualExt, In38, "In38" ) \
ENUM_DEFN( HrmIndividualExt, In39, "In39" ) \
ENUM_DEFN( HrmIndividualExt, In4, "In4" ) \
ENUM_DEFN( HrmIndividualExt, In40, "In40" ) \
ENUM_DEFN( HrmIndividualExt, In41, "In41" ) \
ENUM_DEFN( HrmIndividualExt, In42, "In42" ) \
ENUM_DEFN( HrmIndividualExt, In43, "In43" ) \
ENUM_DEFN( HrmIndividualExt, In44, "In44" ) \
ENUM_DEFN( HrmIndividualExt, In45, "In45" ) \
ENUM_DEFN( HrmIndividualExt, In46, "In46" ) \
ENUM_DEFN( HrmIndividualExt, In47, "In47" ) \
ENUM_DEFN( HrmIndividualExt, In48, "In48" ) \
ENUM_DEFN( HrmIndividualExt, In49, "In49" ) \
ENUM_DEFN( HrmIndividualExt, In5, "In5" ) \
ENUM_DEFN( HrmIndividualExt, In50, "In50" ) \
ENUM_DEFN( HrmIndividualExt, In51, "In51" ) \
ENUM_DEFN( HrmIndividualExt, In52, "In52" ) \
ENUM_DEFN( HrmIndividualExt, In53, "In53" ) \
ENUM_DEFN( HrmIndividualExt, In54, "In54" ) \
ENUM_DEFN( HrmIndividualExt, In55, "In55" ) \
ENUM_DEFN( HrmIndividualExt, In56, "In56" ) \
ENUM_DEFN( HrmIndividualExt, In57, "In57" ) \
ENUM_DEFN( HrmIndividualExt, In58, "In58" ) \
ENUM_DEFN( HrmIndividualExt, In59, "In59" ) \
ENUM_DEFN( HrmIndividualExt, In6, "In6" ) \
ENUM_DEFN( HrmIndividualExt, In60, "In60" ) \
ENUM_DEFN( HrmIndividualExt, In61, "In61" ) \
ENUM_DEFN( HrmIndividualExt, In62, "In62" ) \
ENUM_DEFN( HrmIndividualExt, In63, "In63" ) \
ENUM_DEFN( HrmIndividualExt, In7, "In7" ) \
ENUM_DEFN( HrmIndividualExt, In8, "In8" ) \
ENUM_DEFN( HrmIndividualExt, In9, "In9" ) \
ENUM_DEFN( HrmIndividualExt, V10, "V10" ) \
ENUM_DEFN( HrmIndividualExt, V11, "V11" ) \
ENUM_DEFN( HrmIndividualExt, V12, "V12" ) \
ENUM_DEFN( HrmIndividualExt, V13, "V13" ) \
ENUM_DEFN( HrmIndividualExt, V14, "V14" ) \
ENUM_DEFN( HrmIndividualExt, V15, "V15" ) \
ENUM_DEFN( HrmIndividualExt, V16, "V16" ) \
ENUM_DEFN( HrmIndividualExt, V17, "V17" ) \
ENUM_DEFN( HrmIndividualExt, V18, "V18" ) \
ENUM_DEFN( HrmIndividualExt, V19, "V19" ) \
ENUM_DEFN( HrmIndividualExt, V2, "V2" ) \
ENUM_DEFN( HrmIndividualExt, V20, "V20" ) \
ENUM_DEFN( HrmIndividualExt, V21, "V21" ) \
ENUM_DEFN( HrmIndividualExt, V22, "V22" ) \
ENUM_DEFN( HrmIndividualExt, V23, "V23" ) \
ENUM_DEFN( HrmIndividualExt, V24, "V24" ) \
ENUM_DEFN( HrmIndividualExt, V25, "V25" ) \
ENUM_DEFN( HrmIndividualExt, V26, "V26" ) \
ENUM_DEFN( HrmIndividualExt, V27, "V27" ) \
ENUM_DEFN( HrmIndividualExt, V28, "V28" ) \
ENUM_DEFN( HrmIndividualExt, V29, "V29" ) \
ENUM_DEFN( HrmIndividualExt, V3, "V3" ) \
ENUM_DEFN( HrmIndividualExt, V30, "V30" ) \
ENUM_DEFN( HrmIndividualExt, V31, "V31" ) \
ENUM_DEFN( HrmIndividualExt, V32, "V32" ) \
ENUM_DEFN( HrmIndividualExt, V33, "V33" ) \
ENUM_DEFN( HrmIndividualExt, V34, "V34" ) \
ENUM_DEFN( HrmIndividualExt, V35, "V35" ) \
ENUM_DEFN( HrmIndividualExt, V36, "V36" ) \
ENUM_DEFN( HrmIndividualExt, V37, "V37" ) \
ENUM_DEFN( HrmIndividualExt, V38, "V38" ) \
ENUM_DEFN( HrmIndividualExt, V39, "V39" ) \
ENUM_DEFN( HrmIndividualExt, V4, "V4" ) \
ENUM_DEFN( HrmIndividualExt, V40, "V40" ) \
ENUM_DEFN( HrmIndividualExt, V41, "V41" ) \
ENUM_DEFN( HrmIndividualExt, V42, "V42" ) \
ENUM_DEFN( HrmIndividualExt, V43, "V43" ) \
ENUM_DEFN( HrmIndividualExt, V44, "V44" ) \
ENUM_DEFN( HrmIndividualExt, V45, "V45" ) \
ENUM_DEFN( HrmIndividualExt, V46, "V46" ) \
ENUM_DEFN( HrmIndividualExt, V47, "V47" ) \
ENUM_DEFN( HrmIndividualExt, V48, "V48" ) \
ENUM_DEFN( HrmIndividualExt, V49, "V49" ) \
ENUM_DEFN( HrmIndividualExt, V5, "V5" ) \
ENUM_DEFN( HrmIndividualExt, V50, "V50" ) \
ENUM_DEFN( HrmIndividualExt, V51, "V51" ) \
ENUM_DEFN( HrmIndividualExt, V52, "V52" ) \
ENUM_DEFN( HrmIndividualExt, V53, "V53" ) \
ENUM_DEFN( HrmIndividualExt, V54, "V54" ) \
ENUM_DEFN( HrmIndividualExt, V55, "V55" ) \
ENUM_DEFN( HrmIndividualExt, V56, "V56" ) \
ENUM_DEFN( HrmIndividualExt, V57, "V57" ) \
ENUM_DEFN( HrmIndividualExt, V58, "V58" ) \
ENUM_DEFN( HrmIndividualExt, V59, "V59" ) \
ENUM_DEFN( HrmIndividualExt, V6, "V6" ) \
ENUM_DEFN( HrmIndividualExt, V60, "V60" ) \
ENUM_DEFN( HrmIndividualExt, V61, "V61" ) \
ENUM_DEFN( HrmIndividualExt, V62, "V62" ) \
ENUM_DEFN( HrmIndividualExt, V63, "V63" ) \
ENUM_DEFN( HrmIndividualExt, V7, "V7" ) \
ENUM_DEFN( HrmIndividualExt, V8, "V8" ) \
ENUM_DEFN( HrmIndividualExt, V9, "V9" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, Disable, "Disable" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I10, "I10" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I11, "I11" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I12, "I12" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I13, "I13" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I14, "I14" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I15, "I15" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I16, "I16" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I17, "I17" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I18, "I18" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I19, "I19" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I2, "I2" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I20, "I20" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I21, "I21" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I22, "I22" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I23, "I23" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I24, "I24" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I25, "I25" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I26, "I26" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I27, "I27" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I28, "I28" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I29, "I29" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I3, "I3" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I30, "I30" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I31, "I31" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I32, "I32" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I33, "I33" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I34, "I34" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I35, "I35" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I36, "I36" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I37, "I37" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I38, "I38" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I39, "I39" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I4, "I4" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I40, "I40" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I41, "I41" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I42, "I42" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I43, "I43" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I44, "I44" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I45, "I45" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I46, "I46" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I47, "I47" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I48, "I48" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I49, "I49" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I5, "I5" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I50, "I50" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I51, "I51" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I52, "I52" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I53, "I53" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I54, "I54" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I55, "I55" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I56, "I56" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I57, "I57" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I58, "I58" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I59, "I59" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I6, "I6" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I60, "I60" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I61, "I61" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I62, "I62" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I63, "I63" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I7, "I7" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I8, "I8" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, I9, "I9" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V10, "V10" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V11, "V11" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V12, "V12" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V13, "V13" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V14, "V14" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V15, "V15" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V16, "V16" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V17, "V17" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V18, "V18" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V19, "V19" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V2, "V2" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V20, "V20" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V21, "V21" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V22, "V22" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V23, "V23" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V24, "V24" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V25, "V25" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V26, "V26" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V27, "V27" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V28, "V28" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V29, "V29" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V3, "V3" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V30, "V30" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V31, "V31" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V32, "V32" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V33, "V33" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V34, "V34" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V35, "V35" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V36, "V36" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V37, "V37" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V38, "V38" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V39, "V39" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V4, "V4" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V40, "V40" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V41, "V41" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V42, "V42" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V43, "V43" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V44, "V44" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V45, "V45" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V46, "V46" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V47, "V47" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V48, "V48" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V49, "V49" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V5, "V5" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V50, "V50" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V51, "V51" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V52, "V52" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V53, "V53" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V54, "V54" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V55, "V55" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V56, "V56" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V57, "V57" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V58, "V58" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V59, "V59" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V6, "V6" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V60, "V60" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V61, "V61" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V62, "V62" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V63, "V63" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V7, "V7" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V8, "V8" ) \
ENUM_DEFN( HrmIndividualSinglePhaseExt, V9, "V9" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, LAN, "LAN" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, LANB, "LAN2" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, RS232, "RS232" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, RS232P, "RS232P" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, USBA, "USBA" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, USBB, "USBB" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI, WLAN, "WLAN" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, LAN, "LAN" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, LANB, "LAN2" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, RS232, "RS232" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, RS232P, "RS232P" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, USBA, "USBA" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, USBB, "USBB" ) \
ENUM_DEFN( RC20CommsPortNoUSBCWIFI4G, WLAN, "WLAN" ) \
ENUM_DEFN( BatteryCapacityConfidence, Confident, "Confident" ) \
ENUM_DEFN( BatteryCapacityConfidence, NotConfident, "Not Confident" ) \
ENUM_DEFN( BatteryCapacityConfidence, Unknown, "Unknown" ) \
ENUM_DEFN( PMUPerfClass, TypeM, "M" ) \
ENUM_DEFN( PMUPerfClass, TypeP, "P" ) \
ENUM_DEFN( RC20CommsPortLAN, LAN, "LAN" ) \
ENUM_DEFN( RC20CommsPortLAN, LAN2, "LAN2" ) \
ENUM_DEFN( RC20CommsPortLAN, USBA, "USBA" ) \
ENUM_DEFN( RC20CommsPortLAN, USBB, "USBB" ) \
ENUM_DEFN( RC20CommsPortLAN, WLAN, "WLAN" ) \
ENUM_DEFN( RC20CommsPortLAN4G, LAN, "LAN" ) \
ENUM_DEFN( RC20CommsPortLAN4G, LAN2, "LAN2" ) \
ENUM_DEFN( RC20CommsPortLAN4G, MOBILENETWORK, "MOBILENETWORK" ) \
ENUM_DEFN( RC20CommsPortLAN4G, USBA, "USBA" ) \
ENUM_DEFN( RC20CommsPortLAN4G, USBB, "USBB" ) \
ENUM_DEFN( RC20CommsPortLAN4G, WLAN, "WLAN" ) \
ENUM_DEFN( PMUQuality, DataAbsent, "Data Absent" ) \
ENUM_DEFN( PMUQuality, Invalid, "Invalid" ) \
ENUM_DEFN( PMUQuality, Unknown, "Unknown" ) \
ENUM_DEFN( PMUQuality, Valid_100ns, "Valid, Error < 100 ns" ) \
ENUM_DEFN( PMUQuality, Valid_100us, "Valid, Error < 100 us" ) \
ENUM_DEFN( PMUQuality, Valid_10ms, "Valid, Error < 10 ms" ) \
ENUM_DEFN( PMUQuality, Valid_10us, "Valid, Error < 10 us" ) \
ENUM_DEFN( PMUQuality, Valid_1ms, "Valid, Error < 1 ms" ) \
ENUM_DEFN( PMUQuality, Valid_1us, "Valid, Error < 1 us" ) \
ENUM_DEFN( PMUStatus, ConfigError, "Configuration Error" ) \
ENUM_DEFN( PMUStatus, Disabled, "Disabled" ) \
ENUM_DEFN( PMUStatus, NoSync, "GPS Not Synced" ) \
ENUM_DEFN( PMUStatus, RequireCID, "Require CID Config" ) \
ENUM_DEFN( PMUStatus, Sync, "GPS Synced" ) \
ENUM_DEFN( PMUConfigStatus, Invalid, "Invalid" ) \
ENUM_DEFN( PMUConfigStatus, Unconfigured, "Unconfigured" ) \
ENUM_DEFN( PMUConfigStatus, Valid, "Valid" ) \
ENUM_DEFN( LineSupplyRange, AC110V, "110V" ) \
ENUM_DEFN( LineSupplyRange, AC220V, "220V" ) \
ENUM_DEFN( LineSupplyRange, DC, "DC" ) \
ENUM_DEFN( LineSupplyRange, Detecting, "Detecting" ) \
ENUM_DEFN( LineSupplyRange, Off, "Off" ) \
ENUM_DEFN( TimeSyncUnlockedTime, Locked, "Locked" ) \
ENUM_DEFN( TimeSyncUnlockedTime, Unknown, "Unknown" ) \
ENUM_DEFN( TimeSyncUnlockedTime, Unlocked1000sOrMore, "Unlocked >=1000 s" ) \
ENUM_DEFN( TimeSyncUnlockedTime, UnlockedLessThan1000s, "Unlocked <1000 s" ) \
ENUM_DEFN( TimeSyncUnlockedTime, UnlockedLessThan100s, "Unlocked <100 s" ) \
ENUM_DEFN( TimeSyncUnlockedTime, UnlockedLessThan10s, "Unlocked <10 s" ) \
ENUM_DEFN( CBF_backup_trip, CBF_current, "Current" ) \
ENUM_DEFN( CBF_backup_trip, CBF_malf_current, "Excessive To/Current" ) \
ENUM_DEFN( CBF_backup_trip, CBF_malfunction, "Excessive To" ) \
ENUM_DEFN( CbfCurrentMode, Ef, "Residual" ) \
ENUM_DEFN( CbfCurrentMode, Oc, "Phase" ) \
ENUM_DEFN( CbfCurrentMode, OcEf, "Phase/Residual" ) \
ENUM_DEFN( CommsPortREL15, LAN, "LAN" ) \
ENUM_DEFN( CommsPortREL15, None, "None" ) \
ENUM_DEFN( CommsPortREL15, USBA, "USB A" ) \
ENUM_DEFN( CommsPortREL15, USBB, "USB B" ) \
ENUM_DEFN( CommsPortREL15, WLAN, "WLAN" ) \
ENUM_DEFN( CommsPortREL204G, LAN, "LAN" ) \
ENUM_DEFN( CommsPortREL204G, LAN2, "LAN 2" ) \
ENUM_DEFN( CommsPortREL204G, None, "None" ) \
ENUM_DEFN( CommsPortREL204G, USBA, "USB A" ) \
ENUM_DEFN( CommsPortREL204G, USBB, "USB B" ) \
ENUM_DEFN( CommsPortREL204G, WLAN, "WLAN" ) \
ENUM_DEFN( CommsPortREL02, LAN, "LAN" ) \
ENUM_DEFN( CommsPortREL02, None, "None" ) \
ENUM_DEFN( CommsPortREL02, USBA, "USB A" ) \
ENUM_DEFN( CommsPortREL02, USBB, "USB B" ) \
ENUM_DEFN( CommsPortREL02, USBC, "USB C" ) \
ENUM_DEFN( CommsPortREL01, None, "None" ) \
ENUM_DEFN( CommsPortREL01, USBA, "USB A" ) \
ENUM_DEFN( CommsPortREL01, USBB, "USB B" ) \
ENUM_DEFN( CommsPortREL01, USBC, "USB C" ) \
ENUM_DEFN( ActiveInactive, Active, "Active" ) \
ENUM_DEFN( ActiveInactive, Inactive, "Inactive" ) \
ENUM_DEFN( UserCredentialResultStatus, Abort, "Critical error  Abortion" ) \
ENUM_DEFN( UserCredentialResultStatus, AcctExpired, "User account has expired " ) \
ENUM_DEFN( UserCredentialResultStatus, AuthErr, "Authentication failure" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthInfoUnavail, "Authentication Service unavailable" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthOkErr, "Authentication token  error" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthTokDisableAging, "Authentication token aging disabled" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthTokExpired, "authentication token expired" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthTokLockBusy, " Authentication token lock busy" ) \
ENUM_DEFN( UserCredentialResultStatus, AuthTokRecoveryErr, "Auth Token Recover Error" ) \
ENUM_DEFN( UserCredentialResultStatus, BadItem, "Bad item passed to Security Module" ) \
ENUM_DEFN( UserCredentialResultStatus, BuffErr, "Buffer Error" ) \
ENUM_DEFN( UserCredentialResultStatus, ConvAgain, "Conversation again without data" ) \
ENUM_DEFN( UserCredentialResultStatus, CovErr, "PAM Conversation Error" ) \
ENUM_DEFN( UserCredentialResultStatus, CredErr, "Failure setting user credentials" ) \
ENUM_DEFN( UserCredentialResultStatus, CredExpired, "User credentials expired" ) \
ENUM_DEFN( UserCredentialResultStatus, CredInsufficient, "Can not access authentication data" ) \
ENUM_DEFN( UserCredentialResultStatus, CredUnavail, " user credentials unavailable" ) \
ENUM_DEFN( UserCredentialResultStatus, DlopenErr, "dlopen() failure" ) \
ENUM_DEFN( UserCredentialResultStatus, Ignore, "Ignore account module" ) \
ENUM_DEFN( UserCredentialResultStatus, Incomplete, "auth stack not called complete" ) \
ENUM_DEFN( UserCredentialResultStatus, MaxTries, "Maximum Retries" ) \
ENUM_DEFN( UserCredentialResultStatus, ModuleUnknown, "module is not known" ) \
ENUM_DEFN( UserCredentialResultStatus, NewAuthTokReqd, "New authentication token required" ) \
ENUM_DEFN( UserCredentialResultStatus, NoModuleData, "No Module Data" ) \
ENUM_DEFN( UserCredentialResultStatus, PerDenied, "Permission Denied" ) \
ENUM_DEFN( UserCredentialResultStatus, ServiceErr, "Service Error" ) \
ENUM_DEFN( UserCredentialResultStatus, SessionErr, "Session Error" ) \
ENUM_DEFN( UserCredentialResultStatus, Standby, "Default Status" ) \
ENUM_DEFN( UserCredentialResultStatus, Success, "Success" ) \
ENUM_DEFN( UserCredentialResultStatus, SymbolErr, "Symbol not found" ) \
ENUM_DEFN( UserCredentialResultStatus, SystemErr, "System Error" ) \
ENUM_DEFN( UserCredentialResultStatus, TryAgain, " password required input" ) \
ENUM_DEFN( UserCredentialResultStatus, UserUnknown, "User not known" ) \
ENUM_DEFN( CredentialOperationMode, AddNewUser, "Add New User" ) \
ENUM_DEFN( CredentialOperationMode, BatchUpdateCredential, "batch update on user credentials" ) \
ENUM_DEFN( CredentialOperationMode, ChangePassword, "Change existing user's password" ) \
ENUM_DEFN( CredentialOperationMode, RemoveUser, "Remove the existing user" ) \
ENUM_DEFN( CredentialOperationMode, ResetCredential, "Remove all credentials" ) \
ENUM_DEFN( CredentialOperationMode, StandbyMode, "Credential operation standby mode" ) \
ENUM_DEFN( CredentialOperationMode, UpdateRoleInfo, "Update user's  role bitmap" ) \
ENUM_DEFN( CredentialOperationMode, VerifyUser, "UserName and  Password verification" ) \
ENUM_DEFN( ConstraintT10BRG, MIP, "M IP" ) \
ENUM_DEFN( ConstraintT10BRG, MPort, "M Port" ) \
ENUM_DEFN( ConstraintT10BRG, MPort_MIP, "M Port+M IP" ) \
ENUM_DEFN( ConstraintT10BRG, OA, "OA" ) \
ENUM_DEFN( ConstraintT10BRG, OA_MIP, "OA+M IP" ) \
ENUM_DEFN( ConstraintT10BRG, OA_MPort, "OA+M Port" ) \
ENUM_DEFN( ConstraintT10BRG, OA_MPort_MIP, "OA+M Port+M IP" ) \
ENUM_DEFN( ConnectionStateT10BRG, Closed, "Closed" ) \
ENUM_DEFN( ConnectionStateT10BRG, Started, "Started" ) \
ENUM_DEFN( ConnectionStateT10BRG, Testing, "Testing" ) \
ENUM_DEFN( ConnectionMethodT10BRG, Method1, "Method 1" ) \
ENUM_DEFN( ConnectionMethodT10BRG, Method2, "Method 2" ) \
ENUM_DEFN( pinPukResult, None, "" ) \
ENUM_DEFN( pinPukResult, PINConfirmFail, "PIN Confirm Fail" ) \
ENUM_DEFN( pinPukResult, PINConfirmOK, "PIN Confirm OK" ) \
ENUM_DEFN( pinPukResult, PINEntered, "PIN Entered" ) \
ENUM_DEFN( pinPukResult, PINEntryByCMS, "PIN Entry By CMS" ) \
ENUM_DEFN( pinPukResult, PINMaxTriesExceeded, "PIN Max Tries Exceeded" ) \
ENUM_DEFN( pinPukResult, PINNotAvailable, "PIN Not Available" ) \
ENUM_DEFN( pinPukResult, PINNotEntered, "PIN Not Entered" ) \
ENUM_DEFN( pinPukResult, PINWriteFail, "PIN Write Fail" ) \
ENUM_DEFN( pinPukResult, PINWriteSuccess, "PIN Write Success" ) \
ENUM_DEFN( pinPukResult, PUKConfirmFail, "PUK Confirm Fail" ) \
ENUM_DEFN( pinPukResult, PUKConfirmOK, "PUK Confirm OK" ) \
ENUM_DEFN( pinPukResult, PUKEntered, "PUK Entered" ) \
ENUM_DEFN( pinPukResult, PUKEntryByCMS, "PUK Entry By CMS" ) \
ENUM_DEFN( pinPukResult, PUKMaxTriesExceeded, "PUK Max Tries Exceeded" ) \
ENUM_DEFN( pinPukResult, PUKNotAvailable, "PUK Not Available" ) \
ENUM_DEFN( pinPukResult, PUKNotEntered, "PUK Not Entered" ) \
ENUM_DEFN( pinPukResult, PUKWriteFail, "PUK Write Fail" ) \
ENUM_DEFN( pinPukResult, PUKWriteSuccess, "PUK Write Success" ) \
ENUM_DEFN( pinPukResult, PUKWroteNewPIN, "PIN Write Success" ) \
ENUM_DEFN( ChangedLog, Changed, "Changed" ) \
ENUM_DEFN( ChangedLog, NoText, "" ) \

/** @endcond DO_NOT_DOCUMENT   Doxygen documentation is not required. */
#endif // #ifndef _DBSCHEMA_INCLUDE/DBSCHEMA/DBENUMDEFS_H_
